/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@democracy.js/utils/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@democracy.js/utils/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nutils = __webpack_require__(/*! ./src/utils */ \"./node_modules/@democracy.js/utils/src/utils.js\");\nLogger = __webpack_require__(/*! ./src/logger */ \"./node_modules/@democracy.js/utils/src/logger.js\");\nconfig = __webpack_require__(/*! ./src/config */ \"./node_modules/@democracy.js/utils/src/config.js\");\nmodule.exports = _objectSpread({}, utils, config, {\n  Logger: Logger\n});\n\n//# sourceURL=webpack:///./node_modules/@democracy.js/utils/index.js?");

/***/ }),

/***/ "./node_modules/@democracy.js/utils/src/config.js":
/*!********************************************************!*\
  !*** ./node_modules/@democracy.js/utils/src/config.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process) {// Environment-controlled configuration to choose network and deploy parameters\nvar Logger = __webpack_require__(/*! ./logger */ \"./node_modules/@democracy.js/utils/src/logger.js\");\n\nvar logger = new Logger('config', ['info', 'debug', 'error']);\n\nvar assert = __webpack_require__(/*! chai */ \"./node_modules/chai/index.js\").assert;\n\nvar createEnv = function createEnv(_ref) {\n  var url = _ref.url,\n      gp = _ref.gp,\n      db = _ref.db;\n  return {\n    'ENDPOINT_URL': url,\n    'DB_NAMESPACE': db,\n    'GAS_PRICE': gp\n  };\n};\n\nvar checkEnv = function checkEnv(config, vars) {\n  vars.forEach(function (v) {\n    if (process.env[v]) {\n      logger.errorAndThrow(\"Environment variable \".concat(v, \" needed but not defined.\"));\n    }\n  });\n  return config;\n};\n\nvar devEnv = createEnv({\n  'url': \"http://localhost:8545\",\n  'gp': 5,\n  'db': 'dev'\n});\nvar ENVIRONMENTS = {\n  'DEVELOPMENT': devEnv,\n  'DEV': devEnv,\n  'TEST': createEnv({\n    'url': 'http://ganache.arcology.nyc:8545',\n    'gp': 5,\n    'db': 'test'\n  }),\n  'RINKEBY': checkEnv(createEnv({\n    'url': \"https://rinkeby.infura.io/\".concat(process.env.INFURA_PROJECT_ID),\n    'gp': 5,\n    'db': 'rinkeby'\n  }), ['INFURA_PROJECT_ID']),\n  'MAINNET': checkEnv(createEnv({\n    'url': \"https://mainnet.infura.io/\".concat(process.env.INFURA_PROJECT_ID),\n    'gp': 5,\n    'db': 'mainnet'\n  }), ['INFURA_PROJECT_ID'])\n};\n\nvar isNetName = function isNetName(_name) {\n  assert(_name, 'Net name cannot be empty.');\n  return ENVIRONMENTS[_name.toUpperCase()] !== undefined;\n};\n\nvar getConfig = function getConfig() {\n  var env =  true ? \"development\".toUpperCase() : undefined;\n  logger.info(\"NODE_ENV=\".concat(env));\n  config = ENVIRONMENTS[env];\n\n  if (config) {\n    return config;\n  } else {\n    logger.info('NODE_ENV not defined, using TEST');\n    return ENVIRONMENTS['TEST'];\n  }\n};\n\nmodule.exports = {\n  getConfig: getConfig,\n  isNetName: isNetName\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! processGlobal */ \"./node_modules/browserfs/dist/shims/process.js\")))\n\n//# sourceURL=webpack:///./node_modules/@democracy.js/utils/src/config.js?");

/***/ }),

/***/ "./node_modules/@democracy.js/utils/src/logger.js":
/*!********************************************************!*\
  !*** ./node_modules/@democracy.js/utils/src/logger.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Class for flexible, namespaced logging\n// With possible future extension to write output to a file.\nvar Logger = function Logger(prefix, enabled) {\n  var _this = this;\n\n  if (this.prefix) {\n    console.trace();\n    throw \"prefix predefined to \".concat(this.prefix);\n  }\n\n  this.prefix = prefix;\n\n  if (_typeof(enabled) !== 'object') {\n    console.error(\"enabled param should be a list of strings indicating which log levels.\"); //throw \"error\";\n  }\n\n  this.debug = function (msg, _namespace) {\n    var namespace = typeof _namespace == 'string' ? \"[\" + _namespace + \"]\" : \"\";\n\n    if (enabled.indexOf('debug') !== -1) {\n      console.log(\"[{this.prefix}]{namespace} {msg}\");\n    }\n  };\n\n  this.info = function (msg, namespace) {\n    if (enabled.indexOf('info') !== -1) {\n      console.log(\"[\" + _this.prefix + \"] \" + msg);\n    }\n  };\n\n  this.errorAndThrow = function (msg) {\n    console.error(\"[\" + _this.prefix + \"] \" + msg);\n    throw new Error(msg);\n  }; // Always print errors for now\n\n\n  this.error = function (msg) {\n    console.error(\"[\" + _this.prefix + \"] \" + msg);\n  };\n};\n\nmodule.exports = Logger;\n\n//# sourceURL=webpack:///./node_modules/@democracy.js/utils/src/logger.js?");

/***/ }),

/***/ "./node_modules/@democracy.js/utils/src/utils.js":
/*!*******************************************************!*\
  !*** ./node_modules/@democracy.js/utils/src/utils.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Utilities\nvar fs = __webpack_require__(/*! fs */ \"./node_modules/browserfs/dist/shims/fs.js\");\n\nvar path = __webpack_require__(/*! path */ \"./node_modules/browserfs/dist/shims/path.js\");\n\nvar Logger = __webpack_require__(/*! ./logger */ \"./node_modules/@democracy.js/utils/src/logger.js\");\n\nvar LOGGER = new Logger('@democracy.js/utils/utils.js', ['info']);\n\nvar _require = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.es.js\"),\n    Seq = _require.Seq,\n    Map = _require.Map,\n    List = _require.List,\n    fromJS = _require.fromJS;\n\nvar assert = __webpack_require__(/*! chai */ \"./node_modules/chai/index.js\").assert;\n\nvar ethjs = __webpack_require__(/*! ethjs */ \"./node_modules/ethjs/lib/index.js\");\n\nvar DB_DIR = 'db';\nvar SOURCES_DIR = 'contracts';\nvar COMPILES_DIR = 'compiles';\nvar LINKS_DIR = 'links';\nvar DEPLOYS_DIR = 'deploys';\nvar LIB_PATTERN = /__(([a-zA-Z0-9])+\\/*)+\\.sol:[a-zA-Z0-9]+_+/g;\nvar DEMO_SRC_PATH = 'contracts';\nvar ZEPPELIN_SRC_PATH = 'node_modules/openzeppelin-solidity/contracts';\n\nvar getEndpointURL = function getEndpointURL() {\n  var _require2 = __webpack_require__(/*! ./config.js */ \"./node_modules/@democracy.js/utils/src/config.js\"),\n      getConfig = _require2.getConfig;\n\n  var config = getConfig();\n  assert(config['ENDPOINT_URL']);\n  return config['ENDPOINT_URL'];\n};\n\nvar getNetwork = function getNetwork() {\n  var Eth = __webpack_require__(/*! ethjs */ \"./node_modules/ethjs/lib/index.js\");\n\n  return new Eth(new Eth.HttpProvider(getEndpointURL()));\n};\n/**\n * Deep version of fromJS https://stackoverflow.com/a/40663730\n */\n\n\nvar fromJSGreedy = function fromJSGreedy(js) {\n  return _typeof(js) !== 'object' || js === null ? js : Array.isArray(js) ? Seq(js).map(fromJSGreedy).toList() : Seq(js).map(fromJSGreedy).toMap();\n};\n/**\n * Use this to perform different actions based on whether we are in browser or not\n */\n\n\nfunction isBrowser() {\n  return typeof window != 'undefined' && window.document;\n}\n/**\n * Take the callback action for every level in a hierarchical key space\n */\n\n\nvar getFileKeySpace = function getFileKeySpace(key, cb) {\n  var keySpaces = List(key.split('/')); // in both localstorage and fs, we use UNIX sep\n\n  var dirSpaces = keySpaces.slice(0, -1);\n  dirSpaces.map(function (dir, i) {\n    cb(keySpaces.slice(0, i + 1));\n  });\n  var keyBase = keySpaces.get(-1);\n  var dbDir = path.join.apply(path, [\"\".concat(DB_DIR)].concat(_toConsumableArray(dirSpaces.toJS()))); // Return the base filename and don't add .json extension\n  // b/c the latter is only correct behavior for setImmutableKey\n  // and this method is also used by getImmutableKey\n\n  return path.join(dbDir, \"\".concat(keyBase));\n};\n\nvar setImmutableKey = function setImmutableKey(fullKey, value) {\n  assert(typeof fullKey === 'string');\n  assert(Map.isMap(value) || List.isList(value) || !value);\n\n  if (isBrowser()) {\n    localStorage.setItem(fullKey, value);\n  } else {\n    ensureDir(DB_DIR);\n    var dbFile = getFileKeySpace(fullKey, function (keyPrefixes) {\n      ensureDir(path.join.apply(path, [DB_DIR].concat(_toConsumableArray(keyPrefixes))));\n    });\n\n    if (fs.existsSync(\"\".concat(dbFile, \".json\"))) {\n      if (!value) {\n        // We never delete, only move to the side\n        var now = Date.now();\n        LOGGER.debug(\"Marking key \".concat(fullKey, \" deleted at time \").concat(now));\n        fs.renameSync(\"\".concat(dbFile, \".json\"), \"\".concat(dbFile, \".json.\").concat(now));\n        return true;\n      } else {\n        throw new Error(\"Key \".concat(dbFile, \".json exists and is read-only.\"));\n      }\n    } else if (fs.existsSync(dbFile)) {\n      throw new Error(\"Key \".concat(dbFile, \" exists and is not a JSON file.\"));\n    } else if (!value) {\n      LOGGER.debug(\"Unnecessary deletion of non-existent key \".concat(fullKey));\n      return true;\n    }\n\n    var valJS = Map.isMap(value) || List.isList(value) ? value.toJS() : value;\n    LOGGER.debug(\"Setting key \".concat(fullKey, \" value \").concat(JSON.stringify(valJS)));\n    fs.writeFileSync(\"\".concat(dbFile, \".json\"), JSON.stringify(valJS));\n    return true;\n  }\n};\n\nfunction getImmutableKey(fullKey, defaultValue) {\n  assert(typeof fullKey === 'string');\n\n  if (isBrowser()) {\n    var value = fromJS(JSON.parse(localStorage.getItem(fullKey)));\n\n    if (!value) {\n      if (defaultValue) return defaultValue;else {\n        throw new Error(\"Key \".concat(fullKey, \" does not exist.\"));\n      }\n    }\n\n    return value;\n  } else {\n    var dbFile = getFileKeySpace(fullKey, function () {});\n\n    if (fs.existsSync(\"\".concat(dbFile, \".json\"))) {\n      return buildFromDirs(\"\".concat(dbFile, \".json\"), function () {\n        return false;\n      });\n    } else if (fs.existsSync(dbFile)) {\n      return buildFromDirs(dbFile, function (fnParts) {\n        return fnParts.length > 1 && fnParts[1] !== 'json';\n      });\n    } else {\n      if (defaultValue) return defaultValue;else {\n        throw new Error(\"Key \".concat(dbFile, \" does not exist.\"));\n      }\n    }\n  }\n}\n\nfunction tryIfNot(eth, checkFunc, tryFunc, args) {\n  if (!checkFunc(eth, args.get(0))) {\n    tryFunc(args);\n  }\n}\n\nvar print = function print(data) {\n  console.log(JSON.stringify(data, null, '  '));\n};\n\nvar ensureDir = function ensureDir(dirName) {\n  if (!fs.existsSync(dirName)) {\n    fs.mkdirSync(dirName, {\n      recursive: true\n    });\n  }\n};\n/**\n * Traverse directories collecting files to perform a callback function on\n * @param startDirs a list of paths to start searching in\n * @param skipFilt a function that returns true for files that need to be skipped\n * @param cb a callback that accepts the source text of a file plus its full path\n * @param dcb a callback for every directory that is encountered\n */\n\n\nvar traverseDirs = function traverseDirs(startDirs, skipFilt, cb, dcb) {\n  var queue = startDirs;\n\n  var _loop = function _loop() {\n    var f = queue.pop();\n    var shortList = path.basename(f).split('.');\n\n    if (skipFilt(shortList, f)) {\n      return \"continue\";\n    }\n\n    if (fs.lstatSync(f).isDirectory()) {\n      fs.readdirSync(f).forEach(function (f2) {\n        return queue.push(path.join(f, f2));\n      });\n\n      if (dcb) {\n        dcb(f);\n      }\n    } else {\n      var source = fs.readFileSync(f).toString();\n      cb(source, f);\n    }\n  };\n\n  while (queue.length > 0) {\n    var _ret = _loop();\n\n    if (_ret === \"continue\") continue;\n  }\n};\n/**\n * Traverse directories recursively building an Immutable Map with hierarchical keys\n * as directory paths and values as file contents (leaf nodes)\n * @param f the full path to a filename (possibly a directory) to start traversal\n * @param skipFilt a function that returns true for files that need to be skipped\n */\n\n\nvar buildFromDirs = function buildFromDirs(f, skipFilt) {\n  shortList = path.basename(f).split('.');\n\n  if (skipFilt(shortList)) {\n    return null;\n  }\n\n  if (fs.lstatSync(f).isDirectory()) {\n    return new Map(List(fs.readdirSync(f)).map(function (f2) {\n      var builtValues = buildFromDirs(path.join(f, f2), skipFilt);\n      var baseKey = path.basename(f2);\n      var key = baseKey.endsWith('.json') ? baseKey.split('.')[0] : baseKey;\n      return builtValues ? [key, builtValues] : null;\n    }));\n  } else {\n    return fromJS(JSON.parse(fs.readFileSync(f)));\n  }\n};\n\nvar getLinks = function getLinks(networkId) {\n  var linkMap = {};\n  linksDir = \"\".concat(LINKS_DIR, \"/\").concat(networkId);\n\n  if (!fs.existsSync(linksDir)) {\n    LOGGER.info(\"Links directory '\".concat(linksDir, \"' not found.\"));\n    return Map({});\n  }\n\n  traverseDirs([linksDir], function (fnParts) {\n    return fnParts.length > 1 && !fnParts[1].startsWith('json');\n  }, // Link names will have the form <contractName>-<linkID>, do we need to\n  // differentiate different deploy IDs for a single contract name?\n  function (source, f) {\n    linkMap[path.basename(f).split('.')[0]] = JSON.parse(source);\n  });\n  return fromJS(linkMap);\n};\n\nvar getDeploys = function getDeploys(networkId) {\n  var deployMap = {};\n  var deploysDir = \"\".concat(DEPLOYS_DIR, \"/\").concat(networkId);\n\n  if (!fs.existsSync(deploysDir)) {\n    LOGGER.info(\"Deploys directory '\".concat(deploysDir, \"' not found.\"));\n    return Map({});\n  }\n\n  traverseDirs([deploysDir], function (fnParts) {\n    return fnParts.length > 1 && !fnParts[1].startsWith('json');\n  }, // Deploy names will have the form <contractName>-<deployID>, do we need to\n  // differentiate different deploy IDs for a single contract name?\n  function (source, f) {\n    deployMap[path.basename(f).split('.')[0]] = JSON.parse(source);\n  });\n  return fromJS(deployMap);\n};\n\nvar getContracts = function getContracts(shouldPrint) {\n  var contractSources = [];\n  var contractOutputs = {};\n\n  if (!fs.existsSync(SOURCES_DIR)) {\n    LOGGER.info(\"Sources directory '\".concat(SOURCES_DIR, \"' not found.\"));\n    return Map({});\n  }\n\n  traverseDirs([SOURCES_DIR], // start out by finding all contracts rooted in current directory\n  function (fnParts) {\n    return fnParts.length > 1 && !fnParts[1].startsWith('sol');\n  }, function (source, f) {\n    fb = path.basename(f.split('.')[0]);\n    contractSources.push(fb);\n    shouldPrint && console.log(\"Source \".concat(fb));\n  });\n  traverseDirs([COMPILES_DIR], // start out by finding all contracts rooted in current directory\n  function (fnParts) {\n    return fnParts.length > 1 && fnParts[1] !== 'json';\n  }, function (source, f) {\n    fb = path.basename(f.split('.')[0]);\n    contractOutputs[fb] = fromJSGreedy(JSON.parse(source));\n    shouldPrint && LOGGER.info(\"Compiled \".concat(fb));\n  });\n  return {\n    contractSources: Seq(contractSources),\n    contractOutputs: Map(contractOutputs)\n  };\n};\n/**\n * Return a contract read from a file in the `outputs/${networkId}` directory.\n * @param contractName name of the compiled contract\n */\n\n\nvar getContract = function getContract(contractName) {\n  ensureDir(\"\".concat(COMPILES_DIR));\n\n  var _getContracts = getContracts(),\n      contractOutputs = _getContracts.contractOutputs;\n\n  return contractOutputs.get(contractName);\n};\n/**\n * Return a link object read from a file in the `links/${networkId}` directory.\n * @param networkId name of the chain / network deployed onto\n * @param linkName the name of the contract and link ID of the form `ContractName-linkId`\n */\n\n\nvar getLink = function getLink(networkId, linkName) {\n  var linkMap = getLinks(networkId);\n  return linkMap.get(linkName);\n};\n/**\n * Return a deploy object read from a file\n * @param networkId name of the chain / network deployed onto\n * @param deployName the name of the contract and deploy of the form `ContractName-deployId`\n */\n\n\nvar getDeploy = function getDeploy(networkId, deployName) {\n  var deployMap = getDeploys(networkId);\n  return deployMap.get(deployName);\n};\n/**\n * @return true if the given object is an ethjs object, otherwise false\n */\n\n\nvar isNetwork = function isNetwork(_network) {\n  return _network && _network.net_version;\n};\n/**\n * @return true if the given object is a deploy output, otherwise false\n */\n\n\nvar isDeploy = function isDeploy(_deploy) {\n  return _deploy && _deploy.get('type') === 'deploy';\n};\n/**\n * @return true if the given object is a link output, otherwise false\n */\n\n\nvar isLink = function isLink(_link) {\n  return _link && _link.get('type') === 'link';\n};\n/**\n * @return true if the given object is a compile output, otherwise false\n */\n\n\nvar isCompile = function isCompile(_compile) {\n  return _compile && Map.isMap(_compile) && _compile.count() > 0 && _compile.reduce(function (prev, val) {\n    return prev && val.get('type') === 'compile';\n  }, true);\n};\n/**\n * @return true if the given object is a compile output, otherwise false\n */\n\n\nvar isContract = function isContract(_contract) {\n  return Map.isMap(_contract) && _contract.get('type') === 'compile';\n};\n/**\n * Return an instance from a previously deployed contract\n * @param deploy of previous\n * @return an ethjs instance that can be used to call methods on the deployed contract\n */\n\n\nvar getInstance = function getInstance(eth, deploy) {\n  assert(isNetwork(eth), 'First parameter is not an Ethereum network.');\n  assert(isDeploy(deploy), 'Second parameter is not a deploy output.');\n  var Contract = eth.contract(deploy.get('abi').toJS(), deploy.get('code'));\n  return Contract.at(deploy.get('deployAddress'));\n};\n\nvar cleanContractSync = function cleanContractSync(contract) {\n  var fn = \"\".concat(COMPILES_DIR, \"/\").concat(contract, \".json\");\n\n  if (fs.existsSync(fn)) {\n    fs.unlinkSync(fn);\n  }\n};\n\nvar cleanCompileSync = function cleanCompileSync(compile) {\n  compile.map(function (compile, compileName) {\n    cleanContractSync(compileName);\n  });\n};\n\nvar cleanLinkSync = function cleanLinkSync(networkId, linkName) {\n  assert.typeOf(networkId, \"string\");\n  var fn = \"\".concat(LINKS_DIR, \"/\").concat(networkId, \"/\").concat(linkName, \".json\");\n\n  if (fs.existsSync(fn)) {\n    fs.unlinkSync(fn);\n  }\n};\n\nvar cleanDeploySync = function cleanDeploySync(networkId, deployName) {\n  assert.typeOf(networkId, \"string\");\n  var fn = \"\".concat(DEPLOYS_DIR, \"/\").concat(networkId, \"/\").concat(deployName, \".json\");\n\n  if (fs.existsSync(fn)) {\n    fs.unlinkSync(fn);\n  }\n};\n\nvar cleanSync = function cleanSync(networkId) {\n  //const networkId = await eth.net_version()\n  fs.rmdirSync(\"\".concat(COMPILES_DIR)); // TODO Re-enable when you're written a recursive remove directory function\n  //fs.rmdirSync(`${LINKS_DIR}/${networkId}/${linkName}`)\n  //fs.rmdirSync(`${DEPLOYS_DIR}/${networkId}/${deployName}`)\n};\n\nvar thenPrint = function thenPrint(promise) {\n  promise.then(function (value) {\n    console.log(JSON.stringify(value));\n  });\n};\n\nmodule.exports = {\n  tryIfNot: tryIfNot,\n  traverseDirs: traverseDirs,\n  buildFromDirs: buildFromDirs,\n  thenPrint: thenPrint,\n  print: print,\n  ensureDir: ensureDir,\n  getEndpointURL: getEndpointURL,\n  getNetwork: getNetwork,\n  getDeploys: getDeploys,\n  getDeploy: getDeploy,\n  getLinks: getLinks,\n  getLink: getLink,\n  getContracts: getContracts,\n  getContract: getContract,\n  isDeploy: isDeploy,\n  isLink: isLink,\n  isCompile: isCompile,\n  isContract: isContract,\n  getInstance: getInstance,\n  cleanContractSync: cleanContractSync,\n  cleanCompileSync: cleanCompileSync,\n  cleanLinkSync: cleanLinkSync,\n  cleanDeploySync: cleanDeploySync,\n  cleanSync: cleanSync,\n  getFileKeySpace: getFileKeySpace,\n  getImmutableKey: getImmutableKey,\n  setImmutableKey: setImmutableKey,\n  LIB_PATTERN: LIB_PATTERN,\n  DB_DIR: DB_DIR,\n  SOURCES_DIR: SOURCES_DIR,\n  COMPILES_DIR: COMPILES_DIR,\n  LINKS_DIR: LINKS_DIR,\n  DEPLOYS_DIR: DEPLOYS_DIR,\n  DEMO_SRC_PATH: DEMO_SRC_PATH,\n  ZEPPELIN_SRC_PATH: ZEPPELIN_SRC_PATH,\n  fromJS: fromJSGreedy\n};\n\n//# sourceURL=webpack:///./node_modules/@democracy.js/utils/src/utils.js?");

/***/ }),

/***/ "./node_modules/assertion-error/index.js":
/*!***********************************************!*\
  !*** ./node_modules/assertion-error/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\nfunction exclude() {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps(res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude() {\n    var args = [].slice.call(arguments),\n        i = 0,\n        res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n}\n\n;\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError(message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON'),\n      props = extend(_props || {}); // default values\n\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false; // copy from properties\n\n  for (var key in props) {\n    this[key] = props[key];\n  } // capture stack trace\n\n\n  ssf = ssf || AssertionError;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n}\n/*!\n * Inherit from Error.prototype\n */\n\n\nAssertionError.prototype = Object.create(Error.prototype);\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack'),\n      props = extend({\n    name: this.name\n  }, this); // include stack if exists and not turned off\n\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n\n//# sourceURL=webpack:///./node_modules/assertion-error/index.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/json/stringify.js":
/*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/json/stringify.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"default\": __webpack_require__(/*! core-js/library/fn/json/stringify */ \"./node_modules/core-js/library/fn/json/stringify.js\"),\n  __esModule: true\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/json/stringify.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/assign.js":
/*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/assign.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"default\": __webpack_require__(/*! core-js/library/fn/object/assign */ \"./node_modules/core-js/library/fn/object/assign.js\"),\n  __esModule: true\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/assign.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/object/keys.js":
/*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/keys.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"default\": __webpack_require__(/*! core-js/library/fn/object/keys */ \"./node_modules/core-js/library/fn/object/keys.js\"),\n  __esModule: true\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/object/keys.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/core-js/promise.js":
/*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/promise.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  \"default\": __webpack_require__(/*! core-js/library/fn/promise */ \"./node_modules/core-js/library/fn/promise.js\"),\n  __esModule: true\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/core-js/promise.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/helpers/asyncToGenerator.js":
/*!****************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/asyncToGenerator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _promise = __webpack_require__(/*! ../core-js/promise */ \"./node_modules/babel-runtime/core-js/promise.js\");\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new _promise2.default(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return _promise2.default.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/helpers/asyncToGenerator.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = __webpack_require__(/*! ./runtime */ \"./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js":
/*!********************************************************************************!*\
  !*** ./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = ( false ? undefined : _typeof(module)) === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && _typeof(value) === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this;\n}() || Function(\"return this\")());\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/regenerator/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/babel-runtime/regenerator/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/babel-runtime/node_modules/regenerator-runtime/runtime-module.js\");\n\n//# sourceURL=webpack:///./node_modules/babel-runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/browserfs.js":
/*!**************************************************!*\
  !*** ./node_modules/browserfs/dist/browserfs.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}(function webpackUniversalModuleDefinition(root,factory){if((typeof exports===\"undefined\"?\"undefined\":_typeof(exports))==='object'&&(typeof module===\"undefined\"?\"undefined\":_typeof(module))==='object')module.exports=factory();else if(typeof define==='function'&&define.amd)define([],factory);else if((typeof exports===\"undefined\"?\"undefined\":_typeof(exports))==='object')exports[\"BrowserFS\"]=factory();else root[\"BrowserFS\"]=factory();})(this,function(){return(/******/function(modules){// webpackBootstrap\n/******/ // The module cache\n/******/var installedModules={};/******/ /******/ // The require function\n/******/function __webpack_require__(moduleId){/******/ /******/ // Check if module is in cache\n/******/if(installedModules[moduleId])/******/return installedModules[moduleId].exports;/******/ /******/ // Create a new module (and put it into the cache)\n/******/var module=installedModules[moduleId]={/******/exports:{},/******/id:moduleId,/******/loaded:false/******/};/******/ /******/ // Execute the module function\n/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);/******/ /******/ // Flag the module as loaded\n/******/module.loaded=true;/******/ /******/ // Return the exports of the module\n/******/return module.exports;/******/}/******/ /******/ /******/ // expose the modules object (__webpack_modules__)\n/******/__webpack_require__.m=modules;/******/ /******/ // expose the module cache\n/******/__webpack_require__.c=installedModules;/******/ /******/ // __webpack_public_path__\n/******/__webpack_require__.p=\"\";/******/ /******/ // Load entry module and return exports\n/******/return __webpack_require__(0);/******/}(/************************************************************************/ /******/[/* 0 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(Buffer,global,module,process){'use strict';Object.defineProperty(exports,'__esModule',{value:true});var buffer=__webpack_require__(2);var path=__webpack_require__(9);/**\n\t * Standard libc error codes. Add more to this enum and ErrorStrings as they are\n\t * needed.\n\t * @url http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n\t */ /**\n\t * Standard libc error codes. Add more to this enum and ErrorStrings as they are\n\t * needed.\n\t * @url http://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n\t */var ErrorCode;(function(ErrorCode){ErrorCode[ErrorCode[\"EPERM\"]=1]=\"EPERM\";ErrorCode[ErrorCode[\"ENOENT\"]=2]=\"ENOENT\";ErrorCode[ErrorCode[\"EIO\"]=5]=\"EIO\";ErrorCode[ErrorCode[\"EBADF\"]=9]=\"EBADF\";ErrorCode[ErrorCode[\"EACCES\"]=13]=\"EACCES\";ErrorCode[ErrorCode[\"EBUSY\"]=16]=\"EBUSY\";ErrorCode[ErrorCode[\"EEXIST\"]=17]=\"EEXIST\";ErrorCode[ErrorCode[\"ENOTDIR\"]=20]=\"ENOTDIR\";ErrorCode[ErrorCode[\"EISDIR\"]=21]=\"EISDIR\";ErrorCode[ErrorCode[\"EINVAL\"]=22]=\"EINVAL\";ErrorCode[ErrorCode[\"EFBIG\"]=27]=\"EFBIG\";ErrorCode[ErrorCode[\"ENOSPC\"]=28]=\"ENOSPC\";ErrorCode[ErrorCode[\"EROFS\"]=30]=\"EROFS\";ErrorCode[ErrorCode[\"ENOTEMPTY\"]=39]=\"ENOTEMPTY\";ErrorCode[ErrorCode[\"ENOTSUP\"]=95]=\"ENOTSUP\";})(ErrorCode||(ErrorCode={}));/* tslint:disable:variable-name */ /**\n\t * Strings associated with each error code.\n\t * @hidden\n\t */var ErrorStrings={};ErrorStrings[ErrorCode.EPERM]='Operation not permitted.';ErrorStrings[ErrorCode.ENOENT]='No such file or directory.';ErrorStrings[ErrorCode.EIO]='Input/output error.';ErrorStrings[ErrorCode.EBADF]='Bad file descriptor.';ErrorStrings[ErrorCode.EACCES]='Permission denied.';ErrorStrings[ErrorCode.EBUSY]='Resource busy or locked.';ErrorStrings[ErrorCode.EEXIST]='File exists.';ErrorStrings[ErrorCode.ENOTDIR]='File is not a directory.';ErrorStrings[ErrorCode.EISDIR]='File is a directory.';ErrorStrings[ErrorCode.EINVAL]='Invalid argument.';ErrorStrings[ErrorCode.EFBIG]='File is too big.';ErrorStrings[ErrorCode.ENOSPC]='No space left on disk.';ErrorStrings[ErrorCode.EROFS]='Cannot modify a read-only file system.';ErrorStrings[ErrorCode.ENOTEMPTY]='Directory is not empty.';ErrorStrings[ErrorCode.ENOTSUP]='Operation is not supported.';/* tslint:enable:variable-name */ /**\n\t * Represents a BrowserFS error. Passed back to applications after a failed\n\t * call to the BrowserFS API.\n\t */var ApiError=function(Error){function ApiError(type,message,path$$1){if(message===void 0)message=ErrorStrings[type];Error.call(this,message);// Unsupported.\nthis.syscall=\"\";this.errno=type;this.code=ErrorCode[type];this.path=path$$1;this.stack=new Error().stack;this.message=\"Error: \"+this.code+\": \"+message+(this.path?\", '\"+this.path+\"'\":'');}if(Error)ApiError.__proto__=Error;ApiError.prototype=Object.create(Error&&Error.prototype);ApiError.prototype.constructor=ApiError;ApiError.fromJSON=function fromJSON(json){var err=new ApiError(0);err.errno=json.errno;err.code=json.code;err.path=json.path;err.stack=json.stack;err.message=json.message;return err;};/**\n\t     * Creates an ApiError object from a buffer.\n\t     */ApiError.fromBuffer=function fromBuffer(buffer$$1,i){if(i===void 0)i=0;return ApiError.fromJSON(JSON.parse(buffer$$1.toString('utf8',i+4,i+4+buffer$$1.readUInt32LE(i))));};ApiError.FileError=function FileError(code,p){return new ApiError(code,ErrorStrings[code],p);};ApiError.ENOENT=function ENOENT(path$$1){return this.FileError(ErrorCode.ENOENT,path$$1);};ApiError.EEXIST=function EEXIST(path$$1){return this.FileError(ErrorCode.EEXIST,path$$1);};ApiError.EISDIR=function EISDIR(path$$1){return this.FileError(ErrorCode.EISDIR,path$$1);};ApiError.ENOTDIR=function ENOTDIR(path$$1){return this.FileError(ErrorCode.ENOTDIR,path$$1);};ApiError.EPERM=function EPERM(path$$1){return this.FileError(ErrorCode.EPERM,path$$1);};ApiError.ENOTEMPTY=function ENOTEMPTY(path$$1){return this.FileError(ErrorCode.ENOTEMPTY,path$$1);};/**\n\t     * @return A friendly error message.\n\t     */ApiError.prototype.toString=function toString(){return this.message;};ApiError.prototype.toJSON=function toJSON(){return{errno:this.errno,code:this.code,path:this.path,stack:this.stack,message:this.message};};/**\n\t     * Writes the API error into a buffer.\n\t     */ApiError.prototype.writeToBuffer=function writeToBuffer(buffer$$1,i){if(buffer$$1===void 0)buffer$$1=Buffer.alloc(this.bufferSize());if(i===void 0)i=0;var bytesWritten=buffer$$1.write(JSON.stringify(this.toJSON()),i+4);buffer$$1.writeUInt32LE(bytesWritten,i);return buffer$$1;};/**\n\t     * The size of the API error in buffer-form in bytes.\n\t     */ApiError.prototype.bufferSize=function bufferSize(){// 4 bytes for string length.\nreturn 4+Buffer.byteLength(JSON.stringify(this.toJSON()));};return ApiError;}(Error);var api_error=Object.freeze({get ErrorCode(){return ErrorCode;},ErrorStrings:ErrorStrings,ApiError:ApiError});var ActionType;(function(ActionType){// Indicates that the code should not do anything.\nActionType[ActionType[\"NOP\"]=0]=\"NOP\";// Indicates that the code should throw an exception.\nActionType[ActionType[\"THROW_EXCEPTION\"]=1]=\"THROW_EXCEPTION\";// Indicates that the code should truncate the file, but only if it is a file.\nActionType[ActionType[\"TRUNCATE_FILE\"]=2]=\"TRUNCATE_FILE\";// Indicates that the code should create the file.\nActionType[ActionType[\"CREATE_FILE\"]=3]=\"CREATE_FILE\";})(ActionType||(ActionType={}));/**\n\t * Represents one of the following file flags. A convenience object.\n\t *\n\t * * `'r'` - Open file for reading. An exception occurs if the file does not exist.\n\t * * `'r+'` - Open file for reading and writing. An exception occurs if the file does not exist.\n\t * * `'rs'` - Open file for reading in synchronous mode. Instructs the filesystem to not cache writes.\n\t * * `'rs+'` - Open file for reading and writing, and opens the file in synchronous mode.\n\t * * `'w'` - Open file for writing. The file is created (if it does not exist) or truncated (if it exists).\n\t * * `'wx'` - Like 'w' but opens the file in exclusive mode.\n\t * * `'w+'` - Open file for reading and writing. The file is created (if it does not exist) or truncated (if it exists).\n\t * * `'wx+'` - Like 'w+' but opens the file in exclusive mode.\n\t * * `'a'` - Open file for appending. The file is created if it does not exist.\n\t * * `'ax'` - Like 'a' but opens the file in exclusive mode.\n\t * * `'a+'` - Open file for reading and appending. The file is created if it does not exist.\n\t * * `'ax+'` - Like 'a+' but opens the file in exclusive mode.\n\t *\n\t * Exclusive mode ensures that the file path is newly created.\n\t */var FileFlag=function FileFlag(flagStr){this.flagStr=flagStr;if(FileFlag.validFlagStrs.indexOf(flagStr)<0){throw new ApiError(ErrorCode.EINVAL,\"Invalid flag: \"+flagStr);}};/**\n\t * Get an object representing the given file flag.\n\t * @param modeStr The string representing the flag\n\t * @return The FileFlag object representing the flag\n\t * @throw when the flag string is invalid\n\t */FileFlag.getFileFlag=function getFileFlag(flagStr){// Check cache first.\nif(FileFlag.flagCache.hasOwnProperty(flagStr)){return FileFlag.flagCache[flagStr];}return FileFlag.flagCache[flagStr]=new FileFlag(flagStr);};/**\n\t * Get the underlying flag string for this flag.\n\t */FileFlag.prototype.getFlagString=function getFlagString(){return this.flagStr;};/**\n\t * Returns true if the file is readable.\n\t */FileFlag.prototype.isReadable=function isReadable(){return this.flagStr.indexOf('r')!==-1||this.flagStr.indexOf('+')!==-1;};/**\n\t * Returns true if the file is writeable.\n\t */FileFlag.prototype.isWriteable=function isWriteable(){return this.flagStr.indexOf('w')!==-1||this.flagStr.indexOf('a')!==-1||this.flagStr.indexOf('+')!==-1;};/**\n\t * Returns true if the file mode should truncate.\n\t */FileFlag.prototype.isTruncating=function isTruncating(){return this.flagStr.indexOf('w')!==-1;};/**\n\t * Returns true if the file is appendable.\n\t */FileFlag.prototype.isAppendable=function isAppendable(){return this.flagStr.indexOf('a')!==-1;};/**\n\t * Returns true if the file is open in synchronous mode.\n\t */FileFlag.prototype.isSynchronous=function isSynchronous(){return this.flagStr.indexOf('s')!==-1;};/**\n\t * Returns true if the file is open in exclusive mode.\n\t */FileFlag.prototype.isExclusive=function isExclusive(){return this.flagStr.indexOf('x')!==-1;};/**\n\t * Returns one of the static fields on this object that indicates the\n\t * appropriate response to the path existing.\n\t */FileFlag.prototype.pathExistsAction=function pathExistsAction(){if(this.isExclusive()){return ActionType.THROW_EXCEPTION;}else if(this.isTruncating()){return ActionType.TRUNCATE_FILE;}else{return ActionType.NOP;}};/**\n\t * Returns one of the static fields on this object that indicates the\n\t * appropriate response to the path not existing.\n\t */FileFlag.prototype.pathNotExistsAction=function pathNotExistsAction(){if((this.isWriteable()||this.isAppendable())&&this.flagStr!=='r+'){return ActionType.CREATE_FILE;}else{return ActionType.THROW_EXCEPTION;}};// Contains cached FileMode instances.\nFileFlag.flagCache={};// Array of valid mode strings.\nFileFlag.validFlagStrs=['r','r+','rs','rs+','w','wx','w+','wx+','a','ax','a+','ax+'];/**\n\t * Indicates the type of the given file. Applied to 'mode'.\n\t */var FileType;(function(FileType){FileType[FileType[\"FILE\"]=32768]=\"FILE\";FileType[FileType[\"DIRECTORY\"]=16384]=\"DIRECTORY\";FileType[FileType[\"SYMLINK\"]=40960]=\"SYMLINK\";})(FileType||(FileType={}));/**\n\t * Emulation of Node's `fs.Stats` object.\n\t *\n\t * Attribute descriptions are from `man 2 stat'\n\t * @see http://nodejs.org/api/fs.html#fs_class_fs_stats\n\t * @see http://man7.org/linux/man-pages/man2/stat.2.html\n\t */var Stats=function Stats(itemType,size,mode,atime,mtime,ctime){if(atime===void 0)atime=new Date();if(mtime===void 0)mtime=new Date();if(ctime===void 0)ctime=new Date();this.size=size;this.atime=atime;this.mtime=mtime;this.ctime=ctime;/**\n\t     * UNSUPPORTED ATTRIBUTES\n\t     * I assume no one is going to need these details, although we could fake\n\t     * appropriate values if need be.\n\t     */ // ID of device containing file\nthis.dev=0;// inode number\nthis.ino=0;// device ID (if special file)\nthis.rdev=0;// number of hard links\nthis.nlink=1;// blocksize for file system I/O\nthis.blksize=4096;// @todo Maybe support these? atm, it's a one-user filesystem.\n// user ID of owner\nthis.uid=0;// group ID of owner\nthis.gid=0;// time file was created (currently unsupported)\nthis.birthtime=new Date(0);// XXX: Some file systems stash data on stats objects.\nthis.fileData=null;if(!mode){switch(itemType){case FileType.FILE:this.mode=0x1a4;break;case FileType.DIRECTORY:default:this.mode=0x1ff;}}else{this.mode=mode;}// number of 512B blocks allocated\nthis.blocks=Math.ceil(size/512);// Check if mode also includes top-most bits, which indicate the file's\n// type.\nif(this.mode<0x1000){this.mode|=itemType;}};Stats.fromBuffer=function fromBuffer(buffer$$1){var size=buffer$$1.readUInt32LE(0),mode=buffer$$1.readUInt32LE(4),atime=buffer$$1.readDoubleLE(8),mtime=buffer$$1.readDoubleLE(16),ctime=buffer$$1.readDoubleLE(24);return new Stats(mode&0xF000,size,mode&0xFFF,new Date(atime),new Date(mtime),new Date(ctime));};Stats.prototype.toBuffer=function toBuffer(){var buffer$$1=Buffer.alloc(32);buffer$$1.writeUInt32LE(this.size,0);buffer$$1.writeUInt32LE(this.mode,4);buffer$$1.writeDoubleLE(this.atime.getTime(),8);buffer$$1.writeDoubleLE(this.mtime.getTime(),16);buffer$$1.writeDoubleLE(this.ctime.getTime(),24);return buffer$$1;};/**\n\t * **Nonstandard**: Clone the stats object.\n\t * @return [BrowserFS.node.fs.Stats]\n\t */Stats.prototype.clone=function clone(){return new Stats(this.mode&0xF000,this.size,this.mode&0xFFF,this.atime,this.mtime,this.ctime);};/**\n\t * @return [Boolean] True if this item is a file.\n\t */Stats.prototype.isFile=function isFile(){return(this.mode&0xF000)===FileType.FILE;};/**\n\t * @return [Boolean] True if this item is a directory.\n\t */Stats.prototype.isDirectory=function isDirectory(){return(this.mode&0xF000)===FileType.DIRECTORY;};/**\n\t * @return [Boolean] True if this item is a symbolic link (only valid through lstat)\n\t */Stats.prototype.isSymbolicLink=function isSymbolicLink(){return(this.mode&0xF000)===FileType.SYMLINK;};/**\n\t * Change the mode of the file. We use this helper function to prevent messing\n\t * up the type of the file, which is encoded in mode.\n\t */Stats.prototype.chmod=function chmod(mode){this.mode=this.mode&0xF000|mode;};// We don't support the following types of files.\nStats.prototype.isSocket=function isSocket(){return false;};Stats.prototype.isBlockDevice=function isBlockDevice(){return false;};Stats.prototype.isCharacterDevice=function isCharacterDevice(){return false;};Stats.prototype.isFIFO=function isFIFO(){return false;};/**\n\t * Wraps a callback function. Used for unit testing. Defaults to a NOP.\n\t * @hidden\n\t */var wrapCb=function wrapCb(cb,numArgs){return cb;};/**\n\t * @hidden\n\t */function assertRoot(fs){if(fs){return fs;}throw new ApiError(ErrorCode.EIO,\"Initialize BrowserFS with a file system using BrowserFS.initialize(filesystem)\");}/**\n\t * @hidden\n\t */function normalizeMode(mode,def){switch(_typeof(mode)){case'number':// (path, flag, mode, cb?)\nreturn mode;case'string':// (path, flag, modeString, cb?)\nvar trueMode=parseInt(mode,8);if(!isNaN(trueMode)){return trueMode;}// Invalid string.\nreturn def;default:return def;}}/**\n\t * @hidden\n\t */function normalizeTime(time){if(time instanceof Date){return time;}else if(typeof time==='number'){return new Date(time*1000);}else{throw new ApiError(ErrorCode.EINVAL,\"Invalid time.\");}}/**\n\t * @hidden\n\t */function normalizePath(p){// Node doesn't allow null characters in paths.\nif(p.indexOf(\"\\0\")>=0){throw new ApiError(ErrorCode.EINVAL,'Path must be a string without null bytes.');}else if(p===''){throw new ApiError(ErrorCode.EINVAL,'Path must not be empty.');}return path.resolve(p);}/**\n\t * @hidden\n\t */function normalizeOptions(options,defEnc,defFlag,defMode){switch(_typeof(options)){case'object':return{encoding:typeof options['encoding']!=='undefined'?options['encoding']:defEnc,flag:typeof options['flag']!=='undefined'?options['flag']:defFlag,mode:normalizeMode(options['mode'],defMode)};case'string':return{encoding:options,flag:defFlag,mode:defMode};default:return{encoding:defEnc,flag:defFlag,mode:defMode};}}/**\n\t * The default callback is a NOP.\n\t * @hidden\n\t * @private\n\t */function nopCb(){}// NOP.\n/**\n\t * The node frontend to all filesystems.\n\t * This layer handles:\n\t *\n\t * * Sanity checking inputs.\n\t * * Normalizing paths.\n\t * * Resetting stack depth for asynchronous operations which may not go through\n\t *   the browser by wrapping all input callbacks using `setImmediate`.\n\t * * Performing the requested operation through the filesystem or the file\n\t *   descriptor, as appropriate.\n\t * * Handling optional arguments and setting default arguments.\n\t * @see http://nodejs.org/api/fs.html\n\t */var FS=function FS(){/* tslint:enable:variable-name */this.F_OK=0;this.R_OK=4;this.W_OK=2;this.X_OK=1;this.root=null;this.fdMap={};this.nextFd=100;};FS.prototype.initialize=function initialize(rootFS){if(!rootFS.constructor.isAvailable()){throw new ApiError(ErrorCode.EINVAL,'Tried to instantiate BrowserFS with an unavailable file system.');}return this.root=rootFS;};/**\n\t * converts Date or number to a fractional UNIX timestamp\n\t * Grabbed from NodeJS sources (lib/fs.js)\n\t */FS.prototype._toUnixTimestamp=function _toUnixTimestamp(time){if(typeof time==='number'){return time;}else if(time instanceof Date){return time.getTime()/1000;}throw new Error(\"Cannot parse time: \"+time);};/**\n\t * **NONSTANDARD**: Grab the FileSystem instance that backs this API.\n\t * @return [BrowserFS.FileSystem | null] Returns null if the file system has\n\t *   not been initialized.\n\t */FS.prototype.getRootFS=function getRootFS(){if(this.root){return this.root;}else{return null;}};// FILE OR DIRECTORY METHODS\n/**\n\t * Asynchronous rename. No arguments other than a possible exception are given\n\t * to the completion callback.\n\t * @param oldPath\n\t * @param newPath\n\t * @param callback\n\t */FS.prototype.rename=function rename(oldPath,newPath,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{assertRoot(this.root).rename(normalizePath(oldPath),normalizePath(newPath),newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous rename.\n\t * @param oldPath\n\t * @param newPath\n\t */FS.prototype.renameSync=function renameSync(oldPath,newPath){assertRoot(this.root).renameSync(normalizePath(oldPath),normalizePath(newPath));};/**\n\t * Test whether or not the given path exists by checking with the file system.\n\t * Then call the callback argument with either true or false.\n\t * @example Sample invocation\n\t *   fs.exists('/etc/passwd', function (exists) {\n\t * util.debug(exists ? \"it's there\" : \"no passwd!\");\n\t *   });\n\t * @param path\n\t * @param callback\n\t */FS.prototype.exists=function exists(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{return assertRoot(this.root).exists(normalizePath(path$$1),newCb);}catch(e){// Doesn't return an error. If something bad happens, we assume it just\n// doesn't exist.\nreturn newCb(false);}};/**\n\t * Test whether or not the given path exists by checking with the file system.\n\t * @param path\n\t * @return [boolean]\n\t */FS.prototype.existsSync=function existsSync(path$$1){try{return assertRoot(this.root).existsSync(normalizePath(path$$1));}catch(e){// Doesn't return an error. If something bad happens, we assume it just\n// doesn't exist.\nreturn false;}};/**\n\t * Asynchronous `stat`.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.stat=function stat(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{return assertRoot(this.root).stat(normalizePath(path$$1),false,newCb);}catch(e){return newCb(e);}};/**\n\t * Synchronous `stat`.\n\t * @param path\n\t * @return [BrowserFS.node.fs.Stats]\n\t */FS.prototype.statSync=function statSync(path$$1){return assertRoot(this.root).statSync(normalizePath(path$$1),false);};/**\n\t * Asynchronous `lstat`.\n\t * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n\t * then the link itself is stat-ed, not the file that it refers to.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.lstat=function lstat(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{return assertRoot(this.root).stat(normalizePath(path$$1),true,newCb);}catch(e){return newCb(e);}};/**\n\t * Synchronous `lstat`.\n\t * `lstat()` is identical to `stat()`, except that if path is a symbolic link,\n\t * then the link itself is stat-ed, not the file that it refers to.\n\t * @param path\n\t * @return [BrowserFS.node.fs.Stats]\n\t */FS.prototype.lstatSync=function lstatSync(path$$1){return assertRoot(this.root).statSync(normalizePath(path$$1),true);};FS.prototype.truncate=function truncate(path$$1,arg2,cb){if(arg2===void 0)arg2=0;if(cb===void 0)cb=nopCb;var len=0;if(typeof arg2==='function'){cb=arg2;}else if(typeof arg2==='number'){len=arg2;}var newCb=wrapCb(cb,1);try{if(len<0){throw new ApiError(ErrorCode.EINVAL);}return assertRoot(this.root).truncate(normalizePath(path$$1),len,newCb);}catch(e){return newCb(e);}};/**\n\t * Synchronous `truncate`.\n\t * @param path\n\t * @param len\n\t */FS.prototype.truncateSync=function truncateSync(path$$1,len){if(len===void 0)len=0;if(len<0){throw new ApiError(ErrorCode.EINVAL);}return assertRoot(this.root).truncateSync(normalizePath(path$$1),len);};/**\n\t * Asynchronous `unlink`.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.unlink=function unlink(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{return assertRoot(this.root).unlink(normalizePath(path$$1),newCb);}catch(e){return newCb(e);}};/**\n\t * Synchronous `unlink`.\n\t * @param path\n\t */FS.prototype.unlinkSync=function unlinkSync(path$$1){return assertRoot(this.root).unlinkSync(normalizePath(path$$1));};FS.prototype.open=function open(path$$1,flag,arg2,cb){var this$1=this;if(cb===void 0)cb=nopCb;var mode=normalizeMode(arg2,0x1a4);cb=typeof arg2==='function'?arg2:cb;var newCb=wrapCb(cb,2);try{assertRoot(this.root).open(normalizePath(path$$1),FileFlag.getFileFlag(flag),mode,function(e,file){if(file){newCb(e,this$1.getFdForFile(file));}else{newCb(e);}});}catch(e){newCb(e);}};/**\n\t * Synchronous file open.\n\t * @see http://www.manpagez.com/man/2/open/\n\t * @param path\n\t * @param flags\n\t * @param mode defaults to `0644`\n\t * @return [BrowserFS.File]\n\t */FS.prototype.openSync=function openSync(path$$1,flag,mode){if(mode===void 0)mode=0x1a4;return this.getFdForFile(assertRoot(this.root).openSync(normalizePath(path$$1),FileFlag.getFileFlag(flag),normalizeMode(mode,0x1a4)));};FS.prototype.readFile=function readFile(filename,arg2,cb){if(arg2===void 0)arg2={};if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg2,null,'r',null);cb=typeof arg2==='function'?arg2:cb;var newCb=wrapCb(cb,2);try{var flag=FileFlag.getFileFlag(options['flag']);if(!flag.isReadable()){return newCb(new ApiError(ErrorCode.EINVAL,'Flag passed to readFile must allow for reading.'));}return assertRoot(this.root).readFile(normalizePath(filename),options.encoding,flag,newCb);}catch(e){return newCb(e);}};FS.prototype.readFileSync=function readFileSync(filename,arg2){if(arg2===void 0)arg2={};var options=normalizeOptions(arg2,null,'r',null);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isReadable()){throw new ApiError(ErrorCode.EINVAL,'Flag passed to readFile must allow for reading.');}return assertRoot(this.root).readFileSync(normalizePath(filename),options.encoding,flag);};FS.prototype.writeFile=function writeFile(filename,data,arg3,cb){if(arg3===void 0)arg3={};if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg3,'utf8','w',0x1a4);cb=typeof arg3==='function'?arg3:cb;var newCb=wrapCb(cb,1);try{var flag=FileFlag.getFileFlag(options.flag);if(!flag.isWriteable()){return newCb(new ApiError(ErrorCode.EINVAL,'Flag passed to writeFile must allow for writing.'));}return assertRoot(this.root).writeFile(normalizePath(filename),data,options.encoding,flag,options.mode,newCb);}catch(e){return newCb(e);}};FS.prototype.writeFileSync=function writeFileSync(filename,data,arg3){var options=normalizeOptions(arg3,'utf8','w',0x1a4);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isWriteable()){throw new ApiError(ErrorCode.EINVAL,'Flag passed to writeFile must allow for writing.');}return assertRoot(this.root).writeFileSync(normalizePath(filename),data,options.encoding,flag,options.mode);};FS.prototype.appendFile=function appendFile(filename,data,arg3,cb){if(cb===void 0)cb=nopCb;var options=normalizeOptions(arg3,'utf8','a',0x1a4);cb=typeof arg3==='function'?arg3:cb;var newCb=wrapCb(cb,1);try{var flag=FileFlag.getFileFlag(options.flag);if(!flag.isAppendable()){return newCb(new ApiError(ErrorCode.EINVAL,'Flag passed to appendFile must allow for appending.'));}assertRoot(this.root).appendFile(normalizePath(filename),data,options.encoding,flag,options.mode,newCb);}catch(e){newCb(e);}};FS.prototype.appendFileSync=function appendFileSync(filename,data,arg3){var options=normalizeOptions(arg3,'utf8','a',0x1a4);var flag=FileFlag.getFileFlag(options.flag);if(!flag.isAppendable()){throw new ApiError(ErrorCode.EINVAL,'Flag passed to appendFile must allow for appending.');}return assertRoot(this.root).appendFileSync(normalizePath(filename),data,options.encoding,flag,options.mode);};// FILE DESCRIPTOR METHODS\n/**\n\t * Asynchronous `fstat`.\n\t * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n\t * specified by the file descriptor `fd`.\n\t * @param fd\n\t * @param callback\n\t */FS.prototype.fstat=function fstat(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{var file=this.fd2file(fd);file.stat(newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `fstat`.\n\t * `fstat()` is identical to `stat()`, except that the file to be stat-ed is\n\t * specified by the file descriptor `fd`.\n\t * @param fd\n\t * @return [BrowserFS.node.fs.Stats]\n\t */FS.prototype.fstatSync=function fstatSync(fd){return this.fd2file(fd).statSync();};/**\n\t * Asynchronous close.\n\t * @param fd\n\t * @param callback\n\t */FS.prototype.close=function close(fd,cb){var this$1=this;if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).close(function(e){if(!e){this$1.closeFd(fd);}newCb(e);});}catch(e){newCb(e);}};/**\n\t * Synchronous close.\n\t * @param fd\n\t */FS.prototype.closeSync=function closeSync(fd){this.fd2file(fd).closeSync();this.closeFd(fd);};FS.prototype.ftruncate=function ftruncate(fd,arg2,cb){if(cb===void 0)cb=nopCb;var length=typeof arg2==='number'?arg2:0;cb=typeof arg2==='function'?arg2:cb;var newCb=wrapCb(cb,1);try{var file=this.fd2file(fd);if(length<0){throw new ApiError(ErrorCode.EINVAL);}file.truncate(length,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous ftruncate.\n\t * @param fd\n\t * @param len\n\t */FS.prototype.ftruncateSync=function ftruncateSync(fd,len){if(len===void 0)len=0;var file=this.fd2file(fd);if(len<0){throw new ApiError(ErrorCode.EINVAL);}file.truncateSync(len);};/**\n\t * Asynchronous fsync.\n\t * @param fd\n\t * @param callback\n\t */FS.prototype.fsync=function fsync(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).sync(newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous fsync.\n\t * @param fd\n\t */FS.prototype.fsyncSync=function fsyncSync(fd){this.fd2file(fd).syncSync();};/**\n\t * Asynchronous fdatasync.\n\t * @param fd\n\t * @param callback\n\t */FS.prototype.fdatasync=function fdatasync(fd,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{this.fd2file(fd).datasync(newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous fdatasync.\n\t * @param fd\n\t */FS.prototype.fdatasyncSync=function fdatasyncSync(fd){this.fd2file(fd).datasyncSync();};FS.prototype.write=function write(fd,arg2,arg3,arg4,arg5,cb){if(cb===void 0)cb=nopCb;var buffer$$1,offset,length,position=null;if(typeof arg2==='string'){// Signature 1: (fd, string, [position?, [encoding?]], cb?)\nvar encoding='utf8';switch(_typeof(arg3)){case'function':// (fd, string, cb)\ncb=arg3;break;case'number':// (fd, string, position, encoding?, cb?)\nposition=arg3;encoding=typeof arg4==='string'?arg4:'utf8';cb=typeof arg5==='function'?arg5:cb;break;default:// ...try to find the callback and get out of here!\ncb=typeof arg4==='function'?arg4:typeof arg5==='function'?arg5:cb;return cb(new ApiError(ErrorCode.EINVAL,'Invalid arguments.'));}buffer$$1=Buffer.from(arg2,encoding);offset=0;length=buffer$$1.length;}else{// Signature 2: (fd, buffer, offset, length, position?, cb?)\nbuffer$$1=arg2;offset=arg3;length=arg4;position=typeof arg5==='number'?arg5:null;cb=typeof arg5==='function'?arg5:cb;}var newCb=wrapCb(cb,3);try{var file=this.fd2file(fd);if(position===undefined||position===null){position=file.getPos();}file.write(buffer$$1,offset,length,position,newCb);}catch(e){newCb(e);}};FS.prototype.writeSync=function writeSync(fd,arg2,arg3,arg4,arg5){var buffer$$1,offset=0,length,position;if(typeof arg2==='string'){// Signature 1: (fd, string, [position?, [encoding?]])\nposition=typeof arg3==='number'?arg3:null;var encoding=typeof arg4==='string'?arg4:'utf8';offset=0;buffer$$1=Buffer.from(arg2,encoding);length=buffer$$1.length;}else{// Signature 2: (fd, buffer, offset, length, position?)\nbuffer$$1=arg2;offset=arg3;length=arg4;position=typeof arg5==='number'?arg5:null;}var file=this.fd2file(fd);if(position===undefined||position===null){position=file.getPos();}return file.writeSync(buffer$$1,offset,length,position);};FS.prototype.read=function read(fd,arg2,arg3,arg4,arg5,cb){if(cb===void 0)cb=nopCb;var position,offset,length,buffer$$1,newCb;if(typeof arg2==='number'){// legacy interface\n// (fd, length, position, encoding, callback)\nlength=arg2;position=arg3;var encoding=arg4;cb=typeof arg5==='function'?arg5:cb;offset=0;buffer$$1=Buffer.alloc(length);// XXX: Inefficient.\n// Wrap the cb so we shelter upper layers of the API from these\n// shenanigans.\nnewCb=wrapCb(function(err,bytesRead,buf){if(err){return cb(err);}cb(err,buf.toString(encoding),bytesRead);},3);}else{buffer$$1=arg2;offset=arg3;length=arg4;position=arg5;newCb=wrapCb(cb,3);}try{var file=this.fd2file(fd);if(position===undefined||position===null){position=file.getPos();}file.read(buffer$$1,offset,length,position,newCb);}catch(e){newCb(e);}};FS.prototype.readSync=function readSync(fd,arg2,arg3,arg4,arg5){var shenanigans=false;var buffer$$1,offset,length,position,encoding='utf8';if(typeof arg2==='number'){length=arg2;position=arg3;encoding=arg4;offset=0;buffer$$1=Buffer.alloc(length);shenanigans=true;}else{buffer$$1=arg2;offset=arg3;length=arg4;position=arg5;}var file=this.fd2file(fd);if(position===undefined||position===null){position=file.getPos();}var rv=file.readSync(buffer$$1,offset,length,position);if(!shenanigans){return rv;}else{return[buffer$$1.toString(encoding),rv];}};/**\n\t * Asynchronous `fchown`.\n\t * @param fd\n\t * @param uid\n\t * @param gid\n\t * @param callback\n\t */FS.prototype.fchown=function fchown(fd,uid,gid,callback){if(callback===void 0)callback=nopCb;var newCb=wrapCb(callback,1);try{this.fd2file(fd).chown(uid,gid,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `fchown`.\n\t * @param fd\n\t * @param uid\n\t * @param gid\n\t */FS.prototype.fchownSync=function fchownSync(fd,uid,gid){this.fd2file(fd).chownSync(uid,gid);};/**\n\t * Asynchronous `fchmod`.\n\t * @param fd\n\t * @param mode\n\t * @param callback\n\t */FS.prototype.fchmod=function fchmod(fd,mode,cb){var newCb=wrapCb(cb,1);try{var numMode=typeof mode==='string'?parseInt(mode,8):mode;this.fd2file(fd).chmod(numMode,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `fchmod`.\n\t * @param fd\n\t * @param mode\n\t */FS.prototype.fchmodSync=function fchmodSync(fd,mode){var numMode=typeof mode==='string'?parseInt(mode,8):mode;this.fd2file(fd).chmodSync(numMode);};/**\n\t * Change the file timestamps of a file referenced by the supplied file\n\t * descriptor.\n\t * @param fd\n\t * @param atime\n\t * @param mtime\n\t * @param callback\n\t */FS.prototype.futimes=function futimes(fd,atime,mtime,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var file=this.fd2file(fd);if(typeof atime==='number'){atime=new Date(atime*1000);}if(typeof mtime==='number'){mtime=new Date(mtime*1000);}file.utimes(atime,mtime,newCb);}catch(e){newCb(e);}};/**\n\t * Change the file timestamps of a file referenced by the supplied file\n\t * descriptor.\n\t * @param fd\n\t * @param atime\n\t * @param mtime\n\t */FS.prototype.futimesSync=function futimesSync(fd,atime,mtime){this.fd2file(fd).utimesSync(normalizeTime(atime),normalizeTime(mtime));};// DIRECTORY-ONLY METHODS\n/**\n\t * Asynchronous `rmdir`.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.rmdir=function rmdir(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).rmdir(path$$1,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `rmdir`.\n\t * @param path\n\t */FS.prototype.rmdirSync=function rmdirSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).rmdirSync(path$$1);};/**\n\t * Asynchronous `mkdir`.\n\t * @param path\n\t * @param mode defaults to `0777`\n\t * @param callback\n\t */FS.prototype.mkdir=function mkdir(path$$1,mode,cb){if(cb===void 0)cb=nopCb;if(typeof mode==='function'){cb=mode;mode=0x1ff;}var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).mkdir(path$$1,mode,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `mkdir`.\n\t * @param path\n\t * @param mode defaults to `0777`\n\t */FS.prototype.mkdirSync=function mkdirSync(path$$1,mode){assertRoot(this.root).mkdirSync(normalizePath(path$$1),normalizeMode(mode,0x1ff));};/**\n\t * Asynchronous `readdir`. Reads the contents of a directory.\n\t * The callback gets two arguments `(err, files)` where `files` is an array of\n\t * the names of the files in the directory excluding `'.'` and `'..'`.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.readdir=function readdir(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).readdir(path$$1,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `readdir`. Reads the contents of a directory.\n\t * @param path\n\t * @return [String[]]\n\t */FS.prototype.readdirSync=function readdirSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).readdirSync(path$$1);};// SYMLINK METHODS\n/**\n\t * Asynchronous `link`.\n\t * @param srcpath\n\t * @param dstpath\n\t * @param callback\n\t */FS.prototype.link=function link(srcpath,dstpath,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);assertRoot(this.root).link(srcpath,dstpath,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `link`.\n\t * @param srcpath\n\t * @param dstpath\n\t */FS.prototype.linkSync=function linkSync(srcpath,dstpath){srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);return assertRoot(this.root).linkSync(srcpath,dstpath);};FS.prototype.symlink=function symlink(srcpath,dstpath,arg3,cb){if(cb===void 0)cb=nopCb;var type=typeof arg3==='string'?arg3:'file';cb=typeof arg3==='function'?arg3:cb;var newCb=wrapCb(cb,1);try{if(type!=='file'&&type!=='dir'){return newCb(new ApiError(ErrorCode.EINVAL,\"Invalid type: \"+type));}srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);assertRoot(this.root).symlink(srcpath,dstpath,type,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `symlink`.\n\t * @param srcpath\n\t * @param dstpath\n\t * @param type can be either `'dir'` or `'file'` (default is `'file'`)\n\t */FS.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){if(!type){type='file';}else if(type!=='file'&&type!=='dir'){throw new ApiError(ErrorCode.EINVAL,\"Invalid type: \"+type);}srcpath=normalizePath(srcpath);dstpath=normalizePath(dstpath);return assertRoot(this.root).symlinkSync(srcpath,dstpath,type);};/**\n\t * Asynchronous readlink.\n\t * @param path\n\t * @param callback\n\t */FS.prototype.readlink=function readlink(path$$1,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).readlink(path$$1,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous readlink.\n\t * @param path\n\t * @return [String]\n\t */FS.prototype.readlinkSync=function readlinkSync(path$$1){path$$1=normalizePath(path$$1);return assertRoot(this.root).readlinkSync(path$$1);};// PROPERTY OPERATIONS\n/**\n\t * Asynchronous `chown`.\n\t * @param path\n\t * @param uid\n\t * @param gid\n\t * @param callback\n\t */FS.prototype.chown=function chown(path$$1,uid,gid,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).chown(path$$1,false,uid,gid,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `chown`.\n\t * @param path\n\t * @param uid\n\t * @param gid\n\t */FS.prototype.chownSync=function chownSync(path$$1,uid,gid){path$$1=normalizePath(path$$1);assertRoot(this.root).chownSync(path$$1,false,uid,gid);};/**\n\t * Asynchronous `lchown`.\n\t * @param path\n\t * @param uid\n\t * @param gid\n\t * @param callback\n\t */FS.prototype.lchown=function lchown(path$$1,uid,gid,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{path$$1=normalizePath(path$$1);assertRoot(this.root).chown(path$$1,true,uid,gid,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `lchown`.\n\t * @param path\n\t * @param uid\n\t * @param gid\n\t */FS.prototype.lchownSync=function lchownSync(path$$1,uid,gid){path$$1=normalizePath(path$$1);assertRoot(this.root).chownSync(path$$1,true,uid,gid);};/**\n\t * Asynchronous `chmod`.\n\t * @param path\n\t * @param mode\n\t * @param callback\n\t */FS.prototype.chmod=function chmod(path$$1,mode,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,\"Invalid mode.\");}assertRoot(this.root).chmod(normalizePath(path$$1),false,numMode,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `chmod`.\n\t * @param path\n\t * @param mode\n\t */FS.prototype.chmodSync=function chmodSync(path$$1,mode){var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,\"Invalid mode.\");}path$$1=normalizePath(path$$1);assertRoot(this.root).chmodSync(path$$1,false,numMode);};/**\n\t * Asynchronous `lchmod`.\n\t * @param path\n\t * @param mode\n\t * @param callback\n\t */FS.prototype.lchmod=function lchmod(path$$1,mode,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{var numMode=normalizeMode(mode,-1);if(numMode<0){throw new ApiError(ErrorCode.EINVAL,\"Invalid mode.\");}assertRoot(this.root).chmod(normalizePath(path$$1),true,numMode,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `lchmod`.\n\t * @param path\n\t * @param mode\n\t */FS.prototype.lchmodSync=function lchmodSync(path$$1,mode){var numMode=normalizeMode(mode,-1);if(numMode<1){throw new ApiError(ErrorCode.EINVAL,\"Invalid mode.\");}assertRoot(this.root).chmodSync(normalizePath(path$$1),true,numMode);};/**\n\t * Change file timestamps of the file referenced by the supplied path.\n\t * @param path\n\t * @param atime\n\t * @param mtime\n\t * @param callback\n\t */FS.prototype.utimes=function utimes(path$$1,atime,mtime,cb){if(cb===void 0)cb=nopCb;var newCb=wrapCb(cb,1);try{assertRoot(this.root).utimes(normalizePath(path$$1),normalizeTime(atime),normalizeTime(mtime),newCb);}catch(e){newCb(e);}};/**\n\t * Change file timestamps of the file referenced by the supplied path.\n\t * @param path\n\t * @param atime\n\t * @param mtime\n\t */FS.prototype.utimesSync=function utimesSync(path$$1,atime,mtime){assertRoot(this.root).utimesSync(normalizePath(path$$1),normalizeTime(atime),normalizeTime(mtime));};FS.prototype.realpath=function realpath(path$$1,arg2,cb){if(cb===void 0)cb=nopCb;var cache=_typeof(arg2)==='object'?arg2:{};cb=typeof arg2==='function'?arg2:nopCb;var newCb=wrapCb(cb,2);try{path$$1=normalizePath(path$$1);assertRoot(this.root).realpath(path$$1,cache,newCb);}catch(e){newCb(e);}};/**\n\t * Synchronous `realpath`.\n\t * @param path\n\t * @param cache An object literal of mapped paths that can be used to\n\t *   force a specific path resolution or avoid additional `fs.stat` calls for\n\t *   known real paths.\n\t * @return [String]\n\t */FS.prototype.realpathSync=function realpathSync(path$$1,cache){if(cache===void 0)cache={};path$$1=normalizePath(path$$1);return assertRoot(this.root).realpathSync(path$$1,cache);};FS.prototype.watchFile=function watchFile(filename,arg2,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.unwatchFile=function unwatchFile(filename,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.watch=function watch(filename,arg2,listener){if(listener===void 0)listener=nopCb;throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.access=function access(path$$1,arg2,cb){if(cb===void 0)cb=nopCb;throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.accessSync=function accessSync(path$$1,mode){throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.createReadStream=function createReadStream(path$$1,options){throw new ApiError(ErrorCode.ENOTSUP);};FS.prototype.createWriteStream=function createWriteStream(path$$1,options){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * For unit testing. Passes all incoming callbacks to cbWrapper for wrapping.\n\t */FS.prototype.wrapCallbacks=function wrapCallbacks(cbWrapper){wrapCb=cbWrapper;};FS.prototype.getFdForFile=function getFdForFile(file){var fd=this.nextFd++;this.fdMap[fd]=file;return fd;};FS.prototype.fd2file=function fd2file(fd){var rv=this.fdMap[fd];if(rv){return rv;}else{throw new ApiError(ErrorCode.EBADF,'Invalid file descriptor.');}};FS.prototype.closeFd=function closeFd(fd){delete this.fdMap[fd];};/* tslint:disable:variable-name */ // Exported fs.Stats.\nFS.Stats=Stats;// Manually export the individual public functions of fs.\n// Required because some code will invoke functions off of the module.\n// e.g.:\n// let writeFile = fs.writeFile;\n// writeFile(...)\n/**\n\t * @hidden\n\t */var fs=new FS();/**\n\t * @hidden\n\t */var _fsMock={};/**\n\t * @hidden\n\t */var fsProto=FS.prototype;Object.keys(fsProto).forEach(function(key){if(typeof fs[key]==='function'){_fsMock[key]=function(){return fs[key].apply(fs,arguments);};}else{_fsMock[key]=fs[key];}});_fsMock['changeFSModule']=function(newFs){fs=newFs;};_fsMock['getFSModule']=function(){return fs;};_fsMock['FS']=FS;/*\n\t * Levenshtein distance, from the `js-levenshtein` NPM module.\n\t * Copied here to avoid complexity of adding another CommonJS module dependency.\n\t */function _min(d0,d1,d2,bx,ay){return d0<d1||d2<d1?d0>d2?d2+1:d0+1:bx===ay?d1:d1+1;}/**\n\t * Calculates levenshtein distance.\n\t * @param a\n\t * @param b\n\t */function levenshtein(a,b){if(a===b){return 0;}if(a.length>b.length){var tmp=a;a=b;b=tmp;}var la=a.length;var lb=b.length;while(la>0&&a.charCodeAt(la-1)===b.charCodeAt(lb-1)){la--;lb--;}var offset=0;while(offset<la&&a.charCodeAt(offset)===b.charCodeAt(offset)){offset++;}la-=offset;lb-=offset;if(la===0||lb===1){return lb;}var vector=new Array(la<<1);for(var y=0;y<la;){vector[la+y]=a.charCodeAt(offset+y);vector[y]=++y;}var x;var d0;var d1;var d2;var d3;for(x=0;x+3<lb;){var bx0=b.charCodeAt(offset+(d0=x));var bx1=b.charCodeAt(offset+(d1=x+1));var bx2=b.charCodeAt(offset+(d2=x+2));var bx3=b.charCodeAt(offset+(d3=x+3));var dd$1=x+=4;for(var y$1=0;y$1<la;){var ay=vector[la+y$1];var dy=vector[y$1];d0=_min(dy,d0,d1,bx0,ay);d1=_min(d0,d1,d2,bx1,ay);d2=_min(d1,d2,d3,bx2,ay);dd$1=_min(d2,d3,dd$1,bx3,ay);vector[y$1++]=dd$1;d3=d2;d2=d1;d1=d0;d0=dy;}}var dd=0;for(;x<lb;){var bx0$1=b.charCodeAt(offset+(d0=x));dd=++x;for(var y$2=0;y$2<la;y$2++){var dy$1=vector[y$2];vector[y$2]=dd=dy$1<d0||dd<d0?dy$1>dd?dd+1:dy$1+1:bx0$1===vector[la+y$2]?d0:d0+1;d0=dy$1;}}return dd;}function deprecationMessage(print,fsName,opts){if(print){console.warn(\"[\"+fsName+\"] Direct file system constructor usage is deprecated for this file system, and will be removed in the next major version. Please use the '\"+fsName+\".Create(\"+JSON.stringify(opts)+\", callback)' method instead. See https://github.com/jvilk/BrowserFS/issues/176 for more details.\");}}/**\n\t * Checks for any IE version, including IE11 which removed MSIE from the\n\t * userAgent string.\n\t * @hidden\n\t */var isIE=typeof navigator!==\"undefined\"&&!!(/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase())||navigator.userAgent.indexOf('Trident')!==-1);/**\n\t * Check if we're in a web worker.\n\t * @hidden\n\t */var isWebWorker=typeof window===\"undefined\";/**\n\t * Throws an exception. Called on code paths that should be impossible.\n\t * @hidden\n\t */function fail(){throw new Error(\"BFS has reached an impossible code path; please file a bug.\");}/**\n\t * Synchronous recursive makedir.\n\t * @hidden\n\t */function mkdirpSync(p,mode,fs){if(!fs.existsSync(p)){mkdirpSync(path.dirname(p),mode,fs);fs.mkdirSync(p,mode);}}/**\n\t * Converts a buffer into an array buffer. Attempts to do so in a\n\t * zero-copy manner, e.g. the array references the same memory.\n\t * @hidden\n\t */function buffer2ArrayBuffer(buff){var u8=buffer2Uint8array(buff),u8offset=u8.byteOffset,u8Len=u8.byteLength;if(u8offset===0&&u8Len===u8.buffer.byteLength){return u8.buffer;}else{return u8.buffer.slice(u8offset,u8offset+u8Len);}}/**\n\t * Converts a buffer into a Uint8Array. Attempts to do so in a\n\t * zero-copy manner, e.g. the array references the same memory.\n\t * @hidden\n\t */function buffer2Uint8array(buff){if(buff instanceof Uint8Array){// BFS & Node v4.0 buffers *are* Uint8Arrays.\nreturn buff;}else{// Uint8Arrays can be constructed from arrayish numbers.\n// At this point, we assume this isn't a BFS array.\nreturn new Uint8Array(buff);}}/**\n\t * Converts the given arrayish object into a Buffer. Attempts to\n\t * be zero-copy.\n\t * @hidden\n\t */function arrayish2Buffer(arr){if(arr instanceof Buffer){return arr;}else if(arr instanceof Uint8Array){return uint8Array2Buffer(arr);}else{return Buffer.from(arr);}}/**\n\t * Converts the given Uint8Array into a Buffer. Attempts to be zero-copy.\n\t * @hidden\n\t */function uint8Array2Buffer(u8){if(u8 instanceof Buffer){return u8;}else if(u8.byteOffset===0&&u8.byteLength===u8.buffer.byteLength){return arrayBuffer2Buffer(u8.buffer);}else{return Buffer.from(u8.buffer,u8.byteOffset,u8.byteLength);}}/**\n\t * Converts the given array buffer into a Buffer. Attempts to be\n\t * zero-copy.\n\t * @hidden\n\t */function arrayBuffer2Buffer(ab){return Buffer.from(ab);}/**\n\t * Copies a slice of the given buffer\n\t * @hidden\n\t */function copyingSlice(buff,start,end){if(start===void 0)start=0;if(end===void 0)end=buff.length;if(start<0||end<0||end>buff.length||start>end){throw new TypeError(\"Invalid slice bounds on buffer of length \"+buff.length+\": [\"+start+\", \"+end+\"]\");}if(buff.length===0){// Avoid s0 corner case in ArrayBuffer case.\nreturn emptyBuffer();}else{var u8=buffer2Uint8array(buff),s0=buff[0],newS0=(s0+1)%0xFF;buff[0]=newS0;if(u8[0]===newS0){// Same memory. Revert & copy.\nu8[0]=s0;return uint8Array2Buffer(u8.slice(start,end));}else{// Revert.\nbuff[0]=s0;return uint8Array2Buffer(u8.subarray(start,end));}}}/**\n\t * @hidden\n\t */var emptyBuff=null;/**\n\t * Returns an empty buffer.\n\t * @hidden\n\t */function emptyBuffer(){if(emptyBuff){return emptyBuff;}return emptyBuff=Buffer.alloc(0);}/**\n\t * Option validator for a Buffer file system option.\n\t * @hidden\n\t */function bufferValidator(v,cb){if(Buffer.isBuffer(v)){cb();}else{cb(new ApiError(ErrorCode.EINVAL,\"option must be a Buffer.\"));}}/**\n\t * Checks that the given options object is valid for the file system options.\n\t * @hidden\n\t */function checkOptions(fsType,opts,cb){var optsInfo=fsType.Options;var fsName=fsType.Name;var pendingValidators=0;var callbackCalled=false;var loopEnded=false;function validatorCallback(e){if(!callbackCalled){if(e){callbackCalled=true;cb(e);}pendingValidators--;if(pendingValidators===0&&loopEnded){cb();}}}// Check for required options.\nvar loop=function loop(optName){if(optsInfo.hasOwnProperty(optName)){var opt=optsInfo[optName];var providedValue=opts[optName];if(providedValue===undefined||providedValue===null){if(!opt.optional){// Required option, not provided.\n// Any incorrect options provided? Which ones are close to the provided one?\n// (edit distance 5 === close)\nvar incorrectOptions=Object.keys(opts).filter(function(o){return!(o in optsInfo);}).map(function(a){return{str:a,distance:levenshtein(optName,a)};}).filter(function(o){return o.distance<5;}).sort(function(a,b){return a.distance-b.distance;});// Validators may be synchronous.\nif(callbackCalled){return{};}callbackCalled=true;return{v:cb(new ApiError(ErrorCode.EINVAL,\"[\"+fsName+\"] Required option '\"+optName+\"' not provided.\"+(incorrectOptions.length>0?\" You provided unrecognized option '\"+incorrectOptions[0].str+\"'; perhaps you meant to type '\"+optName+\"'.\":'')+\"\\nOption description: \"+opt.description))};}// Else: Optional option, not provided. That is OK.\n}else{// Option provided! Check type.\nvar typeMatches=false;if(Array.isArray(opt.type)){typeMatches=opt.type.indexOf(_typeof(providedValue))!==-1;}else{typeMatches=_typeof(providedValue)===opt.type;}if(!typeMatches){// Validators may be synchronous.\nif(callbackCalled){return{};}callbackCalled=true;return{v:cb(new ApiError(ErrorCode.EINVAL,\"[\"+fsName+\"] Value provided for option \"+optName+\" is not the proper type. Expected \"+(Array.isArray(opt.type)?\"one of {\"+opt.type.join(\", \")+\"}\":opt.type)+\", but received \"+_typeof(providedValue)+\"\\nOption description: \"+opt.description))};}else if(opt.validator){pendingValidators++;opt.validator(providedValue,validatorCallback);}// Otherwise: All good!\n}}};for(var optName in optsInfo){var returned=loop(optName);if(returned)return returned.v;}loopEnded=true;if(pendingValidators===0&&!callbackCalled){cb();}}var BFSUtils=Object.freeze({deprecationMessage:deprecationMessage,isIE:isIE,isWebWorker:isWebWorker,fail:fail,mkdirpSync:mkdirpSync,buffer2ArrayBuffer:buffer2ArrayBuffer,buffer2Uint8array:buffer2Uint8array,arrayish2Buffer:arrayish2Buffer,uint8Array2Buffer:uint8Array2Buffer,arrayBuffer2Buffer:arrayBuffer2Buffer,copyingSlice:copyingSlice,emptyBuffer:emptyBuffer,bufferValidator:bufferValidator,checkOptions:checkOptions});var BFSEmscriptenStreamOps=function BFSEmscriptenStreamOps(fs){this.fs=fs;this.nodefs=fs.getNodeFS();this.FS=fs.getFS();this.PATH=fs.getPATH();this.ERRNO_CODES=fs.getERRNO_CODES();};BFSEmscriptenStreamOps.prototype.open=function open(stream){var path$$1=this.fs.realPath(stream.node);var FS=this.FS;try{if(FS.isFile(stream.node.mode)){stream.nfd=this.nodefs.openSync(path$$1,this.fs.flagsToPermissionString(stream.flags));}}catch(e){if(!e.code){throw e;}throw new FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenStreamOps.prototype.close=function close(stream){var FS=this.FS;try{if(FS.isFile(stream.node.mode)&&stream.nfd){this.nodefs.closeSync(stream.nfd);}}catch(e){if(!e.code){throw e;}throw new FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenStreamOps.prototype.read=function read(stream,buffer$$1,offset,length,position){// Avoid copying overhead by reading directly into buffer.\ntry{return this.nodefs.readSync(stream.nfd,uint8Array2Buffer(buffer$$1),offset,length,position);}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenStreamOps.prototype.write=function write(stream,buffer$$1,offset,length,position){// Avoid copying overhead.\ntry{return this.nodefs.writeSync(stream.nfd,uint8Array2Buffer(buffer$$1),offset,length,position);}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenStreamOps.prototype.llseek=function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(this.FS.isFile(stream.node.mode)){try{var stat=this.nodefs.fstatSync(stream.nfd);position+=stat.size;}catch(e){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}}}if(position<0){throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);}stream.position=position;return position;};var BFSEmscriptenNodeOps=function BFSEmscriptenNodeOps(fs){this.fs=fs;this.nodefs=fs.getNodeFS();this.FS=fs.getFS();this.PATH=fs.getPATH();this.ERRNO_CODES=fs.getERRNO_CODES();};BFSEmscriptenNodeOps.prototype.getattr=function getattr(node){var path$$1=this.fs.realPath(node);var stat;try{stat=this.nodefs.lstatSync(path$$1);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks};};BFSEmscriptenNodeOps.prototype.setattr=function setattr(node,attr){var path$$1=this.fs.realPath(node);try{if(attr.mode!==undefined){this.nodefs.chmodSync(path$$1,attr.mode);// update the common node structure mode as well\nnode.mode=attr.mode;}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);this.nodefs.utimesSync(path$$1,date,date);}}catch(e){if(!e.code){throw e;}// Ignore not supported errors. Emscripten does utimesSync when it\n// writes files, but never really requires the value to be set.\nif(e.code!==\"ENOTSUP\"){throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}}if(attr.size!==undefined){try{this.nodefs.truncateSync(path$$1,attr.size);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}}};BFSEmscriptenNodeOps.prototype.lookup=function lookup(parent,name){var path$$1=this.PATH.join2(this.fs.realPath(parent),name);var mode=this.fs.getMode(path$$1);return this.fs.createNode(parent,name,mode);};BFSEmscriptenNodeOps.prototype.mknod=function mknod(parent,name,mode,dev){var node=this.fs.createNode(parent,name,mode,dev);// create the backing node for this in the fs root as well\nvar path$$1=this.fs.realPath(node);try{if(this.FS.isDir(node.mode)){this.nodefs.mkdirSync(path$$1,node.mode);}else{this.nodefs.writeFileSync(path$$1,'',{mode:node.mode});}}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}return node;};BFSEmscriptenNodeOps.prototype.rename=function rename(oldNode,newDir,newName){var oldPath=this.fs.realPath(oldNode);var newPath=this.PATH.join2(this.fs.realPath(newDir),newName);try{this.nodefs.renameSync(oldPath,newPath);// This logic is missing from the original NodeFS,\n// causing Emscripten's filesystem to think that the old file still exists.\noldNode.name=newName;oldNode.parent=newDir;}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenNodeOps.prototype.unlink=function unlink(parent,name){var path$$1=this.PATH.join2(this.fs.realPath(parent),name);try{this.nodefs.unlinkSync(path$$1);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenNodeOps.prototype.rmdir=function rmdir(parent,name){var path$$1=this.PATH.join2(this.fs.realPath(parent),name);try{this.nodefs.rmdirSync(path$$1);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenNodeOps.prototype.readdir=function readdir(node){var path$$1=this.fs.realPath(node);try{// Node does not list . and .. in directory listings,\n// but Emscripten expects it.\nvar contents=this.nodefs.readdirSync(path$$1);contents.push('.','..');return contents;}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenNodeOps.prototype.symlink=function symlink(parent,newName,oldPath){var newPath=this.PATH.join2(this.fs.realPath(parent),newName);try{this.nodefs.symlinkSync(oldPath,newPath);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};BFSEmscriptenNodeOps.prototype.readlink=function readlink(node){var path$$1=this.fs.realPath(node);try{return this.nodefs.readlinkSync(path$$1);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}};var BFSEmscriptenFS=function BFSEmscriptenFS(_FS,_PATH,_ERRNO_CODES,nodefs){if(_FS===void 0)_FS=self['FS'];if(_PATH===void 0)_PATH=self['PATH'];if(_ERRNO_CODES===void 0)_ERRNO_CODES=self['ERRNO_CODES'];if(nodefs===void 0)nodefs=_fsMock;// This maps the integer permission modes from http://linux.die.net/man/3/open\n// to node.js-specific file open permission strings at http://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback\nthis.flagsToPermissionStringMap={0/*O_RDONLY*/:'r',1/*O_WRONLY*/:'r+',2/*O_RDWR*/:'r+',64/*O_CREAT*/:'r',65/*O_WRONLY|O_CREAT*/:'r+',66/*O_RDWR|O_CREAT*/:'r+',129/*O_WRONLY|O_EXCL*/:'rx+',193/*O_WRONLY|O_CREAT|O_EXCL*/:'rx+',514/*O_RDWR|O_TRUNC*/:'w+',577/*O_WRONLY|O_CREAT|O_TRUNC*/:'w',578/*O_CREAT|O_RDWR|O_TRUNC*/:'w+',705/*O_WRONLY|O_CREAT|O_EXCL|O_TRUNC*/:'wx',706/*O_RDWR|O_CREAT|O_EXCL|O_TRUNC*/:'wx+',1024/*O_APPEND*/:'a',1025/*O_WRONLY|O_APPEND*/:'a',1026/*O_RDWR|O_APPEND*/:'a+',1089/*O_WRONLY|O_CREAT|O_APPEND*/:'a',1090/*O_RDWR|O_CREAT|O_APPEND*/:'a+',1153/*O_WRONLY|O_EXCL|O_APPEND*/:'ax',1154/*O_RDWR|O_EXCL|O_APPEND*/:'ax+',1217/*O_WRONLY|O_CREAT|O_EXCL|O_APPEND*/:'ax',1218/*O_RDWR|O_CREAT|O_EXCL|O_APPEND*/:'ax+',4096/*O_RDONLY|O_DSYNC*/:'rs',4098/*O_RDWR|O_DSYNC*/:'rs+'};this.nodefs=nodefs;this.FS=_FS;this.PATH=_PATH;this.ERRNO_CODES=_ERRNO_CODES;this.node_ops=new BFSEmscriptenNodeOps(this);this.stream_ops=new BFSEmscriptenStreamOps(this);};BFSEmscriptenFS.prototype.mount=function mount(m){return this.createNode(null,'/',this.getMode(m.opts.root),0);};BFSEmscriptenFS.prototype.createNode=function createNode(parent,name,mode,dev){var FS=this.FS;if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(this.ERRNO_CODES.EINVAL);}var node=FS.createNode(parent,name,mode);node.node_ops=this.node_ops;node.stream_ops=this.stream_ops;return node;};BFSEmscriptenFS.prototype.getMode=function getMode(path$$1){var stat;try{stat=this.nodefs.lstatSync(path$$1);}catch(e){if(!e.code){throw e;}throw new this.FS.ErrnoError(this.ERRNO_CODES[e.code]);}return stat.mode;};BFSEmscriptenFS.prototype.realPath=function realPath(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent;}parts.push(node.mount.opts.root);parts.reverse();return this.PATH.join.apply(null,parts);};BFSEmscriptenFS.prototype.flagsToPermissionString=function flagsToPermissionString(flags){var parsedFlags=typeof flags===\"string\"?parseInt(flags,10):flags;parsedFlags&=0x1FFF;if(parsedFlags in this.flagsToPermissionStringMap){return this.flagsToPermissionStringMap[parsedFlags];}else{return flags;}};BFSEmscriptenFS.prototype.getNodeFS=function getNodeFS(){return this.nodefs;};BFSEmscriptenFS.prototype.getFS=function getFS(){return this.FS;};BFSEmscriptenFS.prototype.getPATH=function getPATH(){return this.PATH;};BFSEmscriptenFS.prototype.getERRNO_CODES=function getERRNO_CODES(){return this.ERRNO_CODES;};/**\n\t * Basic filesystem class. Most filesystems should extend this class, as it\n\t * provides default implementations for a handful of methods.\n\t */var BaseFileSystem=function BaseFileSystem(){};BaseFileSystem.prototype.supportsLinks=function supportsLinks(){return false;};BaseFileSystem.prototype.diskSpace=function diskSpace(p,cb){cb(0,0);};/**\n\t * Opens the file at path p with the given flag. The file must exist.\n\t * @param p The path to open.\n\t * @param flag The flag to use when opening the file.\n\t */BaseFileSystem.prototype.openFile=function openFile(p,flag,cb){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * Create the file at path p with the given mode. Then, open it with the given\n\t * flag.\n\t */BaseFileSystem.prototype.createFile=function createFile(p,flag,mode,cb){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.open=function open(p,flag,mode,cb){var this$1=this;var mustBeFile=function mustBeFile(e,stats){if(e){// File does not exist.\nswitch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:// Ensure parent exists.\nreturn this$1.stat(path.dirname(p),false,function(e,parentStats){if(e){cb(e);}else if(parentStats&&!parentStats.isDirectory()){cb(ApiError.ENOTDIR(path.dirname(p)));}else{this$1.createFile(p,flag,mode,cb);}});case ActionType.THROW_EXCEPTION:return cb(ApiError.ENOENT(p));default:return cb(new ApiError(ErrorCode.EINVAL,'Invalid FileFlag object.'));}}else{// File exists.\nif(stats&&stats.isDirectory()){return cb(ApiError.EISDIR(p));}switch(flag.pathExistsAction()){case ActionType.THROW_EXCEPTION:return cb(ApiError.EEXIST(p));case ActionType.TRUNCATE_FILE:// NOTE: In a previous implementation, we deleted the file and\n// re-created it. However, this created a race condition if another\n// asynchronous request was trying to read the file, as the file\n// would not exist for a small period of time.\nreturn this$1.openFile(p,flag,function(e,fd){if(e){cb(e);}else if(fd){fd.truncate(0,function(){fd.sync(function(){cb(null,fd);});});}else{fail();}});case ActionType.NOP:return this$1.openFile(p,flag,cb);default:return cb(new ApiError(ErrorCode.EINVAL,'Invalid FileFlag object.'));}}};this.stat(p,false,mustBeFile);};BaseFileSystem.prototype.rename=function rename(oldPath,newPath,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.renameSync=function renameSync(oldPath,newPath){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.stat=function stat(p,isLstat,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.statSync=function statSync(p,isLstat){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * Opens the file at path p with the given flag. The file must exist.\n\t * @param p The path to open.\n\t * @param flag The flag to use when opening the file.\n\t * @return A File object corresponding to the opened file.\n\t */BaseFileSystem.prototype.openFileSync=function openFileSync(p,flag,mode){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * Create the file at path p with the given mode. Then, open it with the given\n\t * flag.\n\t */BaseFileSystem.prototype.createFileSync=function createFileSync(p,flag,mode){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.openSync=function openSync(p,flag,mode){// Check if the path exists, and is a file.\nvar stats;try{stats=this.statSync(p,false);}catch(e){// File does not exist.\nswitch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:// Ensure parent exists.\nvar parentStats=this.statSync(path.dirname(p),false);if(!parentStats.isDirectory()){throw ApiError.ENOTDIR(path.dirname(p));}return this.createFileSync(p,flag,mode);case ActionType.THROW_EXCEPTION:throw ApiError.ENOENT(p);default:throw new ApiError(ErrorCode.EINVAL,'Invalid FileFlag object.');}}// File exists.\nif(stats.isDirectory()){throw ApiError.EISDIR(p);}switch(flag.pathExistsAction()){case ActionType.THROW_EXCEPTION:throw ApiError.EEXIST(p);case ActionType.TRUNCATE_FILE:// Delete file.\nthis.unlinkSync(p);// Create file. Use the same mode as the old file.\n// Node itself modifies the ctime when this occurs, so this action\n// will preserve that behavior if the underlying file system\n// supports those properties.\nreturn this.createFileSync(p,flag,stats.mode);case ActionType.NOP:return this.openFileSync(p,flag,mode);default:throw new ApiError(ErrorCode.EINVAL,'Invalid FileFlag object.');}};BaseFileSystem.prototype.unlink=function unlink(p,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.unlinkSync=function unlinkSync(p){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.rmdir=function rmdir(p,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.rmdirSync=function rmdirSync(p){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.mkdir=function mkdir(p,mode,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.mkdirSync=function mkdirSync(p,mode){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.readdir=function readdir(p,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.readdirSync=function readdirSync(p){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.exists=function exists(p,cb){this.stat(p,null,function(err){cb(!err);});};BaseFileSystem.prototype.existsSync=function existsSync(p){try{this.statSync(p,true);return true;}catch(e){return false;}};BaseFileSystem.prototype.realpath=function realpath(p,cache,cb){if(this.supportsLinks()){// The path could contain symlinks. Split up the path,\n// resolve any symlinks, return the resolved string.\nvar splitPath=p.split(path.sep);// TODO: Simpler to just pass through file, find sep and such.\nfor(var i=0;i<splitPath.length;i++){var addPaths=splitPath.slice(0,i+1);splitPath[i]=path.join.apply(null,addPaths);}}else{// No symlinks. We just need to verify that it exists.\nthis.exists(p,function(doesExist){if(doesExist){cb(null,p);}else{cb(ApiError.ENOENT(p));}});}};BaseFileSystem.prototype.realpathSync=function realpathSync(p,cache){if(this.supportsLinks()){// The path could contain symlinks. Split up the path,\n// resolve any symlinks, return the resolved string.\nvar splitPath=p.split(path.sep);// TODO: Simpler to just pass through file, find sep and such.\nfor(var i=0;i<splitPath.length;i++){var addPaths=splitPath.slice(0,i+1);splitPath[i]=path.join.apply(path,addPaths);}return splitPath.join(path.sep);}else{// No symlinks. We just need to verify that it exists.\nif(this.existsSync(p)){return p;}else{throw ApiError.ENOENT(p);}}};BaseFileSystem.prototype.truncate=function truncate(p,len,cb){this.open(p,FileFlag.getFileFlag('r+'),0x1a4,function(er,fd){if(er){return cb(er);}fd.truncate(len,function(er){fd.close(function(er2){cb(er||er2);});});});};BaseFileSystem.prototype.truncateSync=function truncateSync(p,len){var fd=this.openSync(p,FileFlag.getFileFlag('r+'),0x1a4);// Need to safely close FD, regardless of whether or not truncate succeeds.\ntry{fd.truncateSync(len);}catch(e){throw e;}finally{fd.closeSync();}};BaseFileSystem.prototype.readFile=function readFile(fname,encoding,flag,cb){// Wrap cb in file closing code.\nvar oldCb=cb;// Get file.\nthis.open(fname,flag,0x1a4,function(err,fd){if(err){return cb(err);}cb=function cb(err,arg){fd.close(function(err2){if(!err){err=err2;}return oldCb(err,arg);});};fd.stat(function(err,stat){if(err){return cb(err);}// Allocate buffer.\nvar buf=Buffer.alloc(stat.size);fd.read(buf,0,stat.size,0,function(err){if(err){return cb(err);}else if(encoding===null){return cb(err,buf);}try{cb(null,buf.toString(encoding));}catch(e){cb(e);}});});});};BaseFileSystem.prototype.readFileSync=function readFileSync(fname,encoding,flag){// Get file.\nvar fd=this.openSync(fname,flag,0x1a4);try{var stat=fd.statSync();// Allocate buffer.\nvar buf=Buffer.alloc(stat.size);fd.readSync(buf,0,stat.size,0);fd.closeSync();if(encoding===null){return buf;}return buf.toString(encoding);}finally{fd.closeSync();}};BaseFileSystem.prototype.writeFile=function writeFile(fname,data,encoding,flag,mode,cb){// Wrap cb in file closing code.\nvar oldCb=cb;// Get file.\nthis.open(fname,flag,0x1a4,function(err,fd){if(err){return cb(err);}cb=function cb(err){fd.close(function(err2){oldCb(err?err:err2);});};try{if(typeof data==='string'){data=Buffer.from(data,encoding);}}catch(e){return cb(e);}// Write into file.\nfd.write(data,0,data.length,0,cb);});};BaseFileSystem.prototype.writeFileSync=function writeFileSync(fname,data,encoding,flag,mode){// Get file.\nvar fd=this.openSync(fname,flag,mode);try{if(typeof data==='string'){data=Buffer.from(data,encoding);}// Write into file.\nfd.writeSync(data,0,data.length,0);}finally{fd.closeSync();}};BaseFileSystem.prototype.appendFile=function appendFile(fname,data,encoding,flag,mode,cb){// Wrap cb in file closing code.\nvar oldCb=cb;this.open(fname,flag,mode,function(err,fd){if(err){return cb(err);}cb=function cb(err){fd.close(function(err2){oldCb(err?err:err2);});};if(typeof data==='string'){data=Buffer.from(data,encoding);}fd.write(data,0,data.length,null,cb);});};BaseFileSystem.prototype.appendFileSync=function appendFileSync(fname,data,encoding,flag,mode){var fd=this.openSync(fname,flag,mode);try{if(typeof data==='string'){data=Buffer.from(data,encoding);}fd.writeSync(data,0,data.length,null);}finally{fd.closeSync();}};BaseFileSystem.prototype.chmod=function chmod(p,isLchmod,mode,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.chmodSync=function chmodSync(p,isLchmod,mode){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.chown=function chown(p,isLchown,uid,gid,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.chownSync=function chownSync(p,isLchown,uid,gid){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.utimes=function utimes(p,atime,mtime,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.utimesSync=function utimesSync(p,atime,mtime){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.link=function link(srcpath,dstpath,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.linkSync=function linkSync(srcpath,dstpath){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.symlink=function symlink(srcpath,dstpath,type,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){throw new ApiError(ErrorCode.ENOTSUP);};BaseFileSystem.prototype.readlink=function readlink(p,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFileSystem.prototype.readlinkSync=function readlinkSync(p){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * Implements the asynchronous API in terms of the synchronous API.\n\t * @class SynchronousFileSystem\n\t */var SynchronousFileSystem=function(BaseFileSystem){function SynchronousFileSystem(){BaseFileSystem.apply(this,arguments);}if(BaseFileSystem)SynchronousFileSystem.__proto__=BaseFileSystem;SynchronousFileSystem.prototype=Object.create(BaseFileSystem&&BaseFileSystem.prototype);SynchronousFileSystem.prototype.constructor=SynchronousFileSystem;SynchronousFileSystem.prototype.supportsSynch=function supportsSynch(){return true;};SynchronousFileSystem.prototype.rename=function rename(oldPath,newPath,cb){try{this.renameSync(oldPath,newPath);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.stat=function stat(p,isLstat,cb){try{cb(null,this.statSync(p,isLstat));}catch(e){cb(e);}};SynchronousFileSystem.prototype.open=function open(p,flags,mode,cb){try{cb(null,this.openSync(p,flags,mode));}catch(e){cb(e);}};SynchronousFileSystem.prototype.unlink=function unlink(p,cb){try{this.unlinkSync(p);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.rmdir=function rmdir(p,cb){try{this.rmdirSync(p);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.mkdir=function mkdir(p,mode,cb){try{this.mkdirSync(p,mode);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.readdir=function readdir(p,cb){try{cb(null,this.readdirSync(p));}catch(e){cb(e);}};SynchronousFileSystem.prototype.chmod=function chmod(p,isLchmod,mode,cb){try{this.chmodSync(p,isLchmod,mode);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.chown=function chown(p,isLchown,uid,gid,cb){try{this.chownSync(p,isLchown,uid,gid);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.utimes=function utimes(p,atime,mtime,cb){try{this.utimesSync(p,atime,mtime);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.link=function link(srcpath,dstpath,cb){try{this.linkSync(srcpath,dstpath);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.symlink=function symlink(srcpath,dstpath,type,cb){try{this.symlinkSync(srcpath,dstpath,type);cb();}catch(e){cb(e);}};SynchronousFileSystem.prototype.readlink=function readlink(p,cb){try{cb(null,this.readlinkSync(p));}catch(e){cb(e);}};return SynchronousFileSystem;}(BaseFileSystem);/**\n\t * Base class that contains shared implementations of functions for the file\n\t * object.\n\t */var BaseFile=function BaseFile(){};BaseFile.prototype.sync=function sync(cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFile.prototype.syncSync=function syncSync(){throw new ApiError(ErrorCode.ENOTSUP);};BaseFile.prototype.datasync=function datasync(cb){this.sync(cb);};BaseFile.prototype.datasyncSync=function datasyncSync(){return this.syncSync();};BaseFile.prototype.chown=function chown(uid,gid,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFile.prototype.chownSync=function chownSync(uid,gid){throw new ApiError(ErrorCode.ENOTSUP);};BaseFile.prototype.chmod=function chmod(mode,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFile.prototype.chmodSync=function chmodSync(mode){throw new ApiError(ErrorCode.ENOTSUP);};BaseFile.prototype.utimes=function utimes(atime,mtime,cb){cb(new ApiError(ErrorCode.ENOTSUP));};BaseFile.prototype.utimesSync=function utimesSync(atime,mtime){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t * An implementation of the File interface that operates on a file that is\n\t * completely in-memory. PreloadFiles are backed by a Buffer.\n\t *\n\t * This is also an abstract class, as it lacks an implementation of 'sync' and\n\t * 'close'. Each filesystem that wishes to use this file representation must\n\t * extend this class and implement those two methods.\n\t * @todo 'close' lever that disables functionality once closed.\n\t */var PreloadFile=function(BaseFile$$1){function PreloadFile(_fs,_path,_flag,_stat,contents){BaseFile$$1.call(this);this._pos=0;this._dirty=false;this._fs=_fs;this._path=_path;this._flag=_flag;this._stat=_stat;if(contents){this._buffer=contents;}else{// Empty buffer. It'll expand once we write stuff to it.\nthis._buffer=emptyBuffer();}// Note: This invariant is *not* maintained once the file starts getting\n// modified.\n// Note: Only actually matters if file is readable, as writeable modes may\n// truncate/append to file.\nif(this._stat.size!==this._buffer.length&&this._flag.isReadable()){throw new Error(\"Invalid buffer: Buffer is \"+this._buffer.length+\" long, yet Stats object specifies that file is \"+this._stat.size+\" long.\");}}if(BaseFile$$1)PreloadFile.__proto__=BaseFile$$1;PreloadFile.prototype=Object.create(BaseFile$$1&&BaseFile$$1.prototype);PreloadFile.prototype.constructor=PreloadFile;/**\n\t     * NONSTANDARD: Get the underlying buffer for this file. !!DO NOT MUTATE!! Will mess up dirty tracking.\n\t     */PreloadFile.prototype.getBuffer=function getBuffer(){return this._buffer;};/**\n\t     * NONSTANDARD: Get underlying stats for this file. !!DO NOT MUTATE!!\n\t     */PreloadFile.prototype.getStats=function getStats(){return this._stat;};PreloadFile.prototype.getFlag=function getFlag(){return this._flag;};/**\n\t     * Get the path to this file.\n\t     * @return [String] The path to the file.\n\t     */PreloadFile.prototype.getPath=function getPath(){return this._path;};/**\n\t     * Get the current file position.\n\t     *\n\t     * We emulate the following bug mentioned in the Node documentation:\n\t     * > On Linux, positional writes don't work when the file is opened in append\n\t     *   mode. The kernel ignores the position argument and always appends the data\n\t     *   to the end of the file.\n\t     * @return [Number] The current file position.\n\t     */PreloadFile.prototype.getPos=function getPos(){if(this._flag.isAppendable()){return this._stat.size;}return this._pos;};/**\n\t     * Advance the current file position by the indicated number of positions.\n\t     * @param [Number] delta\n\t     */PreloadFile.prototype.advancePos=function advancePos(delta){return this._pos+=delta;};/**\n\t     * Set the file position.\n\t     * @param [Number] newPos\n\t     */PreloadFile.prototype.setPos=function setPos(newPos){return this._pos=newPos;};/**\n\t     * **Core**: Asynchronous sync. Must be implemented by subclasses of this\n\t     * class.\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */PreloadFile.prototype.sync=function sync(cb){try{this.syncSync();cb();}catch(e){cb(e);}};/**\n\t     * **Core**: Synchronous sync.\n\t     */PreloadFile.prototype.syncSync=function syncSync(){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t     * **Core**: Asynchronous close. Must be implemented by subclasses of this\n\t     * class.\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */PreloadFile.prototype.close=function close(cb){try{this.closeSync();cb();}catch(e){cb(e);}};/**\n\t     * **Core**: Synchronous close.\n\t     */PreloadFile.prototype.closeSync=function closeSync(){throw new ApiError(ErrorCode.ENOTSUP);};/**\n\t     * Asynchronous `stat`.\n\t     * @param [Function(BrowserFS.ApiError, BrowserFS.node.fs.Stats)] cb\n\t     */PreloadFile.prototype.stat=function stat(cb){try{cb(null,this._stat.clone());}catch(e){cb(e);}};/**\n\t     * Synchronous `stat`.\n\t     */PreloadFile.prototype.statSync=function statSync(){return this._stat.clone();};/**\n\t     * Asynchronous truncate.\n\t     * @param [Number] len\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */PreloadFile.prototype.truncate=function truncate(len,cb){try{this.truncateSync(len);if(this._flag.isSynchronous()&&!_fsMock.getRootFS().supportsSynch()){this.sync(cb);}cb();}catch(e){return cb(e);}};/**\n\t     * Synchronous truncate.\n\t     * @param [Number] len\n\t     */PreloadFile.prototype.truncateSync=function truncateSync(len){this._dirty=true;if(!this._flag.isWriteable()){throw new ApiError(ErrorCode.EPERM,'File not opened with a writeable mode.');}this._stat.mtime=new Date();if(len>this._buffer.length){var buf=Buffer.alloc(len-this._buffer.length,0);// Write will set @_stat.size for us.\nthis.writeSync(buf,0,buf.length,this._buffer.length);if(this._flag.isSynchronous()&&_fsMock.getRootFS().supportsSynch()){this.syncSync();}return;}this._stat.size=len;// Truncate buffer to 'len'.\nvar newBuff=Buffer.alloc(len);this._buffer.copy(newBuff,0,0,len);this._buffer=newBuff;if(this._flag.isSynchronous()&&_fsMock.getRootFS().supportsSynch()){this.syncSync();}};/**\n\t     * Write buffer to the file.\n\t     * Note that it is unsafe to use fs.write multiple times on the same file\n\t     * without waiting for the callback.\n\t     * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n\t     *  the file.\n\t     * @param [Number] offset Offset in the buffer to start reading data from.\n\t     * @param [Number] length The amount of bytes to write to the file.\n\t     * @param [Number] position Offset from the beginning of the file where this\n\t     *   data should be written. If position is null, the data will be written at\n\t     *   the current position.\n\t     * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)]\n\t     *   cb The number specifies the number of bytes written into the file.\n\t     */PreloadFile.prototype.write=function write(buffer$$1,offset,length,position,cb){try{cb(null,this.writeSync(buffer$$1,offset,length,position),buffer$$1);}catch(e){cb(e);}};/**\n\t     * Write buffer to the file.\n\t     * Note that it is unsafe to use fs.writeSync multiple times on the same file\n\t     * without waiting for the callback.\n\t     * @param [BrowserFS.node.Buffer] buffer Buffer containing the data to write to\n\t     *  the file.\n\t     * @param [Number] offset Offset in the buffer to start reading data from.\n\t     * @param [Number] length The amount of bytes to write to the file.\n\t     * @param [Number] position Offset from the beginning of the file where this\n\t     *   data should be written. If position is null, the data will be written at\n\t     *   the current position.\n\t     * @return [Number]\n\t     */PreloadFile.prototype.writeSync=function writeSync(buffer$$1,offset,length,position){this._dirty=true;if(position===undefined||position===null){position=this.getPos();}if(!this._flag.isWriteable()){throw new ApiError(ErrorCode.EPERM,'File not opened with a writeable mode.');}var endFp=position+length;if(endFp>this._stat.size){this._stat.size=endFp;if(endFp>this._buffer.length){// Extend the buffer!\nvar newBuff=Buffer.alloc(endFp);this._buffer.copy(newBuff);this._buffer=newBuff;}}var len=buffer$$1.copy(this._buffer,position,offset,offset+length);this._stat.mtime=new Date();if(this._flag.isSynchronous()){this.syncSync();return len;}this.setPos(position+len);return len;};/**\n\t     * Read data from the file.\n\t     * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n\t     *   written to.\n\t     * @param [Number] offset The offset within the buffer where writing will\n\t     *   start.\n\t     * @param [Number] length An integer specifying the number of bytes to read.\n\t     * @param [Number] position An integer specifying where to begin reading from\n\t     *   in the file. If position is null, data will be read from the current file\n\t     *   position.\n\t     * @param [Function(BrowserFS.ApiError, Number, BrowserFS.node.Buffer)] cb The\n\t     *   number is the number of bytes read\n\t     */PreloadFile.prototype.read=function read(buffer$$1,offset,length,position,cb){try{cb(null,this.readSync(buffer$$1,offset,length,position),buffer$$1);}catch(e){cb(e);}};/**\n\t     * Read data from the file.\n\t     * @param [BrowserFS.node.Buffer] buffer The buffer that the data will be\n\t     *   written to.\n\t     * @param [Number] offset The offset within the buffer where writing will\n\t     *   start.\n\t     * @param [Number] length An integer specifying the number of bytes to read.\n\t     * @param [Number] position An integer specifying where to begin reading from\n\t     *   in the file. If position is null, data will be read from the current file\n\t     *   position.\n\t     * @return [Number]\n\t     */PreloadFile.prototype.readSync=function readSync(buffer$$1,offset,length,position){if(!this._flag.isReadable()){throw new ApiError(ErrorCode.EPERM,'File not opened with a readable mode.');}if(position===undefined||position===null){position=this.getPos();}var endRead=position+length;if(endRead>this._stat.size){length=this._stat.size-position;}var rv=this._buffer.copy(buffer$$1,offset,position,position+length);this._stat.atime=new Date();this._pos=position+length;return rv;};/**\n\t     * Asynchronous `fchmod`.\n\t     * @param [Number|String] mode\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */PreloadFile.prototype.chmod=function chmod(mode,cb){try{this.chmodSync(mode);cb();}catch(e){cb(e);}};/**\n\t     * Asynchronous `fchmod`.\n\t     * @param [Number] mode\n\t     */PreloadFile.prototype.chmodSync=function chmodSync(mode){if(!this._fs.supportsProps()){throw new ApiError(ErrorCode.ENOTSUP);}this._dirty=true;this._stat.chmod(mode);this.syncSync();};PreloadFile.prototype.isDirty=function isDirty(){return this._dirty;};/**\n\t     * Resets the dirty bit. Should only be called after a sync has completed successfully.\n\t     */PreloadFile.prototype.resetDirty=function resetDirty(){this._dirty=false;};return PreloadFile;}(BaseFile);/**\n\t * File class for the InMemory and XHR file systems.\n\t * Doesn't sync to anything, so it works nicely for memory-only files.\n\t */var NoSyncFile=function(PreloadFile){function NoSyncFile(_fs,_path,_flag,_stat,contents){PreloadFile.call(this,_fs,_path,_flag,_stat,contents);}if(PreloadFile)NoSyncFile.__proto__=PreloadFile;NoSyncFile.prototype=Object.create(PreloadFile&&PreloadFile.prototype);NoSyncFile.prototype.constructor=NoSyncFile;/**\n\t     * Asynchronous sync. Doesn't do anything, simply calls the cb.\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */NoSyncFile.prototype.sync=function sync(cb){cb();};/**\n\t     * Synchronous sync. Doesn't do anything.\n\t     */NoSyncFile.prototype.syncSync=function syncSync(){// NOP.\n};/**\n\t     * Asynchronous close. Doesn't do anything, simply calls the cb.\n\t     * @param [Function(BrowserFS.ApiError)] cb\n\t     */NoSyncFile.prototype.close=function close(cb){cb();};/**\n\t     * Synchronous close. Doesn't do anything.\n\t     */NoSyncFile.prototype.closeSync=function closeSync(){// NOP.\n};return NoSyncFile;}(PreloadFile);/**\n\t * We define our own file to interpose on syncSync() for mirroring purposes.\n\t */var MirrorFile=function(PreloadFile$$1){function MirrorFile(fs,path$$1,flag,stat,data){PreloadFile$$1.call(this,fs,path$$1,flag,stat,data);}if(PreloadFile$$1)MirrorFile.__proto__=PreloadFile$$1;MirrorFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);MirrorFile.prototype.constructor=MirrorFile;MirrorFile.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this);this.resetDirty();}};MirrorFile.prototype.closeSync=function closeSync(){this.syncSync();};return MirrorFile;}(PreloadFile);/**\n\t * AsyncMirrorFS mirrors a synchronous filesystem into an asynchronous filesystem\n\t * by:\n\t *\n\t * * Performing operations over the in-memory copy, while asynchronously pipelining them\n\t *   to the backing store.\n\t * * During application loading, the contents of the async file system can be reloaded into\n\t *   the synchronous store, if desired.\n\t *\n\t * The two stores will be kept in sync. The most common use-case is to pair a synchronous\n\t * in-memory filesystem with an asynchronous backing store.\n\t *\n\t * Example: Mirroring an IndexedDB file system to an in memory file system. Now, you can use\n\t * IndexedDB synchronously.\n\t *\n\t * ```javascript\n\t * BrowserFS.configure({\n\t *   fs: \"AsyncMirror\",\n\t *   options: {\n\t *     sync: { fs: \"InMemory\" },\n\t *     async: { fs: \"IndexedDB\" }\n\t *   }\n\t * }, function(e) {\n\t *   // BrowserFS is initialized and ready-to-use!\n\t * });\n\t * ```\n\t *\n\t * Or, alternatively:\n\t *\n\t * ```javascript\n\t * BrowserFS.FileSystem.IndexedDB.Create(function(e, idbfs) {\n\t *   BrowserFS.FileSystem.InMemory.Create(function(e, inMemory) {\n\t *     BrowserFS.FileSystem.AsyncMirror({\n\t *       sync: inMemory, async: idbfs\n\t *     }, function(e, mirrored) {\n\t *       BrowserFS.initialize(mirrored);\n\t *     });\n\t *   });\n\t * });\n\t * ```\n\t */var AsyncMirror=function(SynchronousFileSystem$$1){function AsyncMirror(sync,async,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);/**\n\t         * Queue of pending asynchronous operations.\n\t         */this._queue=[];this._queueRunning=false;this._isInitialized=false;this._initializeCallbacks=[];this._sync=sync;this._async=async;if(!sync.supportsSynch()){throw new Error(\"The first argument to AsyncMirror needs to be a synchronous file system.\");}deprecationMessage(deprecateMsg,AsyncMirror.Name,{sync:\"sync file system instance\",async:\"async file system instance\"});}if(SynchronousFileSystem$$1)AsyncMirror.__proto__=SynchronousFileSystem$$1;AsyncMirror.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);AsyncMirror.prototype.constructor=AsyncMirror;/**\n\t     * Constructs and initializes an AsyncMirror file system with the given options.\n\t     */AsyncMirror.Create=function Create(opts,cb){try{var fs=new AsyncMirror(opts.sync,opts.async,false);fs.initialize(function(e){if(e){cb(e);}else{cb(null,fs);}},false);}catch(e){cb(e);}};AsyncMirror.isAvailable=function isAvailable(){return true;};AsyncMirror.prototype.getName=function getName(){return AsyncMirror.Name;};AsyncMirror.prototype._syncSync=function _syncSync(fd){this._sync.writeFileSync(fd.getPath(),fd.getBuffer(),null,FileFlag.getFileFlag('w'),fd.getStats().mode);this.enqueueOp({apiMethod:'writeFile',arguments:[fd.getPath(),fd.getBuffer(),null,fd.getFlag(),fd.getStats().mode]});};/**\n\t     * Called once to load up files from async storage into sync storage.\n\t     */AsyncMirror.prototype.initialize=function initialize(userCb,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn(\"[AsyncMirror] AsyncMirror.initialize() is deprecated and will be removed in the next major version. Please use 'AsyncMirror.Create({ sync: (sync file system instance), async: (async file system instance)}, cb)' to create and initialize AsyncMirror instances.\");}var callbacks=this._initializeCallbacks;var end=function end(e){this$1._isInitialized=!e;this$1._initializeCallbacks=[];callbacks.forEach(function(cb){return cb(e);});};if(!this._isInitialized){// First call triggers initialization, the rest wait.\nif(callbacks.push(userCb)===1){var copyDirectory=function copyDirectory(p,mode,cb){if(p!=='/'){this$1._sync.mkdirSync(p,mode);}this$1._async.readdir(p,function(err,files){var i=0;// NOTE: This function must not be in a lexically nested statement,\n// such as an if or while statement. Safari refuses to run the\n// script since it is undefined behavior.\nfunction copyNextFile(err){if(err){cb(err);}else if(i<files.length){copyItem(path.join(p,files[i]),copyNextFile);i++;}else{cb();}}if(err){cb(err);}else{copyNextFile();}});},copyFile=function copyFile(p,mode,cb){this$1._async.readFile(p,null,FileFlag.getFileFlag('r'),function(err,data){if(err){cb(err);}else{try{this$1._sync.writeFileSync(p,data,null,FileFlag.getFileFlag('w'),mode);}catch(e){err=e;}finally{cb(err);}}});},copyItem=function copyItem(p,cb){this$1._async.stat(p,false,function(err,stats){if(err){cb(err);}else if(stats.isDirectory()){copyDirectory(p,stats.mode,cb);}else{copyFile(p,stats.mode,cb);}});};copyDirectory('/',0,end);}}else{userCb();}};AsyncMirror.prototype.isReadOnly=function isReadOnly(){return false;};AsyncMirror.prototype.supportsSynch=function supportsSynch(){return true;};AsyncMirror.prototype.supportsLinks=function supportsLinks(){return false;};AsyncMirror.prototype.supportsProps=function supportsProps(){return this._sync.supportsProps()&&this._async.supportsProps();};AsyncMirror.prototype.renameSync=function renameSync(oldPath,newPath){this.checkInitialized();this._sync.renameSync(oldPath,newPath);this.enqueueOp({apiMethod:'rename',arguments:[oldPath,newPath]});};AsyncMirror.prototype.statSync=function statSync(p,isLstat){this.checkInitialized();return this._sync.statSync(p,isLstat);};AsyncMirror.prototype.openSync=function openSync(p,flag,mode){this.checkInitialized();// Sanity check: Is this open/close permitted?\nvar fd=this._sync.openSync(p,flag,mode);fd.closeSync();return new MirrorFile(this,p,flag,this._sync.statSync(p,false),this._sync.readFileSync(p,null,FileFlag.getFileFlag('r')));};AsyncMirror.prototype.unlinkSync=function unlinkSync(p){this.checkInitialized();this._sync.unlinkSync(p);this.enqueueOp({apiMethod:'unlink',arguments:[p]});};AsyncMirror.prototype.rmdirSync=function rmdirSync(p){this.checkInitialized();this._sync.rmdirSync(p);this.enqueueOp({apiMethod:'rmdir',arguments:[p]});};AsyncMirror.prototype.mkdirSync=function mkdirSync(p,mode){this.checkInitialized();this._sync.mkdirSync(p,mode);this.enqueueOp({apiMethod:'mkdir',arguments:[p,mode]});};AsyncMirror.prototype.readdirSync=function readdirSync(p){this.checkInitialized();return this._sync.readdirSync(p);};AsyncMirror.prototype.existsSync=function existsSync(p){this.checkInitialized();return this._sync.existsSync(p);};AsyncMirror.prototype.chmodSync=function chmodSync(p,isLchmod,mode){this.checkInitialized();this._sync.chmodSync(p,isLchmod,mode);this.enqueueOp({apiMethod:'chmod',arguments:[p,isLchmod,mode]});};AsyncMirror.prototype.chownSync=function chownSync(p,isLchown,uid,gid){this.checkInitialized();this._sync.chownSync(p,isLchown,uid,gid);this.enqueueOp({apiMethod:'chown',arguments:[p,isLchown,uid,gid]});};AsyncMirror.prototype.utimesSync=function utimesSync(p,atime,mtime){this.checkInitialized();this._sync.utimesSync(p,atime,mtime);this.enqueueOp({apiMethod:'utimes',arguments:[p,atime,mtime]});};AsyncMirror.prototype.checkInitialized=function checkInitialized(){if(!this._isInitialized){throw new ApiError(ErrorCode.EPERM,\"AsyncMirrorFS is not initialized. Please initialize AsyncMirrorFS using its initialize() method before using it.\");}};AsyncMirror.prototype.enqueueOp=function enqueueOp(op){var this$1=this;this._queue.push(op);if(!this._queueRunning){this._queueRunning=true;var doNextOp=function doNextOp(err){if(err){console.error(\"WARNING: File system has desynchronized. Received following error: \"+err+\"\\n$\");}if(this$1._queue.length>0){var op=this$1._queue.shift(),args=op.arguments;args.push(doNextOp);this$1._async[op.apiMethod].apply(this$1._async,args);}else{this$1._queueRunning=false;}};doNextOp();}};return AsyncMirror;}(SynchronousFileSystem);AsyncMirror.Name=\"AsyncMirror\";AsyncMirror.Options={sync:{type:\"object\",description:\"The synchronous file system to mirror the asynchronous file system to.\"},async:{type:\"object\",description:\"The asynchronous file system to mirror.\"}};/**\n\t * A faster alternative to `Function#apply`, this function invokes `func`\n\t * with the `this` binding of `thisArg` and the arguments of `args`.\n\t *\n\t * @private\n\t * @param {Function} func The function to invoke.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {Array} args The arguments to invoke `func` with.\n\t * @returns {*} Returns the result of `func`.\n\t */function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}/* Built-in method references for those with the same name as other `lodash` methods. */var nativeMax=Math.max;/**\n\t * A specialized version of `baseRest` which transforms the rest array.\n\t *\n\t * @private\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @param {Function} transform The rest array transform.\n\t * @returns {Function} Returns the new function.\n\t */function overRest$1(func,start,transform){start=nativeMax(start===undefined?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}/**\n\t * This method returns the first argument it receives.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Util\n\t * @param {*} value Any value.\n\t * @returns {*} Returns `value`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t *\n\t * console.log(_.identity(object) === object);\n\t * // => true\n\t */function identity(value){return value;}// Lodash rest function without function.toString()\n// remappings\nfunction rest(func,start){return overRest$1(func,start,identity);}var initialParams=function initialParams(fn){return rest(function(args/*..., callback*/){var callback=args.pop();fn.call(this,args,callback);});};function applyEach$1(eachfn){return rest(function(fns,args){var go=initialParams(function(args,callback){var that=this;return eachfn(fns,function(fn,cb){fn.apply(that,args.concat(cb));},callback);});if(args.length){return go.apply(this,args);}else{return go;}});}/** Detect free variable `global` from Node.js. */var freeGlobal=_typeof(global)=='object'&&global&&global.Object===Object&&global;/** Detect free variable `self`. */var freeSelf=(typeof self===\"undefined\"?\"undefined\":_typeof(self))=='object'&&self&&self.Object===Object&&self;/** Used as a reference to the global object. */var root=freeGlobal||freeSelf||Function('return this')();/** Built-in value references. */var Symbol$1=root.Symbol;/** Used for built-in method references. */var objectProto=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty=objectProto.hasOwnProperty;/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */var nativeObjectToString=objectProto.toString;/** Built-in value references. */var symToStringTag$1=Symbol$1?Symbol$1.toStringTag:undefined;/**\n\t * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.\n\t */function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag$1),tag=value[symToStringTag$1];try{value[symToStringTag$1]=undefined;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag$1]=tag;}else{delete value[symToStringTag$1];}}return result;}/** Used for built-in method references. */var objectProto$1=Object.prototype;/**\n\t * Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */var nativeObjectToString$1=objectProto$1.toString;/**\n\t * Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.\n\t */function objectToString(value){return nativeObjectToString$1.call(value);}/** `Object#toString` result references. */var nullTag='[object Null]';var undefinedTag='[object Undefined]';/** Built-in value references. */var symToStringTag=Symbol$1?Symbol$1.toStringTag:undefined;/**\n\t * The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.\n\t */function baseGetTag(value){if(value==null){return value===undefined?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}/**\n\t * Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false\n\t */function isObject(value){var type=_typeof(value);return value!=null&&(type=='object'||type=='function');}/** `Object#toString` result references. */var asyncTag='[object AsyncFunction]';var funcTag='[object Function]';var genTag='[object GeneratorFunction]';var proxyTag='[object Proxy]';/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */function isFunction(value){if(!isObject(value)){return false;}// The use of `Object#toString` avoids issues with the `typeof` operator\n// in Safari 9 which returns 'object' for typed arrays and other constructors.\nvar tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER=9007199254740991;/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false\n\t */function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}/**\n\t * Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false\n\t */function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop={};/**\n\t * This method returns `undefined`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.3.0\n\t * @category Util\n\t * @example\n\t *\n\t * _.times(2, _.noop);\n\t * // => [undefined, undefined]\n\t */function noop(){// No operation performed.\n}function once(fn){return function(){if(fn===null){return;}var callFn=fn;fn=null;callFn.apply(this,arguments);};}var iteratorSymbol=typeof Symbol==='function'&&Symbol.iterator;var getIterator=function getIterator(coll){return iteratorSymbol&&coll[iteratorSymbol]&&coll[iteratorSymbol]();};/**\n\t * The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.\n\t */function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}/**\n\t * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false\n\t */function isObjectLike(value){return value!=null&&_typeof(value)=='object';}/** `Object#toString` result references. */var argsTag='[object Arguments]';/**\n\t * The base implementation of `_.isArguments`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t */function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}/** Used for built-in method references. */var objectProto$3=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty$2=objectProto$3.hasOwnProperty;/** Built-in value references. */var propertyIsEnumerable=objectProto$3.propertyIsEnumerable;/**\n\t * Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty$2.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false\n\t */var isArray=Array.isArray;/**\n\t * This method returns `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {boolean} Returns `false`.\n\t * @example\n\t *\n\t * _.times(2, _.stubFalse);\n\t * // => [false, false]\n\t */function stubFalse(){return false;}/** Detect free variable `exports`. */var freeExports=_typeof(exports)=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule=freeExports&&_typeof(module)=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports=freeModule&&freeModule.exports===freeExports;/** Built-in value references. */var Buffer$1=moduleExports?root.Buffer:undefined;/* Built-in method references for those with the same name as other `lodash` methods. */var nativeIsBuffer=Buffer$1?Buffer$1.isBuffer:undefined;/**\n\t * Checks if `value` is a buffer.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.3.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t * @example\n\t *\n\t * _.isBuffer(new Buffer(2));\n\t * // => true\n\t *\n\t * _.isBuffer(new Uint8Array(2));\n\t * // => false\n\t */var isBuffer=nativeIsBuffer||stubFalse;/** Used as references for various `Number` constants. */var MAX_SAFE_INTEGER$1=9007199254740991;/** Used to detect unsigned integer values. */var reIsUint=/^(?:0|[1-9]\\d*)$/;/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */function isIndex(value,length){length=length==null?MAX_SAFE_INTEGER$1:length;return!!length&&(typeof value=='number'||reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}/** `Object#toString` result references. */var argsTag$1='[object Arguments]';var arrayTag='[object Array]';var boolTag='[object Boolean]';var dateTag='[object Date]';var errorTag='[object Error]';var funcTag$1='[object Function]';var mapTag='[object Map]';var numberTag='[object Number]';var objectTag='[object Object]';var regexpTag='[object RegExp]';var setTag='[object Set]';var stringTag='[object String]';var weakMapTag='[object WeakMap]';var arrayBufferTag='[object ArrayBuffer]';var dataViewTag='[object DataView]';var float32Tag='[object Float32Array]';var float64Tag='[object Float64Array]';var int8Tag='[object Int8Array]';var int16Tag='[object Int16Array]';var int32Tag='[object Int32Array]';var uint8Tag='[object Uint8Array]';var uint8ClampedTag='[object Uint8ClampedArray]';var uint16Tag='[object Uint16Array]';var uint32Tag='[object Uint32Array]';/** Used to identify `toStringTag` values of typed arrays. */var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag$1]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag$1]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;/**\n\t * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t */function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}/**\n\t * The base implementation of `_.unary` without support for storing metadata.\n\t *\n\t * @private\n\t * @param {Function} func The function to cap arguments for.\n\t * @returns {Function} Returns the new capped function.\n\t */function baseUnary(func){return function(value){return func(value);};}/** Detect free variable `exports`. */var freeExports$1=_typeof(exports)=='object'&&exports&&!exports.nodeType&&exports;/** Detect free variable `module`. */var freeModule$1=freeExports$1&&_typeof(module)=='object'&&module&&!module.nodeType&&module;/** Detect the popular CommonJS extension `module.exports`. */var moduleExports$1=freeModule$1&&freeModule$1.exports===freeExports$1;/** Detect free variable `process` from Node.js. */var freeProcess=moduleExports$1&&freeGlobal.process;/** Used to access faster Node.js helpers. */var nodeUtil=function(){try{return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();/* Node.js helper references. */var nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;/**\n\t * Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false\n\t */var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;/** Used for built-in method references. */var objectProto$2=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty$1=objectProto$2.hasOwnProperty;/**\n\t * Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.\n\t */function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty$1.call(value,key))&&!(skipIndexes&&(// Safari 9 has enumerable `arguments.length` in strict mode.\nkey=='length'||// Node.js 0.10 has enumerable non-index properties on buffers.\nisBuff&&(key=='offset'||key=='parent')||// PhantomJS 2 has enumerable non-index properties on typed arrays.\nisType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||// Skip index properties.\nisIndex(key,length)))){result.push(key);}}return result;}/** Used for built-in method references. */var objectProto$5=Object.prototype;/**\n\t * Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t */function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto$5;return value===proto;}/**\n\t * Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.\n\t */function overArg(func,transform){return function(arg){return func(transform(arg));};}/* Built-in method references for those with the same name as other `lodash` methods. */var nativeKeys=overArg(Object.keys,Object);/** Used for built-in method references. */var objectProto$4=Object.prototype;/** Used to check objects for own properties. */var hasOwnProperty$3=objectProto$4.hasOwnProperty;/**\n\t * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty$3.call(object,key)&&key!='constructor'){result.push(key);}}return result;}/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}function createArrayIterator(coll){var i=-1;var len=coll.length;return function next(){return++i<len?{value:coll[i],key:i}:null;};}function createES2015Iterator(iterator){var i=-1;return function next(){var item=iterator.next();if(item.done){return null;}i++;return{value:item.value,key:i};};}function createObjectIterator(obj){var okeys=keys(obj);var i=-1;var len=okeys.length;return function next(){var key=okeys[++i];return i<len?{value:obj[key],key:key}:null;};}function iterator(coll){if(isArrayLike(coll)){return createArrayIterator(coll);}var iterator=getIterator(coll);return iterator?createES2015Iterator(iterator):createObjectIterator(coll);}function onlyOnce(fn){return function(){if(fn===null){throw new Error(\"Callback was already called.\");}var callFn=fn;fn=null;callFn.apply(this,arguments);};}function _eachOfLimit(limit){return function(obj,iteratee,callback){callback=once(callback||noop);if(limit<=0||!obj){return callback(null);}var nextElem=iterator(obj);var done=false;var running=0;function iterateeCallback(err,value){running-=1;if(err){done=true;callback(err);}else if(value===breakLoop||done&&running<=0){done=true;return callback(null);}else{replenish();}}function replenish(){while(running<limit&&!done){var elem=nextElem();if(elem===null){done=true;if(running<=0){callback(null);}return;}running+=1;iteratee(elem.value,elem.key,onlyOnce(iterateeCallback));}}replenish();};}/**\n\t * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n\t * time.\n\t *\n\t * @name eachOfLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.eachOf]{@link module:Collections.eachOf}\n\t * @alias forEachOfLimit\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A function to apply to each\n\t * item in `coll`. The `key` is the item's key, or index in the case of an\n\t * array. The iteratee is passed a `callback(err)` which must be called once it\n\t * has completed. If no error has occurred, the callback should be run without\n\t * arguments or with an explicit `null` argument. Invoked with\n\t * (item, key, callback).\n\t * @param {Function} [callback] - A callback which is called when all\n\t * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n\t */function eachOfLimit(coll,limit,iteratee,callback){_eachOfLimit(limit)(coll,iteratee,callback);}function doLimit(fn,limit){return function(iterable,iteratee,callback){return fn(iterable,limit,iteratee,callback);};}// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll,iteratee,callback){callback=once(callback||noop);var index=0,completed=0,length=coll.length;if(length===0){callback(null);}function iteratorCallback(err,value){if(err){callback(err);}else if(++completed===length||value===breakLoop){callback(null);}}for(;index<length;index++){iteratee(coll[index],index,onlyOnce(iteratorCallback));}}// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric=doLimit(eachOfLimit,Infinity);/**\n\t * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n\t * to the iteratee.\n\t *\n\t * @name eachOf\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias forEachOf\n\t * @category Collection\n\t * @see [async.each]{@link module:Collections.each}\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each\n\t * item in `coll`. The `key` is the item's key, or index in the case of an\n\t * array. The iteratee is passed a `callback(err)` which must be called once it\n\t * has completed. If no error has occurred, the callback should be run without\n\t * arguments or with an explicit `null` argument. Invoked with\n\t * (item, key, callback).\n\t * @param {Function} [callback] - A callback which is called when all\n\t * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n\t * @example\n\t *\n\t * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n\t * var configs = {};\n\t *\n\t * async.forEachOf(obj, function (value, key, callback) {\n\t *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n\t *         if (err) return callback(err);\n\t *         try {\n\t *             configs[key] = JSON.parse(data);\n\t *         } catch (e) {\n\t *             return callback(e);\n\t *         }\n\t *         callback();\n\t *     });\n\t * }, function (err) {\n\t *     if (err) console.error(err.message);\n\t *     // configs is now a map of JSON data\n\t *     doSomethingWith(configs);\n\t * });\n\t */var eachOf=function eachOf(coll,iteratee,callback){var eachOfImplementation=isArrayLike(coll)?eachOfArrayLike:eachOfGeneric;eachOfImplementation(coll,iteratee,callback);};function doParallel(fn){return function(obj,iteratee,callback){return fn(eachOf,obj,iteratee,callback);};}function _asyncMap(eachfn,arr,iteratee,callback){callback=callback||noop;arr=arr||[];var results=[];var counter=0;eachfn(arr,function(value,_,callback){var index=counter++;iteratee(value,function(err,v){results[index]=v;callback(err);});},function(err){callback(err,results);});}/**\n\t * Produces a new collection of values by mapping each value in `coll` through\n\t * the `iteratee` function. The `iteratee` is called with an item from `coll`\n\t * and a callback for when it has finished processing. Each of these callback\n\t * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n\t * `iteratee` passes an error to its callback, the main `callback` (for the\n\t * `map` function) is immediately called with the error.\n\t *\n\t * Note, that since this function applies the `iteratee` to each item in\n\t * parallel, there is no guarantee that the `iteratee` functions will complete\n\t * in order. However, the results array will be in the same order as the\n\t * original `coll`.\n\t *\n\t * If `map` is passed an Object, the results will be an Array.  The results\n\t * will roughly be in the order of the original Objects' keys (but this can\n\t * vary across JavaScript engines)\n\t *\n\t * @name map\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, transformed)` which must be called\n\t * once it has completed with an error (which can be `null`) and a\n\t * transformed item. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. Results is an Array of the\n\t * transformed items from the `coll`. Invoked with (err, results).\n\t * @example\n\t *\n\t * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n\t *     // results is now an array of stats for each file\n\t * });\n\t */var map=doParallel(_asyncMap);/**\n\t * Applies the provided arguments to each function in the array, calling\n\t * `callback` after all functions have completed. If you only provide the first\n\t * argument, `fns`, then it will return a function which lets you pass in the\n\t * arguments as if it were a single function call. If more arguments are\n\t * provided, `callback` is required while `args` is still optional.\n\t *\n\t * @name applyEach\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @category Control Flow\n\t * @param {Array|Iterable|Object} fns - A collection of asynchronous functions\n\t * to all call with the same arguments\n\t * @param {...*} [args] - any number of separate arguments to pass to the\n\t * function.\n\t * @param {Function} [callback] - the final argument should be the callback,\n\t * called when all functions have completed processing.\n\t * @returns {Function} - If only the first argument, `fns`, is provided, it will\n\t * return a function which lets you pass in the arguments as if it were a single\n\t * function call. The signature is `(..args, callback)`. If invoked with any\n\t * arguments, `callback` is required.\n\t * @example\n\t *\n\t * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n\t *\n\t * // partial application example:\n\t * async.each(\n\t *     buckets,\n\t *     async.applyEach([enableSearch, updateSchema]),\n\t *     callback\n\t * );\n\t */applyEach$1(map);function doParallelLimit(fn){return function(obj,limit,iteratee,callback){return fn(_eachOfLimit(limit),obj,iteratee,callback);};}/**\n\t * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n\t *\n\t * @name mapLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.map]{@link module:Collections.map}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, transformed)` which must be called\n\t * once it has completed with an error (which can be `null`) and a transformed\n\t * item. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. Results is an array of the\n\t * transformed items from the `coll`. Invoked with (err, results).\n\t */var mapLimit=doParallelLimit(_asyncMap);/**\n\t * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n\t *\n\t * @name mapSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.map]{@link module:Collections.map}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, transformed)` which must be called\n\t * once it has completed with an error (which can be `null`) and a\n\t * transformed item. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. Results is an array of the\n\t * transformed items from the `coll`. Invoked with (err, results).\n\t */var mapSeries=doLimit(mapLimit,1);/**\n\t * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n\t *\n\t * @name applyEachSeries\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n\t * @category Control Flow\n\t * @param {Array|Iterable|Object} fns - A collection of asynchronous functions to all\n\t * call with the same arguments\n\t * @param {...*} [args] - any number of separate arguments to pass to the\n\t * function.\n\t * @param {Function} [callback] - the final argument should be the callback,\n\t * called when all functions have completed processing.\n\t * @returns {Function} - If only the first argument is provided, it will return\n\t * a function which lets you pass in the arguments as if it were a single\n\t * function call.\n\t */applyEach$1(mapSeries);/**\n\t * Creates a continuation function with some arguments already applied.\n\t *\n\t * Useful as a shorthand when combined with other control flow functions. Any\n\t * arguments passed to the returned function are added to the arguments\n\t * originally passed to apply.\n\t *\n\t * @name apply\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @category Util\n\t * @param {Function} function - The function you want to eventually apply all\n\t * arguments to. Invokes with (arguments...).\n\t * @param {...*} arguments... - Any number of arguments to automatically apply\n\t * when the continuation is called.\n\t * @example\n\t *\n\t * // using apply\n\t * async.parallel([\n\t *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n\t *     async.apply(fs.writeFile, 'testfile2', 'test2')\n\t * ]);\n\t *\n\t *\n\t * // the same process without using apply\n\t * async.parallel([\n\t *     function(callback) {\n\t *         fs.writeFile('testfile1', 'test1', callback);\n\t *     },\n\t *     function(callback) {\n\t *         fs.writeFile('testfile2', 'test2', callback);\n\t *     }\n\t * ]);\n\t *\n\t * // It's possible to pass any number of additional arguments when calling the\n\t * // continuation:\n\t *\n\t * node> var fn = async.apply(sys.puts, 'one');\n\t * node> fn('two', 'three');\n\t * one\n\t * two\n\t * three\n\t */rest(function(fn,args){return rest(function(callArgs){return fn.apply(null,args.concat(callArgs));});});/**\n\t * A specialized version of `_.forEach` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns `array`.\n\t */function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}/**\n\t * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}/**\n\t * The base implementation of `baseForOwn` which iterates over `object`\n\t * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */var baseFor=createBaseFor();/**\n\t * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}/**\n\t * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t * support for iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @param {number} fromIndex The index to search from.\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return-1;}/**\n\t * The base implementation of `_.isNaN` without support for number objects.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t */function baseIsNaN(value){return value!==value;}/**\n\t * A specialized version of `_.indexOf` which performs strict equality\n\t * comparisons of values, i.e. `===`.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {*} value The value to search for.\n\t * @param {number} fromIndex The index to search from.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return-1;}/**\n\t * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {*} value The value to search for.\n\t * @param {number} fromIndex The index to search from.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}/**\n\t * Determines the best order for running the functions in `tasks`, based on\n\t * their requirements. Each function can optionally depend on other functions\n\t * being completed first, and each function is run as soon as its requirements\n\t * are satisfied.\n\t *\n\t * If any of the functions pass an error to their callback, the `auto` sequence\n\t * will stop. Further tasks will not execute (so any other functions depending\n\t * on it will not run), and the main `callback` is immediately called with the\n\t * error.\n\t *\n\t * Functions also receive an object containing the results of functions which\n\t * have completed so far as the first argument, if they have dependencies. If a\n\t * task function has no dependencies, it will only be passed a callback.\n\t *\n\t * @name auto\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @category Control Flow\n\t * @param {Object} tasks - An object. Each of its properties is either a\n\t * function or an array of requirements, with the function itself the last item\n\t * in the array. The object's key of a property serves as the name of the task\n\t * defined by that property, i.e. can be used when specifying requirements for\n\t * other tasks. The function receives one or two arguments:\n\t * * a `results` object, containing the results of the previously executed\n\t *   functions, only passed if the task has any dependencies,\n\t * * a `callback(err, result)` function, which must be called when finished,\n\t *   passing an `error` (which can be `null`) and the result of the function's\n\t *   execution.\n\t * @param {number} [concurrency=Infinity] - An optional `integer` for\n\t * determining the maximum number of tasks that can be run in parallel. By\n\t * default, as many as possible.\n\t * @param {Function} [callback] - An optional callback which is called when all\n\t * the tasks have been completed. It receives the `err` argument if any `tasks`\n\t * pass an error to their callback. Results are always returned; however, if an\n\t * error occurs, no further `tasks` will be performed, and the results object\n\t * will only contain partial results. Invoked with (err, results).\n\t * @returns undefined\n\t * @example\n\t *\n\t * async.auto({\n\t *     // this function will just be passed a callback\n\t *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n\t *     showData: ['readData', function(results, cb) {\n\t *         // results.readData is the file's contents\n\t *         // ...\n\t *     }]\n\t * }, callback);\n\t *\n\t * async.auto({\n\t *     get_data: function(callback) {\n\t *         console.log('in get_data');\n\t *         // async code to get some data\n\t *         callback(null, 'data', 'converted to array');\n\t *     },\n\t *     make_folder: function(callback) {\n\t *         console.log('in make_folder');\n\t *         // async code to create a directory to store a file in\n\t *         // this is run at the same time as getting the data\n\t *         callback(null, 'folder');\n\t *     },\n\t *     write_file: ['get_data', 'make_folder', function(results, callback) {\n\t *         console.log('in write_file', JSON.stringify(results));\n\t *         // once there is some data and the directory exists,\n\t *         // write the data to a file in the directory\n\t *         callback(null, 'filename');\n\t *     }],\n\t *     email_link: ['write_file', function(results, callback) {\n\t *         console.log('in email_link', JSON.stringify(results));\n\t *         // once the file is written let's email a link to it...\n\t *         // results.write_file contains the filename returned by write_file.\n\t *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n\t *     }]\n\t * }, function(err, results) {\n\t *     console.log('err = ', err);\n\t *     console.log('results = ', results);\n\t * });\n\t */ /**\n\t * A specialized version of `_.map` for arrays without support for iteratee\n\t * shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the new mapped array.\n\t */ /**\n\t * The base implementation of `_.slice` without an iteratee call guard.\n\t *\n\t * @private\n\t * @param {Array} array The array to slice.\n\t * @param {number} [start=0] The start position.\n\t * @param {number} [end=array.length] The end position.\n\t * @returns {Array} Returns the slice of `array`.\n\t */ /**\n\t * Converts an ASCII `string` to an array.\n\t *\n\t * @private\n\t * @param {string} string The string to convert.\n\t * @returns {Array} Returns the converted array.\n\t */ /** Used to compose unicode character classes. */ /** Used to compose unicode character classes. */var rsAstralRange$1=\"\\\\ud800-\\\\udfff\";var rsComboMarksRange$1=\"\\\\u0300-\\\\u036f\";var reComboHalfMarksRange$1=\"\\\\ufe20-\\\\ufe2f\";var rsComboSymbolsRange$1=\"\\\\u20d0-\\\\u20ff\";var rsComboRange$1=rsComboMarksRange$1+reComboHalfMarksRange$1+rsComboSymbolsRange$1;var rsVarRange$1=\"\\\\ufe0e\\\\ufe0f\";/** Used to compose unicode capture groups. */var rsAstral='['+rsAstralRange$1+']';var rsCombo='['+rsComboRange$1+']';var rsFitz=\"\\\\ud83c[\\\\udffb-\\\\udfff]\";var rsModifier='(?:'+rsCombo+'|'+rsFitz+')';var rsNonAstral='[^'+rsAstralRange$1+']';var rsRegional=\"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";var rsSurrPair=\"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";var rsZWJ$1=\"\\\\u200d\";/** Used to compose unicode regexes. */var reOptMod=rsModifier+'?';var rsOptVar='['+rsVarRange$1+']?';var rsOptJoin='(?:'+rsZWJ$1+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*';var rsSeq=rsOptVar+reOptMod+rsOptJoin;var rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';var hasSetImmediate=typeof setImmediate==='function'&&setImmediate;var hasNextTick=_typeof(process)==='object'&&typeof process.nextTick==='function';function fallback(fn){setTimeout(fn,0);}function wrap(defer){return rest(function(fn,args){defer(function(){fn.apply(null,args);});});}var _defer;if(hasSetImmediate){_defer=setImmediate;}else if(hasNextTick){_defer=process.nextTick;}else{_defer=fallback;}wrap(_defer);// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\n/**\n\t * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n\t *\n\t * @name eachOfSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.eachOf]{@link module:Collections.eachOf}\n\t * @alias forEachOfSeries\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`. The\n\t * `key` is the item's key, or index in the case of an array. The iteratee is\n\t * passed a `callback(err)` which must be called once it has completed. If no\n\t * error has occurred, the callback should be run without arguments or with an\n\t * explicit `null` argument. Invoked with (item, key, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. Invoked with (err).\n\t */var eachOfSeries=doLimit(eachOfLimit,1);/**\n\t * Reduces `coll` into a single value using an async `iteratee` to return each\n\t * successive step. `memo` is the initial state of the reduction. This function\n\t * only operates in series.\n\t *\n\t * For performance reasons, it may make sense to split a call to this function\n\t * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n\t * results. This function is for situations where each step in the reduction\n\t * needs to be async; if you can get the data before reducing it, then it's\n\t * probably a good idea to do so.\n\t *\n\t * @name reduce\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias inject\n\t * @alias foldl\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {*} memo - The initial state of the reduction.\n\t * @param {Function} iteratee - A function applied to each item in the\n\t * array to produce the next step in the reduction. The `iteratee` is passed a\n\t * `callback(err, reduction)` which accepts an optional error as its first\n\t * argument, and the state of the reduction as the second. If an error is\n\t * passed to the callback, the reduction is stopped and the main `callback` is\n\t * immediately called with the error. Invoked with (memo, item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Result is the reduced value. Invoked with\n\t * (err, result).\n\t * @example\n\t *\n\t * async.reduce([1,2,3], 0, function(memo, item, callback) {\n\t *     // pointless async:\n\t *     process.nextTick(function() {\n\t *         callback(null, memo + item)\n\t *     });\n\t * }, function(err, result) {\n\t *     // result is now equal to the last value of memo, which is 6\n\t * });\n\t */function reduce(coll,memo,iteratee,callback){callback=once(callback||noop);eachOfSeries(coll,function(x,i,callback){iteratee(memo,x,function(err,v){memo=v;callback(err);});},function(err){callback(err,memo);});}/**\n\t * Version of the compose function that is more natural to read. Each function\n\t * consumes the return value of the previous function. It is the equivalent of\n\t * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n\t *\n\t * Each function is executed with the `this` binding of the composed function.\n\t *\n\t * @name seq\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.compose]{@link module:ControlFlow.compose}\n\t * @category Control Flow\n\t * @param {...Function} functions - the asynchronous functions to compose\n\t * @returns {Function} a function that composes the `functions` in order\n\t * @example\n\t *\n\t * // Requires lodash (or underscore), express3 and dresende's orm2.\n\t * // Part of an app, that fetches cats of the logged user.\n\t * // This example uses `seq` function to avoid overnesting and error\n\t * // handling clutter.\n\t * app.get('/cats', function(request, response) {\n\t *     var User = request.models.User;\n\t *     async.seq(\n\t *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n\t *         function(user, fn) {\n\t *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n\t *         }\n\t *     )(req.session.user_id, function (err, cats) {\n\t *         if (err) {\n\t *             console.error(err);\n\t *             response.json({ status: 'error', message: err.message });\n\t *         } else {\n\t *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n\t *         }\n\t *     });\n\t * });\n\t */var seq=rest(function seq(functions){return rest(function(args){var that=this;var cb=args[args.length-1];if(typeof cb=='function'){args.pop();}else{cb=noop;}reduce(functions,args,function(newargs,fn,cb){fn.apply(that,newargs.concat(rest(function(err,nextargs){cb(err,nextargs);})));},function(err,results){cb.apply(that,[err].concat(results));});});});/**\n\t * Creates a function which is a composition of the passed asynchronous\n\t * functions. Each function consumes the return value of the function that\n\t * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n\t * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n\t *\n\t * Each function is executed with the `this` binding of the composed function.\n\t *\n\t * @name compose\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @category Control Flow\n\t * @param {...Function} functions - the asynchronous functions to compose\n\t * @returns {Function} an asynchronous function that is the composed\n\t * asynchronous `functions`\n\t * @example\n\t *\n\t * function add1(n, callback) {\n\t *     setTimeout(function () {\n\t *         callback(null, n + 1);\n\t *     }, 10);\n\t * }\n\t *\n\t * function mul3(n, callback) {\n\t *     setTimeout(function () {\n\t *         callback(null, n * 3);\n\t *     }, 10);\n\t * }\n\t *\n\t * var add1mul3 = async.compose(mul3, add1);\n\t * add1mul3(4, function (err, result) {\n\t *     // result now equals 15\n\t * });\n\t */rest(function(args){return seq.apply(null,args.reverse());});/**\n\t * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n\t * the concatenated list. The `iteratee`s are called in parallel, and the\n\t * results are concatenated as they return. There is no guarantee that the\n\t * results array will be returned in the original order of `coll` passed to the\n\t * `iteratee` function.\n\t *\n\t * @name concat\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, results)` which must be called once\n\t * it has completed with an error (which can be `null`) and an array of results.\n\t * Invoked with (item, callback).\n\t * @param {Function} [callback(err)] - A callback which is called after all the\n\t * `iteratee` functions have finished, or an error occurs. Results is an array\n\t * containing the concatenated results of the `iteratee` function. Invoked with\n\t * (err, results).\n\t * @example\n\t *\n\t * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n\t *     // files is now a list of filenames that exist in the 3 directories\n\t * });\n\t */ /**\n\t * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n\t *\n\t * @name concatSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.concat]{@link module:Collections.concat}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, results)` which must be called once\n\t * it has completed with an error (which can be `null`) and an array of results.\n\t * Invoked with (item, callback).\n\t * @param {Function} [callback(err)] - A callback which is called after all the\n\t * `iteratee` functions have finished, or an error occurs. Results is an array\n\t * containing the concatenated results of the `iteratee` function. Invoked with\n\t * (err, results).\n\t */ /**\n\t * Returns a function that when called, calls-back with the values provided.\n\t * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n\t * [`auto`]{@link module:ControlFlow.auto}.\n\t *\n\t * @name constant\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @category Util\n\t * @param {...*} arguments... - Any number of arguments to automatically invoke\n\t * callback with.\n\t * @returns {Function} Returns a function that when invoked, automatically\n\t * invokes the callback with the previous given arguments.\n\t * @example\n\t *\n\t * async.waterfall([\n\t *     async.constant(42),\n\t *     function (value, next) {\n\t *         // value === 42\n\t *     },\n\t *     //...\n\t * ], callback);\n\t *\n\t * async.waterfall([\n\t *     async.constant(filename, \"utf8\"),\n\t *     fs.readFile,\n\t *     function (fileData, next) {\n\t *         //...\n\t *     }\n\t *     //...\n\t * ], callback);\n\t *\n\t * async.auto({\n\t *     hostname: async.constant(\"https://server.net/\"),\n\t *     port: findFreePort,\n\t *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n\t *         startServer(options, cb);\n\t *     }],\n\t *     //...\n\t * }, callback);\n\t */rest(function(values){var args=[null].concat(values);return initialParams(function(ignoredArgs,callback){return callback.apply(this,args);});});/**\n\t * Returns the first value in `coll` that passes an async truth test. The\n\t * `iteratee` is applied in parallel, meaning the first iteratee to return\n\t * `true` will fire the detect `callback` with that result. That means the\n\t * result might not be the first item in the original `coll` (in terms of order)\n\t * that passes the test.\n\t\n\t * If order within the original `coll` is important, then look at\n\t * [`detectSeries`]{@link module:Collections.detectSeries}.\n\t *\n\t * @name detect\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias find\n\t * @category Collections\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, truthValue)` which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the `iteratee` functions have finished.\n\t * Result will be the first item in the array that passes the truth test\n\t * (iteratee) or the value `undefined` if none passed. Invoked with\n\t * (err, result).\n\t * @example\n\t *\n\t * async.detect(['file1','file2','file3'], function(filePath, callback) {\n\t *     fs.access(filePath, function(err) {\n\t *         callback(null, !err)\n\t *     });\n\t * }, function(err, result) {\n\t *     // result now equals the first file in the list that exists\n\t * });\n\t */ /**\n\t * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n\t * time.\n\t *\n\t * @name detectLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.detect]{@link module:Collections.detect}\n\t * @alias findLimit\n\t * @category Collections\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, truthValue)` which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the `iteratee` functions have finished.\n\t * Result will be the first item in the array that passes the truth test\n\t * (iteratee) or the value `undefined` if none passed. Invoked with\n\t * (err, result).\n\t */ /**\n\t * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n\t *\n\t * @name detectSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.detect]{@link module:Collections.detect}\n\t * @alias findSeries\n\t * @category Collections\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The iteratee is passed a `callback(err, truthValue)` which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the `iteratee` functions have finished.\n\t * Result will be the first item in the array that passes the truth test\n\t * (iteratee) or the value `undefined` if none passed. Invoked with\n\t * (err, result).\n\t */function consoleFunc(name){return rest(function(fn,args){fn.apply(null,args.concat(rest(function(err,args){if((typeof console===\"undefined\"?\"undefined\":_typeof(console))==='object'){if(err){if(console.error){console.error(err);}}else if(console[name]){arrayEach(args,function(x){console[name](x);});}}})));});}/**\n\t * Logs the result of an `async` function to the `console` using `console.dir`\n\t * to display the properties of the resulting object. Only works in Node.js or\n\t * in browsers that support `console.dir` and `console.error` (such as FF and\n\t * Chrome). If multiple arguments are returned from the async function,\n\t * `console.dir` is called on each argument in order.\n\t *\n\t * @name dir\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @category Util\n\t * @param {Function} function - The function you want to eventually apply all\n\t * arguments to.\n\t * @param {...*} arguments... - Any number of arguments to apply to the function.\n\t * @example\n\t *\n\t * // in a module\n\t * var hello = function(name, callback) {\n\t *     setTimeout(function() {\n\t *         callback(null, {hello: name});\n\t *     }, 1000);\n\t * };\n\t *\n\t * // in the node repl\n\t * node> async.dir(hello, 'world');\n\t * {hello: 'world'}\n\t */consoleFunc('dir');function _withoutIndex(iteratee){return function(value,index,callback){return iteratee(value,callback);};}/**\n\t * Applies the function `iteratee` to each item in `coll`, in parallel.\n\t * The `iteratee` is called with an item from the list, and a callback for when\n\t * it has finished. If the `iteratee` passes an error to its `callback`, the\n\t * main `callback` (for the `each` function) is immediately called with the\n\t * error.\n\t *\n\t * Note, that since this function applies `iteratee` to each item in parallel,\n\t * there is no guarantee that the iteratee functions will complete in order.\n\t *\n\t * @name each\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias forEach\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each item\n\t * in `coll`. The iteratee is passed a `callback(err)` which must be called once\n\t * it has completed. If no error has occurred, the `callback` should be run\n\t * without arguments or with an explicit `null` argument. The array index is not\n\t * passed to the iteratee. Invoked with (item, callback). If you need the index,\n\t * use `eachOf`.\n\t * @param {Function} [callback] - A callback which is called when all\n\t * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n\t * @example\n\t *\n\t * // assuming openFiles is an array of file names and saveFile is a function\n\t * // to save the modified contents of that file:\n\t *\n\t * async.each(openFiles, saveFile, function(err){\n\t *   // if any of the saves produced an error, err would equal that error\n\t * });\n\t *\n\t * // assuming openFiles is an array of file names\n\t * async.each(openFiles, function(file, callback) {\n\t *\n\t *     // Perform operation on file here.\n\t *     console.log('Processing file ' + file);\n\t *\n\t *     if( file.length > 32 ) {\n\t *       console.log('This file name is too long');\n\t *       callback('File name too long');\n\t *     } else {\n\t *       // Do work to process file here\n\t *       console.log('File processed');\n\t *       callback();\n\t *     }\n\t * }, function(err) {\n\t *     // if any of the file processing produced an error, err would equal that error\n\t *     if( err ) {\n\t *       // One of the iterations produced an error.\n\t *       // All processing will now stop.\n\t *       console.log('A file failed to process');\n\t *     } else {\n\t *       console.log('All files have been processed successfully');\n\t *     }\n\t * });\n\t */function eachLimit(coll,iteratee,callback){eachOf(coll,_withoutIndex(iteratee),callback);}/**\n\t * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n\t *\n\t * @name eachSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.each]{@link module:Collections.each}\n\t * @alias forEachSeries\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each\n\t * item in `coll`. The iteratee is passed a `callback(err)` which must be called\n\t * once it has completed. If no error has occurred, the `callback` should be run\n\t * without arguments or with an explicit `null` argument. The array index is\n\t * not passed to the iteratee. Invoked with (item, callback). If you need the\n\t * index, use `eachOfSeries`.\n\t * @param {Function} [callback] - A callback which is called when all\n\t * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n\t */ /**\n\t * Returns `true` if every element in `coll` satisfies an async test. If any\n\t * iteratee call returns `false`, the main `callback` is immediately called.\n\t *\n\t * @name every\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias all\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in the\n\t * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n\t * which must be called with a  boolean argument once it has completed. Invoked\n\t * with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Result will be either `true` or `false`\n\t * depending on the values of the async tests. Invoked with (err, result).\n\t * @example\n\t *\n\t * async.every(['file1','file2','file3'], function(filePath, callback) {\n\t *     fs.access(filePath, function(err) {\n\t *         callback(null, !err)\n\t *     });\n\t * }, function(err, result) {\n\t *     // if result is true then every file exists\n\t * });\n\t */ /**\n\t * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n\t *\n\t * @name everyLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.every]{@link module:Collections.every}\n\t * @alias allLimit\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A truth test to apply to each item in the\n\t * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n\t * which must be called with a  boolean argument once it has completed. Invoked\n\t * with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Result will be either `true` or `false`\n\t * depending on the values of the async tests. Invoked with (err, result).\n\t */ /**\n\t * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n\t *\n\t * @name everySeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.every]{@link module:Collections.every}\n\t * @alias allSeries\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in the\n\t * collection in parallel. The iteratee is passed a `callback(err, truthValue)`\n\t * which must be called with a  boolean argument once it has completed. Invoked\n\t * with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Result will be either `true` or `false`\n\t * depending on the values of the async tests. Invoked with (err, result).\n\t */ /**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new accessor function.\n\t */ /**\n\t * Returns a new array of all the values in `coll` which pass an async truth\n\t * test. This operation is performed in parallel, but the results array will be\n\t * in the same order as the original.\n\t *\n\t * @name filter\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias select\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results).\n\t * @example\n\t *\n\t * async.filter(['file1','file2','file3'], function(filePath, callback) {\n\t *     fs.access(filePath, function(err) {\n\t *         callback(null, !err)\n\t *     });\n\t * }, function(err, results) {\n\t *     // results now equals an array of the existing files\n\t * });\n\t */ /**\n\t * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n\t * time.\n\t *\n\t * @name filterLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.filter]{@link module:Collections.filter}\n\t * @alias selectLimit\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results).\n\t */ /**\n\t * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n\t *\n\t * @name filterSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.filter]{@link module:Collections.filter}\n\t * @alias selectSeries\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results)\n\t */ /**\n\t * Logs the result of an `async` function to the `console`. Only works in\n\t * Node.js or in browsers that support `console.log` and `console.error` (such\n\t * as FF and Chrome). If multiple arguments are returned from the async\n\t * function, `console.log` is called on each argument in order.\n\t *\n\t * @name log\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @category Util\n\t * @param {Function} function - The function you want to eventually apply all\n\t * arguments to.\n\t * @param {...*} arguments... - Any number of arguments to apply to the function.\n\t * @example\n\t *\n\t * // in a module\n\t * var hello = function(name, callback) {\n\t *     setTimeout(function() {\n\t *         callback(null, 'hello ' + name);\n\t *     }, 1000);\n\t * };\n\t *\n\t * // in the node repl\n\t * node> async.log(hello, 'world');\n\t * 'hello world'\n\t */consoleFunc('log');/**\n\t * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n\t *\n\t * Produces a new Object by mapping each value of `obj` through the `iteratee`\n\t * function. The `iteratee` is called each `value` and `key` from `obj` and a\n\t * callback for when it has finished processing. Each of these callbacks takes\n\t * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n\t * passes an error to its callback, the main `callback` (for the `mapValues`\n\t * function) is immediately called with the error.\n\t *\n\t * Note, the order of the keys in the result is not guaranteed.  The keys will\n\t * be roughly in the order they complete, (but this is very engine-specific)\n\t *\n\t * @name mapValues\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @category Collection\n\t * @param {Object} obj - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each value and key in\n\t * `coll`. The iteratee is passed a `callback(err, transformed)` which must be\n\t * called once it has completed with an error (which can be `null`) and a\n\t * transformed value. Invoked with (value, key, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. `result` is a new object consisting\n\t * of each key from `obj`, with each transformed value on the right-hand side.\n\t * Invoked with (err, result).\n\t * @example\n\t *\n\t * async.mapValues({\n\t *     f1: 'file1',\n\t *     f2: 'file2',\n\t *     f3: 'file3'\n\t * }, function (file, key, callback) {\n\t *   fs.stat(file, callback);\n\t * }, function(err, result) {\n\t *     // result is now a map of stats for each file, e.g.\n\t *     // {\n\t *     //     f1: [stats for file1],\n\t *     //     f2: [stats for file2],\n\t *     //     f3: [stats for file3]\n\t *     // }\n\t * });\n\t */ /**\n\t * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n\t *\n\t * @name mapValuesSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.mapValues]{@link module:Collections.mapValues}\n\t * @category Collection\n\t * @param {Object} obj - A collection to iterate over.\n\t * @param {Function} iteratee - A function to apply to each value in `obj`.\n\t * The iteratee is passed a `callback(err, transformed)` which must be called\n\t * once it has completed with an error (which can be `null`) and a\n\t * transformed value. Invoked with (value, key, callback).\n\t * @param {Function} [callback] - A callback which is called when all `iteratee`\n\t * functions have finished, or an error occurs. `result` is a new object consisting\n\t * of each key from `obj`, with each transformed value on the right-hand side.\n\t * Invoked with (err, result).\n\t */ /**\n\t * Calls `callback` on a later loop around the event loop. In Node.js this just\n\t * calls `setImmediate`.  In the browser it will use `setImmediate` if\n\t * available, otherwise `setTimeout(callback, 0)`, which means other higher\n\t * priority events may precede the execution of `callback`.\n\t *\n\t * This is used internally for browser-compatibility purposes.\n\t *\n\t * @name nextTick\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @alias setImmediate\n\t * @category Util\n\t * @param {Function} callback - The function to call on a later loop around\n\t * the event loop. Invoked with (args...).\n\t * @param {...*} args... - any number of additional arguments to pass to the\n\t * callback on the next tick.\n\t * @example\n\t *\n\t * var call_order = [];\n\t * async.nextTick(function() {\n\t *     call_order.push('two');\n\t *     // call_order now equals ['one','two']\n\t * });\n\t * call_order.push('one');\n\t *\n\t * async.setImmediate(function (a, b, c) {\n\t *     // a, b, and c equal 1, 2, and 3\n\t * }, 1, 2, 3);\n\t */var _defer$1;if(hasNextTick){_defer$1=process.nextTick;}else if(hasSetImmediate){_defer$1=setImmediate;}else{_defer$1=fallback;}wrap(_defer$1);/**\n\t * Calls `callback` on a later loop around the event loop. In Node.js this just\n\t * calls `setImmediate`.  In the browser it will use `setImmediate` if\n\t * available, otherwise `setTimeout(callback, 0)`, which means other higher\n\t * priority events may precede the execution of `callback`.\n\t *\n\t * This is used internally for browser-compatibility purposes.\n\t *\n\t * @name setImmediate\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @alias nextTick\n\t * @category Util\n\t * @param {Function} callback - The function to call on a later loop around\n\t * the event loop. Invoked with (args...).\n\t * @param {...*} args... - any number of additional arguments to pass to the\n\t * callback on the next tick.\n\t * @example\n\t *\n\t * var call_order = [];\n\t * async.nextTick(function() {\n\t *     call_order.push('two');\n\t *     // call_order now equals ['one','two']\n\t * });\n\t * call_order.push('one');\n\t *\n\t * async.setImmediate(function (a, b, c) {\n\t *     // a, b, and c equal 1, 2, and 3\n\t * }, 1, 2, 3);\n\t */ /**\n\t * A queue of tasks for the worker function to complete.\n\t * @typedef {Object} QueueObject\n\t * @memberOf module:ControlFlow\n\t * @property {Function} length - a function returning the number of items\n\t * waiting to be processed. Invoke with `queue.length()`.\n\t * @property {boolean} started - a boolean indicating whether or not any\n\t * items have been pushed and processed by the queue.\n\t * @property {Function} running - a function returning the number of items\n\t * currently being processed. Invoke with `queue.running()`.\n\t * @property {Function} workersList - a function returning the array of items\n\t * currently being processed. Invoke with `queue.workersList()`.\n\t * @property {Function} idle - a function returning false if there are items\n\t * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n\t * @property {number} concurrency - an integer for determining how many `worker`\n\t * functions should be run in parallel. This property can be changed after a\n\t * `queue` is created to alter the concurrency on-the-fly.\n\t * @property {Function} push - add a new task to the `queue`. Calls `callback`\n\t * once the `worker` has finished processing the task. Instead of a single task,\n\t * a `tasks` array can be submitted. The respective callback is used for every\n\t * task in the list. Invoke with `queue.push(task, [callback])`,\n\t * @property {Function} unshift - add a new task to the front of the `queue`.\n\t * Invoke with `queue.unshift(task, [callback])`.\n\t * @property {Function} saturated - a callback that is called when the number of\n\t * running workers hits the `concurrency` limit, and further tasks will be\n\t * queued.\n\t * @property {Function} unsaturated - a callback that is called when the number\n\t * of running workers is less than the `concurrency` & `buffer` limits, and\n\t * further tasks will not be queued.\n\t * @property {number} buffer - A minimum threshold buffer in order to say that\n\t * the `queue` is `unsaturated`.\n\t * @property {Function} empty - a callback that is called when the last item\n\t * from the `queue` is given to a `worker`.\n\t * @property {Function} drain - a callback that is called when the last item\n\t * from the `queue` has returned from the `worker`.\n\t * @property {Function} error - a callback that is called when a task errors.\n\t * Has the signature `function(error, task)`.\n\t * @property {boolean} paused - a boolean for determining whether the queue is\n\t * in a paused state.\n\t * @property {Function} pause - a function that pauses the processing of tasks\n\t * until `resume()` is called. Invoke with `queue.pause()`.\n\t * @property {Function} resume - a function that resumes the processing of\n\t * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n\t * @property {Function} kill - a function that removes the `drain` callback and\n\t * empties remaining tasks from the queue forcing it to go idle. Invoke with `queue.kill()`.\n\t */ /**\n\t * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n\t * `queue` are processed in parallel (up to the `concurrency` limit). If all\n\t * `worker`s are in progress, the task is queued until one becomes available.\n\t * Once a `worker` completes a `task`, that `task`'s callback is called.\n\t *\n\t * @name queue\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @category Control Flow\n\t * @param {Function} worker - An asynchronous function for processing a queued\n\t * task, which must call its `callback(err)` argument when finished, with an\n\t * optional `error` as an argument.  If you want to handle errors from an\n\t * individual task, pass a callback to `q.push()`. Invoked with\n\t * (task, callback).\n\t * @param {number} [concurrency=1] - An `integer` for determining how many\n\t * `worker` functions should be run in parallel.  If omitted, the concurrency\n\t * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n\t * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n\t * attached as certain properties to listen for specific events during the\n\t * lifecycle of the queue.\n\t * @example\n\t *\n\t * // create a queue object with concurrency 2\n\t * var q = async.queue(function(task, callback) {\n\t *     console.log('hello ' + task.name);\n\t *     callback();\n\t * }, 2);\n\t *\n\t * // assign a callback\n\t * q.drain = function() {\n\t *     console.log('all items have been processed');\n\t * };\n\t *\n\t * // add some items to the queue\n\t * q.push({name: 'foo'}, function(err) {\n\t *     console.log('finished processing foo');\n\t * });\n\t * q.push({name: 'bar'}, function (err) {\n\t *     console.log('finished processing bar');\n\t * });\n\t *\n\t * // add some items to the queue (batch-wise)\n\t * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n\t *     console.log('finished processing item');\n\t * });\n\t *\n\t * // add some items to the front of the queue\n\t * q.unshift({name: 'bar'}, function (err) {\n\t *     console.log('finished processing bar');\n\t * });\n\t */ /**\n\t * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n\t * completed in ascending priority order.\n\t *\n\t * @name priorityQueue\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.queue]{@link module:ControlFlow.queue}\n\t * @category Control Flow\n\t * @param {Function} worker - An asynchronous function for processing a queued\n\t * task, which must call its `callback(err)` argument when finished, with an\n\t * optional `error` as an argument.  If you want to handle errors from an\n\t * individual task, pass a callback to `q.push()`. Invoked with\n\t * (task, callback).\n\t * @param {number} concurrency - An `integer` for determining how many `worker`\n\t * functions should be run in parallel.  If omitted, the concurrency defaults to\n\t * `1`.  If the concurrency is `0`, an error is thrown.\n\t * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n\t * differences between `queue` and `priorityQueue` objects:\n\t * * `push(task, priority, [callback])` - `priority` should be a number. If an\n\t *   array of `tasks` is given, all tasks will be assigned the same priority.\n\t * * The `unshift` method was removed.\n\t */ /**\n\t * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n\t *\n\t * @name reject\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.filter]{@link module:Collections.filter}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results).\n\t * @example\n\t *\n\t * async.reject(['file1','file2','file3'], function(filePath, callback) {\n\t *     fs.access(filePath, function(err) {\n\t *         callback(null, !err)\n\t *     });\n\t * }, function(err, results) {\n\t *     // results now equals an array of missing files\n\t *     createFiles(results);\n\t * });\n\t */ /**\n\t * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n\t * time.\n\t *\n\t * @name rejectLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.reject]{@link module:Collections.reject}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results).\n\t */ /**\n\t * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n\t *\n\t * @name rejectSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.reject]{@link module:Collections.reject}\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n\t * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n\t * with a boolean argument once it has completed. Invoked with (item, callback).\n\t * @param {Function} [callback] - A callback which is called after all the\n\t * `iteratee` functions have finished. Invoked with (err, results).\n\t */ /**\n\t * Creates a function that returns `value`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 2.4.0\n\t * @category Util\n\t * @param {*} value The value to return from the new function.\n\t * @returns {Function} Returns the new constant function.\n\t * @example\n\t *\n\t * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t *\n\t * console.log(objects);\n\t * // => [{ 'a': 1 }, { 'a': 1 }]\n\t *\n\t * console.log(objects[0] === objects[1]);\n\t * // => true\n\t */ /**\n\t * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method wraps a task and makes it\n\t * retryable, rather than immediately calling it with retries.\n\t *\n\t * @name retryable\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.retry]{@link module:ControlFlow.retry}\n\t * @category Control Flow\n\t * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n\t * options, exactly the same as from `retry`\n\t * @param {Function} task - the asynchronous function to wrap\n\t * @returns {Functions} The wrapped function, which when invoked, will retry on\n\t * an error, based on the parameters specified in `opts`.\n\t * @example\n\t *\n\t * async.auto({\n\t *     dep1: async.retryable(3, getFromFlakyService),\n\t *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n\t *         maybeProcessData(results.dep1, cb);\n\t *     })]\n\t * }, callback);\n\t */ /**\n\t * Returns `true` if at least one element in the `coll` satisfies an async test.\n\t * If any iteratee call returns `true`, the main `callback` is immediately\n\t * called.\n\t *\n\t * @name some\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @alias any\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in the array\n\t * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n\t * be called with a boolean argument once it has completed. Invoked with\n\t * (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the iteratee functions have finished.\n\t * Result will be either `true` or `false` depending on the values of the async\n\t * tests. Invoked with (err, result).\n\t * @example\n\t *\n\t * async.some(['file1','file2','file3'], function(filePath, callback) {\n\t *     fs.access(filePath, function(err) {\n\t *         callback(null, !err)\n\t *     });\n\t * }, function(err, result) {\n\t *     // if result is true then at least one of the files exists\n\t * });\n\t */ /**\n\t * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n\t *\n\t * @name someLimit\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.some]{@link module:Collections.some}\n\t * @alias anyLimit\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {number} limit - The maximum number of async operations at a time.\n\t * @param {Function} iteratee - A truth test to apply to each item in the array\n\t * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n\t * be called with a boolean argument once it has completed. Invoked with\n\t * (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the iteratee functions have finished.\n\t * Result will be either `true` or `false` depending on the values of the async\n\t * tests. Invoked with (err, result).\n\t */ /**\n\t * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n\t *\n\t * @name someSeries\n\t * @static\n\t * @memberOf module:Collections\n\t * @method\n\t * @see [async.some]{@link module:Collections.some}\n\t * @alias anySeries\n\t * @category Collection\n\t * @param {Array|Iterable|Object} coll - A collection to iterate over.\n\t * @param {Function} iteratee - A truth test to apply to each item in the array\n\t * in parallel. The iteratee is passed a `callback(err, truthValue)` which must\n\t * be called with a boolean argument once it has completed. Invoked with\n\t * (item, callback).\n\t * @param {Function} [callback] - A callback which is called as soon as any\n\t * iteratee returns `true`, or after all the iteratee functions have finished.\n\t * Result will be either `true` or `false` depending on the values of the async\n\t * tests. Invoked with (err, result).\n\t */ /* Built-in method references for those with the same name as other `lodash` methods. */var nativeCeil=Math.ceil;var nativeMax$1=Math.max;/**\n\t * Calls the `iteratee` function `n` times, and accumulates results in the same\n\t * manner you would use with [map]{@link module:Collections.map}.\n\t *\n\t * @name times\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.map]{@link module:Collections.map}\n\t * @category Control Flow\n\t * @param {number} n - The number of times to run the function.\n\t * @param {Function} iteratee - The function to call `n` times. Invoked with the\n\t * iteration index and a callback (n, next).\n\t * @param {Function} callback - see {@link module:Collections.map}.\n\t * @example\n\t *\n\t * // Pretend this is some complicated async factory\n\t * var createUser = function(id, callback) {\n\t *     callback(null, {\n\t *         id: 'user' + id\n\t *     });\n\t * };\n\t *\n\t * // generate 5 users\n\t * async.times(5, function(n, next) {\n\t *     createUser(n, function(err, user) {\n\t *         next(err, user);\n\t *     });\n\t * }, function(err, users) {\n\t *     // we should now have 5 users\n\t * });\n\t */ /**\n\t * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n\t *\n\t * @name timesSeries\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @see [async.times]{@link module:ControlFlow.times}\n\t * @category Control Flow\n\t * @param {number} n - The number of times to run the function.\n\t * @param {Function} iteratee - The function to call `n` times. Invoked with the\n\t * iteration index and a callback (n, next).\n\t * @param {Function} callback - see {@link module:Collections.map}.\n\t */ /**\n\t * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n\t * unmemoized form. Handy for testing.\n\t *\n\t * @name unmemoize\n\t * @static\n\t * @memberOf module:Utils\n\t * @method\n\t * @see [async.memoize]{@link module:Utils.memoize}\n\t * @category Util\n\t * @param {Function} fn - the memoized function\n\t * @returns {Function} a function that calls the original unmemoized function\n\t */ /**\n\t * Runs the `tasks` array of functions in series, each passing their results to\n\t * the next in the array. However, if any of the `tasks` pass an error to their\n\t * own callback, the next function is not executed, and the main `callback` is\n\t * immediately called with the error.\n\t *\n\t * @name waterfall\n\t * @static\n\t * @memberOf module:ControlFlow\n\t * @method\n\t * @category Control Flow\n\t * @param {Array} tasks - An array of functions to run, each function is passed\n\t * a `callback(err, result1, result2, ...)` it must call on completion. The\n\t * first argument is an error (which can be `null`) and any further arguments\n\t * will be passed as arguments in order to the next task.\n\t * @param {Function} [callback] - An optional callback to run once all the\n\t * functions have completed. This will be passed the results of the last task's\n\t * callback. Invoked with (err, [results]).\n\t * @returns undefined\n\t * @example\n\t *\n\t * async.waterfall([\n\t *     function(callback) {\n\t *         callback(null, 'one', 'two');\n\t *     },\n\t *     function(arg1, arg2, callback) {\n\t *         // arg1 now equals 'one' and arg2 now equals 'two'\n\t *         callback(null, 'three');\n\t *     },\n\t *     function(arg1, callback) {\n\t *         // arg1 now equals 'three'\n\t *         callback(null, 'done');\n\t *     }\n\t * ], function (err, result) {\n\t *     // result now equals 'done'\n\t * });\n\t *\n\t * // Or, with named functions:\n\t * async.waterfall([\n\t *     myFirstFunction,\n\t *     mySecondFunction,\n\t *     myLastFunction,\n\t * ], function (err, result) {\n\t *     // result now equals 'done'\n\t * });\n\t * function myFirstFunction(callback) {\n\t *     callback(null, 'one', 'two');\n\t * }\n\t * function mySecondFunction(arg1, arg2, callback) {\n\t *     // arg1 now equals 'one' and arg2 now equals 'two'\n\t *     callback(null, 'three');\n\t * }\n\t * function myLastFunction(arg1, callback) {\n\t *     // arg1 now equals 'three'\n\t *     callback(null, 'done');\n\t * }\n\t */ /**\n\t * Async is a utility module which provides straight-forward, powerful functions\n\t * for working with asynchronous JavaScript. Although originally designed for\n\t * use with [Node.js](http://nodejs.org) and installable via\n\t * `npm install --save async`, it can also be used directly in the browser.\n\t * @module async\n\t */ /**\n\t * A collection of `async` functions for manipulating collections, such as\n\t * arrays and objects.\n\t * @module Collections\n\t */ /**\n\t * A collection of `async` functions for controlling the flow through a script.\n\t * @module ControlFlow\n\t */ /**\n\t  * A collection of `async` utility functions.\n\t  * @module Utils\n\t  */ /**\n\t * @hidden\n\t */var errorCodeLookup;/**\n\t * Lazily construct error code lookup, since DropboxJS might be loaded *after* BrowserFS (or not at all!)\n\t * @hidden\n\t */function constructErrorCodeLookup(){if(errorCodeLookup){return;}errorCodeLookup={};// This indicates a network transmission error on modern browsers. Internet Explorer might cause this code to be reported on some API server errors.\nerrorCodeLookup[Dropbox.ApiError.NETWORK_ERROR]=ErrorCode.EIO;// This happens when the contentHash parameter passed to a Dropbox.Client#readdir or Dropbox.Client#stat matches the most recent content, so the API call response is omitted, to save bandwidth.\n// errorCodeLookup[Dropbox.ApiError.NO_CONTENT];\n// The error property on {Dropbox.ApiError#response} should indicate which input parameter is invalid and why.\nerrorCodeLookup[Dropbox.ApiError.INVALID_PARAM]=ErrorCode.EINVAL;// The OAuth token used for the request will never become valid again, so the user should be re-authenticated.\nerrorCodeLookup[Dropbox.ApiError.INVALID_TOKEN]=ErrorCode.EPERM;// This indicates a bug in dropbox.js and should never occur under normal circumstances.\n// ^ Actually, that's false. This occurs when you try to move folders to themselves, or move a file over another file.\nerrorCodeLookup[Dropbox.ApiError.OAUTH_ERROR]=ErrorCode.EPERM;// This happens when trying to read from a non-existing file, readdir a non-existing directory, write a file into a non-existing directory, etc.\nerrorCodeLookup[Dropbox.ApiError.NOT_FOUND]=ErrorCode.ENOENT;// This indicates a bug in dropbox.js and should never occur under normal circumstances.\nerrorCodeLookup[Dropbox.ApiError.INVALID_METHOD]=ErrorCode.EINVAL;// This happens when a Dropbox.Client#readdir or Dropbox.Client#stat call would return more than a maximum amount of directory entries.\nerrorCodeLookup[Dropbox.ApiError.NOT_ACCEPTABLE]=ErrorCode.EINVAL;// This is used by some backend methods to indicate that the client needs to download server-side changes and perform conflict resolution. Under normal usage, errors with this code should never surface to the code using dropbox.js.\nerrorCodeLookup[Dropbox.ApiError.CONFLICT]=ErrorCode.EINVAL;// Status value indicating that the application is making too many requests.\nerrorCodeLookup[Dropbox.ApiError.RATE_LIMITED]=ErrorCode.EBUSY;// The request should be retried after some time.\nerrorCodeLookup[Dropbox.ApiError.SERVER_ERROR]=ErrorCode.EBUSY;// Status value indicating that the user's Dropbox is over its storage quota.\nerrorCodeLookup[Dropbox.ApiError.OVER_QUOTA]=ErrorCode.ENOSPC;}/**\n\t * @hidden\n\t */function isFileInfo(cache){return cache&&cache.stat.isFile;}/**\n\t * @hidden\n\t */function isDirInfo(cache){return cache&&cache.stat.isFolder;}/**\n\t * @hidden\n\t */function isArrayBuffer(ab){// Accept null / undefined, too.\nreturn ab===null||ab===undefined||_typeof(ab)==='object'&&typeof ab['byteLength']==='number';}/**\n\t * Wraps a Dropbox client and caches operations.\n\t * @hidden\n\t */var CachedDropboxClient=function CachedDropboxClient(client){this._cache={};this._client=client;};CachedDropboxClient.prototype.readdir=function readdir(p,cb){var this$1=this;var cacheInfo=this.getCachedDirInfo(p);this._wrap(function(interceptCb){if(cacheInfo!==null&&cacheInfo.contents){this$1._client.readdir(p,{contentHash:cacheInfo.stat.contentHash},interceptCb);}else{this$1._client.readdir(p,interceptCb);}},function(err,filenames,stat,folderEntries){if(err){if(err.status===Dropbox.ApiError.NO_CONTENT&&cacheInfo!==null){cb(null,cacheInfo.contents.slice(0));}else{cb(err);}}else{this$1.updateCachedDirInfo(p,stat,filenames.slice(0));folderEntries.forEach(function(entry){this$1.updateCachedInfo(path.join(p,entry.name),entry);});cb(null,filenames);}});};CachedDropboxClient.prototype.remove=function remove(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.remove(p,interceptCb);},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat);}cb(err);});};CachedDropboxClient.prototype.move=function move(src,dest,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.move(src,dest,interceptCb);},function(err,stat){if(!err){this$1.deleteCachedInfo(src);this$1.updateCachedInfo(dest,stat);}cb(err);});};CachedDropboxClient.prototype.stat=function stat(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.stat(p,interceptCb);},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat);}cb(err,stat);});};CachedDropboxClient.prototype.readFile=function readFile(p,cb){var this$1=this;var cacheInfo=this.getCachedFileInfo(p);if(cacheInfo!==null&&cacheInfo.contents!==null){// Try to use cached info; issue a stat to see if contents are up-to-date.\nthis.stat(p,function(error,stat){if(error){cb(error);}else if(stat.contentHash===cacheInfo.stat.contentHash){// No file changes.\ncb(error,cacheInfo.contents.slice(0),cacheInfo.stat);}else{// File changes; rerun to trigger actual readFile.\nthis$1.readFile(p,cb);}});}else{this._wrap(function(interceptCb){this$1._client.readFile(p,{arrayBuffer:true},interceptCb);},function(err,contents,stat){if(!err){this$1.updateCachedInfo(p,stat,contents.slice(0));}cb(err,contents,stat);});}};CachedDropboxClient.prototype.writeFile=function writeFile(p,contents,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.writeFile(p,contents,interceptCb);},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat,contents.slice(0));}cb(err,stat);});};CachedDropboxClient.prototype.mkdir=function mkdir(p,cb){var this$1=this;this._wrap(function(interceptCb){this$1._client.mkdir(p,interceptCb);},function(err,stat){if(!err){this$1.updateCachedInfo(p,stat,[]);}cb(err);});};/**\n\t * Wraps an operation such that we retry a failed operation 3 times.\n\t * Necessary to deal with Dropbox rate limiting.\n\t *\n\t * @param performOp Function that performs the operation. Will be called up to three times.\n\t * @param cb Called when the operation succeeds, fails in a non-temporary manner, or fails three times.\n\t */CachedDropboxClient.prototype._wrap=function _wrap(performOp,cb){var numRun=0;var interceptCb=function interceptCb(error){// Timeout duration, in seconds.\nvar timeoutDuration=2;if(error&&3>++numRun){switch(error.status){case Dropbox.ApiError.SERVER_ERROR:case Dropbox.ApiError.NETWORK_ERROR:case Dropbox.ApiError.RATE_LIMITED:setTimeout(function(){performOp(interceptCb);},timeoutDuration*1000);break;default:cb.apply(null,arguments);break;}}else{cb.apply(null,arguments);}};performOp(interceptCb);};CachedDropboxClient.prototype.getCachedInfo=function getCachedInfo(p){return this._cache[p.toLowerCase()];};CachedDropboxClient.prototype.putCachedInfo=function putCachedInfo(p,cache){this._cache[p.toLowerCase()]=cache;};CachedDropboxClient.prototype.deleteCachedInfo=function deleteCachedInfo(p){delete this._cache[p.toLowerCase()];};CachedDropboxClient.prototype.getCachedDirInfo=function getCachedDirInfo(p){var info=this.getCachedInfo(p);if(isDirInfo(info)){return info;}else{return null;}};CachedDropboxClient.prototype.getCachedFileInfo=function getCachedFileInfo(p){var info=this.getCachedInfo(p);if(isFileInfo(info)){return info;}else{return null;}};CachedDropboxClient.prototype.updateCachedDirInfo=function updateCachedDirInfo(p,stat,contents){if(contents===void 0)contents=null;var cachedInfo=this.getCachedInfo(p);// Dropbox uses the *contentHash* property for directories.\n// Ignore stat objects w/o a contentHash defined; those actually exist!!!\n// (Example: readdir returns an array of stat objs; stat objs for dirs in that context have no contentHash)\nif(stat.contentHash!==null&&(cachedInfo===undefined||cachedInfo.stat.contentHash!==stat.contentHash)){this.putCachedInfo(p,{stat:stat,contents:contents});}};CachedDropboxClient.prototype.updateCachedFileInfo=function updateCachedFileInfo(p,stat,contents){if(contents===void 0)contents=null;var cachedInfo=this.getCachedInfo(p);// Dropbox uses the *versionTag* property for files.\n// Ignore stat objects w/o a versionTag defined.\nif(stat.versionTag!==null&&(cachedInfo===undefined||cachedInfo.stat.versionTag!==stat.versionTag)){this.putCachedInfo(p,{stat:stat,contents:contents});}};CachedDropboxClient.prototype.updateCachedInfo=function updateCachedInfo(p,stat,contents){if(contents===void 0)contents=null;if(stat.isFile&&isArrayBuffer(contents)){this.updateCachedFileInfo(p,stat,contents);}else if(stat.isFolder&&Array.isArray(contents)){this.updateCachedDirInfo(p,stat,contents);}};var DropboxFile=function(PreloadFile$$1){function DropboxFile(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents);}if(PreloadFile$$1)DropboxFile.__proto__=PreloadFile$$1;DropboxFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);DropboxFile.prototype.constructor=DropboxFile;DropboxFile.prototype.sync=function sync(cb){var this$1=this;if(this.isDirty()){var buffer$$1=this.getBuffer(),arrayBuffer=buffer2ArrayBuffer(buffer$$1);this._fs._writeFileStrict(this.getPath(),arrayBuffer,function(e){if(!e){this$1.resetDirty();}cb(e);});}else{cb();}};DropboxFile.prototype.close=function close(cb){this.sync(cb);};return DropboxFile;}(PreloadFile);/**\n\t * A read/write file system backed by Dropbox cloud storage.\n\t *\n\t * Uses the Dropbox V1 API.\n\t *\n\t * NOTE: You must use the v0.10 version of the [Dropbox JavaScript SDK](https://www.npmjs.com/package/dropbox).\n\t */var DropboxFileSystem=function(BaseFileSystem$$1){function DropboxFileSystem(client,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);this._client=new CachedDropboxClient(client);deprecationMessage(deprecateMsg,DropboxFileSystem.Name,{client:\"authenticated dropbox client instance\"});constructErrorCodeLookup();}if(BaseFileSystem$$1)DropboxFileSystem.__proto__=BaseFileSystem$$1;DropboxFileSystem.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);DropboxFileSystem.prototype.constructor=DropboxFileSystem;/**\n\t     * Creates a new DropboxFileSystem instance with the given options.\n\t     * Must be given an *authenticated* DropboxJS client from the old v0.10 version of the Dropbox JS SDK.\n\t     */DropboxFileSystem.Create=function Create(opts,cb){cb(null,new DropboxFileSystem(opts.client,false));};DropboxFileSystem.isAvailable=function isAvailable(){// Checks if the Dropbox library is loaded.\nreturn typeof Dropbox!=='undefined';};DropboxFileSystem.prototype.getName=function getName(){return DropboxFileSystem.Name;};DropboxFileSystem.prototype.isReadOnly=function isReadOnly(){return false;};// Dropbox doesn't support symlinks, properties, or synchronous calls\nDropboxFileSystem.prototype.supportsSymlinks=function supportsSymlinks(){return false;};DropboxFileSystem.prototype.supportsProps=function supportsProps(){return false;};DropboxFileSystem.prototype.supportsSynch=function supportsSynch(){return false;};DropboxFileSystem.prototype.empty=function empty(mainCb){var this$1=this;this._client.readdir('/',function(error,files){if(error){mainCb(this$1.convert(error,'/'));}else{var deleteFile=function deleteFile(file,cb){var p=path.join('/',file);this$1._client.remove(p,function(err){cb(err?this$1.convert(err,p):null);});};var finished=function finished(err){if(err){mainCb(err);}else{mainCb();}};// XXX: <any> typing is to get around overly-restrictive ErrorCallback typing.\neachLimit(files,deleteFile,finished);}});};DropboxFileSystem.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;this._client.move(oldPath,newPath,function(error){if(error){// the move is permitted if newPath is a file.\n// Check if this is the case, and remove if so.\nthis$1._client.stat(newPath,function(error2,stat){if(error2||stat.isFolder){var missingPath=error.response.error.indexOf(oldPath)>-1?oldPath:newPath;cb(this$1.convert(error,missingPath));}else{// Delete file, repeat rename.\nthis$1._client.remove(newPath,function(error2){if(error2){cb(this$1.convert(error2,newPath));}else{this$1.rename(oldPath,newPath,cb);}});}});}else{cb();}});};DropboxFileSystem.prototype.stat=function stat(path$$1,isLstat,cb){var this$1=this;// Ignore lstat case -- Dropbox doesn't support symlinks\n// Stat the file\nthis._client.stat(path$$1,function(error,stat){if(error){cb(this$1.convert(error,path$$1));}else if(stat&&stat.isRemoved){// Dropbox keeps track of deleted files, so if a file has existed in the\n// past but doesn't any longer, you wont get an error\ncb(ApiError.FileError(ErrorCode.ENOENT,path$$1));}else{var stats=new Stats(this$1._statType(stat),stat.size);return cb(null,stats);}});};DropboxFileSystem.prototype.open=function open(path$$1,flags,mode,cb){var this$1=this;// Try and get the file's contents\nthis._client.readFile(path$$1,function(error,content,dbStat){if(error){// If the file's being opened for reading and doesn't exist, return an\n// error\nif(flags.isReadable()){cb(this$1.convert(error,path$$1));}else{switch(error.status){// If it's being opened for writing or appending, create it so that\n// it can be written to\ncase Dropbox.ApiError.NOT_FOUND:var ab=new ArrayBuffer(0);return this$1._writeFileStrict(path$$1,ab,function(error2,stat){if(error2){cb(error2);}else{var file=this$1._makeFile(path$$1,flags,stat,arrayBuffer2Buffer(ab));cb(null,file);}});default:return cb(this$1.convert(error,path$$1));}}}else{// No error\nvar buffer$$1;// Dropbox.js seems to set `content` to `null` rather than to an empty\n// buffer when reading an empty file. Not sure why this is.\nif(content===null){buffer$$1=emptyBuffer();}else{buffer$$1=arrayBuffer2Buffer(content);}var file=this$1._makeFile(path$$1,flags,dbStat,buffer$$1);return cb(null,file);}});};DropboxFileSystem.prototype._writeFileStrict=function _writeFileStrict(p,data,cb){var this$1=this;var parent=path.dirname(p);this.stat(parent,false,function(error,stat){if(error){cb(ApiError.FileError(ErrorCode.ENOENT,parent));}else{this$1._client.writeFile(p,data,function(error2,stat){if(error2){cb(this$1.convert(error2,p));}else{cb(null,stat);}});}});};/**\n\t     * Private\n\t     * Returns a BrowserFS object representing the type of a Dropbox.js stat object\n\t     */DropboxFileSystem.prototype._statType=function _statType(stat){return stat.isFile?FileType.FILE:FileType.DIRECTORY;};/**\n\t     * Private\n\t     * Returns a BrowserFS object representing a File, created from the data\n\t     * returned by calls to the Dropbox API.\n\t     */DropboxFileSystem.prototype._makeFile=function _makeFile(path$$1,flag,stat,buffer$$1){var type=this._statType(stat);var stats=new Stats(type,stat.size);return new DropboxFile(this,path$$1,flag,stats,buffer$$1);};/**\n\t     * Private\n\t     * Delete a file or directory from Dropbox\n\t     * isFile should reflect which call was made to remove the it (`unlink` or\n\t     * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n\t     * returned\n\t     */DropboxFileSystem.prototype._remove=function _remove(path$$1,cb,isFile){var this$1=this;this._client.stat(path$$1,function(error,stat){if(error){cb(this$1.convert(error,path$$1));}else{if(stat.isFile&&!isFile){cb(ApiError.FileError(ErrorCode.ENOTDIR,path$$1));}else if(!stat.isFile&&isFile){cb(ApiError.FileError(ErrorCode.EISDIR,path$$1));}else{this$1._client.remove(path$$1,function(error){if(error){cb(this$1.convert(error,path$$1));}else{cb(null);}});}}});};/**\n\t     * Delete a file\n\t     */DropboxFileSystem.prototype.unlink=function unlink(path$$1,cb){this._remove(path$$1,cb,true);};/**\n\t     * Delete a directory\n\t     */DropboxFileSystem.prototype.rmdir=function rmdir(path$$1,cb){this._remove(path$$1,cb,false);};/**\n\t     * Create a directory\n\t     */DropboxFileSystem.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;// Dropbox.js' client.mkdir() behaves like `mkdir -p`, i.e. it creates a\n// directory and all its ancestors if they don't exist.\n// Node's fs.mkdir() behaves like `mkdir`, i.e. it throws an error if an attempt\n// is made to create a directory without a parent.\n// To handle this inconsistency, a check for the existence of `path`'s parent\n// must be performed before it is created, and an error thrown if it does\n// not exist\nvar parent=path.dirname(p);this._client.stat(parent,function(error,stat){if(error){cb(this$1.convert(error,parent));}else{this$1._client.mkdir(p,function(error){if(error){cb(ApiError.FileError(ErrorCode.EEXIST,p));}else{cb(null);}});}});};/**\n\t     * Get the names of the files in a directory\n\t     */DropboxFileSystem.prototype.readdir=function readdir(path$$1,cb){var this$1=this;this._client.readdir(path$$1,function(error,files){if(error){return cb(this$1.convert(error));}else{return cb(null,files);}});};/**\n\t     * Converts a Dropbox-JS error into a BFS error.\n\t     */DropboxFileSystem.prototype.convert=function convert(err,path$$1){if(path$$1===void 0)path$$1=null;var errorCode=errorCodeLookup[err.status];if(errorCode===undefined){errorCode=ErrorCode.EIO;}if(!path$$1){return new ApiError(errorCode);}else{return ApiError.FileError(errorCode,path$$1);}};return DropboxFileSystem;}(BaseFileSystem);DropboxFileSystem.Name=\"Dropbox\";DropboxFileSystem.Options={client:{type:\"object\",description:\"An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\",validator:function validator(opt,cb){if(opt.isAuthenticated&&opt.isAuthenticated()){cb();}else{cb(new ApiError(ErrorCode.EINVAL,\"'client' option must be an authenticated Dropbox client from the v0.10 JS SDK.\"));}}}};/**\n\t * @hidden\n\t */function convertError(e,path$$1){if(path$$1===void 0)path$$1='';var errno=e.errno;var parent=e.node;var paths=[];while(parent){paths.unshift(parent.name);if(parent===parent.parent){break;}parent=parent.parent;}return new ApiError(errno,ErrorStrings[errno],paths.length>0?'/'+paths.join('/'):path$$1);}var EmscriptenFile=function(BaseFile$$1){function EmscriptenFile(_fs,_FS,_path,_stream){BaseFile$$1.call(this);this._fs=_fs;this._FS=_FS;this._path=_path;this._stream=_stream;}if(BaseFile$$1)EmscriptenFile.__proto__=BaseFile$$1;EmscriptenFile.prototype=Object.create(BaseFile$$1&&BaseFile$$1.prototype);EmscriptenFile.prototype.constructor=EmscriptenFile;EmscriptenFile.prototype.getPos=function getPos(){return undefined;};EmscriptenFile.prototype.close=function close(cb){var err=null;try{this.closeSync();}catch(e){err=e;}finally{cb(err);}};EmscriptenFile.prototype.closeSync=function closeSync(){try{this._FS.close(this._stream);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.stat=function stat(cb){try{cb(null,this.statSync());}catch(e){cb(e);}};EmscriptenFile.prototype.statSync=function statSync(){try{return this._fs.statSync(this._path,false);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.truncate=function truncate(len,cb){var err=null;try{this.truncateSync(len);}catch(e){err=e;}finally{cb(err);}};EmscriptenFile.prototype.truncateSync=function truncateSync(len){try{this._FS.ftruncate(this._stream.fd,len);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.write=function write(buffer$$1,offset,length,position,cb){try{cb(null,this.writeSync(buffer$$1,offset,length,position),buffer$$1);}catch(e){cb(e);}};EmscriptenFile.prototype.writeSync=function writeSync(buffer$$1,offset,length,position){try{var u8=buffer2Uint8array(buffer$$1);// Emscripten is particular about what position is set to.\nvar emPosition=position===null?undefined:position;return this._FS.write(this._stream,u8,offset,length,emPosition);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.read=function read(buffer$$1,offset,length,position,cb){try{cb(null,this.readSync(buffer$$1,offset,length,position),buffer$$1);}catch(e){cb(e);}};EmscriptenFile.prototype.readSync=function readSync(buffer$$1,offset,length,position){try{var u8=buffer2Uint8array(buffer$$1);// Emscripten is particular about what position is set to.\nvar emPosition=position===null?undefined:position;return this._FS.read(this._stream,u8,offset,length,emPosition);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.sync=function sync(cb){// NOP.\ncb();};EmscriptenFile.prototype.syncSync=function syncSync(){// NOP.\n};EmscriptenFile.prototype.chown=function chown(uid,gid,cb){var err=null;try{this.chownSync(uid,gid);}catch(e){err=e;}finally{cb(err);}};EmscriptenFile.prototype.chownSync=function chownSync(uid,gid){try{this._FS.fchown(this._stream.fd,uid,gid);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.chmod=function chmod(mode,cb){var err=null;try{this.chmodSync(mode);}catch(e){err=e;}finally{cb(err);}};EmscriptenFile.prototype.chmodSync=function chmodSync(mode){try{this._FS.fchmod(this._stream.fd,mode);}catch(e){throw convertError(e,this._path);}};EmscriptenFile.prototype.utimes=function utimes(atime,mtime,cb){var err=null;try{this.utimesSync(atime,mtime);}catch(e){err=e;}finally{cb(err);}};EmscriptenFile.prototype.utimesSync=function utimesSync(atime,mtime){this._fs.utimesSync(this._path,atime,mtime);};return EmscriptenFile;}(BaseFile);/**\n\t * Mounts an Emscripten file system into the BrowserFS file system.\n\t */var EmscriptenFileSystem=function(SynchronousFileSystem$$1){function EmscriptenFileSystem(_FS){SynchronousFileSystem$$1.call(this);this._FS=_FS;}if(SynchronousFileSystem$$1)EmscriptenFileSystem.__proto__=SynchronousFileSystem$$1;EmscriptenFileSystem.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);EmscriptenFileSystem.prototype.constructor=EmscriptenFileSystem;/**\n\t     * Create an EmscriptenFileSystem instance with the given options.\n\t     */EmscriptenFileSystem.Create=function Create(opts,cb){cb(null,new EmscriptenFileSystem(opts.FS));};EmscriptenFileSystem.isAvailable=function isAvailable(){return true;};EmscriptenFileSystem.prototype.getName=function getName(){return this._FS.DB_NAME();};EmscriptenFileSystem.prototype.isReadOnly=function isReadOnly(){return false;};EmscriptenFileSystem.prototype.supportsLinks=function supportsLinks(){return true;};EmscriptenFileSystem.prototype.supportsProps=function supportsProps(){return true;};EmscriptenFileSystem.prototype.supportsSynch=function supportsSynch(){return true;};EmscriptenFileSystem.prototype.renameSync=function renameSync(oldPath,newPath){try{this._FS.rename(oldPath,newPath);}catch(e){if(e.errno===ErrorCode.ENOENT){throw convertError(e,this.existsSync(oldPath)?newPath:oldPath);}else{throw convertError(e);}}};EmscriptenFileSystem.prototype.statSync=function statSync(p,isLstat){try{var stats=isLstat?this._FS.lstat(p):this._FS.stat(p);var itemType=this.modeToFileType(stats.mode);return new Stats(itemType,stats.size,stats.mode,stats.atime,stats.mtime,stats.ctime);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.openSync=function openSync(p,flag,mode){try{var stream=this._FS.open(p,flag.getFlagString(),mode);if(this._FS.isDir(stream.node.mode)){this._FS.close(stream);throw ApiError.EISDIR(p);}return new EmscriptenFile(this,this._FS,p,stream);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.unlinkSync=function unlinkSync(p){try{this._FS.unlink(p);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.rmdirSync=function rmdirSync(p){try{this._FS.rmdir(p);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.mkdirSync=function mkdirSync(p,mode){try{this._FS.mkdir(p,mode);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.readdirSync=function readdirSync(p){try{// Emscripten returns items for '.' and '..'. Node does not.\nreturn this._FS.readdir(p).filter(function(p){return p!=='.'&&p!=='..';});}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.truncateSync=function truncateSync(p,len){try{this._FS.truncate(p,len);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.readFileSync=function readFileSync(p,encoding,flag){try{var data=this._FS.readFile(p,{flags:flag.getFlagString()});var buff=uint8Array2Buffer(data);if(encoding){return buff.toString(encoding);}else{return buff;}}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.writeFileSync=function writeFileSync(p,data,encoding,flag,mode){try{if(encoding){data=Buffer.from(data,encoding);}var u8=buffer2Uint8array(data);this._FS.writeFile(p,u8,{flags:flag.getFlagString(),encoding:'binary'});this._FS.chmod(p,mode);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.chmodSync=function chmodSync(p,isLchmod,mode){try{isLchmod?this._FS.lchmod(p,mode):this._FS.chmod(p,mode);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.chownSync=function chownSync(p,isLchown,uid,gid){try{isLchown?this._FS.lchown(p,uid,gid):this._FS.chown(p,uid,gid);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){try{this._FS.symlink(srcpath,dstpath);}catch(e){throw convertError(e);}};EmscriptenFileSystem.prototype.readlinkSync=function readlinkSync(p){try{return this._FS.readlink(p);}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.utimesSync=function utimesSync(p,atime,mtime){try{this._FS.utime(p,atime.getTime(),mtime.getTime());}catch(e){throw convertError(e,p);}};EmscriptenFileSystem.prototype.modeToFileType=function modeToFileType(mode){if(this._FS.isDir(mode)){return FileType.DIRECTORY;}else if(this._FS.isFile(mode)){return FileType.FILE;}else if(this._FS.isLink(mode)){return FileType.SYMLINK;}else{throw ApiError.EPERM(\"Invalid mode: \"+mode);}};return EmscriptenFileSystem;}(SynchronousFileSystem);EmscriptenFileSystem.Name=\"EmscriptenFileSystem\";EmscriptenFileSystem.Options={FS:{type:\"object\",description:\"The Emscripten file system to use (the `FS` variable)\"}};/**\n\t * The FolderAdapter file system wraps a file system, and scopes all interactions to a subfolder of that file system.\n\t *\n\t * Example: Given a file system `foo` with folder `bar` and file `bar/baz`...\n\t *\n\t * ```javascript\n\t * BrowserFS.configure({\n\t *   fs: \"FolderAdapter\",\n\t *   options: {\n\t *     folder: \"bar\",\n\t *     wrapped: foo\n\t *   }\n\t * }, function(e) {\n\t *   var fs = BrowserFS.BFSRequire('fs');\n\t *   fs.readdirSync('/'); // ['baz']\n\t * });\n\t * ```\n\t */var FolderAdapter=function(BaseFileSystem$$1){function FolderAdapter(folder,wrapped){BaseFileSystem$$1.call(this);this._folder=folder;this._wrapped=wrapped;}if(BaseFileSystem$$1)FolderAdapter.__proto__=BaseFileSystem$$1;FolderAdapter.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);FolderAdapter.prototype.constructor=FolderAdapter;/**\n\t     * Creates a FolderAdapter instance with the given options.\n\t     */FolderAdapter.Create=function Create(opts,cb){cb(null,new FolderAdapter(opts.folder,opts.wrapped));};FolderAdapter.isAvailable=function isAvailable(){return true;};/**\n\t     * Initialize the file system. Ensures that the wrapped file system\n\t     * has the given folder.\n\t     */FolderAdapter.prototype.initialize=function initialize(cb){var this$1=this;this._wrapped.exists(this._folder,function(exists){if(exists){cb();}else if(this$1._wrapped.isReadOnly()){cb(ApiError.ENOENT(this$1._folder));}else{this$1._wrapped.mkdir(this$1._folder,0x1ff,cb);}});};FolderAdapter.prototype.getName=function getName(){return this._wrapped.getName();};FolderAdapter.prototype.isReadOnly=function isReadOnly(){return this._wrapped.isReadOnly();};FolderAdapter.prototype.supportsProps=function supportsProps(){return this._wrapped.supportsProps();};FolderAdapter.prototype.supportsSynch=function supportsSynch(){return this._wrapped.supportsSynch();};FolderAdapter.prototype.supportsLinks=function supportsLinks(){return false;};return FolderAdapter;}(BaseFileSystem);FolderAdapter.Name=\"FolderAdapter\";FolderAdapter.Options={folder:{type:\"string\",description:\"The folder to use as the root directory\"},wrapped:{type:\"object\",description:\"The file system to wrap\"}};/**\n\t * @hidden\n\t */function translateError(folder,e){if(e!==null&&_typeof(e)==='object'){var err=e;var p=err.path;if(p){p='/'+path.relative(folder,p);err.message=err.message.replace(err.path,p);err.path=p;}}return e;}/**\n\t * @hidden\n\t */function wrapCallback(folder,cb){if(typeof cb==='function'){return function(err){if(arguments.length>0){arguments[0]=translateError(folder,err);}cb.apply(null,arguments);};}else{return cb;}}/**\n\t * @hidden\n\t */function wrapFunction(name,wrapFirst,wrapSecond){if(name.slice(name.length-4)!=='Sync'){// Async function. Translate error in callback.\nreturn function(){if(arguments.length>0){if(wrapFirst){arguments[0]=path.join(this._folder,arguments[0]);}if(wrapSecond){arguments[1]=path.join(this._folder,arguments[1]);}arguments[arguments.length-1]=wrapCallback(this._folder,arguments[arguments.length-1]);}return this._wrapped[name].apply(this._wrapped,arguments);};}else{// Sync function. Translate error in catch.\nreturn function(){try{if(wrapFirst){arguments[0]=path.join(this._folder,arguments[0]);}if(wrapSecond){arguments[1]=path.join(this._folder,arguments[1]);}return this._wrapped[name].apply(this._wrapped,arguments);}catch(e){throw translateError(this._folder,e);}};}}// First argument is a path.\n['diskSpace','stat','statSync','open','openSync','unlink','unlinkSync','rmdir','rmdirSync','mkdir','mkdirSync','readdir','readdirSync','exists','existsSync','realpath','realpathSync','truncate','truncateSync','readFile','readFileSync','writeFile','writeFileSync','appendFile','appendFileSync','chmod','chmodSync','chown','chownSync','utimes','utimesSync','readlink','readlinkSync'].forEach(function(name){FolderAdapter.prototype[name]=wrapFunction(name,true,false);});// First and second arguments are paths.\n['rename','renameSync','link','linkSync','symlink','symlinkSync'].forEach(function(name){FolderAdapter.prototype[name]=wrapFunction(name,true,true);});/**\n\t * @hidden\n\t */var toExport;if(typeof window!=='undefined'){toExport=window;}else if(typeof self!=='undefined'){toExport=self;}else{toExport=global;}var global$1=toExport;/**\n\t * @hidden\n\t */function isDirectoryEntry(entry){return entry.isDirectory;}/**\n\t * @hidden\n\t */var _getFS=global$1.webkitRequestFileSystem||global$1.requestFileSystem||null;/**\n\t * @hidden\n\t */function _requestQuota(type,size,success,errorCallback){// We cast navigator and window to '<any>' because everything here is\n// nonstandard functionality, despite the fact that Chrome has the only\n// implementation of the HTML5FS and is likely driving the standardization\n// process. Thus, these objects defined off of navigator and window are not\n// present in the DefinitelyTyped TypeScript typings for FileSystem.\nif(typeof navigator['webkitPersistentStorage']!=='undefined'){switch(type){case global$1.PERSISTENT:navigator.webkitPersistentStorage.requestQuota(size,success,errorCallback);break;case global$1.TEMPORARY:navigator.webkitTemporaryStorage.requestQuota(size,success,errorCallback);break;default:errorCallback(new TypeError(\"Invalid storage type: \"+type));break;}}else{global$1.webkitStorageInfo.requestQuota(type,size,success,errorCallback);}}/**\n\t * @hidden\n\t */function _toArray(list){return Array.prototype.slice.call(list||[],0);}/**\n\t * Converts the given DOMError into an appropriate ApiError.\n\t * @url https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n\t * @hidden\n\t */function convertError$1(err,p,expectedDir){switch(err.name){/* The user agent failed to create a file or directory due to the existence of a file or\n\t            directory with the same path.  */case\"PathExistsError\":return ApiError.EEXIST(p);/* The operation failed because it would cause the application to exceed its storage quota.  */case'QuotaExceededError':return ApiError.FileError(ErrorCode.ENOSPC,p);/*  A required file or directory could not be found at the time an operation was processed.   */case'NotFoundError':return ApiError.ENOENT(p);/* This is a security error code to be used in situations not covered by any other error codes.\n\t            - A required file was unsafe for access within a Web application\n\t            - Too many calls are being made on filesystem resources */case'SecurityError':return ApiError.FileError(ErrorCode.EACCES,p);/* The modification requested was illegal. Examples of invalid modifications include moving a\n\t            directory into its own child, moving a file into its parent directory without changing its name,\n\t            or copying a directory to a path occupied by a file.  */case'InvalidModificationError':return ApiError.FileError(ErrorCode.EPERM,p);/* The user has attempted to look up a file or directory, but the Entry found is of the wrong type\n\t            [e.g. is a DirectoryEntry when the user requested a FileEntry].  */case'TypeMismatchError':return ApiError.FileError(expectedDir?ErrorCode.ENOTDIR:ErrorCode.EISDIR,p);/* A path or URL supplied to the API was malformed.  */case\"EncodingError\":/* An operation depended on state cached in an interface object, but that state that has changed\n\t            since it was read from disk.  */case\"InvalidStateError\":/* The user attempted to write to a file or directory which could not be modified due to the state\n\t            of the underlying filesystem.  */case\"NoModificationAllowedError\":default:return ApiError.FileError(ErrorCode.EINVAL,p);}}// A note about getFile and getDirectory options:\n// These methods are called at numerous places in this file, and are passed\n// some combination of these two options:\n//   - create: If true, the entry will be created if it doesn't exist.\n//             If false, an error will be thrown if it doesn't exist.\n//   - exclusive: If true, only create the entry if it doesn't already exist,\n//                and throw an error if it does.\nvar HTML5FSFile=function(PreloadFile$$1){function HTML5FSFile(fs,entry,path$$1,flag,stat,contents){PreloadFile$$1.call(this,fs,path$$1,flag,stat,contents);this._entry=entry;}if(PreloadFile$$1)HTML5FSFile.__proto__=PreloadFile$$1;HTML5FSFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);HTML5FSFile.prototype.constructor=HTML5FSFile;HTML5FSFile.prototype.sync=function sync(cb){var this$1=this;if(!this.isDirty()){return cb();}this._entry.createWriter(function(writer){var buffer$$1=this$1.getBuffer();var blob=new Blob([buffer2ArrayBuffer(buffer$$1)]);var length=blob.size;writer.onwriteend=function(err){writer.onwriteend=null;writer.onerror=null;writer.truncate(length);this$1.resetDirty();cb();};writer.onerror=function(err){cb(convertError$1(err,this$1.getPath(),false));};writer.write(blob);});};HTML5FSFile.prototype.close=function close(cb){this.sync(cb);};return HTML5FSFile;}(PreloadFile);/**\n\t * A read-write filesystem backed by the HTML5 FileSystem API.\n\t *\n\t * As the HTML5 FileSystem is only implemented in Blink, this interface is\n\t * only available in Chrome.\n\t */var HTML5FS=function(BaseFileSystem$$1){function HTML5FS(size,type,deprecateMsg){if(size===void 0)size=5;if(type===void 0)type=global$1.PERSISTENT;if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);// Convert MB to bytes.\nthis.size=1024*1024*size;this.type=type;deprecationMessage(deprecateMsg,HTML5FS.Name,{size:size,type:type});}if(BaseFileSystem$$1)HTML5FS.__proto__=BaseFileSystem$$1;HTML5FS.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);HTML5FS.prototype.constructor=HTML5FS;/**\n\t     * Creates an HTML5FS instance with the given options.\n\t     */HTML5FS.Create=function Create(opts,cb){var fs=new HTML5FS(opts.size,opts.type,false);fs.allocate(function(e){return e?cb(e):cb(null,fs);},false);};HTML5FS.isAvailable=function isAvailable(){return!!_getFS;};HTML5FS.prototype.getName=function getName(){return HTML5FS.Name;};HTML5FS.prototype.isReadOnly=function isReadOnly(){return false;};HTML5FS.prototype.supportsSymlinks=function supportsSymlinks(){return false;};HTML5FS.prototype.supportsProps=function supportsProps(){return false;};HTML5FS.prototype.supportsSynch=function supportsSynch(){return false;};/**\n\t     * **Deprecated. Please use Create() method instead to create and allocate an HTML5FS.**\n\t     *\n\t     * Requests a storage quota from the browser to back this FS.\n\t     * Must be called before file system can be used!\n\t     */HTML5FS.prototype.allocate=function allocate(cb,deprecateMsg){var this$1=this;if(cb===void 0)cb=function cb(){};if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn(\"[HTML5FS] HTML5FS.allocate() is deprecated and will be removed in the next major release. Please use 'HTML5FS.Create({type: \"+this.type+\", size: \"+this.size+\"}, cb)' to create and allocate HTML5FS instances.\");}var success=function success(fs){this$1.fs=fs;cb();};var error=function error(err){cb(convertError$1(err,\"/\",true));};if(this.type===global$1.PERSISTENT){_requestQuota(this.type,this.size,function(granted){_getFS(this$1.type,granted,success,error);},error);}else{_getFS(this.type,this.size,success,error);}};/**\n\t     * Deletes everything in the FS. Used for testing.\n\t     * Karma clears the storage after you quit it but not between runs of the test\n\t     * suite, and the tests expect an empty FS every time.\n\t     */HTML5FS.prototype.empty=function empty(mainCb){// Get a list of all entries in the root directory to delete them\nthis._readdir('/',function(err,entries){if(err){console.error('Failed to empty FS');mainCb(err);}else{// Called when every entry has been operated on\nvar finished=function finished(er){if(err){console.error(\"Failed to empty FS\");mainCb(err);}else{mainCb();}};// Removes files and recursively removes directories\nvar deleteEntry=function deleteEntry(entry,cb){var succ=function succ(){cb();};var error=function error(err){cb(convertError$1(err,entry.fullPath,!entry.isDirectory));};if(isDirectoryEntry(entry)){entry.removeRecursively(succ,error);}else{entry.remove(succ,error);}};// Loop through the entries and remove them, then call the callback\n// when they're all finished.\neachLimit(entries,deleteEntry,finished);}});};HTML5FS.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;var semaphore=2;var successCount=0;var root=this.fs.root;var currentPath=oldPath;var error=function error(err){if(--semaphore<=0){cb(convertError$1(err,currentPath,false));}};var success=function success(file){if(++successCount===2){return cb(new ApiError(ErrorCode.EINVAL,\"Something was identified as both a file and a directory. This should never happen.\"));}// SPECIAL CASE: If newPath === oldPath, and the path exists, then\n// this operation trivially succeeds.\nif(oldPath===newPath){return cb();}// Get the new parent directory.\ncurrentPath=path.dirname(newPath);root.getDirectory(currentPath,{},function(parentDir){currentPath=path.basename(newPath);file.moveTo(parentDir,currentPath,function(entry){cb();},function(err){// SPECIAL CASE: If oldPath is a directory, and newPath is a\n// file, rename should delete the file and perform the move.\nif(file.isDirectory){currentPath=newPath;// Unlink only works on files. Try to delete newPath.\nthis$1.unlink(newPath,function(e){if(e){// newPath is probably a directory.\nerror(err);}else{// Recur, now that newPath doesn't exist.\nthis$1.rename(oldPath,newPath,cb);}});}else{error(err);}});},error);};// We don't know if oldPath is a *file* or a *directory*, and there's no\n// way to stat items. So launch both requests, see which one succeeds.\nroot.getFile(oldPath,{},success,error);root.getDirectory(oldPath,{},success,error);};HTML5FS.prototype.stat=function stat(path$$1,isLstat,cb){var this$1=this;// Throw an error if the entry doesn't exist, because then there's nothing\n// to stat.\nvar opts={create:false};// Called when the path has been successfully loaded as a file.\nvar loadAsFile=function loadAsFile(entry){var fileFromEntry=function fileFromEntry(file){var stat=new Stats(FileType.FILE,file.size);cb(null,stat);};entry.file(fileFromEntry,failedToLoad);};// Called when the path has been successfully loaded as a directory.\nvar loadAsDir=function loadAsDir(dir$$1){// Directory entry size can't be determined from the HTML5 FS API, and is\n// implementation-dependant anyway, so a dummy value is used.\nvar size=4096;var stat=new Stats(FileType.DIRECTORY,size);cb(null,stat);};// Called when the path couldn't be opened as a directory or a file.\nvar failedToLoad=function failedToLoad(err){cb(convertError$1(err,path$$1,false/* Unknown / irrelevant */));};// Called when the path couldn't be opened as a file, but might still be a\n// directory.\nvar failedToLoadAsFile=function failedToLoadAsFile(){this$1.fs.root.getDirectory(path$$1,opts,loadAsDir,failedToLoad);};// No method currently exists to determine whether a path refers to a\n// directory or a file, so this implementation tries both and uses the first\n// one that succeeds.\nthis.fs.root.getFile(path$$1,opts,loadAsFile,failedToLoadAsFile);};HTML5FS.prototype.open=function open(p,flags,mode,cb){var this$1=this;// XXX: err is a DOMError\nvar error=function error(err){if(err.name==='InvalidModificationError'&&flags.isExclusive()){cb(ApiError.EEXIST(p));}else{cb(convertError$1(err,p,false));}};this.fs.root.getFile(p,{create:flags.pathNotExistsAction()===ActionType.CREATE_FILE,exclusive:flags.isExclusive()},function(entry){// Try to fetch corresponding file.\nentry.file(function(file){var reader=new FileReader();reader.onloadend=function(event){var bfsFile=this$1._makeFile(p,entry,flags,file,reader.result);cb(null,bfsFile);};reader.onerror=function(ev){error(reader.error);};reader.readAsArrayBuffer(file);},error);},error);};HTML5FS.prototype.unlink=function unlink(path$$1,cb){this._remove(path$$1,cb,true);};HTML5FS.prototype.rmdir=function rmdir(path$$1,cb){var this$1=this;// Check if directory is non-empty, first.\nthis.readdir(path$$1,function(e,files){if(e){cb(e);}else if(files.length>0){cb(ApiError.ENOTEMPTY(path$$1));}else{this$1._remove(path$$1,cb,false);}});};HTML5FS.prototype.mkdir=function mkdir(path$$1,mode,cb){// Create the directory, but throw an error if it already exists, as per\n// mkdir(1)\nvar opts={create:true,exclusive:true};var success=function success(dir$$1){cb();};var error=function error(err){cb(convertError$1(err,path$$1,true));};this.fs.root.getDirectory(path$$1,opts,success,error);};/**\n\t     * Map _readdir's list of `FileEntry`s to their names and return that.\n\t     */HTML5FS.prototype.readdir=function readdir(path$$1,cb){this._readdir(path$$1,function(e,entries){if(entries){var rv=[];for(var i=0,list=entries;i<list.length;i+=1){var entry=list[i];rv.push(entry.name);}cb(null,rv);}else{return cb(e);}});};/**\n\t     * Returns a BrowserFS object representing a File.\n\t     */HTML5FS.prototype._makeFile=function _makeFile(path$$1,entry,flag,stat,data){if(data===void 0)data=new ArrayBuffer(0);var stats=new Stats(FileType.FILE,stat.size);var buffer$$1=arrayBuffer2Buffer(data);return new HTML5FSFile(this,entry,path$$1,flag,stats,buffer$$1);};/**\n\t     * Returns an array of `FileEntry`s. Used internally by empty and readdir.\n\t     */HTML5FS.prototype._readdir=function _readdir(path$$1,cb){var error=function error(err){cb(convertError$1(err,path$$1,true));};// Grab the requested directory.\nthis.fs.root.getDirectory(path$$1,{create:false},function(dirEntry){var reader=dirEntry.createReader();var entries=[];// Call the reader.readEntries() until no more results are returned.\nvar readEntries=function readEntries(){reader.readEntries(function(results){if(results.length){entries=entries.concat(_toArray(results));readEntries();}else{cb(null,entries);}},error);};readEntries();},error);};/**\n\t     * Delete a file or directory from the file system\n\t     * isFile should reflect which call was made to remove the it (`unlink` or\n\t     * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n\t     * returned\n\t     */HTML5FS.prototype._remove=function _remove(path$$1,cb,isFile){var success=function success(entry){var succ=function succ(){cb();};var err=function err(_err){cb(convertError$1(_err,path$$1,!isFile));};entry.remove(succ,err);};var error=function error(err){cb(convertError$1(err,path$$1,!isFile));};// Deleting the entry, so don't create it\nvar opts={create:false};if(isFile){this.fs.root.getFile(path$$1,opts,success,error);}else{this.fs.root.getDirectory(path$$1,opts,success,error);}};return HTML5FS;}(BaseFileSystem);HTML5FS.Name=\"HTML5FS\";HTML5FS.Options={size:{type:\"number\",optional:true,description:\"Storage quota to request, in megabytes. Allocated value may be less. Defaults to 5.\"},type:{type:\"number\",optional:true,description:\"window.PERSISTENT or window.TEMPORARY. Defaults to PERSISTENT.\"}};/**\n\t * Generic inode definition that can easily be serialized.\n\t */var Inode=function Inode(id,size,mode,atime,mtime,ctime){this.id=id;this.size=size;this.mode=mode;this.atime=atime;this.mtime=mtime;this.ctime=ctime;};/**\n\t * Converts the buffer into an Inode.\n\t */Inode.fromBuffer=function fromBuffer(buffer$$1){if(buffer$$1===undefined){throw new Error(\"NO\");}return new Inode(buffer$$1.toString('ascii',30),buffer$$1.readUInt32LE(0),buffer$$1.readUInt16LE(4),buffer$$1.readDoubleLE(6),buffer$$1.readDoubleLE(14),buffer$$1.readDoubleLE(22));};/**\n\t * Handy function that converts the Inode to a Node Stats object.\n\t */Inode.prototype.toStats=function toStats(){return new Stats((this.mode&0xF000)===FileType.DIRECTORY?FileType.DIRECTORY:FileType.FILE,this.size,this.mode,new Date(this.atime),new Date(this.mtime),new Date(this.ctime));};/**\n\t * Get the size of this Inode, in bytes.\n\t */Inode.prototype.getSize=function getSize(){// ASSUMPTION: ID is ASCII (1 byte per char).\nreturn 30+this.id.length;};/**\n\t * Writes the inode into the start of the buffer.\n\t */Inode.prototype.toBuffer=function toBuffer(buff){if(buff===void 0)buff=Buffer.alloc(this.getSize());buff.writeUInt32LE(this.size,0);buff.writeUInt16LE(this.mode,4);buff.writeDoubleLE(this.atime,6);buff.writeDoubleLE(this.mtime,14);buff.writeDoubleLE(this.ctime,22);buff.write(this.id,30,this.id.length,'ascii');return buff;};/**\n\t * Updates the Inode using information from the stats object. Used by file\n\t * systems at sync time, e.g.:\n\t * - Program opens file and gets a File object.\n\t * - Program mutates file. File object is responsible for maintaining\n\t *   metadata changes locally -- typically in a Stats object.\n\t * - Program closes file. File object's metadata changes are synced with the\n\t *   file system.\n\t * @return True if any changes have occurred.\n\t */Inode.prototype.update=function update(stats){var hasChanged=false;if(this.size!==stats.size){this.size=stats.size;hasChanged=true;}if(this.mode!==stats.mode){this.mode=stats.mode;hasChanged=true;}var atimeMs=stats.atime.getTime();if(this.atime!==atimeMs){this.atime=atimeMs;hasChanged=true;}var mtimeMs=stats.mtime.getTime();if(this.mtime!==mtimeMs){this.mtime=mtimeMs;hasChanged=true;}var ctimeMs=stats.ctime.getTime();if(this.ctime!==ctimeMs){this.ctime=ctimeMs;hasChanged=true;}return hasChanged;};// XXX: Copied from Stats. Should reconcile these two into something more\n//  compact.\n/**\n\t * @return [Boolean] True if this item is a file.\n\t */Inode.prototype.isFile=function isFile(){return(this.mode&0xF000)===FileType.FILE;};/**\n\t * @return [Boolean] True if this item is a directory.\n\t */Inode.prototype.isDirectory=function isDirectory(){return(this.mode&0xF000)===FileType.DIRECTORY;};/**\n\t * @hidden\n\t */var ROOT_NODE_ID=\"/\";/**\n\t * @hidden\n\t */var emptyDirNode=null;/**\n\t * Returns an empty directory node.\n\t * @hidden\n\t */function getEmptyDirNode(){if(emptyDirNode){return emptyDirNode;}return emptyDirNode=Buffer.from(\"{}\");}/**\n\t * Generates a random ID.\n\t * @hidden\n\t */function GenerateRandomID(){// From http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\nreturn'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0;var v=c==='x'?r:r&0x3|0x8;return v.toString(16);});}/**\n\t * Helper function. Checks if 'e' is defined. If so, it triggers the callback\n\t * with 'e' and returns false. Otherwise, returns true.\n\t * @hidden\n\t */function noError(e,cb){if(e){cb(e);return false;}return true;}/**\n\t * Helper function. Checks if 'e' is defined. If so, it aborts the transaction,\n\t * triggers the callback with 'e', and returns false. Otherwise, returns true.\n\t * @hidden\n\t */function noErrorTx(e,tx,cb){if(e){tx.abort(function(){cb(e);});return false;}return true;}/**\n\t * A simple RW transaction for simple synchronous key-value stores.\n\t */var SimpleSyncRWTransaction=function SimpleSyncRWTransaction(store){this.store=store;/**\n\t     * Stores data in the keys we modify prior to modifying them.\n\t     * Allows us to roll back commits.\n\t     */this.originalData={};/**\n\t     * List of keys modified in this transaction, if any.\n\t     */this.modifiedKeys=[];};SimpleSyncRWTransaction.prototype.get=function get(key){var val=this.store.get(key);this.stashOldValue(key,val);return val;};SimpleSyncRWTransaction.prototype.put=function put(key,data,overwrite){this.markModified(key);return this.store.put(key,data,overwrite);};SimpleSyncRWTransaction.prototype.del=function del(key){this.markModified(key);this.store.del(key);};SimpleSyncRWTransaction.prototype.commit=function commit(){};SimpleSyncRWTransaction.prototype.abort=function abort(){var this$1=this;// Rollback old values.\nfor(var i=0,list=this$1.modifiedKeys;i<list.length;i+=1){var key=list[i];var value=this$1.originalData[key];if(!value){// Key didn't exist.\nthis$1.store.del(key);}else{// Key existed. Store old value.\nthis$1.store.put(key,value,true);}}};/**\n\t * Stashes given key value pair into `originalData` if it doesn't already\n\t * exist. Allows us to stash values the program is requesting anyway to\n\t * prevent needless `get` requests if the program modifies the data later\n\t * on during the transaction.\n\t */SimpleSyncRWTransaction.prototype.stashOldValue=function stashOldValue(key,value){// Keep only the earliest value in the transaction.\nif(!this.originalData.hasOwnProperty(key)){this.originalData[key]=value;}};/**\n\t * Marks the given key as modified, and stashes its value if it has not been\n\t * stashed already.\n\t */SimpleSyncRWTransaction.prototype.markModified=function markModified(key){if(this.modifiedKeys.indexOf(key)===-1){this.modifiedKeys.push(key);if(!this.originalData.hasOwnProperty(key)){this.originalData[key]=this.store.get(key);}}};var SyncKeyValueFile=function(PreloadFile$$1){function SyncKeyValueFile(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents);}if(PreloadFile$$1)SyncKeyValueFile.__proto__=PreloadFile$$1;SyncKeyValueFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);SyncKeyValueFile.prototype.constructor=SyncKeyValueFile;SyncKeyValueFile.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this.getPath(),this.getBuffer(),this.getStats());this.resetDirty();}};SyncKeyValueFile.prototype.closeSync=function closeSync(){this.syncSync();};return SyncKeyValueFile;}(PreloadFile);/**\n\t * A \"Synchronous key-value file system\". Stores data to/retrieves data from an\n\t * underlying key-value store.\n\t *\n\t * We use a unique ID for each node in the file system. The root node has a\n\t * fixed ID.\n\t * @todo Introduce Node ID caching.\n\t * @todo Check modes.\n\t */var SyncKeyValueFileSystem=function(SynchronousFileSystem$$1){function SyncKeyValueFileSystem(options){SynchronousFileSystem$$1.call(this);this.store=options.store;// INVARIANT: Ensure that the root exists.\nthis.makeRootDirectory();}if(SynchronousFileSystem$$1)SyncKeyValueFileSystem.__proto__=SynchronousFileSystem$$1;SyncKeyValueFileSystem.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);SyncKeyValueFileSystem.prototype.constructor=SyncKeyValueFileSystem;SyncKeyValueFileSystem.isAvailable=function isAvailable(){return true;};SyncKeyValueFileSystem.prototype.getName=function getName(){return this.store.name();};SyncKeyValueFileSystem.prototype.isReadOnly=function isReadOnly(){return false;};SyncKeyValueFileSystem.prototype.supportsSymlinks=function supportsSymlinks(){return false;};SyncKeyValueFileSystem.prototype.supportsProps=function supportsProps(){return false;};SyncKeyValueFileSystem.prototype.supportsSynch=function supportsSynch(){return true;};/**\n\t     * Delete all contents stored in the file system.\n\t     */SyncKeyValueFileSystem.prototype.empty=function empty(){this.store.clear();// INVARIANT: Root always exists.\nthis.makeRootDirectory();};SyncKeyValueFileSystem.prototype.renameSync=function renameSync(oldPath,newPath){var tx=this.store.beginTransaction('readwrite'),oldParent=path.dirname(oldPath),oldName=path.basename(oldPath),newParent=path.dirname(newPath),newName=path.basename(newPath),// Remove oldPath from parent's directory listing.\noldDirNode=this.findINode(tx,oldParent),oldDirList=this.getDirListing(tx,oldParent,oldDirNode);if(!oldDirList[oldName]){throw ApiError.ENOENT(oldPath);}var nodeId=oldDirList[oldName];delete oldDirList[oldName];// Invariant: Can't move a folder inside itself.\n// This funny little hack ensures that the check passes only if oldPath\n// is a subpath of newParent. We append '/' to avoid matching folders that\n// are a substring of the bottom-most folder in the path.\nif((newParent+'/').indexOf(oldPath+'/')===0){throw new ApiError(ErrorCode.EBUSY,oldParent);}// Add newPath to parent's directory listing.\nvar newDirNode,newDirList;if(newParent===oldParent){// Prevent us from re-grabbing the same directory listing, which still\n// contains oldName.\nnewDirNode=oldDirNode;newDirList=oldDirList;}else{newDirNode=this.findINode(tx,newParent);newDirList=this.getDirListing(tx,newParent,newDirNode);}if(newDirList[newName]){// If it's a file, delete it.\nvar newNameNode=this.getINode(tx,newPath,newDirList[newName]);if(newNameNode.isFile()){try{tx.del(newNameNode.id);tx.del(newDirList[newName]);}catch(e){tx.abort();throw e;}}else{// If it's a directory, throw a permissions error.\nthrow ApiError.EPERM(newPath);}}newDirList[newName]=nodeId;// Commit the two changed directory listings.\ntry{tx.put(oldDirNode.id,Buffer.from(JSON.stringify(oldDirList)),true);tx.put(newDirNode.id,Buffer.from(JSON.stringify(newDirList)),true);}catch(e){tx.abort();throw e;}tx.commit();};SyncKeyValueFileSystem.prototype.statSync=function statSync(p,isLstat){// Get the inode to the item, convert it into a Stats object.\nreturn this.findINode(this.store.beginTransaction('readonly'),p).toStats();};SyncKeyValueFileSystem.prototype.createFileSync=function createFileSync(p,flag,mode){var tx=this.store.beginTransaction('readwrite'),data=emptyBuffer(),newFile=this.commitNewFile(tx,p,FileType.FILE,mode,data);// Open the file.\nreturn new SyncKeyValueFile(this,p,flag,newFile.toStats(),data);};SyncKeyValueFileSystem.prototype.openFileSync=function openFileSync(p,flag){var tx=this.store.beginTransaction('readonly'),node=this.findINode(tx,p),data=tx.get(node.id);if(data===undefined){throw ApiError.ENOENT(p);}return new SyncKeyValueFile(this,p,flag,node.toStats(),data);};SyncKeyValueFileSystem.prototype.unlinkSync=function unlinkSync(p){this.removeEntry(p,false);};SyncKeyValueFileSystem.prototype.rmdirSync=function rmdirSync(p){// Check first if directory is empty.\nif(this.readdirSync(p).length>0){throw ApiError.ENOTEMPTY(p);}else{this.removeEntry(p,true);}};SyncKeyValueFileSystem.prototype.mkdirSync=function mkdirSync(p,mode){var tx=this.store.beginTransaction('readwrite'),data=Buffer.from('{}');this.commitNewFile(tx,p,FileType.DIRECTORY,mode,data);};SyncKeyValueFileSystem.prototype.readdirSync=function readdirSync(p){var tx=this.store.beginTransaction('readonly');return Object.keys(this.getDirListing(tx,p,this.findINode(tx,p)));};SyncKeyValueFileSystem.prototype._syncSync=function _syncSync(p,data,stats){// @todo Ensure mtime updates properly, and use that to determine if a data\n//       update is required.\nvar tx=this.store.beginTransaction('readwrite'),// We use the _findInode helper because we actually need the INode id.\nfileInodeId=this._findINode(tx,path.dirname(p),path.basename(p)),fileInode=this.getINode(tx,p,fileInodeId),inodeChanged=fileInode.update(stats);try{// Sync data.\ntx.put(fileInode.id,data,true);// Sync metadata.\nif(inodeChanged){tx.put(fileInodeId,fileInode.toBuffer(),true);}}catch(e){tx.abort();throw e;}tx.commit();};/**\n\t     * Checks if the root directory exists. Creates it if it doesn't.\n\t     */SyncKeyValueFileSystem.prototype.makeRootDirectory=function makeRootDirectory(){var tx=this.store.beginTransaction('readwrite');if(tx.get(ROOT_NODE_ID)===undefined){// Create new inode.\nvar currTime=new Date().getTime(),// Mode 0666\ndirInode=new Inode(GenerateRandomID(),4096,511|FileType.DIRECTORY,currTime,currTime,currTime);// If the root doesn't exist, the first random ID shouldn't exist,\n// either.\ntx.put(dirInode.id,getEmptyDirNode(),false);tx.put(ROOT_NODE_ID,dirInode.toBuffer(),false);tx.commit();}};/**\n\t     * Helper function for findINode.\n\t     * @param parent The parent directory of the file we are attempting to find.\n\t     * @param filename The filename of the inode we are attempting to find, minus\n\t     *   the parent.\n\t     * @return string The ID of the file's inode in the file system.\n\t     */SyncKeyValueFileSystem.prototype._findINode=function _findINode(tx,parent,filename){var this$1=this;var readDirectory=function readDirectory(inode){// Get the root's directory listing.\nvar dirList=this$1.getDirListing(tx,parent,inode);// Get the file's ID.\nif(dirList[filename]){return dirList[filename];}else{throw ApiError.ENOENT(path.resolve(parent,filename));}};if(parent==='/'){if(filename===''){// BASE CASE #1: Return the root's ID.\nreturn ROOT_NODE_ID;}else{// BASE CASE #2: Find the item in the root ndoe.\nreturn readDirectory(this.getINode(tx,parent,ROOT_NODE_ID));}}else{return readDirectory(this.getINode(tx,parent+path.sep+filename,this._findINode(tx,path.dirname(parent),path.basename(parent))));}};/**\n\t     * Finds the Inode of the given path.\n\t     * @param p The path to look up.\n\t     * @return The Inode of the path p.\n\t     * @todo memoize/cache\n\t     */SyncKeyValueFileSystem.prototype.findINode=function findINode(tx,p){return this.getINode(tx,p,this._findINode(tx,path.dirname(p),path.basename(p)));};/**\n\t     * Given the ID of a node, retrieves the corresponding Inode.\n\t     * @param tx The transaction to use.\n\t     * @param p The corresponding path to the file (used for error messages).\n\t     * @param id The ID to look up.\n\t     */SyncKeyValueFileSystem.prototype.getINode=function getINode(tx,p,id){var inode=tx.get(id);if(inode===undefined){throw ApiError.ENOENT(p);}return Inode.fromBuffer(inode);};/**\n\t     * Given the Inode of a directory, retrieves the corresponding directory\n\t     * listing.\n\t     */SyncKeyValueFileSystem.prototype.getDirListing=function getDirListing(tx,p,inode){if(!inode.isDirectory()){throw ApiError.ENOTDIR(p);}var data=tx.get(inode.id);if(data===undefined){throw ApiError.ENOENT(p);}return JSON.parse(data.toString());};/**\n\t     * Creates a new node under a random ID. Retries 5 times before giving up in\n\t     * the exceedingly unlikely chance that we try to reuse a random GUID.\n\t     * @return The GUID that the data was stored under.\n\t     */SyncKeyValueFileSystem.prototype.addNewNode=function addNewNode(tx,data){var retries=0;var currId;while(retries<5){try{currId=GenerateRandomID();tx.put(currId,data,false);return currId;}catch(e){// Ignore and reroll.\n}}throw new ApiError(ErrorCode.EIO,'Unable to commit data to key-value store.');};/**\n\t     * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n\t     * the given mode.\n\t     * Note: This will commit the transaction.\n\t     * @param p The path to the new file.\n\t     * @param type The type of the new file.\n\t     * @param mode The mode to create the new file with.\n\t     * @param data The data to store at the file's data node.\n\t     * @return The Inode for the new file.\n\t     */SyncKeyValueFileSystem.prototype.commitNewFile=function commitNewFile(tx,p,type,mode,data){var parentDir=path.dirname(p),fname=path.basename(p),parentNode=this.findINode(tx,parentDir),dirListing=this.getDirListing(tx,parentDir,parentNode),currTime=new Date().getTime();// Invariant: The root always exists.\n// If we don't check this prior to taking steps below, we will create a\n// file with name '' in root should p == '/'.\nif(p==='/'){throw ApiError.EEXIST(p);}// Check if file already exists.\nif(dirListing[fname]){throw ApiError.EEXIST(p);}var fileNode;try{// Commit data.\nvar dataId=this.addNewNode(tx,data);fileNode=new Inode(dataId,data.length,mode|type,currTime,currTime,currTime);// Commit file node.\nvar fileNodeId=this.addNewNode(tx,fileNode.toBuffer());// Update and commit parent directory listing.\ndirListing[fname]=fileNodeId;tx.put(parentNode.id,Buffer.from(JSON.stringify(dirListing)),true);}catch(e){tx.abort();throw e;}tx.commit();return fileNode;};/**\n\t     * Remove all traces of the given path from the file system.\n\t     * @param p The path to remove from the file system.\n\t     * @param isDir Does the path belong to a directory, or a file?\n\t     * @todo Update mtime.\n\t     */SyncKeyValueFileSystem.prototype.removeEntry=function removeEntry(p,isDir){var tx=this.store.beginTransaction('readwrite'),parent=path.dirname(p),parentNode=this.findINode(tx,parent),parentListing=this.getDirListing(tx,parent,parentNode),fileName=path.basename(p);if(!parentListing[fileName]){throw ApiError.ENOENT(p);}// Remove from directory listing of parent.\nvar fileNodeId=parentListing[fileName];delete parentListing[fileName];// Get file inode.\nvar fileNode=this.getINode(tx,p,fileNodeId);if(!isDir&&fileNode.isDirectory()){throw ApiError.EISDIR(p);}else if(isDir&&!fileNode.isDirectory()){throw ApiError.ENOTDIR(p);}try{// Delete data.\ntx.del(fileNode.id);// Delete node.\ntx.del(fileNodeId);// Update directory listing.\ntx.put(parentNode.id,Buffer.from(JSON.stringify(parentListing)),true);}catch(e){tx.abort();throw e;}// Success.\ntx.commit();};return SyncKeyValueFileSystem;}(SynchronousFileSystem);var AsyncKeyValueFile=function(PreloadFile$$1){function AsyncKeyValueFile(_fs,_path,_flag,_stat,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents);}if(PreloadFile$$1)AsyncKeyValueFile.__proto__=PreloadFile$$1;AsyncKeyValueFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);AsyncKeyValueFile.prototype.constructor=AsyncKeyValueFile;AsyncKeyValueFile.prototype.sync=function sync(cb){var this$1=this;if(this.isDirty()){this._fs._sync(this.getPath(),this.getBuffer(),this.getStats(),function(e){if(!e){this$1.resetDirty();}cb(e);});}else{cb();}};AsyncKeyValueFile.prototype.close=function close(cb){this.sync(cb);};return AsyncKeyValueFile;}(PreloadFile);/**\n\t * An \"Asynchronous key-value file system\". Stores data to/retrieves data from\n\t * an underlying asynchronous key-value store.\n\t */var AsyncKeyValueFileSystem=function(BaseFileSystem$$1){function AsyncKeyValueFileSystem(){BaseFileSystem$$1.apply(this,arguments);}if(BaseFileSystem$$1)AsyncKeyValueFileSystem.__proto__=BaseFileSystem$$1;AsyncKeyValueFileSystem.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);AsyncKeyValueFileSystem.prototype.constructor=AsyncKeyValueFileSystem;AsyncKeyValueFileSystem.isAvailable=function isAvailable(){return true;};/**\n\t     * Initializes the file system. Typically called by subclasses' async\n\t     * constructors.\n\t     */AsyncKeyValueFileSystem.prototype.init=function init(store,cb){this.store=store;// INVARIANT: Ensure that the root exists.\nthis.makeRootDirectory(cb);};AsyncKeyValueFileSystem.prototype.getName=function getName(){return this.store.name();};AsyncKeyValueFileSystem.prototype.isReadOnly=function isReadOnly(){return false;};AsyncKeyValueFileSystem.prototype.supportsSymlinks=function supportsSymlinks(){return false;};AsyncKeyValueFileSystem.prototype.supportsProps=function supportsProps(){return false;};AsyncKeyValueFileSystem.prototype.supportsSynch=function supportsSynch(){return false;};/**\n\t     * Delete all contents stored in the file system.\n\t     */AsyncKeyValueFileSystem.prototype.empty=function empty(cb){var this$1=this;this.store.clear(function(e){if(noError(e,cb)){// INVARIANT: Root always exists.\nthis$1.makeRootDirectory(cb);}});};AsyncKeyValueFileSystem.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;var tx=this.store.beginTransaction('readwrite');var oldParent=path.dirname(oldPath),oldName=path.basename(oldPath);var newParent=path.dirname(newPath),newName=path.basename(newPath);var inodes={};var lists={};var errorOccurred=false;// Invariant: Can't move a folder inside itself.\n// This funny little hack ensures that the check passes only if oldPath\n// is a subpath of newParent. We append '/' to avoid matching folders that\n// are a substring of the bottom-most folder in the path.\nif((newParent+'/').indexOf(oldPath+'/')===0){return cb(new ApiError(ErrorCode.EBUSY,oldParent));}/**\n\t         * Responsible for Phase 2 of the rename operation: Modifying and\n\t         * committing the directory listings. Called once we have successfully\n\t         * retrieved both the old and new parent's inodes and listings.\n\t         */var theOleSwitcharoo=function theOleSwitcharoo(){// Sanity check: Ensure both paths are present, and no error has occurred.\nif(errorOccurred||!lists.hasOwnProperty(oldParent)||!lists.hasOwnProperty(newParent)){return;}var oldParentList=lists[oldParent],oldParentINode=inodes[oldParent],newParentList=lists[newParent],newParentINode=inodes[newParent];// Delete file from old parent.\nif(!oldParentList[oldName]){cb(ApiError.ENOENT(oldPath));}else{var fileId=oldParentList[oldName];delete oldParentList[oldName];// Finishes off the renaming process by adding the file to the new\n// parent.\nvar completeRename=function completeRename(){newParentList[newName]=fileId;// Commit old parent's list.\ntx.put(oldParentINode.id,Buffer.from(JSON.stringify(oldParentList)),true,function(e){if(noErrorTx(e,tx,cb)){if(oldParent===newParent){// DONE!\ntx.commit(cb);}else{// Commit new parent's list.\ntx.put(newParentINode.id,Buffer.from(JSON.stringify(newParentList)),true,function(e){if(noErrorTx(e,tx,cb)){tx.commit(cb);}});}}});};if(newParentList[newName]){// 'newPath' already exists. Check if it's a file or a directory, and\n// act accordingly.\nthis$1.getINode(tx,newPath,newParentList[newName],function(e,inode){if(noErrorTx(e,tx,cb)){if(inode.isFile()){// Delete the file and continue.\ntx.del(inode.id,function(e){if(noErrorTx(e,tx,cb)){tx.del(newParentList[newName],function(e){if(noErrorTx(e,tx,cb)){completeRename();}});}});}else{// Can't overwrite a directory using rename.\ntx.abort(function(e){cb(ApiError.EPERM(newPath));});}}});}else{completeRename();}}};/**\n\t         * Grabs a path's inode and directory listing, and shoves it into the\n\t         * inodes and lists hashes.\n\t         */var processInodeAndListings=function processInodeAndListings(p){this$1.findINodeAndDirListing(tx,p,function(e,node,dirList){if(e){if(!errorOccurred){errorOccurred=true;tx.abort(function(){cb(e);});}// If error has occurred already, just stop here.\n}else{inodes[p]=node;lists[p]=dirList;theOleSwitcharoo();}});};processInodeAndListings(oldParent);if(oldParent!==newParent){processInodeAndListings(newParent);}};AsyncKeyValueFileSystem.prototype.stat=function stat(p,isLstat,cb){var tx=this.store.beginTransaction('readonly');this.findINode(tx,p,function(e,inode){if(noError(e,cb)){cb(null,inode.toStats());}});};AsyncKeyValueFileSystem.prototype.createFile=function createFile(p,flag,mode,cb){var this$1=this;var tx=this.store.beginTransaction('readwrite'),data=emptyBuffer();this.commitNewFile(tx,p,FileType.FILE,mode,data,function(e,newFile){if(noError(e,cb)){cb(null,new AsyncKeyValueFile(this$1,p,flag,newFile.toStats(),data));}});};AsyncKeyValueFileSystem.prototype.openFile=function openFile(p,flag,cb){var this$1=this;var tx=this.store.beginTransaction('readonly');// Step 1: Grab the file's inode.\nthis.findINode(tx,p,function(e,inode){if(noError(e,cb)){// Step 2: Grab the file's data.\ntx.get(inode.id,function(e,data){if(noError(e,cb)){if(data===undefined){cb(ApiError.ENOENT(p));}else{cb(null,new AsyncKeyValueFile(this$1,p,flag,inode.toStats(),data));}}});}});};AsyncKeyValueFileSystem.prototype.unlink=function unlink(p,cb){this.removeEntry(p,false,cb);};AsyncKeyValueFileSystem.prototype.rmdir=function rmdir(p,cb){var this$1=this;// Check first if directory is empty.\nthis.readdir(p,function(err,files){if(err){cb(err);}else if(files.length>0){cb(ApiError.ENOTEMPTY(p));}else{this$1.removeEntry(p,true,cb);}});};AsyncKeyValueFileSystem.prototype.mkdir=function mkdir(p,mode,cb){var tx=this.store.beginTransaction('readwrite'),data=Buffer.from('{}');this.commitNewFile(tx,p,FileType.DIRECTORY,mode,data,cb);};AsyncKeyValueFileSystem.prototype.readdir=function readdir(p,cb){var this$1=this;var tx=this.store.beginTransaction('readonly');this.findINode(tx,p,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,p,inode,function(e,dirListing){if(noError(e,cb)){cb(null,Object.keys(dirListing));}});}});};AsyncKeyValueFileSystem.prototype._sync=function _sync(p,data,stats,cb){var this$1=this;// @todo Ensure mtime updates properly, and use that to determine if a data\n//       update is required.\nvar tx=this.store.beginTransaction('readwrite');// Step 1: Get the file node's ID.\nthis._findINode(tx,path.dirname(p),path.basename(p),function(e,fileInodeId){if(noErrorTx(e,tx,cb)){// Step 2: Get the file inode.\nthis$1.getINode(tx,p,fileInodeId,function(e,fileInode){if(noErrorTx(e,tx,cb)){var inodeChanged=fileInode.update(stats);// Step 3: Sync the data.\ntx.put(fileInode.id,data,true,function(e){if(noErrorTx(e,tx,cb)){// Step 4: Sync the metadata (if it changed)!\nif(inodeChanged){tx.put(fileInodeId,fileInode.toBuffer(),true,function(e){if(noErrorTx(e,tx,cb)){tx.commit(cb);}});}else{// No need to sync metadata; return.\ntx.commit(cb);}}});}});}});};/**\n\t     * Checks if the root directory exists. Creates it if it doesn't.\n\t     */AsyncKeyValueFileSystem.prototype.makeRootDirectory=function makeRootDirectory(cb){var tx=this.store.beginTransaction('readwrite');tx.get(ROOT_NODE_ID,function(e,data){if(e||data===undefined){// Create new inode.\nvar currTime=new Date().getTime(),// Mode 0666\ndirInode=new Inode(GenerateRandomID(),4096,511|FileType.DIRECTORY,currTime,currTime,currTime);// If the root doesn't exist, the first random ID shouldn't exist,\n// either.\ntx.put(dirInode.id,getEmptyDirNode(),false,function(e){if(noErrorTx(e,tx,cb)){tx.put(ROOT_NODE_ID,dirInode.toBuffer(),false,function(e){if(e){tx.abort(function(){cb(e);});}else{tx.commit(cb);}});}});}else{// We're good.\ntx.commit(cb);}});};/**\n\t     * Helper function for findINode.\n\t     * @param parent The parent directory of the file we are attempting to find.\n\t     * @param filename The filename of the inode we are attempting to find, minus\n\t     *   the parent.\n\t     * @param cb Passed an error or the ID of the file's inode in the file system.\n\t     */AsyncKeyValueFileSystem.prototype._findINode=function _findINode(tx,parent,filename,cb){var this$1=this;var handleDirectoryListings=function handleDirectoryListings(e,inode,dirList){if(e){cb(e);}else if(dirList[filename]){cb(null,dirList[filename]);}else{cb(ApiError.ENOENT(path.resolve(parent,filename)));}};if(parent==='/'){if(filename===''){// BASE CASE #1: Return the root's ID.\ncb(null,ROOT_NODE_ID);}else{// BASE CASE #2: Find the item in the root node.\nthis.getINode(tx,parent,ROOT_NODE_ID,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,parent,inode,function(e,dirList){// handle_directory_listings will handle e for us.\nhandleDirectoryListings(e,inode,dirList);});}});}}else{// Get the parent directory's INode, and find the file in its directory\n// listing.\nthis.findINodeAndDirListing(tx,parent,handleDirectoryListings);}};/**\n\t     * Finds the Inode of the given path.\n\t     * @param p The path to look up.\n\t     * @param cb Passed an error or the Inode of the path p.\n\t     * @todo memoize/cache\n\t     */AsyncKeyValueFileSystem.prototype.findINode=function findINode(tx,p,cb){var this$1=this;this._findINode(tx,path.dirname(p),path.basename(p),function(e,id){if(noError(e,cb)){this$1.getINode(tx,p,id,cb);}});};/**\n\t     * Given the ID of a node, retrieves the corresponding Inode.\n\t     * @param tx The transaction to use.\n\t     * @param p The corresponding path to the file (used for error messages).\n\t     * @param id The ID to look up.\n\t     * @param cb Passed an error or the inode under the given id.\n\t     */AsyncKeyValueFileSystem.prototype.getINode=function getINode(tx,p,id,cb){tx.get(id,function(e,data){if(noError(e,cb)){if(data===undefined){cb(ApiError.ENOENT(p));}else{cb(null,Inode.fromBuffer(data));}}});};/**\n\t     * Given the Inode of a directory, retrieves the corresponding directory\n\t     * listing.\n\t     */AsyncKeyValueFileSystem.prototype.getDirListing=function getDirListing(tx,p,inode,cb){if(!inode.isDirectory()){cb(ApiError.ENOTDIR(p));}else{tx.get(inode.id,function(e,data){if(noError(e,cb)){try{cb(null,JSON.parse(data.toString()));}catch(e){// Occurs when data is undefined, or corresponds to something other\n// than a directory listing. The latter should never occur unless\n// the file system is corrupted.\ncb(ApiError.ENOENT(p));}}});}};/**\n\t     * Given a path to a directory, retrieves the corresponding INode and\n\t     * directory listing.\n\t     */AsyncKeyValueFileSystem.prototype.findINodeAndDirListing=function findINodeAndDirListing(tx,p,cb){var this$1=this;this.findINode(tx,p,function(e,inode){if(noError(e,cb)){this$1.getDirListing(tx,p,inode,function(e,listing){if(noError(e,cb)){cb(null,inode,listing);}});}});};/**\n\t     * Adds a new node under a random ID. Retries 5 times before giving up in\n\t     * the exceedingly unlikely chance that we try to reuse a random GUID.\n\t     * @param cb Passed an error or the GUID that the data was stored under.\n\t     */AsyncKeyValueFileSystem.prototype.addNewNode=function addNewNode(tx,data,cb){var retries=0,currId;var reroll=function reroll(){if(++retries===5){// Max retries hit. Return with an error.\ncb(new ApiError(ErrorCode.EIO,'Unable to commit data to key-value store.'));}else{// Try again.\ncurrId=GenerateRandomID();tx.put(currId,data,false,function(e,committed){if(e||!committed){reroll();}else{// Successfully stored under 'currId'.\ncb(null,currId);}});}};reroll();};/**\n\t     * Commits a new file (well, a FILE or a DIRECTORY) to the file system with\n\t     * the given mode.\n\t     * Note: This will commit the transaction.\n\t     * @param p The path to the new file.\n\t     * @param type The type of the new file.\n\t     * @param mode The mode to create the new file with.\n\t     * @param data The data to store at the file's data node.\n\t     * @param cb Passed an error or the Inode for the new file.\n\t     */AsyncKeyValueFileSystem.prototype.commitNewFile=function commitNewFile(tx,p,type,mode,data,cb){var this$1=this;var parentDir=path.dirname(p),fname=path.basename(p),currTime=new Date().getTime();// Invariant: The root always exists.\n// If we don't check this prior to taking steps below, we will create a\n// file with name '' in root should p == '/'.\nif(p==='/'){return cb(ApiError.EEXIST(p));}// Let's build a pyramid of code!\n// Step 1: Get the parent directory's inode and directory listing\nthis.findINodeAndDirListing(tx,parentDir,function(e,parentNode,dirListing){if(noErrorTx(e,tx,cb)){if(dirListing[fname]){// File already exists.\ntx.abort(function(){cb(ApiError.EEXIST(p));});}else{// Step 2: Commit data to store.\nthis$1.addNewNode(tx,data,function(e,dataId){if(noErrorTx(e,tx,cb)){// Step 3: Commit the file's inode to the store.\nvar fileInode=new Inode(dataId,data.length,mode|type,currTime,currTime,currTime);this$1.addNewNode(tx,fileInode.toBuffer(),function(e,fileInodeId){if(noErrorTx(e,tx,cb)){// Step 4: Update parent directory's listing.\ndirListing[fname]=fileInodeId;tx.put(parentNode.id,Buffer.from(JSON.stringify(dirListing)),true,function(e){if(noErrorTx(e,tx,cb)){// Step 5: Commit and return the new inode.\ntx.commit(function(e){if(noErrorTx(e,tx,cb)){cb(null,fileInode);}});}});}});}});}}});};/**\n\t     * Remove all traces of the given path from the file system.\n\t     * @param p The path to remove from the file system.\n\t     * @param isDir Does the path belong to a directory, or a file?\n\t     * @todo Update mtime.\n\t     */AsyncKeyValueFileSystem.prototype.removeEntry=function removeEntry(p,isDir,cb){var this$1=this;var tx=this.store.beginTransaction('readwrite'),parent=path.dirname(p),fileName=path.basename(p);// Step 1: Get parent directory's node and directory listing.\nthis.findINodeAndDirListing(tx,parent,function(e,parentNode,parentListing){if(noErrorTx(e,tx,cb)){if(!parentListing[fileName]){tx.abort(function(){cb(ApiError.ENOENT(p));});}else{// Remove from directory listing of parent.\nvar fileNodeId=parentListing[fileName];delete parentListing[fileName];// Step 2: Get file inode.\nthis$1.getINode(tx,p,fileNodeId,function(e,fileNode){if(noErrorTx(e,tx,cb)){if(!isDir&&fileNode.isDirectory()){tx.abort(function(){cb(ApiError.EISDIR(p));});}else if(isDir&&!fileNode.isDirectory()){tx.abort(function(){cb(ApiError.ENOTDIR(p));});}else{// Step 3: Delete data.\ntx.del(fileNode.id,function(e){if(noErrorTx(e,tx,cb)){// Step 4: Delete node.\ntx.del(fileNodeId,function(e){if(noErrorTx(e,tx,cb)){// Step 5: Update directory listing.\ntx.put(parentNode.id,Buffer.from(JSON.stringify(parentListing)),true,function(e){if(noErrorTx(e,tx,cb)){tx.commit(cb);}});}});}});}}});}}});};return AsyncKeyValueFileSystem;}(BaseFileSystem);/**\n\t * A simple in-memory key-value store backed by a JavaScript object.\n\t */var InMemoryStore=function InMemoryStore(){this.store={};};InMemoryStore.prototype.name=function name(){return InMemoryFileSystem.Name;};InMemoryStore.prototype.clear=function clear(){this.store={};};InMemoryStore.prototype.beginTransaction=function beginTransaction(type){return new SimpleSyncRWTransaction(this);};InMemoryStore.prototype.get=function get(key){return this.store[key];};InMemoryStore.prototype.put=function put(key,data,overwrite){if(!overwrite&&this.store.hasOwnProperty(key)){return false;}this.store[key]=data;return true;};InMemoryStore.prototype.del=function del(key){delete this.store[key];};/**\n\t * A simple in-memory file system backed by an InMemoryStore.\n\t * Files are not persisted across page loads.\n\t */var InMemoryFileSystem=function(SyncKeyValueFileSystem$$1){function InMemoryFileSystem(){SyncKeyValueFileSystem$$1.call(this,{store:new InMemoryStore()});}if(SyncKeyValueFileSystem$$1)InMemoryFileSystem.__proto__=SyncKeyValueFileSystem$$1;InMemoryFileSystem.prototype=Object.create(SyncKeyValueFileSystem$$1&&SyncKeyValueFileSystem$$1.prototype);InMemoryFileSystem.prototype.constructor=InMemoryFileSystem;/**\n\t     * Creates an InMemoryFileSystem instance.\n\t     */InMemoryFileSystem.Create=function Create(options,cb){cb(null,new InMemoryFileSystem());};return InMemoryFileSystem;}(SyncKeyValueFileSystem);InMemoryFileSystem.Name=\"InMemory\";InMemoryFileSystem.Options={};/**\n\t * Get the indexedDB constructor for the current browser.\n\t * @hidden\n\t */var indexedDB=global$1.indexedDB||global$1.mozIndexedDB||global$1.webkitIndexedDB||global$1.msIndexedDB;/**\n\t * Converts a DOMException or a DOMError from an IndexedDB event into a\n\t * standardized BrowserFS API error.\n\t * @hidden\n\t */function convertError$2(e,message){if(message===void 0)message=e.toString();switch(e.name){case\"NotFoundError\":return new ApiError(ErrorCode.ENOENT,message);case\"QuotaExceededError\":return new ApiError(ErrorCode.ENOSPC,message);default:// The rest do not seem to map cleanly to standard error codes.\nreturn new ApiError(ErrorCode.EIO,message);}}/**\n\t * Produces a new onerror handler for IDB. Our errors are always fatal, so we\n\t * handle them generically: Call the user-supplied callback with a translated\n\t * version of the error, and let the error bubble up.\n\t * @hidden\n\t */function onErrorHandler(cb,code,message){if(code===void 0)code=ErrorCode.EIO;if(message===void 0)message=null;return function(e){// Prevent the error from canceling the transaction.\ne.preventDefault();cb(new ApiError(code,message!==null?message:undefined));};}/**\n\t * @hidden\n\t */var IndexedDBROTransaction=function IndexedDBROTransaction(tx,store){this.tx=tx;this.store=store;};IndexedDBROTransaction.prototype.get=function get(key,cb){try{var r=this.store.get(key);r.onerror=onErrorHandler(cb);r.onsuccess=function(event){// IDB returns the value 'undefined' when you try to get keys that\n// don't exist. The caller expects this behavior.\nvar result=event.target.result;if(result===undefined){cb(null,result);}else{// IDB data is stored as an ArrayBuffer\ncb(null,arrayBuffer2Buffer(result));}};}catch(e){cb(convertError$2(e));}};/**\n\t * @hidden\n\t */var IndexedDBRWTransaction=function(IndexedDBROTransaction){function IndexedDBRWTransaction(tx,store){IndexedDBROTransaction.call(this,tx,store);}if(IndexedDBROTransaction)IndexedDBRWTransaction.__proto__=IndexedDBROTransaction;IndexedDBRWTransaction.prototype=Object.create(IndexedDBROTransaction&&IndexedDBROTransaction.prototype);IndexedDBRWTransaction.prototype.constructor=IndexedDBRWTransaction;IndexedDBRWTransaction.prototype.put=function put(key,data,overwrite,cb){try{var arraybuffer=buffer2ArrayBuffer(data);var r;if(overwrite){r=this.store.put(arraybuffer,key);}else{// 'add' will never overwrite an existing key.\nr=this.store.add(arraybuffer,key);}// XXX: NEED TO RETURN FALSE WHEN ADD HAS A KEY CONFLICT. NO ERROR.\nr.onerror=onErrorHandler(cb);r.onsuccess=function(event){cb(null,true);};}catch(e){cb(convertError$2(e));}};IndexedDBRWTransaction.prototype.del=function del(key,cb){try{// NOTE: IE8 has a bug with identifiers named 'delete' unless used as a string\n// like this.\n// http://stackoverflow.com/a/26479152\nvar r=this.store['delete'](key);r.onerror=onErrorHandler(cb);r.onsuccess=function(event){cb();};}catch(e){cb(convertError$2(e));}};IndexedDBRWTransaction.prototype.commit=function commit(cb){// Return to the event loop to commit the transaction.\nsetTimeout(cb,0);};IndexedDBRWTransaction.prototype.abort=function abort(cb){var _e=null;try{this.tx.abort();}catch(e){_e=convertError$2(e);}finally{cb(_e);}};return IndexedDBRWTransaction;}(IndexedDBROTransaction);var IndexedDBStore=function IndexedDBStore(cb,storeName){var this$1=this;if(storeName===void 0)storeName='browserfs';this.storeName=storeName;var openReq=indexedDB.open(this.storeName,1);openReq.onupgradeneeded=function(event){var db=event.target.result;// Huh. This should never happen; we're at version 1. Why does another\n// database exist?\nif(db.objectStoreNames.contains(this$1.storeName)){db.deleteObjectStore(this$1.storeName);}db.createObjectStore(this$1.storeName);};openReq.onsuccess=function(event){this$1.db=event.target.result;cb(null,this$1);};openReq.onerror=onErrorHandler(cb,ErrorCode.EACCES);};IndexedDBStore.prototype.name=function name(){return IndexedDBFileSystem.Name+\" - \"+this.storeName;};IndexedDBStore.prototype.clear=function clear(cb){try{var tx=this.db.transaction(this.storeName,'readwrite'),objectStore=tx.objectStore(this.storeName),r=objectStore.clear();r.onsuccess=function(event){// Use setTimeout to commit transaction.\nsetTimeout(cb,0);};r.onerror=onErrorHandler(cb);}catch(e){cb(convertError$2(e));}};IndexedDBStore.prototype.beginTransaction=function beginTransaction(type){if(type===void 0)type='readonly';var tx=this.db.transaction(this.storeName,type),objectStore=tx.objectStore(this.storeName);if(type==='readwrite'){return new IndexedDBRWTransaction(tx,objectStore);}else if(type==='readonly'){return new IndexedDBROTransaction(tx,objectStore);}else{throw new ApiError(ErrorCode.EINVAL,'Invalid transaction type.');}};/**\n\t * A file system that uses the IndexedDB key value file system.\n\t */var IndexedDBFileSystem=function(AsyncKeyValueFileSystem$$1){function IndexedDBFileSystem(cb,storeName,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;AsyncKeyValueFileSystem$$1.call(this);this.store=new IndexedDBStore(function(e){if(e){cb(e);}else{this$1.init(this$1.store,function(e){cb(e,this$1);});}},storeName);deprecationMessage(deprecateMsg,IndexedDBFileSystem.Name,{storeName:storeName});}if(AsyncKeyValueFileSystem$$1)IndexedDBFileSystem.__proto__=AsyncKeyValueFileSystem$$1;IndexedDBFileSystem.prototype=Object.create(AsyncKeyValueFileSystem$$1&&AsyncKeyValueFileSystem$$1.prototype);IndexedDBFileSystem.prototype.constructor=IndexedDBFileSystem;/**\n\t     * Constructs an IndexedDB file system with the given options.\n\t     */IndexedDBFileSystem.Create=function Create(opts,cb){// tslint:disable-next-line:no-unused-new\nnew IndexedDBFileSystem(cb,opts.storeName,false);// tslint:enable-next-line:no-unused-new\n};IndexedDBFileSystem.isAvailable=function isAvailable(){// In Safari's private browsing mode, indexedDB.open returns NULL.\n// In Firefox, it throws an exception.\n// In Chrome, it \"just works\", and clears the database when you leave the page.\n// Untested: Opera, IE.\ntry{return typeof indexedDB!=='undefined'&&null!==indexedDB.open(\"__browserfs_test__\");}catch(e){return false;}};return IndexedDBFileSystem;}(AsyncKeyValueFileSystem);IndexedDBFileSystem.Name=\"IndexedDB\";IndexedDBFileSystem.Options={storeName:{type:\"string\",optional:true,description:\"The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.\"}};/**\n\t * Some versions of FF and all versions of IE do not support the full range of\n\t * 16-bit numbers encoded as characters, as they enforce UTF-16 restrictions.\n\t * @url http://stackoverflow.com/questions/11170716/are-there-any-characters-that-are-not-allowed-in-localstorage/11173673#11173673\n\t * @hidden\n\t */var supportsBinaryString=false;var binaryEncoding;try{global$1.localStorage.setItem(\"__test__\",String.fromCharCode(0xD800));supportsBinaryString=global$1.localStorage.getItem(\"__test__\")===String.fromCharCode(0xD800);}catch(e){// IE throws an exception.\nsupportsBinaryString=false;}binaryEncoding=supportsBinaryString?'binary_string':'binary_string_ie';if(!Buffer.isEncoding(binaryEncoding)){// Fallback for non BrowserFS implementations of buffer that lack a\n// binary_string format.\nbinaryEncoding=\"base64\";}/**\n\t * A synchronous key-value store backed by localStorage.\n\t */var LocalStorageStore=function LocalStorageStore(){};LocalStorageStore.prototype.name=function name(){return LocalStorageFileSystem.Name;};LocalStorageStore.prototype.clear=function clear(){global$1.localStorage.clear();};LocalStorageStore.prototype.beginTransaction=function beginTransaction(type){// No need to differentiate.\nreturn new SimpleSyncRWTransaction(this);};LocalStorageStore.prototype.get=function get(key){try{var data=global$1.localStorage.getItem(key);if(data!==null){return Buffer.from(data,binaryEncoding);}}catch(e){}// Do nothing.\n// Key doesn't exist, or a failure occurred.\nreturn undefined;};LocalStorageStore.prototype.put=function put(key,data,overwrite){try{if(!overwrite&&global$1.localStorage.getItem(key)!==null){// Don't want to overwrite the key!\nreturn false;}global$1.localStorage.setItem(key,data.toString(binaryEncoding));return true;}catch(e){throw new ApiError(ErrorCode.ENOSPC,\"LocalStorage is full.\");}};LocalStorageStore.prototype.del=function del(key){try{global$1.localStorage.removeItem(key);}catch(e){throw new ApiError(ErrorCode.EIO,\"Unable to delete key \"+key+\": \"+e);}};/**\n\t * A synchronous file system backed by localStorage. Connects our\n\t * LocalStorageStore to our SyncKeyValueFileSystem.\n\t */var LocalStorageFileSystem=function(SyncKeyValueFileSystem$$1){function LocalStorageFileSystem(){SyncKeyValueFileSystem$$1.call(this,{store:new LocalStorageStore()});}if(SyncKeyValueFileSystem$$1)LocalStorageFileSystem.__proto__=SyncKeyValueFileSystem$$1;LocalStorageFileSystem.prototype=Object.create(SyncKeyValueFileSystem$$1&&SyncKeyValueFileSystem$$1.prototype);LocalStorageFileSystem.prototype.constructor=LocalStorageFileSystem;/**\n\t     * Creates a LocalStorageFileSystem instance.\n\t     */LocalStorageFileSystem.Create=function Create(options,cb){cb(null,new LocalStorageFileSystem());};LocalStorageFileSystem.isAvailable=function isAvailable(){return typeof global$1.localStorage!=='undefined';};return LocalStorageFileSystem;}(SyncKeyValueFileSystem);LocalStorageFileSystem.Name=\"LocalStorage\";LocalStorageFileSystem.Options={};/**\n\t * The MountableFileSystem allows you to mount multiple backend types or\n\t * multiple instantiations of the same backend into a single file system tree.\n\t * The file systems do not need to know about each other; all interactions are\n\t * automatically facilitated through this interface.\n\t *\n\t * For example, if a file system is mounted at /mnt/blah, and a request came in\n\t * for /mnt/blah/foo.txt, the file system would see a request for /foo.txt.\n\t *\n\t * You can mount file systems when you configure the file system:\n\t * ```javascript\n\t * BrowserFS.configure({\n\t *   fs: \"MountableFileSystem\",\n\t *   options: {\n\t *     '/data': { fs: 'XmlHttpRequest', options: { index: \"http://mysite.com/files/index.json\" } },\n\t *     '/home': { fs: 'LocalStorage' }\n\t *   }\n\t * }, function(e) {\n\t *\n\t * });\n\t * ```\n\t *\n\t * For advanced users, you can also mount file systems *after* MFS is constructed:\n\t * ```javascript\n\t * BrowserFS.FileSystem.XmlHttpRequest.Create({\n\t *   index: \"http://mysite.com/files/index.json\"\n\t * }, function(e, xhrfs) {\n\t *   BrowserFS.FileSystem.MountableFileSystem.Create({\n\t *     '/data': xhrfs\n\t *   }, function(e, mfs) {\n\t *     BrowserFS.initialize(mfs);\n\t *\n\t *     // Added after-the-fact...\n\t *     BrowserFS.FileSystem.LocalStorage.Create(function(e, lsfs) {\n\t *       mfs.mount('/home', lsfs);\n\t *     });\n\t *   });\n\t * });\n\t * ```\n\t *\n\t * Since MountableFileSystem simply proxies requests to mounted file systems, it supports all of the operations that the mounted file systems support.\n\t *\n\t * With no mounted file systems, `MountableFileSystem` acts as a simple `InMemory` filesystem.\n\t */var MountableFileSystem=function(BaseFileSystem$$1){function MountableFileSystem(){BaseFileSystem$$1.call(this);// Contains the list of mount points in mntMap, sorted by string length in decreasing order.\n// Ensures that we scan the most specific mount points for a match first, which lets us\n// nest mount points.\nthis.mountList=[];this.mntMap={};// The InMemory file system serves purely to provide directory listings for\n// mounted file systems.\nthis.rootFs=new InMemoryFileSystem();}if(BaseFileSystem$$1)MountableFileSystem.__proto__=BaseFileSystem$$1;MountableFileSystem.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);MountableFileSystem.prototype.constructor=MountableFileSystem;/**\n\t     * Creates a MountableFileSystem instance with the given options.\n\t     */MountableFileSystem.Create=function Create(opts,cb){var fs=new MountableFileSystem();Object.keys(opts).forEach(function(mountPoint){fs.mount(mountPoint,opts[mountPoint]);});cb(null,fs);};MountableFileSystem.isAvailable=function isAvailable(){return true;};/**\n\t     * Mounts the file system at the given mount point.\n\t     */MountableFileSystem.prototype.mount=function mount(mountPoint,fs){if(mountPoint[0]!=='/'){mountPoint=\"/\"+mountPoint;}mountPoint=path.resolve(mountPoint);if(this.mntMap[mountPoint]){throw new ApiError(ErrorCode.EINVAL,\"Mount point \"+mountPoint+\" is already taken.\");}mkdirpSync(mountPoint,0x1ff,this.rootFs);this.mntMap[mountPoint]=fs;this.mountList.push(mountPoint);this.mountList=this.mountList.sort(function(a,b){return b.length-a.length;});};MountableFileSystem.prototype.umount=function umount(mountPoint){var this$1=this;if(mountPoint[0]!=='/'){mountPoint=\"/\"+mountPoint;}mountPoint=path.resolve(mountPoint);if(!this.mntMap[mountPoint]){throw new ApiError(ErrorCode.EINVAL,\"Mount point \"+mountPoint+\" is already unmounted.\");}delete this.mntMap[mountPoint];this.mountList.splice(this.mountList.indexOf(mountPoint),1);while(mountPoint!=='/'){if(this$1.rootFs.readdirSync(mountPoint).length===0){this$1.rootFs.rmdirSync(mountPoint);mountPoint=path.dirname(mountPoint);}else{break;}}};/**\n\t     * Returns the file system that the path points to.\n\t     */MountableFileSystem.prototype._getFs=function _getFs(path$$1){var this$1=this;var mountList=this.mountList,len=mountList.length;for(var i=0;i<len;i++){var mountPoint=mountList[i];// We know path is normalized, so it is a substring of the mount point.\nif(mountPoint.length<=path$$1.length&&path$$1.indexOf(mountPoint)===0){path$$1=path$$1.substr(mountPoint.length>1?mountPoint.length:0);if(path$$1===''){path$$1='/';}return{fs:this$1.mntMap[mountPoint],path:path$$1};}}// Query our root file system.\nreturn{fs:this.rootFs,path:path$$1};};// Global information methods\nMountableFileSystem.prototype.getName=function getName(){return MountableFileSystem.Name;};MountableFileSystem.prototype.diskSpace=function diskSpace(path$$1,cb){cb(0,0);};MountableFileSystem.prototype.isReadOnly=function isReadOnly(){return false;};MountableFileSystem.prototype.supportsLinks=function supportsLinks(){// I'm not ready for cross-FS links yet.\nreturn false;};MountableFileSystem.prototype.supportsProps=function supportsProps(){return false;};MountableFileSystem.prototype.supportsSynch=function supportsSynch(){return true;};/**\n\t     * Fixes up error messages so they mention the mounted file location relative\n\t     * to the MFS root, not to the particular FS's root.\n\t     * Mutates the input error, and returns it.\n\t     */MountableFileSystem.prototype.standardizeError=function standardizeError(err,path$$1,realPath){var index=err.message.indexOf(path$$1);if(index!==-1){err.message=err.message.substr(0,index)+realPath+err.message.substr(index+path$$1.length);err.path=realPath;}return err;};// The following methods involve multiple file systems, and thus have custom\n// logic.\n// Note that we go through the Node API to use its robust default argument\n// processing.\nMountableFileSystem.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;// Scenario 1: old and new are on same FS.\nvar fs1rv=this._getFs(oldPath);var fs2rv=this._getFs(newPath);if(fs1rv.fs===fs2rv.fs){return fs1rv.fs.rename(fs1rv.path,fs2rv.path,function(e){if(e){this$1.standardizeError(this$1.standardizeError(e,fs1rv.path,oldPath),fs2rv.path,newPath);}cb(e);});}// Scenario 2: Different file systems.\n// Read old file, write new file, delete old file.\nreturn _fsMock.readFile(oldPath,function(err,data){if(err){return cb(err);}_fsMock.writeFile(newPath,data,function(err){if(err){return cb(err);}_fsMock.unlink(oldPath,cb);});});};MountableFileSystem.prototype.renameSync=function renameSync(oldPath,newPath){// Scenario 1: old and new are on same FS.\nvar fs1rv=this._getFs(oldPath);var fs2rv=this._getFs(newPath);if(fs1rv.fs===fs2rv.fs){try{return fs1rv.fs.renameSync(fs1rv.path,fs2rv.path);}catch(e){this.standardizeError(this.standardizeError(e,fs1rv.path,oldPath),fs2rv.path,newPath);throw e;}}// Scenario 2: Different file systems.\nvar data=_fsMock.readFileSync(oldPath);_fsMock.writeFileSync(newPath,data);return _fsMock.unlinkSync(oldPath);};MountableFileSystem.prototype.readdirSync=function readdirSync(p){var fsInfo=this._getFs(p);// If null, rootfs did not have the directory\n// (or the target FS is the root fs).\nvar rv=null;// Mount points are all defined in the root FS.\n// Ensure that we list those, too.\nif(fsInfo.fs!==this.rootFs){try{rv=this.rootFs.readdirSync(p);}catch(e){// Ignore.\n}}try{var rv2=fsInfo.fs.readdirSync(fsInfo.path);if(rv===null){return rv2;}else{// Filter out duplicates.\nreturn rv2.concat(rv.filter(function(val){return rv2.indexOf(val)===-1;}));}}catch(e){if(rv===null){throw this.standardizeError(e,fsInfo.path,p);}else{// The root FS had something.\nreturn rv;}}};MountableFileSystem.prototype.readdir=function readdir(p,cb){var this$1=this;var fsInfo=this._getFs(p);fsInfo.fs.readdir(fsInfo.path,function(err,files){if(fsInfo.fs!==this$1.rootFs){try{var rv=this$1.rootFs.readdirSync(p);if(files){// Filter out duplicates.\nfiles=files.concat(rv.filter(function(val){return files.indexOf(val)===-1;}));}else{files=rv;}}catch(e){// Root FS and target FS did not have directory.\nif(err){return cb(this$1.standardizeError(err,fsInfo.path,p));}}}else if(err){// Root FS and target FS are the same, and did not have directory.\nreturn cb(this$1.standardizeError(err,fsInfo.path,p));}cb(null,files);});};MountableFileSystem.prototype.rmdirSync=function rmdirSync(p){var fsInfo=this._getFs(p);if(this._containsMountPt(p)){throw ApiError.ENOTEMPTY(p);}else{try{fsInfo.fs.rmdirSync(fsInfo.path);}catch(e){throw this.standardizeError(e,fsInfo.path,p);}}};MountableFileSystem.prototype.rmdir=function rmdir(p,cb){var this$1=this;var fsInfo=this._getFs(p);if(this._containsMountPt(p)){cb(ApiError.ENOTEMPTY(p));}else{fsInfo.fs.rmdir(fsInfo.path,function(err){cb(err?this$1.standardizeError(err,fsInfo.path,p):null);});}};/**\n\t     * Returns true if the given path contains a mount point.\n\t     */MountableFileSystem.prototype._containsMountPt=function _containsMountPt(p){var mountPoints=this.mountList,len=mountPoints.length;for(var i=0;i<len;i++){var pt=mountPoints[i];if(pt.length>=p.length&&pt.slice(0,p.length)===p){return true;}}return false;};return MountableFileSystem;}(BaseFileSystem);MountableFileSystem.Name=\"MountableFileSystem\";MountableFileSystem.Options={};/**\n\t * Tricky: Define all of the functions that merely forward arguments to the\n\t * relevant file system, or return/throw an error.\n\t * Take advantage of the fact that the *first* argument is always the path, and\n\t * the *last* is the callback function (if async).\n\t * @todo Can use numArgs to make proxying more efficient.\n\t * @hidden\n\t */function defineFcn(name,isSync,numArgs){if(isSync){return function(){var args=[],len=arguments.length;while(len--){args[len]=arguments[len];}var path$$1=args[0];var rv=this._getFs(path$$1);args[0]=rv.path;try{return rv.fs[name].apply(rv.fs,args);}catch(e){this.standardizeError(e,rv.path,path$$1);throw e;}};}else{return function(){var this$1=this;var args=[],len=arguments.length;while(len--){args[len]=arguments[len];}var path$$1=args[0];var rv=this._getFs(path$$1);args[0]=rv.path;if(typeof args[args.length-1]==='function'){var cb=args[args.length-1];args[args.length-1]=function(){var args=[],len=arguments.length;while(len--){args[len]=arguments[len];}if(args.length>0&&args[0]instanceof ApiError){this$1.standardizeError(args[0],rv.path,path$$1);}cb.apply(null,args);};}return rv.fs[name].apply(rv.fs,args);};}}/**\n\t * @hidden\n\t */var fsCmdMap=[// 1 arg functions\n['exists','unlink','readlink'],// 2 arg functions\n['stat','mkdir','realpath','truncate'],// 3 arg functions\n['open','readFile','chmod','utimes'],// 4 arg functions\n['chown'],// 5 arg functions\n['writeFile','appendFile']];for(var i=0;i<fsCmdMap.length;i++){var cmds=fsCmdMap[i];for(var i$1=0,list=cmds;i$1<list.length;i$1+=1){var fnName=list[i$1];MountableFileSystem.prototype[fnName]=defineFcn(fnName,false,i+1);MountableFileSystem.prototype[fnName+'Sync']=defineFcn(fnName+'Sync',true,i+1);}}/**\n\t * @hidden\n\t */var bfsSetImmediate;if(typeof setImmediate!==\"undefined\"){bfsSetImmediate=setImmediate;}else{var gScope=global$1;var timeouts=[];var messageName=\"zero-timeout-message\";var canUsePostMessage=function canUsePostMessage(){if(typeof gScope.importScripts!=='undefined'||!gScope.postMessage){return false;}var postMessageIsAsync=true;var oldOnMessage=gScope.onmessage;gScope.onmessage=function(){postMessageIsAsync=false;};gScope.postMessage('','*');gScope.onmessage=oldOnMessage;return postMessageIsAsync;};if(canUsePostMessage()){bfsSetImmediate=function bfsSetImmediate(fn){timeouts.push(fn);gScope.postMessage(messageName,\"*\");};var handleMessage=function handleMessage(event){if(event.source===self&&event.data===messageName){if(event.stopPropagation){event.stopPropagation();}else{event.cancelBubble=true;}if(timeouts.length>0){var fn=timeouts.shift();return fn();}}};if(gScope.addEventListener){gScope.addEventListener('message',handleMessage,true);}else{gScope.attachEvent('onmessage',handleMessage);}}else if(gScope.MessageChannel){// WebWorker MessageChannel\nvar channel=new gScope.MessageChannel();channel.port1.onmessage=function(event){if(timeouts.length>0){return timeouts.shift()();}};bfsSetImmediate=function bfsSetImmediate(fn){timeouts.push(fn);channel.port2.postMessage('');};}else{bfsSetImmediate=function bfsSetImmediate(fn){return setTimeout(fn,0);};}}var setImmediate$3=bfsSetImmediate;/**\n\t * Non-recursive mutex\n\t * @hidden\n\t */var Mutex=function Mutex(){this._locked=false;this._waiters=[];};Mutex.prototype.lock=function lock(cb){if(this._locked){this._waiters.push(cb);return;}this._locked=true;cb();};Mutex.prototype.unlock=function unlock(){if(!this._locked){throw new Error('unlock of a non-locked mutex');}var next=this._waiters.shift();// don't unlock - we want to queue up next for the\n// _end_ of the current task execution, but we don't\n// want it to be called inline with whatever the\n// current stack is.  This way we still get the nice\n// behavior that an unlock immediately followed by a\n// lock won't cause starvation.\nif(next){setImmediate$3(next);return;}this._locked=false;};Mutex.prototype.tryLock=function tryLock(){if(this._locked){return false;}this._locked=true;return true;};Mutex.prototype.isLocked=function isLocked(){return this._locked;};/**\n\t * This class serializes access to an underlying async filesystem.\n\t * For example, on an OverlayFS instance with an async lower\n\t * directory operations like rename and rmdir may involve multiple\n\t * requests involving both the upper and lower filesystems -- they\n\t * are not executed in a single atomic step.  OverlayFS uses this\n\t * LockedFS to avoid having to reason about the correctness of\n\t * multiple requests interleaving.\n\t */var LockedFS=function LockedFS(fs){this._fs=fs;this._mu=new Mutex();};LockedFS.prototype.getName=function getName(){return'LockedFS<'+this._fs.getName()+'>';};LockedFS.prototype.getFSUnlocked=function getFSUnlocked(){return this._fs;};LockedFS.prototype.initialize=function initialize(cb){// FIXME: check to see if FS supports initialization\nthis._fs.initialize(cb);};LockedFS.prototype.diskSpace=function diskSpace(p,cb){// FIXME: should this lock?\nthis._fs.diskSpace(p,cb);};LockedFS.prototype.isReadOnly=function isReadOnly(){return this._fs.isReadOnly();};LockedFS.prototype.supportsLinks=function supportsLinks(){return this._fs.supportsLinks();};LockedFS.prototype.supportsProps=function supportsProps(){return this._fs.supportsProps();};LockedFS.prototype.supportsSynch=function supportsSynch(){return this._fs.supportsSynch();};LockedFS.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;this._mu.lock(function(){this$1._fs.rename(oldPath,newPath,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.renameSync=function renameSync(oldPath,newPath){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.renameSync(oldPath,newPath);};LockedFS.prototype.stat=function stat(p,isLstat,cb){var this$1=this;this._mu.lock(function(){this$1._fs.stat(p,isLstat,function(err,stat){this$1._mu.unlock();cb(err,stat);});});};LockedFS.prototype.statSync=function statSync(p,isLstat){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.statSync(p,isLstat);};LockedFS.prototype.open=function open(p,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.open(p,flag,mode,function(err,fd){this$1._mu.unlock();cb(err,fd);});});};LockedFS.prototype.openSync=function openSync(p,flag,mode){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.openSync(p,flag,mode);};LockedFS.prototype.unlink=function unlink(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.unlink(p,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.unlinkSync=function unlinkSync(p){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.unlinkSync(p);};LockedFS.prototype.rmdir=function rmdir(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.rmdir(p,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.rmdirSync=function rmdirSync(p){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.rmdirSync(p);};LockedFS.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.mkdir(p,mode,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.mkdirSync=function mkdirSync(p,mode){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.mkdirSync(p,mode);};LockedFS.prototype.readdir=function readdir(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readdir(p,function(err,files){this$1._mu.unlock();cb(err,files);});});};LockedFS.prototype.readdirSync=function readdirSync(p){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.readdirSync(p);};LockedFS.prototype.exists=function exists(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.exists(p,function(exists){this$1._mu.unlock();cb(exists);});});};LockedFS.prototype.existsSync=function existsSync(p){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.existsSync(p);};LockedFS.prototype.realpath=function realpath(p,cache,cb){var this$1=this;this._mu.lock(function(){this$1._fs.realpath(p,cache,function(err,resolvedPath){this$1._mu.unlock();cb(err,resolvedPath);});});};LockedFS.prototype.realpathSync=function realpathSync(p,cache){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.realpathSync(p,cache);};LockedFS.prototype.truncate=function truncate(p,len,cb){var this$1=this;this._mu.lock(function(){this$1._fs.truncate(p,len,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.truncateSync=function truncateSync(p,len){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.truncateSync(p,len);};LockedFS.prototype.readFile=function readFile(fname,encoding,flag,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readFile(fname,encoding,flag,function(err,data){this$1._mu.unlock();cb(err,data);});});};LockedFS.prototype.readFileSync=function readFileSync(fname,encoding,flag){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.readFileSync(fname,encoding,flag);};LockedFS.prototype.writeFile=function writeFile(fname,data,encoding,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.writeFile(fname,data,encoding,flag,mode,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.writeFileSync=function writeFileSync(fname,data,encoding,flag,mode){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.writeFileSync(fname,data,encoding,flag,mode);};LockedFS.prototype.appendFile=function appendFile(fname,data,encoding,flag,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.appendFile(fname,data,encoding,flag,mode,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.appendFileSync=function appendFileSync(fname,data,encoding,flag,mode){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.appendFileSync(fname,data,encoding,flag,mode);};LockedFS.prototype.chmod=function chmod(p,isLchmod,mode,cb){var this$1=this;this._mu.lock(function(){this$1._fs.chmod(p,isLchmod,mode,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.chmodSync=function chmodSync(p,isLchmod,mode){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.chmodSync(p,isLchmod,mode);};LockedFS.prototype.chown=function chown(p,isLchown,uid,gid,cb){var this$1=this;this._mu.lock(function(){this$1._fs.chown(p,isLchown,uid,gid,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.chownSync=function chownSync(p,isLchown,uid,gid){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.chownSync(p,isLchown,uid,gid);};LockedFS.prototype.utimes=function utimes(p,atime,mtime,cb){var this$1=this;this._mu.lock(function(){this$1._fs.utimes(p,atime,mtime,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.utimesSync=function utimesSync(p,atime,mtime){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.utimesSync(p,atime,mtime);};LockedFS.prototype.link=function link(srcpath,dstpath,cb){var this$1=this;this._mu.lock(function(){this$1._fs.link(srcpath,dstpath,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.linkSync=function linkSync(srcpath,dstpath){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.linkSync(srcpath,dstpath);};LockedFS.prototype.symlink=function symlink(srcpath,dstpath,type,cb){var this$1=this;this._mu.lock(function(){this$1._fs.symlink(srcpath,dstpath,type,function(err){this$1._mu.unlock();cb(err);});});};LockedFS.prototype.symlinkSync=function symlinkSync(srcpath,dstpath,type){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.symlinkSync(srcpath,dstpath,type);};LockedFS.prototype.readlink=function readlink(p,cb){var this$1=this;this._mu.lock(function(){this$1._fs.readlink(p,function(err,linkString){this$1._mu.unlock();cb(err,linkString);});});};LockedFS.prototype.readlinkSync=function readlinkSync(p){if(this._mu.isLocked()){throw new Error('invalid sync call');}return this._fs.readlinkSync(p);};/**\n\t * @hidden\n\t */var deletionLogPath='/.deletedFiles.log';/**\n\t * Given a read-only mode, makes it writable.\n\t * @hidden\n\t */function makeModeWritable(mode){return 146|mode;}/**\n\t * @hidden\n\t */function getFlag(f){return FileFlag.getFileFlag(f);}/**\n\t * Overlays a RO file to make it writable.\n\t */var OverlayFile=function(PreloadFile$$1){function OverlayFile(fs,path$$1,flag,stats,data){PreloadFile$$1.call(this,fs,path$$1,flag,stats,data);}if(PreloadFile$$1)OverlayFile.__proto__=PreloadFile$$1;OverlayFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);OverlayFile.prototype.constructor=OverlayFile;OverlayFile.prototype.sync=function sync(cb){var this$1=this;if(!this.isDirty()){cb(null);return;}this._fs._syncAsync(this,function(err){this$1.resetDirty();cb(err);});};OverlayFile.prototype.syncSync=function syncSync(){if(this.isDirty()){this._fs._syncSync(this);this.resetDirty();}};OverlayFile.prototype.close=function close(cb){this.sync(cb);};OverlayFile.prototype.closeSync=function closeSync(){this.syncSync();};return OverlayFile;}(PreloadFile);/**\n\t * *INTERNAL, DO NOT USE DIRECTLY!*\n\t *\n\t * Core OverlayFS class that contains no locking whatsoever. We wrap these objects\n\t * in a LockedFS to prevent races.\n\t */var UnlockedOverlayFS=function(BaseFileSystem$$1){function UnlockedOverlayFS(writable,readable){BaseFileSystem$$1.call(this);this._isInitialized=false;this._initializeCallbacks=[];this._deletedFiles={};this._deleteLog='';// If 'true', we have scheduled a delete log update.\nthis._deleteLogUpdatePending=false;// If 'true', a delete log update is needed after the scheduled delete log\n// update finishes.\nthis._deleteLogUpdateNeeded=false;// If there was an error updating the delete log...\nthis._deleteLogError=null;this._writable=writable;this._readable=readable;if(this._writable.isReadOnly()){throw new ApiError(ErrorCode.EINVAL,\"Writable file system must be writable.\");}}if(BaseFileSystem$$1)UnlockedOverlayFS.__proto__=BaseFileSystem$$1;UnlockedOverlayFS.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);UnlockedOverlayFS.prototype.constructor=UnlockedOverlayFS;UnlockedOverlayFS.isAvailable=function isAvailable(){return true;};UnlockedOverlayFS.prototype.getOverlayedFileSystems=function getOverlayedFileSystems(){return{readable:this._readable,writable:this._writable};};UnlockedOverlayFS.prototype._syncAsync=function _syncAsync(file,cb){var this$1=this;this.createParentDirectoriesAsync(file.getPath(),function(err){if(err){return cb(err);}this$1._writable.writeFile(file.getPath(),file.getBuffer(),null,getFlag('w'),file.getStats().mode,cb);});};UnlockedOverlayFS.prototype._syncSync=function _syncSync(file){this.createParentDirectories(file.getPath());this._writable.writeFileSync(file.getPath(),file.getBuffer(),null,getFlag('w'),file.getStats().mode);};UnlockedOverlayFS.prototype.getName=function getName(){return OverlayFS.Name;};/**\n\t     * Called once to load up metadata stored on the writable file system.\n\t     */UnlockedOverlayFS.prototype.initialize=function initialize(cb){var this$1=this;var callbackArray=this._initializeCallbacks;var end=function end(e){this$1._isInitialized=!e;this$1._initializeCallbacks=[];callbackArray.forEach(function(cb){return cb(e);});};// if we're already initialized, immediately invoke the callback\nif(this._isInitialized){return cb();}callbackArray.push(cb);// The first call to initialize initializes, the rest wait for it to complete.\nif(callbackArray.length!==1){return;}// Read deletion log, process into metadata.\nthis._writable.readFile(deletionLogPath,'utf8',getFlag('r'),function(err,data){if(err){// ENOENT === Newly-instantiated file system, and thus empty log.\nif(err.errno!==ErrorCode.ENOENT){return end(err);}}else{this$1._deleteLog=data;}this$1._reparseDeletionLog();end();});};UnlockedOverlayFS.prototype.isReadOnly=function isReadOnly(){return false;};UnlockedOverlayFS.prototype.supportsSynch=function supportsSynch(){return this._readable.supportsSynch()&&this._writable.supportsSynch();};UnlockedOverlayFS.prototype.supportsLinks=function supportsLinks(){return false;};UnlockedOverlayFS.prototype.supportsProps=function supportsProps(){return this._readable.supportsProps()&&this._writable.supportsProps();};UnlockedOverlayFS.prototype.getDeletionLog=function getDeletionLog(){return this._deleteLog;};UnlockedOverlayFS.prototype.restoreDeletionLog=function restoreDeletionLog(log){this._deleteLog=log;this._reparseDeletionLog();this.updateLog('');};UnlockedOverlayFS.prototype.rename=function rename(oldPath,newPath,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(oldPath,cb)||this.checkPathAsync(newPath,cb)){return;}if(oldPath===deletionLogPath||newPath===deletionLogPath){return cb(ApiError.EPERM('Cannot rename deletion log.'));}// nothing to do if paths match\nif(oldPath===newPath){return cb();}this.stat(oldPath,false,function(oldErr,oldStats){if(oldErr){return cb(oldErr);}return this$1.stat(newPath,false,function(newErr,newStats){var self=this$1;// precondition: both oldPath and newPath exist and are dirs.\n// decreases: |files|\n// Need to move *every file/folder* currently stored on\n// readable to its new location on writable.\nfunction copyDirContents(files){var file=files.shift();if(!file){return cb();}var oldFile=path.resolve(oldPath,file);var newFile=path.resolve(newPath,file);// Recursion! Should work for any nested files / folders.\nself.rename(oldFile,newFile,function(err){if(err){return cb(err);}copyDirContents(files);});}var mode=511;// from linux's rename(2) manpage: oldpath can specify a\n// directory.  In this case, newpath must either not exist, or\n// it must specify an empty directory.\nif(oldStats.isDirectory()){if(newErr){if(newErr.errno!==ErrorCode.ENOENT){return cb(newErr);}return this$1._writable.exists(oldPath,function(exists){// simple case - both old and new are on the writable layer\nif(exists){return this$1._writable.rename(oldPath,newPath,cb);}this$1._writable.mkdir(newPath,mode,function(mkdirErr){if(mkdirErr){return cb(mkdirErr);}this$1._readable.readdir(oldPath,function(err,files){if(err){return cb();}copyDirContents(files);});});});}mode=newStats.mode;if(!newStats.isDirectory()){return cb(ApiError.ENOTDIR(newPath));}this$1.readdir(newPath,function(readdirErr,files){if(files&&files.length){return cb(ApiError.ENOTEMPTY(newPath));}this$1._readable.readdir(oldPath,function(err,files){if(err){return cb();}copyDirContents(files);});});}if(newStats&&newStats.isDirectory()){return cb(ApiError.EISDIR(newPath));}this$1.readFile(oldPath,null,getFlag('r'),function(err,data){if(err){return cb(err);}return this$1.writeFile(newPath,data,null,getFlag('w'),oldStats.mode,function(err){if(err){return cb(err);}return this$1.unlink(oldPath,cb);});});});});};UnlockedOverlayFS.prototype.renameSync=function renameSync(oldPath,newPath){var this$1=this;this.checkInitialized();this.checkPath(oldPath);this.checkPath(newPath);if(oldPath===deletionLogPath||newPath===deletionLogPath){throw ApiError.EPERM('Cannot rename deletion log.');}// Write newPath using oldPath's contents, delete oldPath.\nvar oldStats=this.statSync(oldPath,false);if(oldStats.isDirectory()){// Optimization: Don't bother moving if old === new.\nif(oldPath===newPath){return;}var mode=511;if(this.existsSync(newPath)){var stats=this.statSync(newPath,false);mode=stats.mode;if(stats.isDirectory()){if(this.readdirSync(newPath).length>0){throw ApiError.ENOTEMPTY(newPath);}}else{throw ApiError.ENOTDIR(newPath);}}// Take care of writable first. Move any files there, or create an empty directory\n// if it doesn't exist.\nif(this._writable.existsSync(oldPath)){this._writable.renameSync(oldPath,newPath);}else if(!this._writable.existsSync(newPath)){this._writable.mkdirSync(newPath,mode);}// Need to move *every file/folder* currently stored on readable to its new location\n// on writable.\nif(this._readable.existsSync(oldPath)){this._readable.readdirSync(oldPath).forEach(function(name){// Recursion! Should work for any nested files / folders.\nthis$1.renameSync(path.resolve(oldPath,name),path.resolve(newPath,name));});}}else{if(this.existsSync(newPath)&&this.statSync(newPath,false).isDirectory()){throw ApiError.EISDIR(newPath);}this.writeFileSync(newPath,this.readFileSync(oldPath,null,getFlag('r')),null,getFlag('w'),oldStats.mode);}if(oldPath!==newPath&&this.existsSync(oldPath)){this.unlinkSync(oldPath);}};UnlockedOverlayFS.prototype.stat=function stat(p,isLstat,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this._writable.stat(p,isLstat,function(err,stat){if(err&&err.errno===ErrorCode.ENOENT){if(this$1._deletedFiles[p]){cb(ApiError.ENOENT(p));}this$1._readable.stat(p,isLstat,function(err,stat){if(stat){// Make the oldStat's mode writable. Preserve the topmost\n// part of the mode, which specifies if it is a file or a\n// directory.\nstat=stat.clone();stat.mode=makeModeWritable(stat.mode);}cb(err,stat);});}else{cb(err,stat);}});};UnlockedOverlayFS.prototype.statSync=function statSync(p,isLstat){this.checkInitialized();try{return this._writable.statSync(p,isLstat);}catch(e){if(this._deletedFiles[p]){throw ApiError.ENOENT(p);}var oldStat=this._readable.statSync(p,isLstat).clone();// Make the oldStat's mode writable. Preserve the topmost part of the\n// mode, which specifies if it is a file or a directory.\noldStat.mode=makeModeWritable(oldStat.mode);return oldStat;}};UnlockedOverlayFS.prototype.open=function open(p,flag,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(p,cb)){return;}this.stat(p,false,function(err,stats){if(stats){switch(flag.pathExistsAction()){case ActionType.TRUNCATE_FILE:return this$1.createParentDirectoriesAsync(p,function(err){if(err){return cb(err);}this$1._writable.open(p,flag,mode,cb);});case ActionType.NOP:return this$1._writable.exists(p,function(exists){if(exists){this$1._writable.open(p,flag,mode,cb);}else{// at this point we know the stats object we got is from\n// the readable FS.\nstats=stats.clone();stats.mode=mode;this$1._readable.readFile(p,null,getFlag('r'),function(readFileErr,data){if(readFileErr){return cb(readFileErr);}if(stats.size===-1){stats.size=data.length;}var f=new OverlayFile(this$1,p,flag,stats,data);cb(null,f);});}});default:return cb(ApiError.EEXIST(p));}}else{switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:return this$1.createParentDirectoriesAsync(p,function(err){if(err){return cb(err);}return this$1._writable.open(p,flag,mode,cb);});default:return cb(ApiError.ENOENT(p));}}});};UnlockedOverlayFS.prototype.openSync=function openSync(p,flag,mode){this.checkInitialized();this.checkPath(p);if(p===deletionLogPath){throw ApiError.EPERM('Cannot open deletion log.');}if(this.existsSync(p)){switch(flag.pathExistsAction()){case ActionType.TRUNCATE_FILE:this.createParentDirectories(p);return this._writable.openSync(p,flag,mode);case ActionType.NOP:if(this._writable.existsSync(p)){return this._writable.openSync(p,flag,mode);}else{// Create an OverlayFile.\nvar buf=this._readable.readFileSync(p,null,getFlag('r'));var stats=this._readable.statSync(p,false).clone();stats.mode=mode;return new OverlayFile(this,p,flag,stats,buf);}default:throw ApiError.EEXIST(p);}}else{switch(flag.pathNotExistsAction()){case ActionType.CREATE_FILE:this.createParentDirectories(p);return this._writable.openSync(p,flag,mode);default:throw ApiError.ENOENT(p);}}};UnlockedOverlayFS.prototype.unlink=function unlink(p,cb){var this$1=this;if(!this.checkInitAsync(cb)||this.checkPathAsync(p,cb)){return;}this.exists(p,function(exists){if(!exists){return cb(ApiError.ENOENT(p));}this$1._writable.exists(p,function(writableExists){if(writableExists){return this$1._writable.unlink(p,function(err){if(err){return cb(err);}this$1.exists(p,function(readableExists){if(readableExists){this$1.deletePath(p);}cb(null);});});}else{// if this only exists on the readable FS, add it to the\n// delete map.\nthis$1.deletePath(p);cb(null);}});});};UnlockedOverlayFS.prototype.unlinkSync=function unlinkSync(p){this.checkInitialized();this.checkPath(p);if(this.existsSync(p)){if(this._writable.existsSync(p)){this._writable.unlinkSync(p);}// if it still exists add to the delete log\nif(this.existsSync(p)){this.deletePath(p);}}else{throw ApiError.ENOENT(p);}};UnlockedOverlayFS.prototype.rmdir=function rmdir(p,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}var rmdirLower=function rmdirLower(){this$1.readdir(p,function(err,files){if(err){return cb(err);}if(files.length){return cb(ApiError.ENOTEMPTY(p));}this$1.deletePath(p);cb(null);});};this.exists(p,function(exists){if(!exists){return cb(ApiError.ENOENT(p));}this$1._writable.exists(p,function(writableExists){if(writableExists){this$1._writable.rmdir(p,function(err){if(err){return cb(err);}this$1._readable.exists(p,function(readableExists){if(readableExists){rmdirLower();}else{cb();}});});}else{rmdirLower();}});});};UnlockedOverlayFS.prototype.rmdirSync=function rmdirSync(p){this.checkInitialized();if(this.existsSync(p)){if(this._writable.existsSync(p)){this._writable.rmdirSync(p);}if(this.existsSync(p)){// Check if directory is empty.\nif(this.readdirSync(p).length>0){throw ApiError.ENOTEMPTY(p);}else{this.deletePath(p);}}}else{throw ApiError.ENOENT(p);}};UnlockedOverlayFS.prototype.mkdir=function mkdir(p,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this.exists(p,function(exists){if(exists){return cb(ApiError.EEXIST(p));}// The below will throw should any of the parent directories\n// fail to exist on _writable.\nthis$1.createParentDirectoriesAsync(p,function(err){if(err){return cb(err);}this$1._writable.mkdir(p,mode,cb);});});};UnlockedOverlayFS.prototype.mkdirSync=function mkdirSync(p,mode){this.checkInitialized();if(this.existsSync(p)){throw ApiError.EEXIST(p);}else{// The below will throw should any of the parent directories fail to exist\n// on _writable.\nthis.createParentDirectories(p);this._writable.mkdirSync(p,mode);}};UnlockedOverlayFS.prototype.readdir=function readdir(p,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this.stat(p,false,function(err,dirStats){if(err){return cb(err);}if(!dirStats.isDirectory()){return cb(ApiError.ENOTDIR(p));}this$1._writable.readdir(p,function(err,wFiles){if(err&&err.code!=='ENOENT'){return cb(err);}else if(err||!wFiles){wFiles=[];}this$1._readable.readdir(p,function(err,rFiles){// if the directory doesn't exist on the lower FS set rFiles\n// here to simplify the following code.\nif(err||!rFiles){rFiles=[];}// Readdir in both, check delete log on read-only file system's files, merge, return.\nvar seenMap={};var filtered=wFiles.concat(rFiles.filter(function(fPath){return!this$1._deletedFiles[p+\"/\"+fPath];})).filter(function(fPath){// Remove duplicates.\nvar result=!seenMap[fPath];seenMap[fPath]=true;return result;});cb(null,filtered);});});});};UnlockedOverlayFS.prototype.readdirSync=function readdirSync(p){var this$1=this;this.checkInitialized();var dirStats=this.statSync(p,false);if(!dirStats.isDirectory()){throw ApiError.ENOTDIR(p);}// Readdir in both, check delete log on RO file system's listing, merge, return.\nvar contents=[];try{contents=contents.concat(this._writable.readdirSync(p));}catch(e){// NOP.\n}try{contents=contents.concat(this._readable.readdirSync(p).filter(function(fPath){return!this$1._deletedFiles[p+\"/\"+fPath];}));}catch(e){// NOP.\n}var seenMap={};return contents.filter(function(fileP){var result=!seenMap[fileP];seenMap[fileP]=true;return result;});};UnlockedOverlayFS.prototype.exists=function exists(p,cb){var this$1=this;// Cannot pass an error back to callback, so throw an exception instead\n// if not initialized.\nthis.checkInitialized();this._writable.exists(p,function(existsWritable){if(existsWritable){return cb(true);}this$1._readable.exists(p,function(existsReadable){cb(existsReadable&&this$1._deletedFiles[p]!==true);});});};UnlockedOverlayFS.prototype.existsSync=function existsSync(p){this.checkInitialized();return this._writable.existsSync(p)||this._readable.existsSync(p)&&this._deletedFiles[p]!==true;};UnlockedOverlayFS.prototype.chmod=function chmod(p,isLchmod,mode,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this.operateOnWritableAsync(p,function(err){if(err){return cb(err);}else{this$1._writable.chmod(p,isLchmod,mode,cb);}});};UnlockedOverlayFS.prototype.chmodSync=function chmodSync(p,isLchmod,mode){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.chmodSync(p,isLchmod,mode);});};UnlockedOverlayFS.prototype.chown=function chown(p,isLchmod,uid,gid,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this.operateOnWritableAsync(p,function(err){if(err){return cb(err);}else{this$1._writable.chown(p,isLchmod,uid,gid,cb);}});};UnlockedOverlayFS.prototype.chownSync=function chownSync(p,isLchown,uid,gid){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.chownSync(p,isLchown,uid,gid);});};UnlockedOverlayFS.prototype.utimes=function utimes(p,atime,mtime,cb){var this$1=this;if(!this.checkInitAsync(cb)){return;}this.operateOnWritableAsync(p,function(err){if(err){return cb(err);}else{this$1._writable.utimes(p,atime,mtime,cb);}});};UnlockedOverlayFS.prototype.utimesSync=function utimesSync(p,atime,mtime){var this$1=this;this.checkInitialized();this.operateOnWritable(p,function(){this$1._writable.utimesSync(p,atime,mtime);});};UnlockedOverlayFS.prototype.deletePath=function deletePath(p){this._deletedFiles[p]=true;this.updateLog(\"d\"+p+\"\\n\");};UnlockedOverlayFS.prototype.updateLog=function updateLog(addition){var this$1=this;this._deleteLog+=addition;if(this._deleteLogUpdatePending){this._deleteLogUpdateNeeded=true;}else{this._deleteLogUpdatePending=true;this._writable.writeFile(deletionLogPath,this._deleteLog,'utf8',FileFlag.getFileFlag('w'),420,function(e){this$1._deleteLogUpdatePending=false;if(e){this$1._deleteLogError=e;}else if(this$1._deleteLogUpdateNeeded){this$1._deleteLogUpdateNeeded=false;this$1.updateLog('');}});}};UnlockedOverlayFS.prototype._reparseDeletionLog=function _reparseDeletionLog(){var this$1=this;this._deletedFiles={};this._deleteLog.split('\\n').forEach(function(path$$1){// If the log entry begins w/ 'd', it's a deletion.\nthis$1._deletedFiles[path$$1.slice(1)]=path$$1.slice(0,1)==='d';});};UnlockedOverlayFS.prototype.checkInitialized=function checkInitialized(){if(!this._isInitialized){throw new ApiError(ErrorCode.EPERM,\"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\");}else if(this._deleteLogError!==null){var e=this._deleteLogError;this._deleteLogError=null;throw e;}};UnlockedOverlayFS.prototype.checkInitAsync=function checkInitAsync(cb){if(!this._isInitialized){cb(new ApiError(ErrorCode.EPERM,\"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\"));return false;}else if(this._deleteLogError!==null){var e=this._deleteLogError;this._deleteLogError=null;cb(e);return false;}return true;};UnlockedOverlayFS.prototype.checkPath=function checkPath(p){if(p===deletionLogPath){throw ApiError.EPERM(p);}};UnlockedOverlayFS.prototype.checkPathAsync=function checkPathAsync(p,cb){if(p===deletionLogPath){cb(ApiError.EPERM(p));return true;}return false;};UnlockedOverlayFS.prototype.createParentDirectoriesAsync=function createParentDirectoriesAsync(p,cb){var parent=path.dirname(p);var toCreate=[];var self=this;this._writable.stat(parent,false,statDone);function statDone(err,stat){if(err){toCreate.push(parent);parent=path.dirname(parent);self._writable.stat(parent,false,statDone);}else{createParents();}}function createParents(){if(!toCreate.length){return cb();}var dir=toCreate.pop();self._readable.stat(dir,false,function(err,stats){// stop if we couldn't read the dir\nif(!stats){return cb();}self._writable.mkdir(dir,stats.mode,function(err){if(err){return cb(err);}createParents();});});}};/**\n\t     * With the given path, create the needed parent directories on the writable storage\n\t     * should they not exist. Use modes from the read-only storage.\n\t     */UnlockedOverlayFS.prototype.createParentDirectories=function createParentDirectories(p){var this$1=this;var parent=path.dirname(p),toCreate=[];while(!this._writable.existsSync(parent)){toCreate.push(parent);parent=path.dirname(parent);}toCreate=toCreate.reverse();toCreate.forEach(function(p){this$1._writable.mkdirSync(p,this$1.statSync(p,false).mode);});};/**\n\t     * Helper function:\n\t     * - Ensures p is on writable before proceeding. Throws an error if it doesn't exist.\n\t     * - Calls f to perform operation on writable.\n\t     */UnlockedOverlayFS.prototype.operateOnWritable=function operateOnWritable(p,f){if(this.existsSync(p)){if(!this._writable.existsSync(p)){// File is on readable storage. Copy to writable storage before\n// changing its mode.\nthis.copyToWritable(p);}f();}else{throw ApiError.ENOENT(p);}};UnlockedOverlayFS.prototype.operateOnWritableAsync=function operateOnWritableAsync(p,cb){var this$1=this;this.exists(p,function(exists){if(!exists){return cb(ApiError.ENOENT(p));}this$1._writable.exists(p,function(existsWritable){if(existsWritable){cb();}else{return this$1.copyToWritableAsync(p,cb);}});});};/**\n\t     * Copy from readable to writable storage.\n\t     * PRECONDITION: File does not exist on writable storage.\n\t     */UnlockedOverlayFS.prototype.copyToWritable=function copyToWritable(p){var pStats=this.statSync(p,false);if(pStats.isDirectory()){this._writable.mkdirSync(p,pStats.mode);}else{this.writeFileSync(p,this._readable.readFileSync(p,null,getFlag('r')),null,getFlag('w'),this.statSync(p,false).mode);}};UnlockedOverlayFS.prototype.copyToWritableAsync=function copyToWritableAsync(p,cb){var this$1=this;this.stat(p,false,function(err,pStats){if(err){return cb(err);}if(pStats.isDirectory()){return this$1._writable.mkdir(p,pStats.mode,cb);}// need to copy file.\nthis$1._readable.readFile(p,null,getFlag('r'),function(err,data){if(err){return cb(err);}this$1.writeFile(p,data,null,getFlag('w'),pStats.mode,cb);});});};return UnlockedOverlayFS;}(BaseFileSystem);/**\n\t * OverlayFS makes a read-only filesystem writable by storing writes on a second,\n\t * writable file system. Deletes are persisted via metadata stored on the writable\n\t * file system.\n\t */var OverlayFS=function(LockedFS$$1){function OverlayFS(writable,readable,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;LockedFS$$1.call(this,new UnlockedOverlayFS(writable,readable));deprecationMessage(deprecateMsg,OverlayFS.Name,{readable:\"readable file system\",writable:\"writable file system\"});}if(LockedFS$$1)OverlayFS.__proto__=LockedFS$$1;OverlayFS.prototype=Object.create(LockedFS$$1&&LockedFS$$1.prototype);OverlayFS.prototype.constructor=OverlayFS;/**\n\t     * Constructs and initializes an OverlayFS instance with the given options.\n\t     */OverlayFS.Create=function Create(opts,cb){try{var fs=new OverlayFS(opts.writable,opts.readable,false);fs.initialize(function(e){cb(e,fs);},false);}catch(e){cb(e);}};OverlayFS.isAvailable=function isAvailable(){return UnlockedOverlayFS.isAvailable();};/**\n\t     * **Deprecated. Please use OverlayFS.Create() to construct and initialize OverlayFS instances.**\n\t     */OverlayFS.prototype.initialize=function initialize(cb,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn(\"[OverlayFS] OverlayFS.initialize() is deprecated and will be removed in the next major release. Please use 'OverlayFS.Create({readable: readable file system instance, writable: writable file system instance}, cb)' to create and initialize OverlayFS instances.\");}LockedFS$$1.prototype.initialize.call(this,cb);};OverlayFS.prototype.getOverlayedFileSystems=function getOverlayedFileSystems(){return LockedFS$$1.prototype.getFSUnlocked.call(this).getOverlayedFileSystems();};OverlayFS.prototype.unwrap=function unwrap(){return LockedFS$$1.prototype.getFSUnlocked.call(this);};return OverlayFS;}(LockedFS);OverlayFS.Name=\"OverlayFS\";OverlayFS.Options={writable:{type:\"object\",description:\"The file system to write modified files to.\"},readable:{type:\"object\",description:\"The file system that initially populates this file system.\"}};/**\n\t * @hidden\n\t */var SpecialArgType;(function(SpecialArgType){// Callback\nSpecialArgType[SpecialArgType[\"CB\"]=0]=\"CB\";// File descriptor\nSpecialArgType[SpecialArgType[\"FD\"]=1]=\"FD\";// API error\nSpecialArgType[SpecialArgType[\"API_ERROR\"]=2]=\"API_ERROR\";// Stats object\nSpecialArgType[SpecialArgType[\"STATS\"]=3]=\"STATS\";// Initial probe for file system information.\nSpecialArgType[SpecialArgType[\"PROBE\"]=4]=\"PROBE\";// FileFlag object.\nSpecialArgType[SpecialArgType[\"FILEFLAG\"]=5]=\"FILEFLAG\";// Buffer object.\nSpecialArgType[SpecialArgType[\"BUFFER\"]=6]=\"BUFFER\";// Generic Error object.\nSpecialArgType[SpecialArgType[\"ERROR\"]=7]=\"ERROR\";})(SpecialArgType||(SpecialArgType={}));/**\n\t * Converts callback arguments into ICallbackArgument objects, and back\n\t * again.\n\t * @hidden\n\t */var CallbackArgumentConverter=function CallbackArgumentConverter(){this._callbacks={};this._nextId=0;};CallbackArgumentConverter.prototype.toRemoteArg=function toRemoteArg(cb){var id=this._nextId++;this._callbacks[id]=cb;return{type:SpecialArgType.CB,id:id};};CallbackArgumentConverter.prototype.toLocalArg=function toLocalArg(id){var cb=this._callbacks[id];delete this._callbacks[id];return cb;};/**\n\t * @hidden\n\t */var FileDescriptorArgumentConverter=function FileDescriptorArgumentConverter(){this._fileDescriptors={};this._nextId=0;};FileDescriptorArgumentConverter.prototype.toRemoteArg=function toRemoteArg(fd,p,flag,cb){var id=this._nextId++;var data;var stat;this._fileDescriptors[id]=fd;// Extract needed information asynchronously.\nfd.stat(function(err,stats){if(err){cb(err);}else{stat=bufferToTransferrableObject(stats.toBuffer());// If it's a readable flag, we need to grab contents.\nif(flag.isReadable()){fd.read(Buffer.alloc(stats.size),0,stats.size,0,function(err,bytesRead,buff){if(err){cb(err);}else{data=bufferToTransferrableObject(buff);cb(null,{type:SpecialArgType.FD,id:id,data:data,stat:stat,path:p,flag:flag.getFlagString()});}});}else{// File is not readable, which means writing to it will append or\n// truncate/replace existing contents. Return an empty arraybuffer.\ncb(null,{type:SpecialArgType.FD,id:id,data:new ArrayBuffer(0),stat:stat,path:p,flag:flag.getFlagString()});}}});};FileDescriptorArgumentConverter.prototype.applyFdAPIRequest=function applyFdAPIRequest(request,cb){var this$1=this;var fdArg=request.args[0];this._applyFdChanges(fdArg,function(err,fd){if(err){cb(err);}else{// Apply method on now-changed file descriptor.\nfd[request.method](function(e){if(request.method==='close'){delete this$1._fileDescriptors[fdArg.id];}cb(e);});}});};FileDescriptorArgumentConverter.prototype._applyFdChanges=function _applyFdChanges(remoteFd,cb){var fd=this._fileDescriptors[remoteFd.id],data=transferrableObjectToBuffer(remoteFd.data),remoteStats=Stats.fromBuffer(transferrableObjectToBuffer(remoteFd.stat));// Write data if the file is writable.\nvar flag=FileFlag.getFileFlag(remoteFd.flag);if(flag.isWriteable()){// Appendable: Write to end of file.\n// Writeable: Replace entire contents of file.\nfd.write(data,0,data.length,flag.isAppendable()?fd.getPos():0,function(e){function applyStatChanges(){// Check if mode changed.\nfd.stat(function(e,stats){if(e){cb(e);}else{if(stats.mode!==remoteStats.mode){fd.chmod(remoteStats.mode,function(e){cb(e,fd);});}else{cb(e,fd);}}});}if(e){cb(e);}else{// If writeable & not appendable, we need to ensure file contents are\n// identical to those from the remote FD. Thus, we truncate to the\n// length of the remote file.\nif(!flag.isAppendable()){fd.truncate(data.length,function(){applyStatChanges();});}else{applyStatChanges();}}});}else{cb(null,fd);}};/**\n\t * @hidden\n\t */function apiErrorLocal2Remote(e){return{type:SpecialArgType.API_ERROR,errorData:bufferToTransferrableObject(e.writeToBuffer())};}/**\n\t * @hidden\n\t */function apiErrorRemote2Local(e){return ApiError.fromBuffer(transferrableObjectToBuffer(e.errorData));}/**\n\t * @hidden\n\t */function errorLocal2Remote(e){return{type:SpecialArgType.ERROR,name:e.name,message:e.message,stack:e.stack};}/**\n\t * @hidden\n\t */function errorRemote2Local(e){var cnstr=global$1[e.name];if(typeof cnstr!=='function'){cnstr=Error;}var err=new cnstr(e.message);err.stack=e.stack;return err;}/**\n\t * @hidden\n\t */function statsLocal2Remote(stats){return{type:SpecialArgType.STATS,statsData:bufferToTransferrableObject(stats.toBuffer())};}/**\n\t * @hidden\n\t */function statsRemote2Local(stats){return Stats.fromBuffer(transferrableObjectToBuffer(stats.statsData));}/**\n\t * @hidden\n\t */function fileFlagLocal2Remote(flag){return{type:SpecialArgType.FILEFLAG,flagStr:flag.getFlagString()};}/**\n\t * @hidden\n\t */function fileFlagRemote2Local(remoteFlag){return FileFlag.getFileFlag(remoteFlag.flagStr);}/**\n\t * @hidden\n\t */function bufferToTransferrableObject(buff){return buffer2ArrayBuffer(buff);}/**\n\t * @hidden\n\t */function transferrableObjectToBuffer(buff){return arrayBuffer2Buffer(buff);}/**\n\t * @hidden\n\t */function bufferLocal2Remote(buff){return{type:SpecialArgType.BUFFER,data:bufferToTransferrableObject(buff)};}/**\n\t * @hidden\n\t */function bufferRemote2Local(buffArg){return transferrableObjectToBuffer(buffArg.data);}/**\n\t * @hidden\n\t */function isAPIRequest(data){return data&&_typeof(data)==='object'&&data.hasOwnProperty('browserfsMessage')&&data['browserfsMessage'];}/**\n\t * @hidden\n\t */function isAPIResponse(data){return data&&_typeof(data)==='object'&&data.hasOwnProperty('browserfsMessage')&&data['browserfsMessage'];}/**\n\t * Represents a remote file in a different worker/thread.\n\t */var WorkerFile=function(PreloadFile$$1){function WorkerFile(_fs,_path,_flag,_stat,remoteFdId,contents){PreloadFile$$1.call(this,_fs,_path,_flag,_stat,contents);this._remoteFdId=remoteFdId;}if(PreloadFile$$1)WorkerFile.__proto__=PreloadFile$$1;WorkerFile.prototype=Object.create(PreloadFile$$1&&PreloadFile$$1.prototype);WorkerFile.prototype.constructor=WorkerFile;WorkerFile.prototype.getRemoteFdId=function getRemoteFdId(){return this._remoteFdId;};/**\n\t     * @hidden\n\t     */WorkerFile.prototype.toRemoteArg=function toRemoteArg(){return{type:SpecialArgType.FD,id:this._remoteFdId,data:bufferToTransferrableObject(this.getBuffer()),stat:bufferToTransferrableObject(this.getStats().toBuffer()),path:this.getPath(),flag:this.getFlag().getFlagString()};};WorkerFile.prototype.sync=function sync(cb){this._syncClose('sync',cb);};WorkerFile.prototype.close=function close(cb){this._syncClose('close',cb);};WorkerFile.prototype._syncClose=function _syncClose(type,cb){var this$1=this;if(this.isDirty()){this._fs.syncClose(type,this,function(e){if(!e){this$1.resetDirty();}cb(e);});}else{cb();}};return WorkerFile;}(PreloadFile);/**\n\t * WorkerFS lets you access a BrowserFS instance that is running in a different\n\t * JavaScript context (e.g. access BrowserFS in one of your WebWorkers, or\n\t * access BrowserFS running on the main page from a WebWorker).\n\t *\n\t * For example, to have a WebWorker access files in the main browser thread,\n\t * do the following:\n\t *\n\t * MAIN BROWSER THREAD:\n\t *\n\t * ```javascript\n\t *   // Listen for remote file system requests.\n\t *   BrowserFS.FileSystem.WorkerFS.attachRemoteListener(webWorkerObject);\n\t * ```\n\t *\n\t * WEBWORKER THREAD:\n\t *\n\t * ```javascript\n\t *   // Set the remote file system as the root file system.\n\t *   BrowserFS.configure({ fs: \"WorkerFS\", options: { worker: self }}, function(e) {\n\t *     // Ready!\n\t *   });\n\t * ```\n\t *\n\t * Note that synchronous operations are not permitted on the WorkerFS, regardless\n\t * of the configuration option of the remote FS.\n\t */var WorkerFS=function(BaseFileSystem$$1){function WorkerFS(worker,deprecateMsg){var this$1=this;if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);this._callbackConverter=new CallbackArgumentConverter();this._isInitialized=false;this._isReadOnly=false;this._supportLinks=false;this._supportProps=false;this._worker=worker;deprecationMessage(deprecateMsg,WorkerFS.Name,{worker:\"Web Worker instance\"});this._worker.addEventListener('message',function(e){var resp=e.data;if(isAPIResponse(resp)){var i;var args=resp.args;var fixedArgs=new Array(args.length);// Dispatch event to correct id.\nfor(i=0;i<fixedArgs.length;i++){fixedArgs[i]=this$1._argRemote2Local(args[i]);}this$1._callbackConverter.toLocalArg(resp.cbId).apply(null,fixedArgs);}});}if(BaseFileSystem$$1)WorkerFS.__proto__=BaseFileSystem$$1;WorkerFS.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);WorkerFS.prototype.constructor=WorkerFS;WorkerFS.Create=function Create(opts,cb){var fs=new WorkerFS(opts.worker,false);fs.initialize(function(){cb(null,fs);});};WorkerFS.isAvailable=function isAvailable(){return typeof importScripts!=='undefined'||typeof Worker!=='undefined';};/**\n\t     * Attaches a listener to the remote worker for file system requests.\n\t     */WorkerFS.attachRemoteListener=function attachRemoteListener(worker){var fdConverter=new FileDescriptorArgumentConverter();function argLocal2Remote(arg,requestArgs,cb){switch(_typeof(arg)){case'object':if(arg instanceof Stats){cb(null,statsLocal2Remote(arg));}else if(arg instanceof ApiError){cb(null,apiErrorLocal2Remote(arg));}else if(arg instanceof BaseFile){// Pass in p and flags from original request.\ncb(null,fdConverter.toRemoteArg(arg,requestArgs[0],requestArgs[1],cb));}else if(arg instanceof FileFlag){cb(null,fileFlagLocal2Remote(arg));}else if(arg instanceof Buffer){cb(null,bufferLocal2Remote(arg));}else if(arg instanceof Error){cb(null,errorLocal2Remote(arg));}else{cb(null,arg);}break;default:cb(null,arg);break;}}function argRemote2Local(arg,fixedRequestArgs){if(!arg){return arg;}switch(_typeof(arg)){case'object':if(typeof arg['type']==='number'){var specialArg=arg;switch(specialArg.type){case SpecialArgType.CB:var cbId=arg.id;return function(){var arguments$1=arguments;var i;var fixedArgs=new Array(arguments.length);var message,countdown=arguments.length;function abortAndSendError(err){if(countdown>0){countdown=-1;message={browserfsMessage:true,cbId:cbId,args:[apiErrorLocal2Remote(err)]};worker.postMessage(message);}}for(i=0;i<arguments.length;i++){// Capture i and argument.\n(function(i,arg){argLocal2Remote(arg,fixedRequestArgs,function(err,fixedArg){fixedArgs[i]=fixedArg;if(err){abortAndSendError(err);}else if(--countdown===0){message={browserfsMessage:true,cbId:cbId,args:fixedArgs};worker.postMessage(message);}});})(i,arguments$1[i]);}if(arguments.length===0){message={browserfsMessage:true,cbId:cbId,args:fixedArgs};worker.postMessage(message);}};case SpecialArgType.API_ERROR:return apiErrorRemote2Local(specialArg);case SpecialArgType.STATS:return statsRemote2Local(specialArg);case SpecialArgType.FILEFLAG:return fileFlagRemote2Local(specialArg);case SpecialArgType.BUFFER:return bufferRemote2Local(specialArg);case SpecialArgType.ERROR:return errorRemote2Local(specialArg);default:// No idea what this is.\nreturn arg;}}else{return arg;}default:return arg;}}worker.addEventListener('message',function(e){var request=e.data;if(isAPIRequest(request)){var args=request.args,fixedArgs=new Array(args.length);switch(request.method){case'close':case'sync':(function(){// File descriptor-relative methods.\nvar remoteCb=args[1];fdConverter.applyFdAPIRequest(request,function(err){// Send response.\nvar response={browserfsMessage:true,cbId:remoteCb.id,args:err?[apiErrorLocal2Remote(err)]:[]};worker.postMessage(response);});})();break;case'probe':(function(){var rootFs=_fsMock.getRootFS(),remoteCb=args[1],probeResponse={type:SpecialArgType.PROBE,isReadOnly:rootFs.isReadOnly(),supportsLinks:rootFs.supportsLinks(),supportsProps:rootFs.supportsProps()},response={browserfsMessage:true,cbId:remoteCb.id,args:[probeResponse]};worker.postMessage(response);})();break;default:// File system methods.\nfor(var i=0;i<args.length;i++){fixedArgs[i]=argRemote2Local(args[i],fixedArgs);}var rootFS=_fsMock.getRootFS();rootFS[request.method].apply(rootFS,fixedArgs);break;}}});};WorkerFS.prototype.getName=function getName(){return WorkerFS.Name;};/**\n\t     * **Deprecated. Please use WorkerFS.Create() method to construct and initialize WorkerFS instances.**\n\t     *\n\t     * Called once both local and remote sides are set up.\n\t     */WorkerFS.prototype.initialize=function initialize(cb){var this$1=this;if(!this._isInitialized){var message={browserfsMessage:true,method:'probe',args:[this._argLocal2Remote(emptyBuffer()),this._callbackConverter.toRemoteArg(function(probeResponse){this$1._isInitialized=true;this$1._isReadOnly=probeResponse.isReadOnly;this$1._supportLinks=probeResponse.supportsLinks;this$1._supportProps=probeResponse.supportsProps;cb();})]};this._worker.postMessage(message);}else{cb();}};WorkerFS.prototype.isReadOnly=function isReadOnly(){return this._isReadOnly;};WorkerFS.prototype.supportsSynch=function supportsSynch(){return false;};WorkerFS.prototype.supportsLinks=function supportsLinks(){return this._supportLinks;};WorkerFS.prototype.supportsProps=function supportsProps(){return this._supportProps;};WorkerFS.prototype.rename=function rename(oldPath,newPath,cb){this._rpc('rename',arguments);};WorkerFS.prototype.stat=function stat(p,isLstat,cb){this._rpc('stat',arguments);};WorkerFS.prototype.open=function open(p,flag,mode,cb){this._rpc('open',arguments);};WorkerFS.prototype.unlink=function unlink(p,cb){this._rpc('unlink',arguments);};WorkerFS.prototype.rmdir=function rmdir(p,cb){this._rpc('rmdir',arguments);};WorkerFS.prototype.mkdir=function mkdir(p,mode,cb){this._rpc('mkdir',arguments);};WorkerFS.prototype.readdir=function readdir(p,cb){this._rpc('readdir',arguments);};WorkerFS.prototype.exists=function exists(p,cb){this._rpc('exists',arguments);};WorkerFS.prototype.realpath=function realpath(p,cache,cb){this._rpc('realpath',arguments);};WorkerFS.prototype.truncate=function truncate(p,len,cb){this._rpc('truncate',arguments);};WorkerFS.prototype.readFile=function readFile(fname,encoding,flag,cb){this._rpc('readFile',arguments);};WorkerFS.prototype.writeFile=function writeFile(fname,data,encoding,flag,mode,cb){this._rpc('writeFile',arguments);};WorkerFS.prototype.appendFile=function appendFile(fname,data,encoding,flag,mode,cb){this._rpc('appendFile',arguments);};WorkerFS.prototype.chmod=function chmod(p,isLchmod,mode,cb){this._rpc('chmod',arguments);};WorkerFS.prototype.chown=function chown(p,isLchown,uid,gid,cb){this._rpc('chown',arguments);};WorkerFS.prototype.utimes=function utimes(p,atime,mtime,cb){this._rpc('utimes',arguments);};WorkerFS.prototype.link=function link(srcpath,dstpath,cb){this._rpc('link',arguments);};WorkerFS.prototype.symlink=function symlink(srcpath,dstpath,type,cb){this._rpc('symlink',arguments);};WorkerFS.prototype.readlink=function readlink(p,cb){this._rpc('readlink',arguments);};WorkerFS.prototype.syncClose=function syncClose(method,fd,cb){this._worker.postMessage({browserfsMessage:true,method:method,args:[fd.toRemoteArg(),this._callbackConverter.toRemoteArg(cb)]});};WorkerFS.prototype._argRemote2Local=function _argRemote2Local(arg){if(!arg){return arg;}switch(_typeof(arg)){case'object':if(typeof arg['type']==='number'){var specialArg=arg;switch(specialArg.type){case SpecialArgType.API_ERROR:return apiErrorRemote2Local(specialArg);case SpecialArgType.FD:var fdArg=specialArg;return new WorkerFile(this,fdArg.path,FileFlag.getFileFlag(fdArg.flag),Stats.fromBuffer(transferrableObjectToBuffer(fdArg.stat)),fdArg.id,transferrableObjectToBuffer(fdArg.data));case SpecialArgType.STATS:return statsRemote2Local(specialArg);case SpecialArgType.FILEFLAG:return fileFlagRemote2Local(specialArg);case SpecialArgType.BUFFER:return bufferRemote2Local(specialArg);case SpecialArgType.ERROR:return errorRemote2Local(specialArg);default:return arg;}}else{return arg;}default:return arg;}};WorkerFS.prototype._rpc=function _rpc(methodName,args){var this$1=this;var fixedArgs=new Array(args.length);for(var i=0;i<args.length;i++){fixedArgs[i]=this$1._argLocal2Remote(args[i]);}var message={browserfsMessage:true,method:methodName,args:fixedArgs};this._worker.postMessage(message);};/**\n\t     * Converts a local argument into a remote argument. Public so WorkerFile objects can call it.\n\t     */WorkerFS.prototype._argLocal2Remote=function _argLocal2Remote(arg){if(!arg){return arg;}switch(_typeof(arg)){case\"object\":if(arg instanceof Stats){return statsLocal2Remote(arg);}else if(arg instanceof ApiError){return apiErrorLocal2Remote(arg);}else if(arg instanceof WorkerFile){return arg.toRemoteArg();}else if(arg instanceof FileFlag){return fileFlagLocal2Remote(arg);}else if(arg instanceof Buffer){return bufferLocal2Remote(arg);}else if(arg instanceof Error){return errorLocal2Remote(arg);}else{return\"Unknown argument\";}case\"function\":return this._callbackConverter.toRemoteArg(arg);default:return arg;}};return WorkerFS;}(BaseFileSystem);WorkerFS.Name=\"WorkerFS\";WorkerFS.Options={worker:{type:\"object\",description:\"The target worker that you want to connect to, or the current worker if in a worker context.\",validator:function validator(v,cb){// Check for a `postMessage` function.\nif(v['postMessage']){cb();}else{cb(new ApiError(ErrorCode.EINVAL,\"option must be a Web Worker instance.\"));}}}};/**\n\t * Contains utility methods for performing a variety of tasks with\n\t * XmlHttpRequest across browsers.\n\t */function asyncDownloadFileModern(p,type,cb){var req=new XMLHttpRequest();req.open('GET',p,true);var jsonSupported=true;switch(type){case'buffer':req.responseType='arraybuffer';break;case'json':// Some browsers don't support the JSON response type.\n// They either reset responseType, or throw an exception.\n// @see https://github.com/Modernizr/Modernizr/blob/master/src/testXhrType.js\ntry{req.responseType='json';jsonSupported=req.responseType==='json';}catch(e){jsonSupported=false;}break;default:return cb(new ApiError(ErrorCode.EINVAL,\"Invalid download type: \"+type));}req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case'buffer':// XXX: WebKit-based browsers return *null* when XHRing an empty file.\nreturn cb(null,req.response?Buffer.from(req.response):emptyBuffer());case'json':if(jsonSupported){return cb(null,req.response);}else{return cb(null,JSON.parse(req.responseText));}}}else{return cb(new ApiError(req.status,\"XHR error.\"));}}};req.send();}function syncDownloadFileModern(p,type){var req=new XMLHttpRequest();req.open('GET',p,false);// On most platforms, we cannot set the responseType of synchronous downloads.\n// @todo Test for this; IE10 allows this, as do older versions of Chrome/FF.\nvar data=null;var err=null;// Classic hack to download binary data as a string.\nreq.overrideMimeType('text/plain; charset=x-user-defined');req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case'buffer':// Convert the text into a buffer.\nvar text=req.responseText;data=Buffer.alloc(text.length);// Throw away the upper bits of each character.\nfor(var i=0;i<text.length;i++){// This will automatically throw away the upper bit of each\n// character for us.\ndata[i]=text.charCodeAt(i);}return;case'json':data=JSON.parse(req.responseText);return;}}else{err=new ApiError(req.status,\"XHR error.\");return;}}};req.send();if(err){throw err;}return data;}function syncDownloadFileIE10(p,type){var req=new XMLHttpRequest();req.open('GET',p,false);switch(type){case'buffer':req.responseType='arraybuffer';break;case'json':// IE10 does not support the JSON type.\nbreak;default:throw new ApiError(ErrorCode.EINVAL,\"Invalid download type: \"+type);}var data;var err;req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){switch(type){case'buffer':data=Buffer.from(req.response);break;case'json':data=JSON.parse(req.response);break;}}else{err=new ApiError(req.status,\"XHR error.\");}}};req.send();if(err){throw err;}return data;}/**\n\t * @hidden\n\t */function getFileSize(async,p,cb){var req=new XMLHttpRequest();req.open('HEAD',p,async);req.onreadystatechange=function(e){if(req.readyState===4){if(req.status===200){try{return cb(null,parseInt(req.getResponseHeader('Content-Length')||'-1',10));}catch(e){// In the event that the header isn't present or there is an error...\nreturn cb(new ApiError(ErrorCode.EIO,\"XHR HEAD error: Could not read content-length.\"));}}else{return cb(new ApiError(req.status,\"XHR HEAD error.\"));}}};req.send();}/**\n\t * Asynchronously download a file as a buffer or a JSON object.\n\t * Note that the third function signature with a non-specialized type is\n\t * invalid, but TypeScript requires it when you specialize string arguments to\n\t * constants.\n\t * @hidden\n\t */var asyncDownloadFile=asyncDownloadFileModern;/**\n\t * Synchronously download a file as a buffer or a JSON object.\n\t * Note that the third function signature with a non-specialized type is\n\t * invalid, but TypeScript requires it when you specialize string arguments to\n\t * constants.\n\t * @hidden\n\t */var syncDownloadFile=isIE&&typeof Blob!=='undefined'?syncDownloadFileIE10:syncDownloadFileModern;/**\n\t * Synchronously retrieves the size of the given file in bytes.\n\t * @hidden\n\t */function getFileSizeSync(p){var rv=-1;getFileSize(false,p,function(err,size){if(err){throw err;}rv=size;});return rv;}/**\n\t * Asynchronously retrieves the size of the given file in bytes.\n\t * @hidden\n\t */function getFileSizeAsync(p,cb){getFileSize(true,p,cb);}/**\n\t * A simple class for storing a filesystem index. Assumes that all paths passed\n\t * to it are *absolute* paths.\n\t *\n\t * Can be used as a partial or a full index, although care must be taken if used\n\t * for the former purpose, especially when directories are concerned.\n\t */var FileIndex=function FileIndex(){// _index is a single-level key,value store that maps *directory* paths to\n// DirInodes. File information is only contained in DirInodes themselves.\nthis._index={};// Create the root directory.\nthis.addPath('/',new DirInode());};/**\n\t * Static method for constructing indices from a JSON listing.\n\t * @param listing Directory listing generated by tools/XHRIndexer.coffee\n\t * @return A new FileIndex object.\n\t */FileIndex.fromListing=function fromListing(listing){var idx=new FileIndex();// Add a root DirNode.\nvar rootInode=new DirInode();idx._index['/']=rootInode;var queue=[['',listing,rootInode]];while(queue.length>0){var inode=void 0;var next=queue.pop();var pwd=next[0];var tree=next[1];var parent=next[2];for(var node in tree){if(tree.hasOwnProperty(node)){var children=tree[node];var name=pwd+\"/\"+node;if(children){idx._index[name]=inode=new DirInode();queue.push([name,children,inode]);}else{// This inode doesn't have correct size information, noted with -1.\ninode=new FileInode(new Stats(FileType.FILE,-1,0x16D));}if(parent){parent._ls[node]=inode;}}}}return idx;};/**\n\t * Runs the given function over all files in the index.\n\t */FileIndex.prototype.fileIterator=function fileIterator(cb){var this$1=this;for(var path$$1 in this$1._index){if(this$1._index.hasOwnProperty(path$$1)){var dir=this$1._index[path$$1];var files=dir.getListing();for(var i=0,list=files;i<list.length;i+=1){var file=list[i];var item=dir.getItem(file);if(isFileInode(item)){cb(item.getData());}}}}};/**\n\t * Adds the given absolute path to the index if it is not already in the index.\n\t * Creates any needed parent directories.\n\t * @param path The path to add to the index.\n\t * @param inode The inode for the\n\t *   path to add.\n\t * @return 'True' if it was added or already exists, 'false' if there\n\t *   was an issue adding it (e.g. item in path is a file, item exists but is\n\t *   different).\n\t * @todo If adding fails and implicitly creates directories, we do not clean up\n\t *   the new empty directories.\n\t */FileIndex.prototype.addPath=function addPath(path$$1,inode){if(!inode){throw new Error('Inode must be specified');}if(path$$1[0]!=='/'){throw new Error('Path must be absolute, got: '+path$$1);}// Check if it already exists.\nif(this._index.hasOwnProperty(path$$1)){return this._index[path$$1]===inode;}var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];// Try to add to its parent directory first.\nvar parent=this._index[dirpath];if(parent===undefined&&path$$1!=='/'){// Create parent.\nparent=new DirInode();if(!this.addPath(dirpath,parent)){return false;}}// Add myself to my parent.\nif(path$$1!=='/'){if(!parent.addItem(itemname,inode)){return false;}}// If I'm a directory, add myself to the index.\nif(isDirInode(inode)){this._index[path$$1]=inode;}return true;};/**\n\t * Adds the given absolute path to the index if it is not already in the index.\n\t * The path is added without special treatment (no joining of adjacent separators, etc).\n\t * Creates any needed parent directories.\n\t * @param path The path to add to the index.\n\t * @param inode The inode for the\n\t *   path to add.\n\t * @return 'True' if it was added or already exists, 'false' if there\n\t *   was an issue adding it (e.g. item in path is a file, item exists but is\n\t *   different).\n\t * @todo If adding fails and implicitly creates directories, we do not clean up\n\t *   the new empty directories.\n\t */FileIndex.prototype.addPathFast=function addPathFast(path$$1,inode){var itemNameMark=path$$1.lastIndexOf('/');var parentPath=itemNameMark===0?\"/\":path$$1.substring(0,itemNameMark);var itemName=path$$1.substring(itemNameMark+1);// Try to add to its parent directory first.\nvar parent=this._index[parentPath];if(parent===undefined){// Create parent.\nparent=new DirInode();this.addPathFast(parentPath,parent);}if(!parent.addItem(itemName,inode)){return false;}// If adding a directory, add to the index as well.\nif(inode.isDir()){this._index[path$$1]=inode;}return true;};/**\n\t * Removes the given path. Can be a file or a directory.\n\t * @return The removed item,\n\t *   or null if it did not exist.\n\t */FileIndex.prototype.removePath=function removePath(path$$1){var this$1=this;var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];// Try to remove it from its parent directory first.\nvar parent=this._index[dirpath];if(parent===undefined){return null;}// Remove myself from my parent.\nvar inode=parent.remItem(itemname);if(inode===null){return null;}// If I'm a directory, remove myself from the index, and remove my children.\nif(isDirInode(inode)){var children=inode.getListing();for(var i=0,list=children;i<list.length;i+=1){var child=list[i];this$1.removePath(path$$1+'/'+child);}// Remove the directory from the index, unless it's the root.\nif(path$$1!=='/'){delete this._index[path$$1];}}return inode;};/**\n\t * Retrieves the directory listing of the given path.\n\t * @return An array of files in the given path, or 'null' if it does not exist.\n\t */FileIndex.prototype.ls=function ls(path$$1){var item=this._index[path$$1];if(item===undefined){return null;}return item.getListing();};/**\n\t * Returns the inode of the given item.\n\t * @return Returns null if the item does not exist.\n\t */FileIndex.prototype.getInode=function getInode(path$$1){var splitPath=this._split_path(path$$1);var dirpath=splitPath[0];var itemname=splitPath[1];// Retrieve from its parent directory.\nvar parent=this._index[dirpath];if(parent===undefined){return null;}// Root case\nif(dirpath===path$$1){return parent;}return parent.getItem(itemname);};/**\n\t * Split into a (directory path, item name) pair\n\t */FileIndex.prototype._split_path=function _split_path(p){var dirpath=path.dirname(p);var itemname=p.substr(dirpath.length+(dirpath===\"/\"?0:1));return[dirpath,itemname];};/**\n\t * Inode for a file. Stores an arbitrary (filesystem-specific) data payload.\n\t */var FileInode=function FileInode(data){this.data=data;};FileInode.prototype.isFile=function isFile(){return true;};FileInode.prototype.isDir=function isDir(){return false;};FileInode.prototype.getData=function getData(){return this.data;};FileInode.prototype.setData=function setData(data){this.data=data;};/**\n\t * Inode for a directory. Currently only contains the directory listing.\n\t */var DirInode=function DirInode(data){if(data===void 0)data=null;this.data=data;this._ls={};};DirInode.prototype.isFile=function isFile(){return false;};DirInode.prototype.isDir=function isDir(){return true;};DirInode.prototype.getData=function getData(){return this.data;};/**\n\t * Return a Stats object for this inode.\n\t * @todo Should probably remove this at some point. This isn't the\n\t *   responsibility of the FileIndex.\n\t */DirInode.prototype.getStats=function getStats(){return new Stats(FileType.DIRECTORY,4096,0x16D);};/**\n\t * Returns the directory listing for this directory. Paths in the directory are\n\t * relative to the directory's path.\n\t * @return The directory listing for this directory.\n\t */DirInode.prototype.getListing=function getListing(){return Object.keys(this._ls);};/**\n\t * Returns the inode for the indicated item, or null if it does not exist.\n\t * @param p Name of item in this directory.\n\t */DirInode.prototype.getItem=function getItem(p){var item=this._ls[p];return item?item:null;};/**\n\t * Add the given item to the directory listing. Note that the given inode is\n\t * not copied, and will be mutated by the DirInode if it is a DirInode.\n\t * @param p Item name to add to the directory listing.\n\t * @param inode The inode for the\n\t *   item to add to the directory inode.\n\t * @return True if it was added, false if it already existed.\n\t */DirInode.prototype.addItem=function addItem(p,inode){if(p in this._ls){return false;}this._ls[p]=inode;return true;};/**\n\t * Removes the given item from the directory listing.\n\t * @param p Name of item to remove from the directory listing.\n\t * @return Returns the item\n\t *   removed, or null if the item did not exist.\n\t */DirInode.prototype.remItem=function remItem(p){var item=this._ls[p];if(item===undefined){return null;}delete this._ls[p];return item;};/**\n\t * @hidden\n\t */function isFileInode(inode){return!!inode&&inode.isFile();}/**\n\t * @hidden\n\t */function isDirInode(inode){return!!inode&&inode.isDir();}/**\n\t * Try to convert the given buffer into a string, and pass it to the callback.\n\t * Optimization that removes the needed try/catch into a helper function, as\n\t * this is an uncommon case.\n\t * @hidden\n\t */function tryToString(buff,encoding,cb){try{cb(null,buff.toString(encoding));}catch(e){cb(e);}}/**\n\t * A simple filesystem backed by XMLHttpRequests. You must create a directory listing using the\n\t * `make_xhrfs_index` tool provided by BrowserFS.\n\t *\n\t * If you install BrowserFS globally with `npm i -g browserfs`, you can generate a listing by\n\t * running `make_xhrfs_index` in your terminal in the directory you would like to index:\n\t *\n\t * ```\n\t * make_xhrfs_index > index.json\n\t * ```\n\t *\n\t * Listings objects look like the following:\n\t *\n\t * ```json\n\t * {\n\t *   \"home\": {\n\t *     \"jvilk\": {\n\t *       \"someFile.txt\": null,\n\t *       \"someDir\": {\n\t *         // Empty directory\n\t *       }\n\t *     }\n\t *   }\n\t * }\n\t * ```\n\t *\n\t * *This example has the folder `/home/jvilk` with subfile `someFile.txt` and subfolder `someDir`.*\n\t */var XmlHttpRequest=function(BaseFileSystem$$1){function XmlHttpRequest(listingUrlOrObj,prefixUrl,deprecateMsg){if(prefixUrl===void 0)prefixUrl='';if(deprecateMsg===void 0)deprecateMsg=true;BaseFileSystem$$1.call(this);if(!listingUrlOrObj){listingUrlOrObj='index.json';}// prefix_url must end in a directory separator.\nif(prefixUrl.length>0&&prefixUrl.charAt(prefixUrl.length-1)!=='/'){prefixUrl=prefixUrl+'/';}this.prefixUrl=prefixUrl;var listing=null;if(typeof listingUrlOrObj===\"string\"){listing=this._requestFileSync(listingUrlOrObj,'json');if(!listing){throw new Error(\"Unable to find listing at URL: ${listingUrlOrObj}\");}}else{listing=listingUrlOrObj;}deprecationMessage(deprecateMsg,XmlHttpRequest.Name,{index:typeof listingUrlOrObj===\"string\"?listingUrlOrObj:\"file index as an object\",baseUrl:prefixUrl});this._index=FileIndex.fromListing(listing);}if(BaseFileSystem$$1)XmlHttpRequest.__proto__=BaseFileSystem$$1;XmlHttpRequest.prototype=Object.create(BaseFileSystem$$1&&BaseFileSystem$$1.prototype);XmlHttpRequest.prototype.constructor=XmlHttpRequest;/**\n\t     * Construct an XmlHttpRequest file system backend with the given options.\n\t     */XmlHttpRequest.Create=function Create(opts,cb){if(opts.index===undefined){opts.index=\"index.json\";}if(typeof opts.index===\"string\"){XmlHttpRequest.FromURL(opts.index,cb,opts.baseUrl,false);}else{cb(null,new XmlHttpRequest(opts.index,opts.baseUrl,false));}};XmlHttpRequest.isAvailable=function isAvailable(){return typeof XMLHttpRequest!==\"undefined\"&&XMLHttpRequest!==null;};/**\n\t     * **Deprecated. Please use XmlHttpRequest.Create() method instead to construct XmlHttpRequest objects.**\n\t     *\n\t     * Constructs an XmlHttpRequest object using the directory listing at the given URL.\n\t     * Uses the base URL as the URL prefix for fetched files.\n\t     * @param cb Called when the file system has been instantiated, or if an error occurs.\n\t     */XmlHttpRequest.FromURL=function FromURL(url,cb,baseUrl,deprecateMsg){if(baseUrl===void 0)baseUrl=url.slice(0,url.lastIndexOf('/')+1);if(deprecateMsg===void 0)deprecateMsg=true;if(deprecateMsg){console.warn(\"[XmlHttpRequest] XmlHttpRequest.FromURL() is deprecated and will be removed in the next major release. Please use 'XmlHttpRequest.Create({ index: \\\"\"+url+\"\\\", baseUrl: \\\"\"+baseUrl+\"\\\" }, cb)' instead.\");}asyncDownloadFile(url,\"json\",function(e,data){if(e){cb(e);}else{cb(null,new XmlHttpRequest(data,baseUrl,false));}});};XmlHttpRequest.prototype.empty=function empty(){this._index.fileIterator(function(file){file.fileData=null;});};XmlHttpRequest.prototype.getName=function getName(){return XmlHttpRequest.Name;};XmlHttpRequest.prototype.diskSpace=function diskSpace(path$$1,cb){// Read-only file system. We could calculate the total space, but that's not\n// important right now.\ncb(0,0);};XmlHttpRequest.prototype.isReadOnly=function isReadOnly(){return true;};XmlHttpRequest.prototype.supportsLinks=function supportsLinks(){return false;};XmlHttpRequest.prototype.supportsProps=function supportsProps(){return false;};XmlHttpRequest.prototype.supportsSynch=function supportsSynch(){return true;};/**\n\t     * Special XHR function: Preload the given file into the index.\n\t     * @param [String] path\n\t     * @param [BrowserFS.Buffer] buffer\n\t     */XmlHttpRequest.prototype.preloadFile=function preloadFile(path$$1,buffer$$1){var inode=this._index.getInode(path$$1);if(isFileInode(inode)){if(inode===null){throw ApiError.ENOENT(path$$1);}var stats=inode.getData();stats.size=buffer$$1.length;stats.fileData=buffer$$1;}else{throw ApiError.EISDIR(path$$1);}};XmlHttpRequest.prototype.stat=function stat(path$$1,isLstat,cb){var inode=this._index.getInode(path$$1);if(inode===null){return cb(ApiError.ENOENT(path$$1));}var stats;if(isFileInode(inode)){stats=inode.getData();// At this point, a non-opened file will still have default stats from the listing.\nif(stats.size<0){this._requestFileSizeAsync(path$$1,function(e,size){if(e){return cb(e);}stats.size=size;cb(null,stats.clone());});}else{cb(null,stats.clone());}}else if(isDirInode(inode)){stats=inode.getStats();cb(null,stats);}else{cb(ApiError.FileError(ErrorCode.EINVAL,path$$1));}};XmlHttpRequest.prototype.statSync=function statSync(path$$1,isLstat){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1);}var stats;if(isFileInode(inode)){stats=inode.getData();// At this point, a non-opened file will still have default stats from the listing.\nif(stats.size<0){stats.size=this._requestFileSizeSync(path$$1);}}else if(isDirInode(inode)){stats=inode.getStats();}else{throw ApiError.FileError(ErrorCode.EINVAL,path$$1);}return stats;};XmlHttpRequest.prototype.open=function open(path$$1,flags,mode,cb){// INVARIANT: You can't write to files on this file system.\nif(flags.isWriteable()){return cb(new ApiError(ErrorCode.EPERM,path$$1));}var self=this;// Check if the path exists, and is a file.\nvar inode=this._index.getInode(path$$1);if(inode===null){return cb(ApiError.ENOENT(path$$1));}if(isFileInode(inode)){var stats=inode.getData();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:return cb(ApiError.EEXIST(path$$1));case ActionType.NOP:// Use existing file contents.\n// XXX: Uh, this maintains the previously-used flag.\nif(stats.fileData){return cb(null,new NoSyncFile(self,path$$1,flags,stats.clone(),stats.fileData));}// @todo be lazier about actually requesting the file\nthis._requestFileAsync(path$$1,'buffer',function(err,buffer$$1){if(err){return cb(err);}// we don't initially have file sizes\nstats.size=buffer$$1.length;stats.fileData=buffer$$1;return cb(null,new NoSyncFile(self,path$$1,flags,stats.clone(),buffer$$1));});break;default:return cb(new ApiError(ErrorCode.EINVAL,'Invalid FileMode object.'));}}else{return cb(ApiError.EISDIR(path$$1));}};XmlHttpRequest.prototype.openSync=function openSync(path$$1,flags,mode){// INVARIANT: You can't write to files on this file system.\nif(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,path$$1);}// Check if the path exists, and is a file.\nvar inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1);}if(isFileInode(inode)){var stats=inode.getData();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(path$$1);case ActionType.NOP:// Use existing file contents.\n// XXX: Uh, this maintains the previously-used flag.\nif(stats.fileData){return new NoSyncFile(this,path$$1,flags,stats.clone(),stats.fileData);}// @todo be lazier about actually requesting the file\nvar buffer$$1=this._requestFileSync(path$$1,'buffer');// we don't initially have file sizes\nstats.size=buffer$$1.length;stats.fileData=buffer$$1;return new NoSyncFile(this,path$$1,flags,stats.clone(),buffer$$1);default:throw new ApiError(ErrorCode.EINVAL,'Invalid FileMode object.');}}else{throw ApiError.EISDIR(path$$1);}};XmlHttpRequest.prototype.readdir=function readdir(path$$1,cb){try{cb(null,this.readdirSync(path$$1));}catch(e){cb(e);}};XmlHttpRequest.prototype.readdirSync=function readdirSync(path$$1){// Check if it exists.\nvar inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1);}else if(isDirInode(inode)){return inode.getListing();}else{throw ApiError.ENOTDIR(path$$1);}};/**\n\t     * We have the entire file as a buffer; optimize readFile.\n\t     */XmlHttpRequest.prototype.readFile=function readFile(fname,encoding,flag,cb){// Wrap cb in file closing code.\nvar oldCb=cb;// Get file.\nthis.open(fname,flag,0x1a4,function(err,fd){if(err){return cb(err);}cb=function cb(err,arg){fd.close(function(err2){if(!err){err=err2;}return oldCb(err,arg);});};var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){cb(err,copyingSlice(fdBuff));}else{tryToString(fdBuff,encoding,cb);}});};/**\n\t     * Specially-optimized readfile.\n\t     */XmlHttpRequest.prototype.readFileSync=function readFileSync(fname,encoding,flag){// Get file.\nvar fd=this.openSync(fname,flag,0x1a4);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff);}return fdBuff.toString(encoding);}finally{fd.closeSync();}};XmlHttpRequest.prototype.getXhrPath=function getXhrPath(filePath){if(filePath.charAt(0)==='/'){filePath=filePath.slice(1);}return this.prefixUrl+filePath;};XmlHttpRequest.prototype._requestFileAsync=function _requestFileAsync(p,type,cb){asyncDownloadFile(this.getXhrPath(p),type,cb);};XmlHttpRequest.prototype._requestFileSync=function _requestFileSync(p,type){return syncDownloadFile(this.getXhrPath(p),type);};/**\n\t     * Only requests the HEAD content, for the file size.\n\t     */XmlHttpRequest.prototype._requestFileSizeAsync=function _requestFileSizeAsync(path$$1,cb){getFileSizeAsync(this.getXhrPath(path$$1),cb);};XmlHttpRequest.prototype._requestFileSizeSync=function _requestFileSizeSync(path$$1){return getFileSizeSync(this.getXhrPath(path$$1));};return XmlHttpRequest;}(BaseFileSystem);XmlHttpRequest.Name=\"XmlHttpRequest\";XmlHttpRequest.Options={index:{type:[\"string\",\"object\"],optional:true,description:\"URL to a file index as a JSON file or the file index object itself, generated with the make_xhrfs_index script. Defaults to `index.json`.\"},baseUrl:{type:\"string\",optional:true,description:\"Used as the URL prefix for fetched files. Default: Fetch files relative to the index.\"}};/**\n\t * (Nonstandard) String utility function for 8-bit ASCII with the extended\n\t * character set. Unlike the ASCII above, we do not mask the high bits.\n\t *\n\t * Placed into a separate file so it can be used with other Buffer implementations.\n\t * @see http://en.wikipedia.org/wiki/Extended_ASCII\n\t */ /**\n\t * (Nonstandard) String utility function for 8-bit ASCII with the extended\n\t * character set. Unlike the ASCII above, we do not mask the high bits.\n\t *\n\t * Placed into a separate file so it can be used with other Buffer implementations.\n\t * @see http://en.wikipedia.org/wiki/Extended_ASCII\n\t */var ExtendedASCII=function ExtendedASCII(){};ExtendedASCII.str2byte=function str2byte(str,buf){var length=str.length>buf.length?buf.length:str.length;for(var i=0;i<length;i++){var charCode=str.charCodeAt(i);if(charCode>0x7F){// Check if extended ASCII.\nvar charIdx=ExtendedASCII.extendedChars.indexOf(str.charAt(i));if(charIdx>-1){charCode=charIdx+0x80;}// Otherwise, keep it as-is.\n}buf[charCode]=i;}return length;};ExtendedASCII.byte2str=function byte2str(buff){var chars=new Array(buff.length);for(var i=0;i<buff.length;i++){var charCode=buff[i];if(charCode>0x7F){chars[i]=ExtendedASCII.extendedChars[charCode-128];}else{chars[i]=String.fromCharCode(charCode);}}return chars.join('');};ExtendedASCII.byteLength=function byteLength(str){return str.length;};ExtendedASCII.extendedChars=[\"\\xC7\",\"\\xFC\",\"\\xE9\",\"\\xE2\",\"\\xE4\",\"\\xE0\",\"\\xE5\",\"\\xE7\",\"\\xEA\",\"\\xEB\",\"\\xE8\",\"\\xEF\",\"\\xEE\",\"\\xEC\",\"\\xC4\",\"\\xC5\",\"\\xC9\",\"\\xE6\",\"\\xC6\",\"\\xF4\",\"\\xF6\",\"\\xF2\",\"\\xFB\",\"\\xF9\",\"\\xFF\",\"\\xD6\",\"\\xDC\",\"\\xF8\",\"\\xA3\",\"\\xD8\",\"\\xD7\",\"\\u0192\",\"\\xE1\",\"\\xED\",\"\\xF3\",\"\\xFA\",\"\\xF1\",\"\\xD1\",\"\\xAA\",\"\\xBA\",\"\\xBF\",\"\\xAE\",\"\\xAC\",\"\\xBD\",\"\\xBC\",\"\\xA1\",\"\\xAB\",\"\\xBB\",'_','_','_',\"\\xA6\",\"\\xA6\",\"\\xC1\",\"\\xC2\",\"\\xC0\",\"\\xA9\",\"\\xA6\",\"\\xA6\",'+','+',\"\\xA2\",\"\\xA5\",'+','+','-','-','+','-','+',\"\\xE3\",\"\\xC3\",'+','+','-','-',\"\\xA6\",'-','+',\"\\xA4\",\"\\xF0\",\"\\xD0\",\"\\xCA\",\"\\xCB\",\"\\xC8\",'i',\"\\xCD\",\"\\xCE\",\"\\xCF\",'+','+','_','_',\"\\xA6\",\"\\xCC\",'_',\"\\xD3\",\"\\xDF\",\"\\xD4\",\"\\xD2\",\"\\xF5\",\"\\xD5\",\"\\xB5\",\"\\xFE\",\"\\xDE\",\"\\xDA\",\"\\xDB\",\"\\xD9\",\"\\xFD\",\"\\xDD\",\"\\xAF\",\"\\xB4\",\"\\xAD\",\"\\xB1\",'_',\"\\xBE\",\"\\xB6\",\"\\xA7\",\"\\xF7\",\"\\xB8\",\"\\xB0\",\"\\xA8\",\"\\xB7\",\"\\xB9\",\"\\xB3\",\"\\xB2\",'_',' '];/**\n\t * @hidden\n\t */var inflateRaw=__webpack_require__(31).inflateRaw;/**\n\t * Maps CompressionMethod => function that decompresses.\n\t * @hidden\n\t */var decompressionMethods={};/**\n\t * 4.4.2.2: Indicates the compatibiltiy of a file's external attributes.\n\t */var ExternalFileAttributeType;(function(ExternalFileAttributeType){ExternalFileAttributeType[ExternalFileAttributeType[\"MSDOS\"]=0]=\"MSDOS\";ExternalFileAttributeType[ExternalFileAttributeType[\"AMIGA\"]=1]=\"AMIGA\";ExternalFileAttributeType[ExternalFileAttributeType[\"OPENVMS\"]=2]=\"OPENVMS\";ExternalFileAttributeType[ExternalFileAttributeType[\"UNIX\"]=3]=\"UNIX\";ExternalFileAttributeType[ExternalFileAttributeType[\"VM_CMS\"]=4]=\"VM_CMS\";ExternalFileAttributeType[ExternalFileAttributeType[\"ATARI_ST\"]=5]=\"ATARI_ST\";ExternalFileAttributeType[ExternalFileAttributeType[\"OS2_HPFS\"]=6]=\"OS2_HPFS\";ExternalFileAttributeType[ExternalFileAttributeType[\"MAC\"]=7]=\"MAC\";ExternalFileAttributeType[ExternalFileAttributeType[\"Z_SYSTEM\"]=8]=\"Z_SYSTEM\";ExternalFileAttributeType[ExternalFileAttributeType[\"CP_M\"]=9]=\"CP_M\";ExternalFileAttributeType[ExternalFileAttributeType[\"NTFS\"]=10]=\"NTFS\";ExternalFileAttributeType[ExternalFileAttributeType[\"MVS\"]=11]=\"MVS\";ExternalFileAttributeType[ExternalFileAttributeType[\"VSE\"]=12]=\"VSE\";ExternalFileAttributeType[ExternalFileAttributeType[\"ACORN_RISC\"]=13]=\"ACORN_RISC\";ExternalFileAttributeType[ExternalFileAttributeType[\"VFAT\"]=14]=\"VFAT\";ExternalFileAttributeType[ExternalFileAttributeType[\"ALT_MVS\"]=15]=\"ALT_MVS\";ExternalFileAttributeType[ExternalFileAttributeType[\"BEOS\"]=16]=\"BEOS\";ExternalFileAttributeType[ExternalFileAttributeType[\"TANDEM\"]=17]=\"TANDEM\";ExternalFileAttributeType[ExternalFileAttributeType[\"OS_400\"]=18]=\"OS_400\";ExternalFileAttributeType[ExternalFileAttributeType[\"OSX\"]=19]=\"OSX\";})(ExternalFileAttributeType||(ExternalFileAttributeType={}));/**\n\t * 4.4.5\n\t */var CompressionMethod;(function(CompressionMethod){CompressionMethod[CompressionMethod[\"STORED\"]=0]=\"STORED\";CompressionMethod[CompressionMethod[\"SHRUNK\"]=1]=\"SHRUNK\";CompressionMethod[CompressionMethod[\"REDUCED_1\"]=2]=\"REDUCED_1\";CompressionMethod[CompressionMethod[\"REDUCED_2\"]=3]=\"REDUCED_2\";CompressionMethod[CompressionMethod[\"REDUCED_3\"]=4]=\"REDUCED_3\";CompressionMethod[CompressionMethod[\"REDUCED_4\"]=5]=\"REDUCED_4\";CompressionMethod[CompressionMethod[\"IMPLODE\"]=6]=\"IMPLODE\";CompressionMethod[CompressionMethod[\"DEFLATE\"]=8]=\"DEFLATE\";CompressionMethod[CompressionMethod[\"DEFLATE64\"]=9]=\"DEFLATE64\";CompressionMethod[CompressionMethod[\"TERSE_OLD\"]=10]=\"TERSE_OLD\";CompressionMethod[CompressionMethod[\"BZIP2\"]=12]=\"BZIP2\";CompressionMethod[CompressionMethod[\"LZMA\"]=14]=\"LZMA\";CompressionMethod[CompressionMethod[\"TERSE_NEW\"]=18]=\"TERSE_NEW\";CompressionMethod[CompressionMethod[\"LZ77\"]=19]=\"LZ77\";CompressionMethod[CompressionMethod[\"WAVPACK\"]=97]=\"WAVPACK\";CompressionMethod[CompressionMethod[\"PPMD\"]=98]=\"PPMD\";// PPMd version I, Rev 1\n})(CompressionMethod||(CompressionMethod={}));/**\n\t * Converts the input time and date in MS-DOS format into a JavaScript Date\n\t * object.\n\t * @hidden\n\t */function msdos2date(time,date){// MS-DOS Date\n// |0 0 0 0  0|0 0 0  0|0 0 0  0 0 0 0\n//   D (1-31)  M (1-23)  Y (from 1980)\nvar day=date&0x1F;// JS date is 0-indexed, DOS is 1-indexed.\nvar month=(date>>5&0xF)-1;var year=(date>>9)+1980;// MS DOS Time\n// |0 0 0 0  0|0 0 0  0 0 0|0  0 0 0 0\n//    Second      Minute       Hour\nvar second=time&0x1F;var minute=time>>5&0x3F;var hour=time>>11;return new Date(year,month,day,hour,minute,second);}/**\n\t * Safely returns the string from the buffer, even if it is 0 bytes long.\n\t * (Normally, calling toString() on a buffer with start === end causes an\n\t * exception).\n\t * @hidden\n\t */function safeToString(buff,useUTF8,start,length){if(length===0){return\"\";}else if(useUTF8){return buff.toString('utf8',start,start+length);}else{return ExtendedASCII.byte2str(buff.slice(start,start+length));}}/*\n\t   4.3.6 Overall .ZIP file format:\n\t\n\t      [local file header 1]\n\t      [encryption header 1]\n\t      [file data 1]\n\t      [data descriptor 1]\n\t      .\n\t      .\n\t      .\n\t      [local file header n]\n\t      [encryption header n]\n\t      [file data n]\n\t      [data descriptor n]\n\t      [archive decryption header]\n\t      [archive extra data record]\n\t      [central directory header 1]\n\t      .\n\t      .\n\t      .\n\t      [central directory header n]\n\t      [zip64 end of central directory record]\n\t      [zip64 end of central directory locator]\n\t      [end of central directory record]\n\t*/ /**\n\t * 4.3.7  Local file header:\n\t *\n\t *     local file header signature     4 bytes  (0x04034b50)\n\t *     version needed to extract       2 bytes\n\t *     general purpose bit flag        2 bytes\n\t *     compression method              2 bytes\n\t *    last mod file time              2 bytes\n\t *    last mod file date              2 bytes\n\t *    crc-32                          4 bytes\n\t *    compressed size                 4 bytes\n\t *    uncompressed size               4 bytes\n\t *    file name length                2 bytes\n\t *    extra field length              2 bytes\n\t *\n\t *    file name (variable size)\n\t *    extra field (variable size)\n\t */var FileHeader=function FileHeader(data){this.data=data;if(data.readUInt32LE(0)!==0x04034b50){throw new ApiError(ErrorCode.EINVAL,\"Invalid Zip file: Local file header has invalid signature: \"+this.data.readUInt32LE(0));}};FileHeader.prototype.versionNeeded=function versionNeeded(){return this.data.readUInt16LE(4);};FileHeader.prototype.flags=function flags(){return this.data.readUInt16LE(6);};FileHeader.prototype.compressionMethod=function compressionMethod(){return this.data.readUInt16LE(8);};FileHeader.prototype.lastModFileTime=function lastModFileTime(){// Time and date is in MS-DOS format.\nreturn msdos2date(this.data.readUInt16LE(10),this.data.readUInt16LE(12));};FileHeader.prototype.rawLastModFileTime=function rawLastModFileTime(){return this.data.readUInt32LE(10);};FileHeader.prototype.crc32=function crc32(){return this.data.readUInt32LE(14);};/**\n\t  * These two values are COMPLETELY USELESS.\n\t  *\n\t  * Section 4.4.9:\n\t  *If bit 3 of the general purpose bit flag is set,\n\t  *these fields are set to zero in the local header and the\n\t  *correct values are put in the data descriptor and\n\t  *in the central directory.\n\t  *\n\t  * So we'll just use the central directory's values.\n\t  */ // public compressedSize(): number { return this.data.readUInt32LE(18); }\n// public uncompressedSize(): number { return this.data.readUInt32LE(22); }\nFileHeader.prototype.fileNameLength=function fileNameLength(){return this.data.readUInt16LE(26);};FileHeader.prototype.extraFieldLength=function extraFieldLength(){return this.data.readUInt16LE(28);};FileHeader.prototype.fileName=function fileName(){return safeToString(this.data,this.useUTF8(),30,this.fileNameLength());};FileHeader.prototype.extraField=function extraField(){var start=30+this.fileNameLength();return this.data.slice(start,start+this.extraFieldLength());};FileHeader.prototype.totalSize=function totalSize(){return 30+this.fileNameLength()+this.extraFieldLength();};FileHeader.prototype.useUTF8=function useUTF8(){return(this.flags()&0x800)===0x800;};/**\n\t * 4.3.8  File data\n\t *\n\t *   Immediately following the local header for a file\n\t *   SHOULD be placed the compressed or stored data for the file.\n\t *   If the file is encrypted, the encryption header for the file\n\t *   SHOULD be placed after the local header and before the file\n\t *   data. The series of [local file header][encryption header]\n\t *   [file data][data descriptor] repeats for each file in the\n\t *   .ZIP archive.\n\t *\n\t *   Zero-byte files, directories, and other file types that\n\t *   contain no content MUST not include file data.\n\t */var FileData=function FileData(header,record,data){this.header=header;this.record=record;this.data=data;};FileData.prototype.decompress=function decompress(){// Check the compression\nvar compressionMethod=this.header.compressionMethod();var fcn=decompressionMethods[compressionMethod];if(fcn){return fcn(this.data,this.record.compressedSize(),this.record.uncompressedSize(),this.record.flag());}else{var name=CompressionMethod[compressionMethod];if(!name){name=\"Unknown: \"+compressionMethod;}throw new ApiError(ErrorCode.EINVAL,\"Invalid compression method on file '\"+this.header.fileName()+\"': \"+name);}};FileData.prototype.getHeader=function getHeader(){return this.header;};FileData.prototype.getRecord=function getRecord(){return this.record;};FileData.prototype.getRawData=function getRawData(){return this.data;};/**\n\t * 4.3.9  Data descriptor:\n\t *\n\t *    crc-32                          4 bytes\n\t *    compressed size                 4 bytes\n\t *    uncompressed size               4 bytes\n\t */var DataDescriptor=function DataDescriptor(data){this.data=data;};DataDescriptor.prototype.crc32=function crc32(){return this.data.readUInt32LE(0);};DataDescriptor.prototype.compressedSize=function compressedSize(){return this.data.readUInt32LE(4);};DataDescriptor.prototype.uncompressedSize=function uncompressedSize(){return this.data.readUInt32LE(8);};/*\n\t` 4.3.10  Archive decryption header:\n\t\n\t      4.3.10.1 The Archive Decryption Header is introduced in version 6.2\n\t      of the ZIP format specification.  This record exists in support\n\t      of the Central Directory Encryption Feature implemented as part of\n\t      the Strong Encryption Specification as described in this document.\n\t      When the Central Directory Structure is encrypted, this decryption\n\t      header MUST precede the encrypted data segment.\n\t */ /**\n\t * 4.3.11  Archive extra data record:\n\t *\n\t *      archive extra data signature    4 bytes  (0x08064b50)\n\t *      extra field length              4 bytes\n\t *      extra field data                (variable size)\n\t *\n\t *    4.3.11.1 The Archive Extra Data Record is introduced in version 6.2\n\t *    of the ZIP format specification.  This record MAY be used in support\n\t *    of the Central Directory Encryption Feature implemented as part of\n\t *    the Strong Encryption Specification as described in this document.\n\t *    When present, this record MUST immediately precede the central\n\t *    directory data structure.\n\t */var ArchiveExtraDataRecord=function ArchiveExtraDataRecord(data){this.data=data;if(this.data.readUInt32LE(0)!==0x08064b50){throw new ApiError(ErrorCode.EINVAL,\"Invalid archive extra data record signature: \"+this.data.readUInt32LE(0));}};ArchiveExtraDataRecord.prototype.length=function length(){return this.data.readUInt32LE(4);};ArchiveExtraDataRecord.prototype.extraFieldData=function extraFieldData(){return this.data.slice(8,8+this.length());};/**\n\t * 4.3.13 Digital signature:\n\t *\n\t *      header signature                4 bytes  (0x05054b50)\n\t *      size of data                    2 bytes\n\t *      signature data (variable size)\n\t *\n\t *    With the introduction of the Central Directory Encryption\n\t *    feature in version 6.2 of this specification, the Central\n\t *    Directory Structure MAY be stored both compressed and encrypted.\n\t *    Although not required, it is assumed when encrypting the\n\t *    Central Directory Structure, that it will be compressed\n\t *    for greater storage efficiency.  Information on the\n\t *    Central Directory Encryption feature can be found in the section\n\t *    describing the Strong Encryption Specification. The Digital\n\t *    Signature record will be neither compressed nor encrypted.\n\t */var DigitalSignature=function DigitalSignature(data){this.data=data;if(this.data.readUInt32LE(0)!==0x05054b50){throw new ApiError(ErrorCode.EINVAL,\"Invalid digital signature signature: \"+this.data.readUInt32LE(0));}};DigitalSignature.prototype.size=function size(){return this.data.readUInt16LE(4);};DigitalSignature.prototype.signatureData=function signatureData(){return this.data.slice(6,6+this.size());};/**\n\t * 4.3.12  Central directory structure:\n\t *\n\t *  central file header signature   4 bytes  (0x02014b50)\n\t *  version made by                 2 bytes\n\t *  version needed to extract       2 bytes\n\t *  general purpose bit flag        2 bytes\n\t *  compression method              2 bytes\n\t *  last mod file time              2 bytes\n\t *  last mod file date              2 bytes\n\t *  crc-32                          4 bytes\n\t *  compressed size                 4 bytes\n\t *  uncompressed size               4 bytes\n\t *  file name length                2 bytes\n\t *  extra field length              2 bytes\n\t *  file comment length             2 bytes\n\t *  disk number start               2 bytes\n\t *  internal file attributes        2 bytes\n\t *  external file attributes        4 bytes\n\t *  relative offset of local header 4 bytes\n\t *\n\t *  file name (variable size)\n\t *  extra field (variable size)\n\t *  file comment (variable size)\n\t */var CentralDirectory=function CentralDirectory(zipData,data){this.zipData=zipData;this.data=data;// Sanity check.\nif(this.data.readUInt32LE(0)!==0x02014b50){throw new ApiError(ErrorCode.EINVAL,\"Invalid Zip file: Central directory record has invalid signature: \"+this.data.readUInt32LE(0));}this._filename=this.produceFilename();};CentralDirectory.prototype.versionMadeBy=function versionMadeBy(){return this.data.readUInt16LE(4);};CentralDirectory.prototype.versionNeeded=function versionNeeded(){return this.data.readUInt16LE(6);};CentralDirectory.prototype.flag=function flag(){return this.data.readUInt16LE(8);};CentralDirectory.prototype.compressionMethod=function compressionMethod(){return this.data.readUInt16LE(10);};CentralDirectory.prototype.lastModFileTime=function lastModFileTime(){// Time and date is in MS-DOS format.\nreturn msdos2date(this.data.readUInt16LE(12),this.data.readUInt16LE(14));};CentralDirectory.prototype.rawLastModFileTime=function rawLastModFileTime(){return this.data.readUInt32LE(12);};CentralDirectory.prototype.crc32=function crc32(){return this.data.readUInt32LE(16);};CentralDirectory.prototype.compressedSize=function compressedSize(){return this.data.readUInt32LE(20);};CentralDirectory.prototype.uncompressedSize=function uncompressedSize(){return this.data.readUInt32LE(24);};CentralDirectory.prototype.fileNameLength=function fileNameLength(){return this.data.readUInt16LE(28);};CentralDirectory.prototype.extraFieldLength=function extraFieldLength(){return this.data.readUInt16LE(30);};CentralDirectory.prototype.fileCommentLength=function fileCommentLength(){return this.data.readUInt16LE(32);};CentralDirectory.prototype.diskNumberStart=function diskNumberStart(){return this.data.readUInt16LE(34);};CentralDirectory.prototype.internalAttributes=function internalAttributes(){return this.data.readUInt16LE(36);};CentralDirectory.prototype.externalAttributes=function externalAttributes(){return this.data.readUInt32LE(38);};CentralDirectory.prototype.headerRelativeOffset=function headerRelativeOffset(){return this.data.readUInt32LE(42);};CentralDirectory.prototype.produceFilename=function produceFilename(){/*\n\t       4.4.17.1 claims:\n\t       * All slashes are forward ('/') slashes.\n\t       * Filename doesn't begin with a slash.\n\t       * No drive letters or any nonsense like that.\n\t       * If filename is missing, the input came from standard input.\n\t    \n\t       Unfortunately, this isn't true in practice. Some Windows zip utilities use\n\t       a backslash here, but the correct Unix-style path in file headers.\n\t    \n\t       To avoid seeking all over the file to recover the known-good filenames\n\t       from file headers, we simply convert '/' to '\\' here.\n\t     */var fileName=safeToString(this.data,this.useUTF8(),46,this.fileNameLength());return fileName.replace(/\\\\/g,\"/\");};CentralDirectory.prototype.fileName=function fileName(){return this._filename;};CentralDirectory.prototype.rawFileName=function rawFileName(){return this.data.slice(46,46+this.fileNameLength());};CentralDirectory.prototype.extraField=function extraField(){var start=44+this.fileNameLength();return this.data.slice(start,start+this.extraFieldLength());};CentralDirectory.prototype.fileComment=function fileComment(){var start=46+this.fileNameLength()+this.extraFieldLength();return safeToString(this.data,this.useUTF8(),start,this.fileCommentLength());};CentralDirectory.prototype.rawFileComment=function rawFileComment(){var start=46+this.fileNameLength()+this.extraFieldLength();return this.data.slice(start,start+this.fileCommentLength());};CentralDirectory.prototype.totalSize=function totalSize(){return 46+this.fileNameLength()+this.extraFieldLength()+this.fileCommentLength();};CentralDirectory.prototype.isDirectory=function isDirectory(){// NOTE: This assumes that the zip file implementation uses the lower byte\n//    of external attributes for DOS attributes for\n//    backwards-compatibility. This is not mandated, but appears to be\n//    commonplace.\n//    According to the spec, the layout of external attributes is\n//    platform-dependent.\n//    If that fails, we also check if the name of the file ends in '/',\n//    which is what Java's ZipFile implementation does.\nvar fileName=this.fileName();return(this.externalAttributes()&0x10?true:false)||fileName.charAt(fileName.length-1)==='/';};CentralDirectory.prototype.isFile=function isFile(){return!this.isDirectory();};CentralDirectory.prototype.useUTF8=function useUTF8(){return(this.flag()&0x800)===0x800;};CentralDirectory.prototype.isEncrypted=function isEncrypted(){return(this.flag()&0x1)===0x1;};CentralDirectory.prototype.getFileData=function getFileData(){// Need to grab the header before we can figure out where the actual\n// compressed data starts.\nvar start=this.headerRelativeOffset();var header=new FileHeader(this.zipData.slice(start));return new FileData(header,this,this.zipData.slice(start+header.totalSize()));};CentralDirectory.prototype.getData=function getData(){return this.getFileData().decompress();};CentralDirectory.prototype.getRawData=function getRawData(){return this.getFileData().getRawData();};CentralDirectory.prototype.getStats=function getStats(){return new Stats(FileType.FILE,this.uncompressedSize(),0x16D,new Date(),this.lastModFileTime());};/**\n\t * 4.3.16: end of central directory record\n\t *  end of central dir signature    4 bytes  (0x06054b50)\n\t *  number of this disk             2 bytes\n\t *  number of the disk with the\n\t *  start of the central directory  2 bytes\n\t *  total number of entries in the\n\t *  central directory on this disk  2 bytes\n\t *  total number of entries in\n\t *  the central directory           2 bytes\n\t *  size of the central directory   4 bytes\n\t *  offset of start of central\n\t *  directory with respect to\n\t *  the starting disk number        4 bytes\n\t *  .ZIP file comment length        2 bytes\n\t *  .ZIP file comment       (variable size)\n\t */var EndOfCentralDirectory=function EndOfCentralDirectory(data){this.data=data;if(this.data.readUInt32LE(0)!==0x06054b50){throw new ApiError(ErrorCode.EINVAL,\"Invalid Zip file: End of central directory record has invalid signature: \"+this.data.readUInt32LE(0));}};EndOfCentralDirectory.prototype.diskNumber=function diskNumber(){return this.data.readUInt16LE(4);};EndOfCentralDirectory.prototype.cdDiskNumber=function cdDiskNumber(){return this.data.readUInt16LE(6);};EndOfCentralDirectory.prototype.cdDiskEntryCount=function cdDiskEntryCount(){return this.data.readUInt16LE(8);};EndOfCentralDirectory.prototype.cdTotalEntryCount=function cdTotalEntryCount(){return this.data.readUInt16LE(10);};EndOfCentralDirectory.prototype.cdSize=function cdSize(){return this.data.readUInt32LE(12);};EndOfCentralDirectory.prototype.cdOffset=function cdOffset(){return this.data.readUInt32LE(16);};EndOfCentralDirectory.prototype.cdZipCommentLength=function cdZipCommentLength(){return this.data.readUInt16LE(20);};EndOfCentralDirectory.prototype.cdZipComment=function cdZipComment(){// Assuming UTF-8. The specification doesn't specify.\nreturn safeToString(this.data,true,22,this.cdZipCommentLength());};EndOfCentralDirectory.prototype.rawCdZipComment=function rawCdZipComment(){return this.data.slice(22,22+this.cdZipCommentLength());};/**\n\t * Contains the table of contents of a Zip file.\n\t */var ZipTOC=function ZipTOC(index,directoryEntries,eocd,data){this.index=index;this.directoryEntries=directoryEntries;this.eocd=eocd;this.data=data;};/**\n\t * Zip file-backed filesystem\n\t * Implemented according to the standard:\n\t * http://www.pkware.com/documents/casestudies/APPNOTE.TXT\n\t *\n\t * While there are a few zip libraries for JavaScript (e.g. JSZip and zip.js),\n\t * they are not a good match for BrowserFS. In particular, these libraries\n\t * perform a lot of unneeded data copying, and eagerly decompress every file\n\t * in the zip file upon loading to check the CRC32. They also eagerly decode\n\t * strings. Furthermore, these libraries duplicate functionality already present\n\t * in BrowserFS (e.g. UTF-8 decoding and binary data manipulation).\n\t *\n\t * This filesystem takes advantage of BrowserFS's Buffer implementation, which\n\t * efficiently represents the zip file in memory (in both ArrayBuffer-enabled\n\t * browsers *and* non-ArrayBuffer browsers), and which can neatly be 'sliced'\n\t * without copying data. Each struct defined in the standard is represented with\n\t * a buffer slice pointing to an offset in the zip file, and has getters for\n\t * each field. As we anticipate that this data will not be read often, we choose\n\t * not to store each struct field in the JavaScript object; instead, to reduce\n\t * memory consumption, we retrieve it directly from the binary data each time it\n\t * is requested.\n\t *\n\t * When the filesystem is instantiated, we determine the directory structure\n\t * of the zip file as quickly as possible. We lazily decompress and check the\n\t * CRC32 of files. We do not cache decompressed files; if this is a desired\n\t * feature, it is best implemented as a generic file system wrapper that can\n\t * cache data from arbitrary file systems.\n\t *\n\t * For inflation, we use `pako`'s implementation:\n\t * https://github.com/nodeca/pako\n\t *\n\t * Current limitations:\n\t * * No encryption.\n\t * * No ZIP64 support.\n\t * * Read-only.\n\t *   Write support would require that we:\n\t *   - Keep track of changed/new files.\n\t *   - Compress changed files, and generate appropriate metadata for each.\n\t *   - Update file offsets for other files in the zip file.\n\t *   - Stream it out to a location.\n\t *   This isn't that bad, so we might do this at a later date.\n\t */var ZipFS=function(SynchronousFileSystem$$1){function ZipFS(input,name,deprecateMsg){if(name===void 0)name='';if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);this.name=name;this._index=new FileIndex();this._directoryEntries=[];this._eocd=null;deprecationMessage(deprecateMsg,ZipFS.Name,{zipData:\"zip data as a Buffer\",name:name});if(input instanceof ZipTOC){this._index=input.index;this._directoryEntries=input.directoryEntries;this._eocd=input.eocd;this.data=input.data;}else{this.data=input;this.populateIndex();}}if(SynchronousFileSystem$$1)ZipFS.__proto__=SynchronousFileSystem$$1;ZipFS.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);ZipFS.prototype.constructor=ZipFS;/**\n\t     * Constructs a ZipFS instance with the given options.\n\t     */ZipFS.Create=function Create(opts,cb){try{ZipFS.computeIndex(opts.zipData,function(zipTOC){var fs=new ZipFS(zipTOC,opts.name,false);cb(null,fs);},false);}catch(e){cb(e);}};ZipFS.isAvailable=function isAvailable(){return true;};ZipFS.RegisterDecompressionMethod=function RegisterDecompressionMethod(m,fcn){decompressionMethods[m]=fcn;};/**\n\t     * **Deprecated. Please use ZipFS.Create() method instead.**\n\t     */ZipFS.computeIndex=function computeIndex(data,cb,deprecateMsg){if(deprecateMsg===void 0)deprecateMsg=true;// TODO: Refactor to plumb errors through. Right now, they throw.\nif(deprecateMsg){console.warn(\"[ZipFS] ZipFS.computeIndex is now deprecated, and will be removed in the next major release. Please update your code to use 'ZipFS.Create({ zipData: zip file as a Buffer}, cb)' instead.\");}var index=new FileIndex();var eocd=ZipFS.getEOCD(data);if(eocd.diskNumber()!==eocd.cdDiskNumber()){throw new ApiError(ErrorCode.EINVAL,\"ZipFS does not support spanned zip files.\");}var cdPtr=eocd.cdOffset();if(cdPtr===0xFFFFFFFF){throw new ApiError(ErrorCode.EINVAL,\"ZipFS does not support Zip64.\");}var cdEnd=cdPtr+eocd.cdSize();ZipFS.computeIndexResponsive(data,index,cdPtr,cdEnd,cb,[],eocd);};/**\n\t     * Locates the end of central directory record at the end of the file.\n\t     * Throws an exception if it cannot be found.\n\t     */ZipFS.getEOCD=function getEOCD(data){// Unfortunately, the comment is variable size and up to 64K in size.\n// We assume that the magic signature does not appear in the comment, and\n// in the bytes between the comment and the signature. Other ZIP\n// implementations make this same assumption, since the alternative is to\n// read thread every entry in the file to get to it. :(\n// These are *negative* offsets from the end of the file.\nvar startOffset=22;var endOffset=Math.min(startOffset+0xFFFF,data.length-1);// There's not even a byte alignment guarantee on the comment so we need to\n// search byte by byte. *grumble grumble*\nfor(var i=startOffset;i<endOffset;i++){// Magic number: EOCD Signature\nif(data.readUInt32LE(data.length-i)===0x06054b50){return new EndOfCentralDirectory(data.slice(data.length-i));}}throw new ApiError(ErrorCode.EINVAL,\"Invalid ZIP file: Could not locate End of Central Directory signature.\");};ZipFS.addToIndex=function addToIndex(cd,index){// Paths must be absolute, yet zip file paths are always relative to the\n// zip root. So we append '/' and call it a day.\nvar filename=cd.fileName();if(filename.charAt(0)==='/'){throw new Error(\"WHY IS THIS ABSOLUTE\");}// XXX: For the file index, strip the trailing '/'.\nif(filename.charAt(filename.length-1)==='/'){filename=filename.substr(0,filename.length-1);}if(cd.isDirectory()){index.addPathFast('/'+filename,new DirInode(cd));}else{index.addPathFast('/'+filename,new FileInode(cd));}};ZipFS.computeIndexResponsive=function computeIndexResponsive(data,index,cdPtr,cdEnd,cb,cdEntries,eocd){if(cdPtr<cdEnd){var count=0;while(count++<200&&cdPtr<cdEnd){var cd=new CentralDirectory(data,data.slice(cdPtr));ZipFS.addToIndex(cd,index);cdPtr+=cd.totalSize();cdEntries.push(cd);}setImmediate$3(function(){ZipFS.computeIndexResponsive(data,index,cdPtr,cdEnd,cb,cdEntries,eocd);});}else{cb(new ZipTOC(index,cdEntries,eocd,data));}};ZipFS.prototype.getName=function getName(){return ZipFS.Name+(this.name!==''?\" \"+this.name:'');};/**\n\t     * Get the CentralDirectory object for the given path.\n\t     */ZipFS.prototype.getCentralDirectoryEntry=function getCentralDirectoryEntry(path$$1){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1);}if(isFileInode(inode)){return inode.getData();}else if(isDirInode(inode)){return inode.getData();}else{// Should never occur.\nthrow ApiError.EPERM(\"Invalid inode: \"+inode);}};ZipFS.prototype.getCentralDirectoryEntryAt=function getCentralDirectoryEntryAt(index){var dirEntry=this._directoryEntries[index];if(!dirEntry){throw new RangeError(\"Invalid directory index: \"+index+\".\");}return dirEntry;};ZipFS.prototype.getNumberOfCentralDirectoryEntries=function getNumberOfCentralDirectoryEntries(){return this._directoryEntries.length;};ZipFS.prototype.getEndOfCentralDirectory=function getEndOfCentralDirectory(){return this._eocd;};ZipFS.prototype.diskSpace=function diskSpace(path$$1,cb){// Read-only file system.\ncb(this.data.length,0);};ZipFS.prototype.isReadOnly=function isReadOnly(){return true;};ZipFS.prototype.supportsLinks=function supportsLinks(){return false;};ZipFS.prototype.supportsProps=function supportsProps(){return false;};ZipFS.prototype.supportsSynch=function supportsSynch(){return true;};ZipFS.prototype.statSync=function statSync(path$$1,isLstat){var inode=this._index.getInode(path$$1);if(inode===null){throw ApiError.ENOENT(path$$1);}var stats;if(isFileInode(inode)){stats=inode.getData().getStats();}else if(isDirInode(inode)){stats=inode.getStats();}else{throw new ApiError(ErrorCode.EINVAL,\"Invalid inode.\");}return stats;};ZipFS.prototype.openSync=function openSync(path$$1,flags,mode){// INVARIANT: Cannot write to RO file systems.\nif(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,path$$1);}// Check if the path exists, and is a file.\nvar inode=this._index.getInode(path$$1);if(!inode){throw ApiError.ENOENT(path$$1);}else if(isFileInode(inode)){var cdRecord=inode.getData();var stats=cdRecord.getStats();switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(path$$1);case ActionType.NOP:return new NoSyncFile(this,path$$1,flags,stats,cdRecord.getData());default:throw new ApiError(ErrorCode.EINVAL,'Invalid FileMode object.');}}else{throw ApiError.EISDIR(path$$1);}};ZipFS.prototype.readdirSync=function readdirSync(path$$1){// Check if it exists.\nvar inode=this._index.getInode(path$$1);if(!inode){throw ApiError.ENOENT(path$$1);}else if(isDirInode(inode)){return inode.getListing();}else{throw ApiError.ENOTDIR(path$$1);}};/**\n\t     * Specially-optimized readfile.\n\t     */ZipFS.prototype.readFileSync=function readFileSync(fname,encoding,flag){// Get file.\nvar fd=this.openSync(fname,flag,0x1a4);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff);}return fdBuff.toString(encoding);}finally{fd.closeSync();}};ZipFS.prototype.populateIndex=function populateIndex(){var this$1=this;var eocd=this._eocd=ZipFS.getEOCD(this.data);if(eocd.diskNumber()!==eocd.cdDiskNumber()){throw new ApiError(ErrorCode.EINVAL,\"ZipFS does not support spanned zip files.\");}var cdPtr=eocd.cdOffset();if(cdPtr===0xFFFFFFFF){throw new ApiError(ErrorCode.EINVAL,\"ZipFS does not support Zip64.\");}var cdEnd=cdPtr+eocd.cdSize();while(cdPtr<cdEnd){var cd=new CentralDirectory(this$1.data,this$1.data.slice(cdPtr));cdPtr+=cd.totalSize();ZipFS.addToIndex(cd,this$1._index);this$1._directoryEntries.push(cd);}};return ZipFS;}(SynchronousFileSystem);ZipFS.Name=\"ZipFS\";ZipFS.Options={zipData:{type:\"object\",description:\"The zip file as a Buffer object.\",validator:bufferValidator},name:{type:\"string\",optional:true,description:\"The name of the zip file (optional).\"}};ZipFS.CompressionMethod=CompressionMethod;ZipFS.RegisterDecompressionMethod(CompressionMethod.DEFLATE,function(data,compressedSize,uncompressedSize){return arrayish2Buffer(inflateRaw(data.slice(0,compressedSize),{chunkSize:uncompressedSize}));});ZipFS.RegisterDecompressionMethod(CompressionMethod.STORED,function(data,compressedSize,uncompressedSize){return copyingSlice(data,0,uncompressedSize);});/**\n\t * @hidden\n\t */var rockRidgeIdentifier=\"IEEE_P1282\";/**\n\t * @hidden\n\t */function getASCIIString(data,startIndex,length){return data.toString('ascii',startIndex,startIndex+length).trim();}/**\n\t * @hidden\n\t */function getJolietString(data,startIndex,length){if(length===1){// Special: Root, parent, current directory are still a single byte.\nreturn String.fromCharCode(data[startIndex]);}// UTF16-BE, which isn't natively supported by NodeJS Buffers.\n// Length should be even, but pessimistically floor just in case.\nvar pairs=Math.floor(length/2);var chars=new Array(pairs);for(var i=0;i<pairs;i++){var pos=startIndex+(i<<1);chars[i]=String.fromCharCode(data[pos+1]|data[pos]<<8);}return chars.join('');}/**\n\t * @hidden\n\t */function getDate(data,startIndex){var year=parseInt(getASCIIString(data,startIndex,4),10);var mon=parseInt(getASCIIString(data,startIndex+4,2),10);var day=parseInt(getASCIIString(data,startIndex+6,2),10);var hour=parseInt(getASCIIString(data,startIndex+8,2),10);var min=parseInt(getASCIIString(data,startIndex+10,2),10);var sec=parseInt(getASCIIString(data,startIndex+12,2),10);var hundrethsSec=parseInt(getASCIIString(data,startIndex+14,2),10);// Last is a time-zone offset, but JavaScript dates don't support time zones well.\nreturn new Date(year,mon,day,hour,min,sec,hundrethsSec*100);}/**\n\t * @hidden\n\t */function getShortFormDate(data,startIndex){var yearsSince1900=data[startIndex];var month=data[startIndex+1];var day=data[startIndex+2];var hour=data[startIndex+3];var minute=data[startIndex+4];var second=data[startIndex+5];// JavaScript's Date support isn't so great; ignore timezone.\n// const offsetFromGMT = this._data[24];\nreturn new Date(yearsSince1900,month-1,day,hour,minute,second);}/**\n\t * @hidden\n\t */function constructSystemUseEntry(bigData,i){var data=bigData.slice(i);var sue=new SystemUseEntry(data);switch(sue.signatureWord()){case 17221/* CE */:return new CEEntry(data);case 20548/* PD */:return new PDEntry(data);case 21328/* SP */:return new SPEntry(data);case 21332/* ST */:return new STEntry(data);case 17746/* ER */:return new EREntry(data);case 17747/* ES */:return new ESEntry(data);case 20568/* PX */:return new PXEntry(data);case 20558/* PN */:return new PNEntry(data);case 21324/* SL */:return new SLEntry(data);case 20045/* NM */:return new NMEntry(data);case 17228/* CL */:return new CLEntry(data);case 20556/* PL */:return new PLEntry(data);case 21061/* RE */:return new REEntry(data);case 21574/* TF */:return new TFEntry(data);case 21318/* SF */:return new SFEntry(data);case 21074/* RR */:return new RREntry(data);default:return sue;}}/**\n\t * @hidden\n\t */function constructSystemUseEntries(data,i,len,isoData){// If the remaining allocated space following the last recorded System Use Entry in a System\n// Use field or Continuation Area is less than four bytes long, it cannot contain a System\n// Use Entry and shall be ignored\nlen=len-4;var entries=new Array();while(i<len){var entry=constructSystemUseEntry(data,i);var length=entry.length();if(length===0){// Invalid SU section; prevent infinite loop.\nreturn entries;}i+=length;if(entry instanceof STEntry){// ST indicates the end of entries.\nbreak;}if(entry instanceof CEEntry){entries=entries.concat(entry.getEntries(isoData));}else{entries.push(entry);}}return entries;}/**\n\t * @hidden\n\t */var VolumeDescriptor=function VolumeDescriptor(data){this._data=data;};VolumeDescriptor.prototype.type=function type(){return this._data[0];};VolumeDescriptor.prototype.standardIdentifier=function standardIdentifier(){return getASCIIString(this._data,1,5);};VolumeDescriptor.prototype.version=function version(){return this._data[6];};VolumeDescriptor.prototype.data=function data(){return this._data.slice(7,2048);};/**\n\t * @hidden\n\t */var PrimaryOrSupplementaryVolumeDescriptor=function(VolumeDescriptor){function PrimaryOrSupplementaryVolumeDescriptor(data){VolumeDescriptor.call(this,data);this._root=null;}if(VolumeDescriptor)PrimaryOrSupplementaryVolumeDescriptor.__proto__=VolumeDescriptor;PrimaryOrSupplementaryVolumeDescriptor.prototype=Object.create(VolumeDescriptor&&VolumeDescriptor.prototype);PrimaryOrSupplementaryVolumeDescriptor.prototype.constructor=PrimaryOrSupplementaryVolumeDescriptor;PrimaryOrSupplementaryVolumeDescriptor.prototype.systemIdentifier=function systemIdentifier(){return this._getString32(8);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeIdentifier=function volumeIdentifier(){return this._getString32(40);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeSpaceSize=function volumeSpaceSize(){return this._data.readUInt32LE(80);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeSetSize=function volumeSetSize(){return this._data.readUInt16LE(120);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeSequenceNumber=function volumeSequenceNumber(){return this._data.readUInt16LE(124);};PrimaryOrSupplementaryVolumeDescriptor.prototype.logicalBlockSize=function logicalBlockSize(){return this._data.readUInt16LE(128);};PrimaryOrSupplementaryVolumeDescriptor.prototype.pathTableSize=function pathTableSize(){return this._data.readUInt32LE(132);};PrimaryOrSupplementaryVolumeDescriptor.prototype.locationOfTypeLPathTable=function locationOfTypeLPathTable(){return this._data.readUInt32LE(140);};PrimaryOrSupplementaryVolumeDescriptor.prototype.locationOfOptionalTypeLPathTable=function locationOfOptionalTypeLPathTable(){return this._data.readUInt32LE(144);};PrimaryOrSupplementaryVolumeDescriptor.prototype.locationOfTypeMPathTable=function locationOfTypeMPathTable(){return this._data.readUInt32BE(148);};PrimaryOrSupplementaryVolumeDescriptor.prototype.locationOfOptionalTypeMPathTable=function locationOfOptionalTypeMPathTable(){return this._data.readUInt32BE(152);};PrimaryOrSupplementaryVolumeDescriptor.prototype.rootDirectoryEntry=function rootDirectoryEntry(isoData){if(this._root===null){this._root=this._constructRootDirectoryRecord(this._data.slice(156));this._root.rootCheckForRockRidge(isoData);}return this._root;};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeSetIdentifier=function volumeSetIdentifier(){return this._getString(190,128);};PrimaryOrSupplementaryVolumeDescriptor.prototype.publisherIdentifier=function publisherIdentifier(){return this._getString(318,128);};PrimaryOrSupplementaryVolumeDescriptor.prototype.dataPreparerIdentifier=function dataPreparerIdentifier(){return this._getString(446,128);};PrimaryOrSupplementaryVolumeDescriptor.prototype.applicationIdentifier=function applicationIdentifier(){return this._getString(574,128);};PrimaryOrSupplementaryVolumeDescriptor.prototype.copyrightFileIdentifier=function copyrightFileIdentifier(){return this._getString(702,38);};PrimaryOrSupplementaryVolumeDescriptor.prototype.abstractFileIdentifier=function abstractFileIdentifier(){return this._getString(740,36);};PrimaryOrSupplementaryVolumeDescriptor.prototype.bibliographicFileIdentifier=function bibliographicFileIdentifier(){return this._getString(776,37);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeCreationDate=function volumeCreationDate(){return getDate(this._data,813);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeModificationDate=function volumeModificationDate(){return getDate(this._data,830);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeExpirationDate=function volumeExpirationDate(){return getDate(this._data,847);};PrimaryOrSupplementaryVolumeDescriptor.prototype.volumeEffectiveDate=function volumeEffectiveDate(){return getDate(this._data,864);};PrimaryOrSupplementaryVolumeDescriptor.prototype.fileStructureVersion=function fileStructureVersion(){return this._data[881];};PrimaryOrSupplementaryVolumeDescriptor.prototype.applicationUsed=function applicationUsed(){return this._data.slice(883,883+512);};PrimaryOrSupplementaryVolumeDescriptor.prototype.reserved=function reserved(){return this._data.slice(1395,1395+653);};PrimaryOrSupplementaryVolumeDescriptor.prototype._getString32=function _getString32(idx){return this._getString(idx,32);};return PrimaryOrSupplementaryVolumeDescriptor;}(VolumeDescriptor);/**\n\t * @hidden\n\t */var PrimaryVolumeDescriptor=function(PrimaryOrSupplementaryVolumeDescriptor){function PrimaryVolumeDescriptor(data){PrimaryOrSupplementaryVolumeDescriptor.call(this,data);if(this.type()!==1/* PrimaryVolumeDescriptor */){throw new ApiError(ErrorCode.EIO,\"Invalid primary volume descriptor.\");}}if(PrimaryOrSupplementaryVolumeDescriptor)PrimaryVolumeDescriptor.__proto__=PrimaryOrSupplementaryVolumeDescriptor;PrimaryVolumeDescriptor.prototype=Object.create(PrimaryOrSupplementaryVolumeDescriptor&&PrimaryOrSupplementaryVolumeDescriptor.prototype);PrimaryVolumeDescriptor.prototype.constructor=PrimaryVolumeDescriptor;PrimaryVolumeDescriptor.prototype.name=function name(){return\"ISO9660\";};PrimaryVolumeDescriptor.prototype._constructRootDirectoryRecord=function _constructRootDirectoryRecord(data){return new ISODirectoryRecord(data,-1);};PrimaryVolumeDescriptor.prototype._getString=function _getString(idx,len){return this._getString(idx,len);};return PrimaryVolumeDescriptor;}(PrimaryOrSupplementaryVolumeDescriptor);/**\n\t * @hidden\n\t */var SupplementaryVolumeDescriptor=function(PrimaryOrSupplementaryVolumeDescriptor){function SupplementaryVolumeDescriptor(data){PrimaryOrSupplementaryVolumeDescriptor.call(this,data);if(this.type()!==2/* SupplementaryVolumeDescriptor */){throw new ApiError(ErrorCode.EIO,\"Invalid supplementary volume descriptor.\");}var escapeSequence=this.escapeSequence();var third=escapeSequence[2];// Third character identifies what 'level' of the UCS specification to follow.\n// We ignore it.\nif(escapeSequence[0]!==0x25||escapeSequence[1]!==0x2F||third!==0x40&&third!==0x43&&third!==0x45){throw new ApiError(ErrorCode.EIO,\"Unrecognized escape sequence for SupplementaryVolumeDescriptor: \"+escapeSequence.toString());}}if(PrimaryOrSupplementaryVolumeDescriptor)SupplementaryVolumeDescriptor.__proto__=PrimaryOrSupplementaryVolumeDescriptor;SupplementaryVolumeDescriptor.prototype=Object.create(PrimaryOrSupplementaryVolumeDescriptor&&PrimaryOrSupplementaryVolumeDescriptor.prototype);SupplementaryVolumeDescriptor.prototype.constructor=SupplementaryVolumeDescriptor;SupplementaryVolumeDescriptor.prototype.name=function name(){return\"Joliet\";};SupplementaryVolumeDescriptor.prototype.escapeSequence=function escapeSequence(){return this._data.slice(88,120);};SupplementaryVolumeDescriptor.prototype._constructRootDirectoryRecord=function _constructRootDirectoryRecord(data){return new JolietDirectoryRecord(data,-1);};SupplementaryVolumeDescriptor.prototype._getString=function _getString(idx,len){return getJolietString(this._data,idx,len);};return SupplementaryVolumeDescriptor;}(PrimaryOrSupplementaryVolumeDescriptor);/**\n\t * @hidden\n\t */var DirectoryRecord=function DirectoryRecord(data,rockRidgeOffset){this._suEntries=null;this._fileOrDir=null;this._data=data;this._rockRidgeOffset=rockRidgeOffset;};DirectoryRecord.prototype.hasRockRidge=function hasRockRidge(){return this._rockRidgeOffset>-1;};DirectoryRecord.prototype.getRockRidgeOffset=function getRockRidgeOffset(){return this._rockRidgeOffset;};/**\n\t * !!ONLY VALID ON ROOT NODE!!\n\t * Checks if Rock Ridge is enabled, and sets the offset.\n\t */DirectoryRecord.prototype.rootCheckForRockRidge=function rootCheckForRockRidge(isoData){var dir=this.getDirectory(isoData);this._rockRidgeOffset=dir.getDotEntry(isoData)._getRockRidgeOffset(isoData);if(this._rockRidgeOffset>-1){// Wipe out directory. Start over with RR knowledge.\nthis._fileOrDir=null;}};DirectoryRecord.prototype.length=function length(){return this._data[0];};DirectoryRecord.prototype.extendedAttributeRecordLength=function extendedAttributeRecordLength(){return this._data[1];};DirectoryRecord.prototype.lba=function lba(){return this._data.readUInt32LE(2)*2048;};DirectoryRecord.prototype.dataLength=function dataLength(){return this._data.readUInt32LE(10);};DirectoryRecord.prototype.recordingDate=function recordingDate(){return getShortFormDate(this._data,18);};DirectoryRecord.prototype.fileFlags=function fileFlags(){return this._data[25];};DirectoryRecord.prototype.fileUnitSize=function fileUnitSize(){return this._data[26];};DirectoryRecord.prototype.interleaveGapSize=function interleaveGapSize(){return this._data[27];};DirectoryRecord.prototype.volumeSequenceNumber=function volumeSequenceNumber(){return this._data.readUInt16LE(28);};DirectoryRecord.prototype.identifier=function identifier(){return this._getString(33,this._data[32]);};DirectoryRecord.prototype.fileName=function fileName(isoData){if(this.hasRockRidge()){var fn=this._rockRidgeFilename(isoData);if(fn!==null){return fn;}}var ident=this.identifier();if(this.isDirectory(isoData)){return ident;}// Files:\n// - MUST have 0x2E (.) separating the name from the extension\n// - MUST have 0x3B (;) separating the file name and extension from the version\n// Gets expanded to two-byte char in Unicode directory records.\nvar versionSeparator=ident.indexOf(';');if(versionSeparator===-1){// Some Joliet filenames lack the version separator, despite the standard\n// specifying that it should be there.\nreturn ident;}else if(ident[versionSeparator-1]==='.'){// Empty extension. Do not include '.' in the filename.\nreturn ident.slice(0,versionSeparator-1);}else{// Include up to version separator.\nreturn ident.slice(0,versionSeparator);}};DirectoryRecord.prototype.isDirectory=function isDirectory(isoData){var rv=!!(this.fileFlags()&2/* Directory */);// If it lacks the Directory flag, it may still be a directory if we've exceeded the directory\n// depth limit. Rock Ridge marks these as files and adds a special attribute.\nif(!rv&&this.hasRockRidge()){rv=this.getSUEntries(isoData).filter(function(e){return e instanceof CLEntry;}).length>0;}return rv;};DirectoryRecord.prototype.isSymlink=function isSymlink(isoData){return this.hasRockRidge()&&this.getSUEntries(isoData).filter(function(e){return e instanceof SLEntry;}).length>0;};DirectoryRecord.prototype.getSymlinkPath=function getSymlinkPath(isoData){var p=\"\";var entries=this.getSUEntries(isoData);var getStr=this._getGetString();for(var i=0,list=entries;i<list.length;i+=1){var entry=list[i];if(entry instanceof SLEntry){var components=entry.componentRecords();for(var i$1=0,list$1=components;i$1<list$1.length;i$1+=1){var component=list$1[i$1];var flags=component.flags();if(flags&2/* CURRENT */){p+=\"./\";}else if(flags&4/* PARENT */){p+=\"../\";}else if(flags&8/* ROOT */){p+=\"/\";}else{p+=component.content(getStr);if(!(flags&1/* CONTINUE */)){p+='/';}}}if(!entry.continueFlag()){// We are done with this link.\nbreak;}}}if(p.length>1&&p[p.length-1]==='/'){// Trim trailing '/'.\nreturn p.slice(0,p.length-1);}else{return p;}};DirectoryRecord.prototype.getFile=function getFile(isoData){if(this.isDirectory(isoData)){throw new Error(\"Tried to get a File from a directory.\");}if(this._fileOrDir===null){this._fileOrDir=isoData.slice(this.lba(),this.lba()+this.dataLength());}return this._fileOrDir;};DirectoryRecord.prototype.getDirectory=function getDirectory(isoData){if(!this.isDirectory(isoData)){throw new Error(\"Tried to get a Directory from a file.\");}if(this._fileOrDir===null){this._fileOrDir=this._constructDirectory(isoData);}return this._fileOrDir;};DirectoryRecord.prototype.getSUEntries=function getSUEntries(isoData){if(!this._suEntries){this._constructSUEntries(isoData);}return this._suEntries;};DirectoryRecord.prototype._rockRidgeFilename=function _rockRidgeFilename(isoData){var nmEntries=this.getSUEntries(isoData).filter(function(e){return e instanceof NMEntry;});if(nmEntries.length===0||nmEntries[0].flags()&(2/* CURRENT */|4/* PARENT */)){return null;}var str='';var getString=this._getGetString();for(var i=0,list=nmEntries;i<list.length;i+=1){var e=list[i];str+=e.name(getString);if(!(e.flags()&1/* CONTINUE */)){break;}}return str;};DirectoryRecord.prototype._constructSUEntries=function _constructSUEntries(isoData){var i=33+this._data[32];if(i%2===1){// Skip padding field.\ni++;}i+=this._rockRidgeOffset;this._suEntries=constructSystemUseEntries(this._data,i,this.length(),isoData);};/**\n\t * !!ONLY VALID ON FIRST ENTRY OF ROOT DIRECTORY!!\n\t * Returns -1 if rock ridge is not enabled. Otherwise, returns the offset\n\t * at which system use fields begin.\n\t */DirectoryRecord.prototype._getRockRidgeOffset=function _getRockRidgeOffset(isoData){// In the worst case, we get some garbage SU entries.\n// Fudge offset to 0 before proceeding.\nthis._rockRidgeOffset=0;var suEntries=this.getSUEntries(isoData);if(suEntries.length>0){var spEntry=suEntries[0];if(spEntry instanceof SPEntry&&spEntry.checkBytesPass()){// SUSP is in use.\nfor(var i=1;i<suEntries.length;i++){var entry=suEntries[i];if(entry instanceof RREntry||entry instanceof EREntry&&entry.extensionIdentifier()===rockRidgeIdentifier){// Rock Ridge is in use!\nreturn spEntry.bytesSkipped();}}}}// Failed.\nthis._rockRidgeOffset=-1;return-1;};/**\n\t * @hidden\n\t */var ISODirectoryRecord=function(DirectoryRecord){function ISODirectoryRecord(data,rockRidgeOffset){DirectoryRecord.call(this,data,rockRidgeOffset);}if(DirectoryRecord)ISODirectoryRecord.__proto__=DirectoryRecord;ISODirectoryRecord.prototype=Object.create(DirectoryRecord&&DirectoryRecord.prototype);ISODirectoryRecord.prototype.constructor=ISODirectoryRecord;ISODirectoryRecord.prototype._getString=function _getString(i,len){return getASCIIString(this._data,i,len);};ISODirectoryRecord.prototype._constructDirectory=function _constructDirectory(isoData){return new ISODirectory(this,isoData);};ISODirectoryRecord.prototype._getGetString=function _getGetString(){return getASCIIString;};return ISODirectoryRecord;}(DirectoryRecord);/**\n\t * @hidden\n\t */var JolietDirectoryRecord=function(DirectoryRecord){function JolietDirectoryRecord(data,rockRidgeOffset){DirectoryRecord.call(this,data,rockRidgeOffset);}if(DirectoryRecord)JolietDirectoryRecord.__proto__=DirectoryRecord;JolietDirectoryRecord.prototype=Object.create(DirectoryRecord&&DirectoryRecord.prototype);JolietDirectoryRecord.prototype.constructor=JolietDirectoryRecord;JolietDirectoryRecord.prototype._getString=function _getString(i,len){return getJolietString(this._data,i,len);};JolietDirectoryRecord.prototype._constructDirectory=function _constructDirectory(isoData){return new JolietDirectory(this,isoData);};JolietDirectoryRecord.prototype._getGetString=function _getGetString(){return getJolietString;};return JolietDirectoryRecord;}(DirectoryRecord);/**\n\t * @hidden\n\t */var SystemUseEntry=function SystemUseEntry(data){this._data=data;};SystemUseEntry.prototype.signatureWord=function signatureWord(){return this._data.readUInt16BE(0);};SystemUseEntry.prototype.signatureWordString=function signatureWordString(){return getASCIIString(this._data,0,2);};SystemUseEntry.prototype.length=function length(){return this._data[2];};SystemUseEntry.prototype.suVersion=function suVersion(){return this._data[3];};/**\n\t * Continuation entry.\n\t * @hidden\n\t */var CEEntry=function(SystemUseEntry){function CEEntry(data){SystemUseEntry.call(this,data);this._entries=null;}if(SystemUseEntry)CEEntry.__proto__=SystemUseEntry;CEEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);CEEntry.prototype.constructor=CEEntry;/**\n\t     * Logical block address of the continuation area.\n\t     */CEEntry.prototype.continuationLba=function continuationLba(){return this._data.readUInt32LE(4);};/**\n\t     * Offset into the logical block.\n\t     */CEEntry.prototype.continuationLbaOffset=function continuationLbaOffset(){return this._data.readUInt32LE(12);};/**\n\t     * Length of the continuation area.\n\t     */CEEntry.prototype.continuationLength=function continuationLength(){return this._data.readUInt32LE(20);};CEEntry.prototype.getEntries=function getEntries(isoData){if(!this._entries){var start=this.continuationLba()*2048+this.continuationLbaOffset();this._entries=constructSystemUseEntries(isoData,start,this.continuationLength(),isoData);}return this._entries;};return CEEntry;}(SystemUseEntry);/**\n\t * Padding entry.\n\t * @hidden\n\t */var PDEntry=function(SystemUseEntry){function PDEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)PDEntry.__proto__=SystemUseEntry;PDEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);PDEntry.prototype.constructor=PDEntry;return PDEntry;}(SystemUseEntry);/**\n\t * Identifies that SUSP is in-use.\n\t * @hidden\n\t */var SPEntry=function(SystemUseEntry){function SPEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)SPEntry.__proto__=SystemUseEntry;SPEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);SPEntry.prototype.constructor=SPEntry;SPEntry.prototype.checkBytesPass=function checkBytesPass(){return this._data[4]===0xBE&&this._data[5]===0xEF;};SPEntry.prototype.bytesSkipped=function bytesSkipped(){return this._data[6];};return SPEntry;}(SystemUseEntry);/**\n\t * Identifies the end of the SUSP entries.\n\t * @hidden\n\t */var STEntry=function(SystemUseEntry){function STEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)STEntry.__proto__=SystemUseEntry;STEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);STEntry.prototype.constructor=STEntry;return STEntry;}(SystemUseEntry);/**\n\t * Specifies system-specific extensions to SUSP.\n\t * @hidden\n\t */var EREntry=function(SystemUseEntry){function EREntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)EREntry.__proto__=SystemUseEntry;EREntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);EREntry.prototype.constructor=EREntry;EREntry.prototype.identifierLength=function identifierLength(){return this._data[4];};EREntry.prototype.descriptorLength=function descriptorLength(){return this._data[5];};EREntry.prototype.sourceLength=function sourceLength(){return this._data[6];};EREntry.prototype.extensionVersion=function extensionVersion(){return this._data[7];};EREntry.prototype.extensionIdentifier=function extensionIdentifier(){return getASCIIString(this._data,8,this.identifierLength());};EREntry.prototype.extensionDescriptor=function extensionDescriptor(){return getASCIIString(this._data,8+this.identifierLength(),this.descriptorLength());};EREntry.prototype.extensionSource=function extensionSource(){return getASCIIString(this._data,8+this.identifierLength()+this.descriptorLength(),this.sourceLength());};return EREntry;}(SystemUseEntry);/**\n\t * @hidden\n\t */var ESEntry=function(SystemUseEntry){function ESEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)ESEntry.__proto__=SystemUseEntry;ESEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);ESEntry.prototype.constructor=ESEntry;ESEntry.prototype.extensionSequence=function extensionSequence(){return this._data[4];};return ESEntry;}(SystemUseEntry);/**\n\t * RockRidge: Marks that RockRidge is in use [deprecated]\n\t * @hidden\n\t */var RREntry=function(SystemUseEntry){function RREntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)RREntry.__proto__=SystemUseEntry;RREntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);RREntry.prototype.constructor=RREntry;return RREntry;}(SystemUseEntry);/**\n\t * RockRidge: Records POSIX file attributes.\n\t * @hidden\n\t */var PXEntry=function(SystemUseEntry){function PXEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)PXEntry.__proto__=SystemUseEntry;PXEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);PXEntry.prototype.constructor=PXEntry;PXEntry.prototype.mode=function mode(){return this._data.readUInt32LE(4);};PXEntry.prototype.fileLinks=function fileLinks(){return this._data.readUInt32LE(12);};PXEntry.prototype.uid=function uid(){return this._data.readUInt32LE(20);};PXEntry.prototype.gid=function gid(){return this._data.readUInt32LE(28);};PXEntry.prototype.inode=function inode(){return this._data.readUInt32LE(36);};return PXEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records POSIX device number.\n\t * @hidden\n\t */var PNEntry=function(SystemUseEntry){function PNEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)PNEntry.__proto__=SystemUseEntry;PNEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);PNEntry.prototype.constructor=PNEntry;PNEntry.prototype.devTHigh=function devTHigh(){return this._data.readUInt32LE(4);};PNEntry.prototype.devTLow=function devTLow(){return this._data.readUInt32LE(12);};return PNEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records symbolic link\n\t * @hidden\n\t */var SLEntry=function(SystemUseEntry){function SLEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)SLEntry.__proto__=SystemUseEntry;SLEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);SLEntry.prototype.constructor=SLEntry;SLEntry.prototype.flags=function flags(){return this._data[4];};SLEntry.prototype.continueFlag=function continueFlag(){return this.flags()&0x1;};SLEntry.prototype.componentRecords=function componentRecords(){var this$1=this;var records=new Array();var i=5;while(i<this.length()){var record=new SLComponentRecord(this$1._data.slice(i));records.push(record);i+=record.length();}return records;};return SLEntry;}(SystemUseEntry);/**\n\t * @hidden\n\t */var SLComponentRecord=function SLComponentRecord(data){this._data=data;};SLComponentRecord.prototype.flags=function flags(){return this._data[0];};SLComponentRecord.prototype.length=function length(){return 2+this.componentLength();};SLComponentRecord.prototype.componentLength=function componentLength(){return this._data[1];};SLComponentRecord.prototype.content=function content(getString){return getString(this._data,2,this.componentLength());};/**\n\t * RockRidge: Records alternate file name\n\t * @hidden\n\t */var NMEntry=function(SystemUseEntry){function NMEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)NMEntry.__proto__=SystemUseEntry;NMEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);NMEntry.prototype.constructor=NMEntry;NMEntry.prototype.flags=function flags(){return this._data[4];};NMEntry.prototype.name=function name(getString){return getString(this._data,5,this.length()-5);};return NMEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records child link\n\t * @hidden\n\t */var CLEntry=function(SystemUseEntry){function CLEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)CLEntry.__proto__=SystemUseEntry;CLEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);CLEntry.prototype.constructor=CLEntry;CLEntry.prototype.childDirectoryLba=function childDirectoryLba(){return this._data.readUInt32LE(4);};return CLEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records parent link.\n\t * @hidden\n\t */var PLEntry=function(SystemUseEntry){function PLEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)PLEntry.__proto__=SystemUseEntry;PLEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);PLEntry.prototype.constructor=PLEntry;PLEntry.prototype.parentDirectoryLba=function parentDirectoryLba(){return this._data.readUInt32LE(4);};return PLEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records relocated directory.\n\t * @hidden\n\t */var REEntry=function(SystemUseEntry){function REEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)REEntry.__proto__=SystemUseEntry;REEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);REEntry.prototype.constructor=REEntry;return REEntry;}(SystemUseEntry);/**\n\t * RockRidge: Records file timestamps\n\t * @hidden\n\t */var TFEntry=function(SystemUseEntry){function TFEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)TFEntry.__proto__=SystemUseEntry;TFEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);TFEntry.prototype.constructor=TFEntry;TFEntry.prototype.flags=function flags(){return this._data[4];};TFEntry.prototype.creation=function creation(){if(this.flags()&1/* CREATION */){if(this._longFormDates()){return getDate(this._data,5);}else{return getShortFormDate(this._data,5);}}else{return null;}};TFEntry.prototype.modify=function modify(){if(this.flags()&2/* MODIFY */){var previousDates=this.flags()&1/* CREATION */?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17);}else{return getShortFormDate(this._data,5+previousDates*7);}}else{return null;}};TFEntry.prototype.access=function access(){if(this.flags()&4/* ACCESS */){var previousDates=this.flags()&1/* CREATION */?1:0;previousDates+=this.flags()&2/* MODIFY */?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17);}else{return getShortFormDate(this._data,5+previousDates*7);}}else{return null;}};TFEntry.prototype.backup=function backup(){if(this.flags()&16/* BACKUP */){var previousDates=this.flags()&1/* CREATION */?1:0;previousDates+=this.flags()&2/* MODIFY */?1:0;previousDates+=this.flags()&4/* ACCESS */?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17);}else{return getShortFormDate(this._data,5+previousDates*7);}}else{return null;}};TFEntry.prototype.expiration=function expiration(){if(this.flags()&32/* EXPIRATION */){var previousDates=this.flags()&1/* CREATION */?1:0;previousDates+=this.flags()&2/* MODIFY */?1:0;previousDates+=this.flags()&4/* ACCESS */?1:0;previousDates+=this.flags()&16/* BACKUP */?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17);}else{return getShortFormDate(this._data,5+previousDates*7);}}else{return null;}};TFEntry.prototype.effective=function effective(){if(this.flags()&64/* EFFECTIVE */){var previousDates=this.flags()&1/* CREATION */?1:0;previousDates+=this.flags()&2/* MODIFY */?1:0;previousDates+=this.flags()&4/* ACCESS */?1:0;previousDates+=this.flags()&16/* BACKUP */?1:0;previousDates+=this.flags()&32/* EXPIRATION */?1:0;if(this._longFormDates){return getDate(this._data,5+previousDates*17);}else{return getShortFormDate(this._data,5+previousDates*7);}}else{return null;}};TFEntry.prototype._longFormDates=function _longFormDates(){return!!(this.flags()&&128/* LONG_FORM */);};return TFEntry;}(SystemUseEntry);/**\n\t * RockRidge: File data in sparse format.\n\t * @hidden\n\t */var SFEntry=function(SystemUseEntry){function SFEntry(data){SystemUseEntry.call(this,data);}if(SystemUseEntry)SFEntry.__proto__=SystemUseEntry;SFEntry.prototype=Object.create(SystemUseEntry&&SystemUseEntry.prototype);SFEntry.prototype.constructor=SFEntry;SFEntry.prototype.virtualSizeHigh=function virtualSizeHigh(){return this._data.readUInt32LE(4);};SFEntry.prototype.virtualSizeLow=function virtualSizeLow(){return this._data.readUInt32LE(12);};SFEntry.prototype.tableDepth=function tableDepth(){return this._data[20];};return SFEntry;}(SystemUseEntry);/**\n\t * @hidden\n\t */var Directory=function Directory(record,isoData){var this$1=this;this._fileList=[];this._fileMap={};this._record=record;var i=record.lba();var iLimit=i+record.dataLength();if(!(record.fileFlags()&2/* Directory */)){// Must have a CL entry.\nvar cl=record.getSUEntries(isoData).filter(function(e){return e instanceof CLEntry;})[0];i=cl.childDirectoryLba()*2048;iLimit=Infinity;}while(i<iLimit){var len=isoData[i];// Zero-padding between sectors.\n// TODO: Could optimize this to seek to nearest-sector upon\n// seeing a 0.\nif(len===0){i++;continue;}var r=this$1._constructDirectoryRecord(isoData.slice(i));var fname=r.fileName(isoData);// Skip '.' and '..' entries.\nif(fname!==\"\\0\"&&fname!==\"\\x01\"){// Skip relocated entries.\nif(!r.hasRockRidge()||r.getSUEntries(isoData).filter(function(e){return e instanceof REEntry;}).length===0){this$1._fileMap[fname]=r;this$1._fileList.push(fname);}}else if(iLimit===Infinity){// First entry contains needed data.\niLimit=i+r.dataLength();}i+=r.length();}};/**\n\t * Get the record with the given name.\n\t * Returns undefined if not present.\n\t */Directory.prototype.getRecord=function getRecord(name){return this._fileMap[name];};Directory.prototype.getFileList=function getFileList(){return this._fileList;};Directory.prototype.getDotEntry=function getDotEntry(isoData){return this._constructDirectoryRecord(isoData.slice(this._record.lba()));};/**\n\t * @hidden\n\t */var ISODirectory=function(Directory){function ISODirectory(record,isoData){Directory.call(this,record,isoData);}if(Directory)ISODirectory.__proto__=Directory;ISODirectory.prototype=Object.create(Directory&&Directory.prototype);ISODirectory.prototype.constructor=ISODirectory;ISODirectory.prototype._constructDirectoryRecord=function _constructDirectoryRecord(data){return new ISODirectoryRecord(data,this._record.getRockRidgeOffset());};return ISODirectory;}(Directory);/**\n\t * @hidden\n\t */var JolietDirectory=function(Directory){function JolietDirectory(record,isoData){Directory.call(this,record,isoData);}if(Directory)JolietDirectory.__proto__=Directory;JolietDirectory.prototype=Object.create(Directory&&Directory.prototype);JolietDirectory.prototype.constructor=JolietDirectory;JolietDirectory.prototype._constructDirectoryRecord=function _constructDirectoryRecord(data){return new JolietDirectoryRecord(data,this._record.getRockRidgeOffset());};return JolietDirectory;}(Directory);/**\n\t * Mounts an ISO file as a read-only file system.\n\t *\n\t * Supports:\n\t * * Vanilla ISO9660 ISOs\n\t * * Microsoft Joliet and Rock Ridge extensions to the ISO9660 standard\n\t */var IsoFS=function(SynchronousFileSystem$$1){function IsoFS(data,name,deprecateMsg){var this$1=this;if(name===void 0)name=\"\";if(deprecateMsg===void 0)deprecateMsg=true;SynchronousFileSystem$$1.call(this);this._data=data;deprecationMessage(deprecateMsg,IsoFS.Name,{data:\"ISO data as a Buffer\",name:name});// Skip first 16 sectors.\nvar vdTerminatorFound=false;var i=16*2048;var candidateVDs=new Array();while(!vdTerminatorFound){var slice=data.slice(i);var vd=new VolumeDescriptor(slice);switch(vd.type()){case 1/* PrimaryVolumeDescriptor */:candidateVDs.push(new PrimaryVolumeDescriptor(slice));break;case 2/* SupplementaryVolumeDescriptor */:candidateVDs.push(new SupplementaryVolumeDescriptor(slice));break;case 255/* VolumeDescriptorSetTerminator */:vdTerminatorFound=true;break;}i+=2048;}if(candidateVDs.length===0){throw new ApiError(ErrorCode.EIO,\"Unable to find a suitable volume descriptor.\");}candidateVDs.forEach(function(v){// Take an SVD over a PVD.\nif(!this$1._pvd||this$1._pvd.type()!==2/* SupplementaryVolumeDescriptor */){this$1._pvd=v;}});this._root=this._pvd.rootDirectoryEntry(data);this._name=name;}if(SynchronousFileSystem$$1)IsoFS.__proto__=SynchronousFileSystem$$1;IsoFS.prototype=Object.create(SynchronousFileSystem$$1&&SynchronousFileSystem$$1.prototype);IsoFS.prototype.constructor=IsoFS;/**\n\t     * Creates an IsoFS instance with the given options.\n\t     */IsoFS.Create=function Create(opts,cb){var fs;var e;try{fs=new IsoFS(opts.data,opts.name,false);}catch(e){e=e;}finally{cb(e,fs);}};IsoFS.isAvailable=function isAvailable(){return true;};IsoFS.prototype.getName=function getName(){var name=\"IsoFS\"+this._name+(this._pvd?\"-\"+this._pvd.name():'');if(this._root&&this._root.hasRockRidge()){name+=\"-RockRidge\";}return name;};IsoFS.prototype.diskSpace=function diskSpace(path$$1,cb){// Read-only file system.\ncb(this._data.length,0);};IsoFS.prototype.isReadOnly=function isReadOnly(){return true;};IsoFS.prototype.supportsLinks=function supportsLinks(){return false;};IsoFS.prototype.supportsProps=function supportsProps(){return false;};IsoFS.prototype.supportsSynch=function supportsSynch(){return true;};IsoFS.prototype.statSync=function statSync(p,isLstat){var record=this._getDirectoryRecord(p);if(record===null){throw ApiError.ENOENT(p);}return this._getStats(p,record);};IsoFS.prototype.openSync=function openSync(p,flags,mode){// INVARIANT: Cannot write to RO file systems.\nif(flags.isWriteable()){throw new ApiError(ErrorCode.EPERM,p);}// Check if the path exists, and is a file.\nvar record=this._getDirectoryRecord(p);if(!record){throw ApiError.ENOENT(p);}else if(record.isSymlink(this._data)){return this.openSync(path.resolve(p,record.getSymlinkPath(this._data)),flags,mode);}else if(!record.isDirectory(this._data)){var data=record.getFile(this._data);var stats=this._getStats(p,record);switch(flags.pathExistsAction()){case ActionType.THROW_EXCEPTION:case ActionType.TRUNCATE_FILE:throw ApiError.EEXIST(p);case ActionType.NOP:return new NoSyncFile(this,p,flags,stats,data);default:throw new ApiError(ErrorCode.EINVAL,'Invalid FileMode object.');}}else{throw ApiError.EISDIR(p);}};IsoFS.prototype.readdirSync=function readdirSync(path$$1){// Check if it exists.\nvar record=this._getDirectoryRecord(path$$1);if(!record){throw ApiError.ENOENT(path$$1);}else if(record.isDirectory(this._data)){return record.getDirectory(this._data).getFileList().slice(0);}else{throw ApiError.ENOTDIR(path$$1);}};/**\n\t     * Specially-optimized readfile.\n\t     */IsoFS.prototype.readFileSync=function readFileSync(fname,encoding,flag){// Get file.\nvar fd=this.openSync(fname,flag,0x1a4);try{var fdCast=fd;var fdBuff=fdCast.getBuffer();if(encoding===null){return copyingSlice(fdBuff);}return fdBuff.toString(encoding);}finally{fd.closeSync();}};IsoFS.prototype._getDirectoryRecord=function _getDirectoryRecord(path$$1){var this$1=this;// Special case.\nif(path$$1==='/'){return this._root;}var components=path$$1.split('/').slice(1);var dir=this._root;for(var i=0,list=components;i<list.length;i+=1){var component=list[i];if(dir.isDirectory(this$1._data)){dir=dir.getDirectory(this$1._data).getRecord(component);if(!dir){return null;}}else{return null;}}return dir;};IsoFS.prototype._getStats=function _getStats(p,record){if(record.isSymlink(this._data)){var newP=path.resolve(p,record.getSymlinkPath(this._data));var dirRec=this._getDirectoryRecord(newP);if(!dirRec){return null;}return this._getStats(newP,dirRec);}else{var len=record.dataLength();var mode=0x16D;var date=record.recordingDate();var atime=date;var mtime=date;var ctime=date;if(record.hasRockRidge()){var entries=record.getSUEntries(this._data);for(var i=0,list=entries;i<list.length;i+=1){var entry=list[i];if(entry instanceof PXEntry){mode=entry.mode();}else if(entry instanceof TFEntry){var flags=entry.flags();if(flags&4/* ACCESS */){atime=entry.access();}if(flags&2/* MODIFY */){mtime=entry.modify();}if(flags&1/* CREATION */){ctime=entry.creation();}}}}// Mask out writeable flags. This is a RO file system.\nmode=mode&0x16D;return new Stats(record.isDirectory(this._data)?FileType.DIRECTORY:FileType.FILE,len,mode,atime,mtime,ctime);}};return IsoFS;}(SynchronousFileSystem);IsoFS.Name=\"IsoFS\";IsoFS.Options={data:{type:\"object\",description:\"The ISO file in a buffer\",validator:bufferValidator}};// Monkey-patch `Create` functions to check options before file system initialization.\n[AsyncMirror,DropboxFileSystem,EmscriptenFileSystem,FolderAdapter,HTML5FS,InMemoryFileSystem,IndexedDBFileSystem,IsoFS,LocalStorageFileSystem,MountableFileSystem,OverlayFS,WorkerFS,XmlHttpRequest,ZipFS].forEach(function(fsType){var create=fsType.Create;fsType.Create=function(opts,cb){var oneArg=typeof opts===\"function\";var normalizedCb=oneArg?opts:cb;var normalizedOpts=oneArg?{}:opts;function wrappedCb(e){if(e){normalizedCb(e);}else{create.call(fsType,normalizedOpts,normalizedCb);}}checkOptions(fsType,normalizedOpts,wrappedCb);};});/**\n\t * @hidden\n\t */var Backends={AsyncMirror:AsyncMirror,Dropbox:DropboxFileSystem,Emscripten:EmscriptenFileSystem,FolderAdapter:FolderAdapter,HTML5FS:HTML5FS,InMemory:InMemoryFileSystem,IndexedDB:IndexedDBFileSystem,IsoFS:IsoFS,LocalStorage:LocalStorageFileSystem,MountableFileSystem:MountableFileSystem,OverlayFS:OverlayFS,WorkerFS:WorkerFS,XmlHttpRequest:XmlHttpRequest,ZipFS:ZipFS};/**\n\t * BrowserFS's main module. This is exposed in the browser via the BrowserFS global.\n\t * Due to limitations in typedoc, we document these functions in ./typedoc.ts.\n\t */if(process['initializeTTYs']){process['initializeTTYs']();}/**\n\t * Installs BFSRequire as global `require`, a Node Buffer polyfill as the global `Buffer` variable,\n\t * and a Node process polyfill as the global `process` variable.\n\t */function install(obj){obj.Buffer=Buffer;obj.process=process;var oldRequire=obj.require?obj.require:null;// Monkey-patch require for Node-style code.\nobj.require=function(arg){var rv=BFSRequire(arg);if(!rv){return oldRequire.apply(null,Array.prototype.slice.call(arguments,0));}else{return rv;}};}/**\n\t * @hidden\n\t */function registerFileSystem(name,fs){Backends[name]=fs;}function BFSRequire(module){switch(module){case'fs':return _fsMock;case'path':return path;case'buffer':// The 'buffer' module has 'Buffer' as a property.\nreturn buffer;case'process':return process;case'bfs_utils':return BFSUtils;default:return Backends[module];}}/**\n\t * Initializes BrowserFS with the given root file system.\n\t */function initialize(rootfs){return _fsMock.initialize(rootfs);}/**\n\t * Creates a file system with the given configuration, and initializes BrowserFS with it.\n\t * See the FileSystemConfiguration type for more info on the configuration object.\n\t */function configure(config,cb){getFileSystem(config,function(e,fs){if(fs){initialize(fs);cb();}else{cb(e);}});}/**\n\t * Retrieve a file system with the given configuration.\n\t * @param config A FileSystemConfiguration object. See FileSystemConfiguration for details.\n\t * @param cb Called when the file system is constructed, or when an error occurs.\n\t */function getFileSystem(config,cb){var fsName=config['fs'];if(!fsName){return cb(new ApiError(ErrorCode.EPERM,'Missing \"fs\" property on configuration object.'));}var options=config['options'];var waitCount=0;var called=false;function finish(){if(!called){called=true;var fsc=Backends[fsName];if(!fsc){cb(new ApiError(ErrorCode.EPERM,\"File system \"+fsName+\" is not available in BrowserFS.\"));}else{fsc.Create(options,cb);}}}if(options!==null&&_typeof(options)===\"object\"){var finishedIterating=false;var props=Object.keys(options).filter(function(k){return k!=='fs';});// Check recursively if other fields have 'fs' properties.\nprops.forEach(function(p){var d=options[p];if(d!==null&&_typeof(d)===\"object\"&&d['fs']){waitCount++;getFileSystem(d,function(e,fs){waitCount--;if(e){if(called){return;}called=true;cb(e);}else{options[p]=fs;if(waitCount===0&&finishedIterating){finish();}}});}});finishedIterating=true;}if(waitCount===0){finish();}}/**\n\t * BrowserFS's main entry point.\n\t * It installs all of the needed polyfills, and requires() the main module.\n\t */ // IE substr does not support negative indices\nif('ab'.substr(-1)!=='b'){String.prototype.substr=function(substr){return function(start,length){// did we get a negative start, calculate how much it is from the\n// beginning of the string\nif(start<0){start=this.length+start;}// call the original function\nreturn substr.call(this,start,length);};}(String.prototype.substr);}// Polyfill for Uint8Array.prototype.slice.\n// Safari and some other browsers do not define it.\nif(typeof ArrayBuffer!=='undefined'&&typeof Uint8Array!=='undefined'){if(!Uint8Array.prototype['slice']){Uint8Array.prototype.slice=function(start,end){if(start===void 0)start=0;if(end===void 0)end=this.length;var self=this;if(start<0){start=this.length+start;if(start<0){start=0;}}if(end<0){end=this.length+end;if(end<0){end=0;}}if(end<start){end=start;}return new Uint8Array(self.buffer,self.byteOffset+start,end-start);};}}exports.install=install;exports.registerFileSystem=registerFileSystem;exports.BFSRequire=BFSRequire;exports.initialize=initialize;exports.configure=configure;exports.getFileSystem=getFileSystem;exports.EmscriptenFS=BFSEmscriptenFS;exports.FileSystem=Backends;exports.Errors=api_error;exports.setImmediate=setImmediate$3;/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(1),function(){return this;}(),__webpack_require__(5)(module),__webpack_require__(6));/***/},/* 1 */ /***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(2).Buffer;/***/},/* 2 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(Buffer){/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */ /* eslint-disable no-proto */'use strict';var base64=__webpack_require__(3);var ieee754=__webpack_require__(4);exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;var K_MAX_LENGTH=0x7fffffff;exports.kMaxLength=K_MAX_LENGTH;/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n\t *               implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * We report that the browser does not support typed arrays if the are not subclassable\n\t * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n\t * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n\t * for __proto__ and has a buggy typed array implementation.\n\t */Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!=='undefined'&&typeof console.error==='function'){console.error('This browser lacks typed array (Uint8Array) support which is required by '+'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');}function typedArraySupport(){// Can typed array instances can be augmented?\ntry{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function foo(){return 42;}};return arr.foo()===42;}catch(e){return false;}}function createBuffer(length){if(length>K_MAX_LENGTH){throw new RangeError('Invalid typed array length');}// Return an augmented `Uint8Array` instance\nvar buf=new Uint8Array(length);buf.__proto__=Buffer.prototype;return buf;}/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */function Buffer(arg,encodingOrOffset,length){// Common case.\nif(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new Error('If encoding is specified then the first argument must be a string');}return allocUnsafe(arg);}return from(arg,encodingOrOffset,length);}// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif(typeof Symbol!=='undefined'&&Symbol.species&&Buffer[Symbol.species]===Buffer){Object.defineProperty(Buffer,Symbol.species,{value:null,configurable:true,enumerable:false,writable:false});}Buffer.poolSize=8192;// not used by this implementation\nfunction from(value,encodingOrOffset,length){if(typeof value==='number'){throw new TypeError('\"value\" argument must not be a number');}if(isArrayBuffer(value)){return fromArrayBuffer(value,encodingOrOffset,length);}if(typeof value==='string'){return fromString(value,encodingOrOffset);}return fromObject(value);}/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/Buffer.from=function(value,encodingOrOffset,length){return from(value,encodingOrOffset,length);};// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;function assertSize(size){if(typeof size!=='number'){throw new TypeError('\"size\" argument must be a number');}else if(size<0){throw new RangeError('\"size\" argument must not be negative');}}function alloc(size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding==='string'?createBuffer(size).fill(fill,encoding):createBuffer(size).fill(fill);}return createBuffer(size);}/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/Buffer.alloc=function(size,fill,encoding){return alloc(size,fill,encoding);};function allocUnsafe(size){assertSize(size);return createBuffer(size<0?0:checked(size)|0);}/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */Buffer.allocUnsafe=function(size){return allocUnsafe(size);};/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(size);};function fromString(string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('\"encoding\" must be a valid string encoding');}var length=byteLength(string,encoding)|0;var buf=createBuffer(length);var actual=buf.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// 'abxxcd' will be treated as 'ab')\nbuf=buf.slice(0,actual);}return buf;}function fromArrayLike(array){var length=array.length<0?0:checked(array.length)|0;var buf=createBuffer(length);for(var i=0;i<length;i+=1){buf[i]=array[i]&255;}return buf;}function fromArrayBuffer(array,byteOffset,length){if(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('\\'offset\\' is out of bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('\\'length\\' is out of bounds');}var buf;if(byteOffset===undefined&&length===undefined){buf=new Uint8Array(array);}else if(length===undefined){buf=new Uint8Array(array,byteOffset);}else{buf=new Uint8Array(array,byteOffset,length);}// Return an augmented `Uint8Array` instance\nbuf.__proto__=Buffer.prototype;return buf;}function fromObject(obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;var buf=createBuffer(len);if(buf.length===0){return buf;}obj.copy(buf,0,0,len);return buf;}if(obj){if(isArrayBufferView(obj)||'length'in obj){if(typeof obj.length!=='number'||numberIsNaN(obj.length)){return createBuffer(0);}return fromArrayLike(obj);}if(obj.type==='Buffer'&&Array.isArray(obj.data)){return fromArrayLike(obj.data);}}throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');}function checked(length){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=K_MAX_LENGTH){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+K_MAX_LENGTH.toString(16)+' bytes');}return length|0;}function SlowBuffer(length){if(+length!=length){// eslint-disable-line eqeqeq\nlength=0;}return Buffer.alloc(+length);}Buffer.isBuffer=function isBuffer(b){return b!=null&&b._isBuffer===true;};Buffer.compare=function compare(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError('Arguments must be Buffers');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!Array.isArray(list)){throw new TypeError('\"list\" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer.isBuffer(buf)){throw new TypeError('\"list\" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length;}if(isArrayBufferView(string)||isArrayBuffer(string)){return string.byteLength;}if(typeof string!=='string'){string=''+string;}var len=string.length;if(len===0)return 0;// Use a for loop to avoid recursion\nvar loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':case undefined:return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;// assume utf8\nencoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){return'';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return'';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;start>>>=0;if(end<=start){return'';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length;if(length===0)return'';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=exports.INSPECT_MAX_BYTES;if(this.length>0){str=this.toString('hex',0,max).match(/.{2}/g).join(' ');if(this.length>max)str+=' ... ';}return'<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target)){throw new TypeError('Argument must be a Buffer');}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match\nif(buffer.length===0)return-1;// Normalize byteOffset\nif(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.\nif(numberIsNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val\nif(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(Buffer.isBuffer(val)){// Special case: looking for empty string/buffer always fails\nif(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]\nif(typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}// must be an even number of digits\nvar strLen=string.length;if(strLen%2!==0)throw new TypeError('Invalid hex string');if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(numberIsNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)\nif(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){offset=offset>>>0;if(isFinite(length)){length=length>>>0;if(encoding===undefined)encoding='utf8';}else{encoding=length;length=undefined;}}else{throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else{return base64.fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}// Decode in chunks to avoid \"call stack size exceeded\".\nvar res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf=this.subarray(start,end);// Return an augmented `Uint8Array` instance\nnewBuf.__proto__=Buffer.prototype;return newBuf;};/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){offset=offset>>>0;if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('\"value\" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;byteLength=byteLength>>>0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset>>>0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value&0xff;this[offset+1]=value>>>8;return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);this[offset]=value>>>8;this[offset+1]=value&0xff;return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset>>>0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){value=+value;offset=offset>>>0;if(!noAssert){checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done\nif(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions\nif(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('sourceStart out of bounds');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?\nif(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){// descending copy from end\nfor(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else if(len<1000){// ascending copy from start\nfor(i=0;i<len;++i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);}return len;};// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:\nif(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code;}}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=Buffer.isBuffer(val)?val:new Buffer(val,encoding);var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS\n// ================\nvar INVALID_BASE64_RE=/[^+/0-9A-Za-z-_]/g;function base64clean(str){// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=str.trim().replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''\nif(str.length<2)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){str=str+'=';}return str;}function toHex(n){if(n<16)return'0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead\nif(!leadSurrogate){// no lead yet\nif(codePoint>0xDBFF){// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead\nleadSurrogate=codePoint;continue;}// 2 leads in a row\nif(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8\nif(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return base64.toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer(obj){return obj instanceof ArrayBuffer||obj!=null&&obj.constructor!=null&&obj.constructor.name==='ArrayBuffer'&&typeof obj.byteLength==='number';}// Node 0.10 supports `ArrayBuffer` but lacks `ArrayBuffer.isView`\nfunction isArrayBufferView(obj){return typeof ArrayBuffer.isView==='function'&&ArrayBuffer.isView(obj);}function numberIsNaN(obj){return obj!==obj;// eslint-disable-line no-self-compare\n}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(1));/***/},/* 3 */ /***/function(module,exports){'use strict';exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}revLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function placeHoldersCount(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// the number of equal signs (place holders)\n// if there are two placeholders, than the two characters before it\n// represent one byte\n// if there is only one, then the three characters before it represent 2 bytes\n// this is just a cheap hack to not do indexOf twice\nreturn b64[len-2]==='='?2:b64[len-1]==='='?1:0;}function byteLength(b64){// base64 is 4/3 + up to two characters of the original data\nreturn b64.length*3/4-placeHoldersCount(b64);}function toByteArray(b64){var i,j,l,tmp,placeHolders,arr;var len=b64.length;placeHolders=placeHoldersCount(b64);arr=new Arr(len*3/4-placeHolders);// if there are placeholders, only get up to the last complete 4 chars\nl=placeHolders>0?len-4:len;var L=0;for(i=0,j=0;i<l;i+=4,j+=3){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&0xFF;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&0xFF;}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16)+(uint8[i+1]<<8)+uint8[i+2];output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar output='';var parts=[];var maxChunkLength=16383;// must be multiple of 3\n// go through the array every three bytes, we'll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&0x3F];output+='==';}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&0x3F];output+=lookup[tmp<<2&0x3F];output+='=';}parts.push(output);return parts.join('');}/***/},/* 4 */ /***/function(module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;};/***/},/* 5 */ /***/function(module,exports){module.exports=function(module){if(!module.webpackPolyfill){module.deprecate=function(){};module.paths=[];// module.parent = undefined by default\nmodule.children=[];module.webpackPolyfill=1;}return module;};/***/},/* 6 */ /***/function(module,exports,__webpack_require__){\"use strict\";var Process=__webpack_require__(7);var process=new Process(),processProxy={};function defineKey(key){if(processProxy[key]){// Probably a builtin Object property we don't care about.\nreturn;}if(typeof process[key]==='function'){processProxy[key]=function(){return process[key].apply(process,arguments);};}else{processProxy[key]=process[key];}}for(var key in process){// Don't check if process.hasOwnProperty; we want to also expose objects\n// up the prototype hierarchy.\ndefineKey(key);}// Special key: Ensure we update public-facing values of stdin/stdout/stderr.\nprocessProxy.initializeTTYs=function(){if(process.stdin===null){process.initializeTTYs();processProxy.stdin=process.stdin;processProxy.stdout=process.stdout;processProxy.stderr=process.stderr;}};process.nextTick(function(){processProxy.initializeTTYs();});module.exports=processProxy;/***/},/* 7 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(__dirname){\"use strict\";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var events=__webpack_require__(8);// Path depends on process. Avoid a circular reference by dynamically including path when we need it.\nvar path=null;var Item=function(){function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};return Item;}();/**\n\t * Contains a queue of Items for process.nextTick.\n\t * Inspired by node-process: https://github.com/defunctzombie/node-process\n\t */var NextTickQueue=function(){function NextTickQueue(){this._queue=[];this._draining=false;// Used/assigned by the drainQueue function.\nthis._currentQueue=null;this._queueIndex=-1;}NextTickQueue.prototype.push=function(item){var _this=this;if(this._queue.push(item)===1&&!this._draining){setTimeout(function(){return _this._drainQueue();},0);}};NextTickQueue.prototype._cleanUpNextTick=function(){this._draining=false;if(this._currentQueue&&this._currentQueue.length){this._queue=this._currentQueue.concat(this._queue);}else{this._queueIndex=-1;}if(this._queue.length){this._drainQueue();}};NextTickQueue.prototype._drainQueue=function(){var _this=this;if(this._draining){return;}// If an Item throws an unhandled exception, this function will clean things up.\nvar timeout=setTimeout(function(){return _this._cleanUpNextTick();});this._draining=true;var len=this._queue.length;while(len){this._currentQueue=this._queue;this._queue=[];while(++this._queueIndex<len){if(this._currentQueue){this._currentQueue[this._queueIndex].run();}}this._queueIndex=-1;len=this._queue.length;}this._currentQueue=null;this._draining=false;clearTimeout(timeout);};return NextTickQueue;}();/**\n\t * Partial implementation of Node's `process` module.\n\t * We implement the portions that are relevant for the filesystem.\n\t * @see http://nodejs.org/api/process.html\n\t * @class\n\t */var Process=function(_super){__extends(Process,_super);function Process(){_super.apply(this,arguments);this.startTime=Date.now();this._cwd='/';/**\n\t         * Returns what platform you are running on.\n\t         * @return [String]\n\t         */this.platform='browser';this.argv=[];this.execArgv=[];this.stdout=null;this.stderr=null;this.stdin=null;this.domain=null;this._queue=new NextTickQueue();this.execPath=__dirname;this.env={};this.exitCode=0;this._gid=1;this._uid=1;this.version='v5.0';this.versions={http_parser:'0.0',node:'5.0',v8:'0.0',uv:'0.0',zlib:'0.0',ares:'0.0',icu:'0.0',modules:'0',openssl:'0.0'};this.config={target_defaults:{cflags:[],default_configuration:'Release',defines:[],include_dirs:[],libraries:[]},variables:{clang:0,host_arch:'x32',node_install_npm:false,node_install_waf:false,node_prefix:'',node_shared_cares:false,node_shared_http_parser:false,node_shared_libuv:false,node_shared_zlib:false,node_shared_v8:false,node_use_dtrace:false,node_use_etw:false,node_use_openssl:false,node_shared_openssl:false,strict_aliasing:false,target_arch:'x32',v8_use_snapshot:false,v8_no_strict_aliasing:0,visibility:''}};this.pid=Math.random()*1000|0;this.title='node';this.arch='x32';this._mask=18;// Undefined in main thread. Worker-only.\nthis.connected=undefined;}/**\n\t     * Changes the current working directory.\n\t     *\n\t     * **Note**: BrowserFS does not validate that the directory actually exists.\n\t     *\n\t     * @example Usage example\n\t     *   console.log('Starting directory: ' + process.cwd());\n\t     *   process.chdir('/tmp');\n\t     *   console.log('New directory: ' + process.cwd());\n\t     * @param [String] dir The directory to change to.\n\t     */Process.prototype.chdir=function(dir){// XXX: Circular dependency hack.\nif(path===null){path=__webpack_require__(9);}this._cwd=path.resolve(dir);};/**\n\t     * Returns the current working directory.\n\t     * @example Usage example\n\t     *   console.log('Current directory: ' + process.cwd());\n\t     * @return [String] The current working directory.\n\t     */Process.prototype.cwd=function(){return this._cwd;};/**\n\t     * Number of seconds BrowserFS has been running.\n\t     * @return [Number]\n\t     */Process.prototype.uptime=function(){return(Date.now()-this.startTime)/1000|0;};Process.prototype.nextTick=function(fun){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}this._queue.push(new Item(fun,args));};Process.prototype.abort=function(){this.emit('abort');};Process.prototype.exit=function(code){this.exitCode=code;this.emit('exit',[code]);};Process.prototype.getgid=function(){return this._gid;};Process.prototype.setgid=function(gid){if(typeof gid==='number'){this._gid=gid;}else{this._gid=1;}};Process.prototype.getuid=function(){return this._uid;};Process.prototype.setuid=function(uid){if(typeof uid==='number'){this._uid=uid;}else{this._uid=1;}};Process.prototype.kill=function(pid,signal){this.emit('kill',[pid,signal]);};Process.prototype.memoryUsage=function(){return{rss:0,heapTotal:0,heapUsed:0};};Process.prototype.umask=function(mask){if(mask===void 0){mask=this._mask;}var oldMask=this._mask;this._mask=mask;this.emit('umask',[mask]);return oldMask;};Process.prototype.hrtime=function(){var timeinfo;if(typeof performance!=='undefined'){timeinfo=performance.now();}else if(Date['now']){timeinfo=Date.now();}else{timeinfo=new Date().getTime();}var secs=timeinfo/1000|0;timeinfo-=secs*1000;timeinfo=timeinfo*1000000|0;return[secs,timeinfo];};/**\n\t     * [BFS only] Initialize the TTY devices.\n\t     */Process.prototype.initializeTTYs=function(){// Guard against multiple invocations.\nif(this.stdout===null){var TTY=__webpack_require__(10);this.stdout=new TTY();this.stderr=new TTY();this.stdin=new TTY();}};/**\n\t     * Worker-only function; irrelevant here.\n\t     */Process.prototype.disconnect=function(){};return Process;}(events.EventEmitter);module.exports=Process;/* WEBPACK VAR INJECTION */}).call(exports,\"/\");/***/},/* 8 */ /***/function(module,exports){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nfunction EventEmitter(){this._events=this._events||{};this._maxListeners=this._maxListeners||undefined;}module.exports=EventEmitter;// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._maxListeners=undefined;// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners=10;// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners=function(n){if(!isNumber(n)||n<0||isNaN(n))throw TypeError('n must be a positive number');this._maxListeners=n;return this;};EventEmitter.prototype.emit=function(type){var er,handler,len,args,i,listeners;if(!this._events)this._events={};// If there is no 'error' event listener then throw.\nif(type==='error'){if(!this._events.error||isObject(this._events.error)&&!this._events.error.length){er=arguments[1];if(er instanceof Error){throw er;// Unhandled 'error' event\n}else{// At least give some kind of context to the user\nvar err=new Error('Uncaught, unspecified \"error\" event. ('+er+')');err.context=er;throw err;}}}handler=this._events[type];if(isUndefined(handler))return false;if(isFunction(handler)){switch(arguments.length){// fast cases\ncase 1:handler.call(this);break;case 2:handler.call(this,arguments[1]);break;case 3:handler.call(this,arguments[1],arguments[2]);break;// slower\ndefault:args=Array.prototype.slice.call(arguments,1);handler.apply(this,args);}}else if(isObject(handler)){args=Array.prototype.slice.call(arguments,1);listeners=handler.slice();len=listeners.length;for(i=0;i<len;i++){listeners[i].apply(this,args);}}return true;};EventEmitter.prototype.addListener=function(type,listener){var m;if(!isFunction(listener))throw TypeError('listener must be a function');if(!this._events)this._events={};// To avoid recursion in the case that type === \"newListener\"! Before\n// adding it to the listeners, first emit \"newListener\".\nif(this._events.newListener)this.emit('newListener',type,isFunction(listener.listener)?listener.listener:listener);if(!this._events[type])// Optimize the case of one listener. Don't need the extra array object.\nthis._events[type]=listener;else if(isObject(this._events[type]))// If we've already got an array, just append.\nthis._events[type].push(listener);else// Adding the second element, need to change to array.\nthis._events[type]=[this._events[type],listener];// Check for listener leak\nif(isObject(this._events[type])&&!this._events[type].warned){if(!isUndefined(this._maxListeners)){m=this._maxListeners;}else{m=EventEmitter.defaultMaxListeners;}if(m&&m>0&&this._events[type].length>m){this._events[type].warned=true;console.error('(node) warning: possible EventEmitter memory '+'leak detected. %d listeners added. '+'Use emitter.setMaxListeners() to increase limit.',this._events[type].length);if(typeof console.trace==='function'){// not supported in IE 10\nconsole.trace();}}}return this;};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.once=function(type,listener){if(!isFunction(listener))throw TypeError('listener must be a function');var fired=false;function g(){this.removeListener(type,g);if(!fired){fired=true;listener.apply(this,arguments);}}g.listener=listener;this.on(type,g);return this;};// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener=function(type,listener){var list,position,length,i;if(!isFunction(listener))throw TypeError('listener must be a function');if(!this._events||!this._events[type])return this;list=this._events[type];length=list.length;position=-1;if(list===listener||isFunction(list.listener)&&list.listener===listener){delete this._events[type];if(this._events.removeListener)this.emit('removeListener',type,listener);}else if(isObject(list)){for(i=length;i-->0;){if(list[i]===listener||list[i].listener&&list[i].listener===listener){position=i;break;}}if(position<0)return this;if(list.length===1){list.length=0;delete this._events[type];}else{list.splice(position,1);}if(this._events.removeListener)this.emit('removeListener',type,listener);}return this;};EventEmitter.prototype.removeAllListeners=function(type){var key,listeners;if(!this._events)return this;// not listening for removeListener, no need to emit\nif(!this._events.removeListener){if(arguments.length===0)this._events={};else if(this._events[type])delete this._events[type];return this;}// emit removeListener for all listeners on all events\nif(arguments.length===0){for(key in this._events){if(key==='removeListener')continue;this.removeAllListeners(key);}this.removeAllListeners('removeListener');this._events={};return this;}listeners=this._events[type];if(isFunction(listeners)){this.removeListener(type,listeners);}else if(listeners){// LIFO order\nwhile(listeners.length){this.removeListener(type,listeners[listeners.length-1]);}}delete this._events[type];return this;};EventEmitter.prototype.listeners=function(type){var ret;if(!this._events||!this._events[type])ret=[];else if(isFunction(this._events[type]))ret=[this._events[type]];else ret=this._events[type].slice();return ret;};EventEmitter.prototype.listenerCount=function(type){if(this._events){var evlistener=this._events[type];if(isFunction(evlistener))return 1;else if(evlistener)return evlistener.length;}return 0;};EventEmitter.listenerCount=function(emitter,type){return emitter.listenerCount(type);};function isFunction(arg){return typeof arg==='function';}function isNumber(arg){return typeof arg==='number';}function isObject(arg){return _typeof(arg)==='object'&&arg!==null;}function isUndefined(arg){return arg===void 0;}/***/},/* 9 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(process){\"use strict\";// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;function posixSplitPath(filename){var out=splitPathRe.exec(filename);out.shift();return out;}/**\n\t * Emulates Node's `path` module. This module contains utilities for handling and\n\t * transforming file paths. **All** of these methods perform only string\n\t * transformations. The file system is not consulted to check whether paths are\n\t * valid.\n\t * @see http://nodejs.org/api/path.html\n\t * @class\n\t */var path=function(){function path(){}/**\n\t     * Normalize a string path, taking care of '..' and '.' parts.\n\t     *\n\t     * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n\t     * @example Usage example\n\t     *   path.normalize('/foo/bar//baz/asdf/quux/..')\n\t     *   // returns\n\t     *   '/foo/bar/baz/asdf'\n\t     * @param [String] p The path to normalize.\n\t     * @return [String]\n\t     */path.normalize=function(p){// Special case: '' -> '.'\nif(p===''){p='.';}// It's very important to know if the path is relative or not, since it\n// changes how we process .. and reconstruct the split string.\nvar absolute=p.charAt(0)===path.sep;// Remove repeated //s\np=path._removeDuplicateSeps(p);// Try to remove as many '../' as possible, and remove '.' completely.\nvar components=p.split(path.sep);var goodComponents=[];for(var idx=0;idx<components.length;idx++){var c=components[idx];if(c==='.'){continue;}else if(c==='..'&&(absolute||!absolute&&goodComponents.length>0&&goodComponents[0]!=='..')){// In the absolute case: Path is relative to root, so we may pop even if\n// goodComponents is empty (e.g. /../ => /)\n// In the relative case: We're getting rid of a directory that preceded\n// it (e.g. /foo/../bar -> /bar)\ngoodComponents.pop();}else{goodComponents.push(c);}}// Add in '.' when it's a relative path with no other nonempty components.\n// Possible results: '.' and './' (input: [''] or [])\n// @todo Can probably simplify this logic.\nif(!absolute&&goodComponents.length<2){switch(goodComponents.length){case 1:if(goodComponents[0]===''){goodComponents.unshift('.');}break;default:goodComponents.push('.');}}p=goodComponents.join(path.sep);if(absolute&&p.charAt(0)!==path.sep){p=path.sep+p;}return p;};/**\n\t     * Join all arguments together and normalize the resulting path.\n\t     *\n\t     * Arguments must be strings.\n\t     * @example Usage\n\t     *   path.join('/foo', 'bar', 'baz/asdf', 'quux', '..')\n\t     *   // returns\n\t     *   '/foo/bar/baz/asdf'\n\t     *\n\t     *   path.join('foo', {}, 'bar')\n\t     *   // throws exception\n\t     *   TypeError: Arguments to path.join must be strings\n\t     * @param [String,...] paths Each component of the path\n\t     * @return [String]\n\t     */path.join=function(){var paths=[];for(var _i=0;_i<arguments.length;_i++){paths[_i-0]=arguments[_i];}// Required: Prune any non-strings from the path. I also prune empty segments\n// so we can do a simple join of the array.\nvar processed=[];for(var i=0;i<paths.length;i++){var segment=paths[i];if(typeof segment!=='string'){throw new TypeError(\"Invalid argument type to path.join: \"+_typeof(segment));}else if(segment!==''){processed.push(segment);}}return path.normalize(processed.join(path.sep));};/**\n\t     * Resolves to to an absolute path.\n\t     *\n\t     * If to isn't already absolute from arguments are prepended in right to left\n\t     * order, until an absolute path is found. If after using all from paths still\n\t     * no absolute path is found, the current working directory is used as well.\n\t     * The resulting path is normalized, and trailing slashes are removed unless\n\t     * the path gets resolved to the root directory. Non-string arguments are\n\t     * ignored.\n\t     *\n\t     * Another way to think of it is as a sequence of cd commands in a shell.\n\t     *\n\t     *     path.resolve('foo/bar', '/tmp/file/', '..', 'a/../subfile')\n\t     *\n\t     * Is similar to:\n\t     *\n\t     *     cd foo/bar\n\t     *     cd /tmp/file/\n\t     *     cd ..\n\t     *     cd a/../subfile\n\t     *     pwd\n\t     *\n\t     * The difference is that the different paths don't need to exist and may also\n\t     * be files.\n\t     * @example Usage example\n\t     *   path.resolve('/foo/bar', './baz')\n\t     *   // returns\n\t     *   '/foo/bar/baz'\n\t     *\n\t     *   path.resolve('/foo/bar', '/tmp/file/')\n\t     *   // returns\n\t     *   '/tmp/file'\n\t     *\n\t     *   path.resolve('wwwroot', 'static_files/png/', '../gif/image.gif')\n\t     *   // if currently in /home/myself/node, it returns\n\t     *   '/home/myself/node/wwwroot/static_files/gif/image.gif'\n\t     * @param [String,...] paths\n\t     * @return [String]\n\t     */path.resolve=function(){var paths=[];for(var _i=0;_i<arguments.length;_i++){paths[_i-0]=arguments[_i];}// Monitor for invalid paths, throw out empty paths, and look for the *last*\n// absolute path that we see.\nvar processed=[];for(var i=0;i<paths.length;i++){var p=paths[i];if(typeof p!=='string'){throw new TypeError(\"Invalid argument type to path.join: \"+_typeof(p));}else if(p!==''){// Remove anything that has occurred before this absolute path, as it\n// doesn't matter.\nif(p.charAt(0)===path.sep){processed=[];}processed.push(p);}}// Special: Remove trailing slash unless it's the root\nvar resolved=path.normalize(processed.join(path.sep));if(resolved.length>1&&resolved.charAt(resolved.length-1)===path.sep){return resolved.substr(0,resolved.length-1);}// Special: If it doesn't start with '/', it's relative and we need to append\n// the current directory.\nif(resolved.charAt(0)!==path.sep){// Remove ./, since we're going to append the current directory.\nif(resolved.charAt(0)==='.'&&(resolved.length===1||resolved.charAt(1)===path.sep)){resolved=resolved.length===1?'':resolved.substr(2);}// Append the current directory, which *must* be an absolute path.\nvar cwd=process.cwd();if(resolved!==''){// cwd will never end in a /... unless it's the root.\nresolved=this.normalize(cwd+(cwd!=='/'?path.sep:'')+resolved);}else{resolved=cwd;}}return resolved;};/**\n\t     * Solve the relative path from from to to.\n\t     *\n\t     * At times we have two absolute paths, and we need to derive the relative path\n\t     * from one to the other. This is actually the reverse transform of\n\t     * path.resolve, which means we see that:\n\t     *\n\t     *    path.resolve(from, path.relative(from, to)) == path.resolve(to)\n\t     *\n\t     * @example Usage example\n\t     *   path.relative('C:\\\\orandea\\\\test\\\\aaa', 'C:\\\\orandea\\\\impl\\\\bbb')\n\t     *   // returns\n\t     *   '..\\\\..\\\\impl\\\\bbb'\n\t     *\n\t     *   path.relative('/data/orandea/test/aaa', '/data/orandea/impl/bbb')\n\t     *   // returns\n\t     *   '../../impl/bbb'\n\t     * @param [String] from\n\t     * @param [String] to\n\t     * @return [String]\n\t     */path.relative=function(from,to){var i;// Alright. Let's resolve these two to absolute paths and remove any\n// weirdness.\nfrom=path.resolve(from);to=path.resolve(to);var fromSegs=from.split(path.sep);var toSegs=to.split(path.sep);// Remove the first segment on both, as it's '' (both are absolute paths)\ntoSegs.shift();fromSegs.shift();// There are two segments to this path:\n// * Going *up* the directory hierarchy with '..'\n// * Going *down* the directory hierarchy with foo/baz/bat.\nvar upCount=0;var downSegs=[];// Figure out how many things in 'from' are shared with 'to'.\nfor(i=0;i<fromSegs.length;i++){var seg=fromSegs[i];if(seg===toSegs[i]){continue;}// The rest of 'from', including the current element, indicates how many\n// directories we need to go up.\nupCount=fromSegs.length-i;break;}// The rest of 'to' indicates where we need to change to. We place this\n// outside of the loop, as toSegs.length may be greater than fromSegs.length.\ndownSegs=toSegs.slice(i);// Special case: If 'from' is '/'\nif(fromSegs.length===1&&fromSegs[0]===''){upCount=0;}// upCount can't be greater than the number of fromSegs\n// (cd .. from / is still /)\nif(upCount>fromSegs.length){upCount=fromSegs.length;}// Create the final string!\nvar rv='';for(i=0;i<upCount;i++){rv+='../';}rv+=downSegs.join(path.sep);// Special case: Remove trailing '/'. Happens if it's all up and no down.\nif(rv.length>1&&rv.charAt(rv.length-1)===path.sep){rv=rv.substr(0,rv.length-1);}return rv;};/**\n\t     * Return the directory name of a path. Similar to the Unix `dirname` command.\n\t     *\n\t     * Note that BrowserFS does not validate if the path is actually a valid\n\t     * directory.\n\t     * @example Usage example\n\t     *   path.dirname('/foo/bar/baz/asdf/quux')\n\t     *   // returns\n\t     *   '/foo/bar/baz/asdf'\n\t     * @param [String] p The path to get the directory name of.\n\t     * @return [String]\n\t     */path.dirname=function(p){// We get rid of //, but we don't modify anything else (e.g. any extraneous .\n// and ../ are kept intact)\np=path._removeDuplicateSeps(p);var absolute=p.charAt(0)===path.sep;var sections=p.split(path.sep);// Do 1 if it's /foo/bar, 2 if it's /foo/bar/\nif(sections.pop()===''&&sections.length>0){sections.pop();}// # of sections needs to be > 1 if absolute, since the first section is '' for '/'.\n// If not absolute, the first section is the first part of the path, and is OK\n// to return.\nif(sections.length>1||sections.length===1&&!absolute){return sections.join(path.sep);}else if(absolute){return path.sep;}else{return'.';}};/**\n\t     * Return the last portion of a path. Similar to the Unix basename command.\n\t     * @example Usage example\n\t     *   path.basename('/foo/bar/baz/asdf/quux.html')\n\t     *   // returns\n\t     *   'quux.html'\n\t     *\n\t     *   path.basename('/foo/bar/baz/asdf/quux.html', '.html')\n\t     *   // returns\n\t     *   'quux'\n\t     * @param [String] p\n\t     * @param [String?] ext\n\t     * @return [String]\n\t     */path.basename=function(p,ext){if(ext===void 0){ext=\"\";}// Special case: Normalize will modify this to '.'\nif(p===''){return p;}// Normalize the string first to remove any weirdness.\np=path.normalize(p);// Get the last part of the string.\nvar sections=p.split(path.sep);var lastPart=sections[sections.length-1];// Special case: If it's empty, then we have a string like so: foo/\n// Meaning, 'foo' is guaranteed to be a directory.\nif(lastPart===''&&sections.length>1){return sections[sections.length-2];}// Remove the extension, if need be.\nif(ext.length>0){var lastPartExt=lastPart.substr(lastPart.length-ext.length);if(lastPartExt===ext){return lastPart.substr(0,lastPart.length-ext.length);}}return lastPart;};/**\n\t     * Return the extension of the path, from the last '.' to end of string in the\n\t     * last portion of the path. If there is no '.' in the last portion of the path\n\t     * or the first character of it is '.', then it returns an empty string.\n\t     * @example Usage example\n\t     *   path.extname('index.html')\n\t     *   // returns\n\t     *   '.html'\n\t     *\n\t     *   path.extname('index.')\n\t     *   // returns\n\t     *   '.'\n\t     *\n\t     *   path.extname('index')\n\t     *   // returns\n\t     *   ''\n\t     * @param [String] p\n\t     * @return [String]\n\t     */path.extname=function(p){p=path.normalize(p);var sections=p.split(path.sep);p=sections.pop();// Special case: foo/file.ext/ should return '.ext'\nif(p===''&&sections.length>0){p=sections.pop();}if(p==='..'){return'';}var i=p.lastIndexOf('.');if(i===-1||i===0){return'';}return p.substr(i);};/**\n\t     * Checks if the given path is an absolute path.\n\t     *\n\t     * Despite not being documented, this is a tested part of Node's path API.\n\t     * @param [String] p\n\t     * @return [Boolean] True if the path appears to be an absolute path.\n\t     */path.isAbsolute=function(p){return p.length>0&&p.charAt(0)===path.sep;};/**\n\t     * Unknown. Undocumented.\n\t     */path._makeLong=function(p){return p;};/**\n\t     * Returns an object from a path string.\n\t     */path.parse=function(p){var allParts=posixSplitPath(p);return{root:allParts[0],dir:allParts[0]+allParts[1].slice(0,-1),base:allParts[2],ext:allParts[3],name:allParts[2].slice(0,allParts[2].length-allParts[3].length)};};path.format=function(pathObject){if(pathObject===null||_typeof(pathObject)!=='object'){throw new TypeError(\"Parameter 'pathObject' must be an object, not \"+_typeof(pathObject));}var root=pathObject.root||'';if(typeof root!=='string'){throw new TypeError(\"'pathObject.root' must be a string or undefined, not \"+_typeof(pathObject.root));}var dir=pathObject.dir?pathObject.dir+path.sep:'';var base=pathObject.base||'';return dir+base;};path._removeDuplicateSeps=function(p){p=p.replace(this._replaceRegex,this.sep);return p;};// The platform-specific file separator. BrowserFS uses `/`.\npath.sep='/';path._replaceRegex=new RegExp(\"//+\",'g');// The platform-specific path delimiter. BrowserFS uses `:`.\npath.delimiter=':';path.posix=path;// XXX: Typing hack. We don't actually support win32.\npath.win32=path;return path;}();var _=path;module.exports=path;/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(6));/***/},/* 10 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(Buffer){\"use strict\";var __extends=this&&this.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var stream=__webpack_require__(11);var TTY=function(_super){__extends(TTY,_super);function TTY(){_super.call(this);this.isRaw=false;this.columns=80;this.rows=120;this.isTTY=true;this._bufferedWrites=[];this._waitingForWrites=false;}/**\n\t     * Toggle raw mode.\n\t     */TTY.prototype.setRawMode=function(mode){if(this.isRaw!==mode){this.isRaw=mode;// [BFS] TTY implementations can use this to change their event emitting\n//       patterns.\nthis.emit('modeChange');}};/**\n\t     * [BFS] Update the number of columns available on the terminal.\n\t     */TTY.prototype.changeColumns=function(columns){if(columns!==this.columns){this.columns=columns;// Resize event.\nthis.emit('resize');}};/**\n\t     * [BFS] Update the number of rows available on the terminal.\n\t     */TTY.prototype.changeRows=function(rows){if(rows!==this.rows){this.rows=rows;// Resize event.\nthis.emit('resize');}};/**\n\t     * Returns 'true' if the given object is a TTY.\n\t     */TTY.isatty=function(fd){return fd&&fd instanceof TTY;};TTY.prototype._write=function(chunk,encoding,cb){var error;try{var data;if(typeof chunk==='string'){data=new Buffer(chunk,encoding);}else{data=chunk;}this._bufferedWrites.push(data);if(this._waitingForWrites){this._read(1024);}}catch(e){error=e;}finally{cb(error);}};TTY.prototype._read=function(size){// Size is advisory -- we can ignore it.\nif(this._bufferedWrites.length===0){this._waitingForWrites=true;}else{while(this._bufferedWrites.length>0){this._waitingForWrites=this.push(this._bufferedWrites.shift());if(!this._waitingForWrites){break;}}}};return TTY;}(stream.Duplex);module.exports=TTY;/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(1));/***/},/* 11 */ /***/function(module,exports,__webpack_require__){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nmodule.exports=Stream;var EE=__webpack_require__(8).EventEmitter;var inherits=__webpack_require__(12);inherits(Stream,EE);Stream.Readable=__webpack_require__(13);Stream.Writable=__webpack_require__(27);Stream.Duplex=__webpack_require__(28);Stream.Transform=__webpack_require__(29);Stream.PassThrough=__webpack_require__(30);// Backwards-compat with node 0.4.x\nStream.Stream=Stream;// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\nfunction Stream(){EE.call(this);}Stream.prototype.pipe=function(dest,options){var source=this;function ondata(chunk){if(dest.writable){if(false===dest.write(chunk)&&source.pause){source.pause();}}}source.on('data',ondata);function ondrain(){if(source.readable&&source.resume){source.resume();}}dest.on('drain',ondrain);// If the 'end' option is not supplied, dest.end() will be called when\n// source gets the 'end' or 'close' events.  Only dest.end() once.\nif(!dest._isStdio&&(!options||options.end!==false)){source.on('end',onend);source.on('close',onclose);}var didOnEnd=false;function onend(){if(didOnEnd)return;didOnEnd=true;dest.end();}function onclose(){if(didOnEnd)return;didOnEnd=true;if(typeof dest.destroy==='function')dest.destroy();}// don't leave dangling pipes when there are errors.\nfunction onerror(er){cleanup();if(EE.listenerCount(this,'error')===0){throw er;// Unhandled stream error in pipe.\n}}source.on('error',onerror);dest.on('error',onerror);// remove all the event listeners that were added.\nfunction cleanup(){source.removeListener('data',ondata);dest.removeListener('drain',ondrain);source.removeListener('end',onend);source.removeListener('close',onclose);source.removeListener('error',onerror);dest.removeListener('error',onerror);source.removeListener('end',cleanup);source.removeListener('close',cleanup);dest.removeListener('close',cleanup);}source.on('end',cleanup);source.on('close',cleanup);dest.on('close',cleanup);dest.emit('pipe',source);// Allow for unix-like usage: A.pipe(B).pipe(C)\nreturn dest;};/***/},/* 12 */ /***/function(module,exports){if(typeof Object.create==='function'){// implementation from standard node.js 'util' module\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});};}else{// old school shim for old browsers\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function TempCtor(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;};}/***/},/* 13 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(process){var Stream=function(){try{return __webpack_require__(11);// hack to fix a circular dependency issue when used with browserify\n}catch(_){}}();exports=module.exports=__webpack_require__(14);exports.Stream=Stream||exports;exports.Readable=exports;exports.Writable=__webpack_require__(22);exports.Duplex=__webpack_require__(21);exports.Transform=__webpack_require__(25);exports.PassThrough=__webpack_require__(26);if(!process.browser&&process.env.READABLE_STREAM==='disable'&&Stream){module.exports=Stream;}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(6));/***/},/* 14 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(process){'use strict';module.exports=Readable;/*<replacement>*/var processNextTick=__webpack_require__(15);/*</replacement>*/ /*<replacement>*/var isArray=__webpack_require__(16);/*</replacement>*/ /*<replacement>*/var Duplex;/*</replacement>*/Readable.ReadableState=ReadableState;/*<replacement>*/var EE=__webpack_require__(8).EventEmitter;var EElistenerCount=function EElistenerCount(emitter,type){return emitter.listeners(type).length;};/*</replacement>*/ /*<replacement>*/var Stream;(function(){try{Stream=__webpack_require__(11);}catch(_){}finally{if(!Stream)Stream=__webpack_require__(8).EventEmitter;}})();/*</replacement>*/var Buffer=__webpack_require__(2).Buffer;/*<replacement>*/var bufferShim=__webpack_require__(17);/*</replacement>*/ /*<replacement>*/var util=__webpack_require__(18);util.inherits=__webpack_require__(12);/*</replacement>*/ /*<replacement>*/var debugUtil=__webpack_require__(19);var debug=void 0;if(debugUtil&&debugUtil.debuglog){debug=debugUtil.debuglog('stream');}else{debug=function debug(){};}/*</replacement>*/var BufferList=__webpack_require__(20);var StringDecoder;util.inherits(Readable,Stream);function prependListener(emitter,event,fn){// Sadly this is not cacheable as some libraries bundle their own\n// event emitter implementation with them.\nif(typeof emitter.prependListener==='function'){return emitter.prependListener(event,fn);}else{// This is a hack to make sure that our error handler is attached before any\n// userland ones.  NEVER DO THIS. This is here only because this code needs\n// to continue to work with older versions of Node.js that do not include\n// the prependListener() method. The goal is to eventually remove this hack.\nif(!emitter._events||!emitter._events[event])emitter.on(event,fn);else if(isArray(emitter._events[event]))emitter._events[event].unshift(fn);else emitter._events[event]=[fn,emitter._events[event]];}}function ReadableState(options,stream){Duplex=Duplex||__webpack_require__(21);options=options||{};// object stream flag. Used to make read(n) ignore n and to\n// make all the buffer merging and length checks go away\nthis.objectMode=!!options.objectMode;if(stream instanceof Duplex)this.objectMode=this.objectMode||!!options.readableObjectMode;// the point at which it stops calling _read() to fill the buffer\n// Note: 0 is a valid value, means \"don't call _read preemptively ever\"\nvar hwm=options.highWaterMark;var defaultHwm=this.objectMode?16:16*1024;this.highWaterMark=hwm||hwm===0?hwm:defaultHwm;// cast to ints.\nthis.highWaterMark=~~this.highWaterMark;// A linked list is used to store data chunks instead of an array because the\n// linked list can remove elements from the beginning faster than\n// array.shift()\nthis.buffer=new BufferList();this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;// a flag to be able to tell if the onwrite cb is called immediately,\n// or on a later tick.  We set this to true at first, because any\n// actions that shouldn't happen until \"later\" should generally also\n// not happen before the first write call.\nthis.sync=true;// whenever we return null, then we set a flag to say\n// that we're awaiting a 'readable' event emission.\nthis.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;// Crypto is kind of old and crusty.  Historically, its default string\n// encoding is 'binary' so we have to make this configurable.\n// Everything else in the universe uses 'utf8', though.\nthis.defaultEncoding=options.defaultEncoding||'utf8';// when piping, we only care about 'readable' events that happen\n// after read()ing all the bytes and not getting any pushback.\nthis.ranOut=false;// the number of writers that are awaiting a drain event in .pipe()s\nthis.awaitDrain=0;// if true, a maybeReadMore has been scheduled\nthis.readingMore=false;this.decoder=null;this.encoding=null;if(options.encoding){if(!StringDecoder)StringDecoder=__webpack_require__(24).StringDecoder;this.decoder=new StringDecoder(options.encoding);this.encoding=options.encoding;}}function Readable(options){Duplex=Duplex||__webpack_require__(21);if(!(this instanceof Readable))return new Readable(options);this._readableState=new ReadableState(options,this);// legacy\nthis.readable=true;if(options&&typeof options.read==='function')this._read=options.read;Stream.call(this);}// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push=function(chunk,encoding){var state=this._readableState;if(!state.objectMode&&typeof chunk==='string'){encoding=encoding||state.defaultEncoding;if(encoding!==state.encoding){chunk=bufferShim.from(chunk,encoding);encoding='';}}return readableAddChunk(this,state,chunk,encoding,false);};// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift=function(chunk){var state=this._readableState;return readableAddChunk(this,state,chunk,'',true);};Readable.prototype.isPaused=function(){return this._readableState.flowing===false;};function readableAddChunk(stream,state,chunk,encoding,addToFront){var er=chunkInvalid(state,chunk);if(er){stream.emit('error',er);}else if(chunk===null){state.reading=false;onEofChunk(stream,state);}else if(state.objectMode||chunk&&chunk.length>0){if(state.ended&&!addToFront){var e=new Error('stream.push() after EOF');stream.emit('error',e);}else if(state.endEmitted&&addToFront){var _e=new Error('stream.unshift() after end event');stream.emit('error',_e);}else{var skipAdd;if(state.decoder&&!addToFront&&!encoding){chunk=state.decoder.write(chunk);skipAdd=!state.objectMode&&chunk.length===0;}if(!addToFront)state.reading=false;// Don't add to the buffer if we've decoded to an empty string chunk and\n// we're not in object mode\nif(!skipAdd){// if we want the data now, just emit it.\nif(state.flowing&&state.length===0&&!state.sync){stream.emit('data',chunk);stream.read(0);}else{// update the buffer info.\nstate.length+=state.objectMode?1:chunk.length;if(addToFront)state.buffer.unshift(chunk);else state.buffer.push(chunk);if(state.needReadable)emitReadable(stream);}}maybeReadMore(stream,state);}}else if(!addToFront){state.reading=false;}return needMoreData(state);}// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state){return!state.ended&&(state.needReadable||state.length<state.highWaterMark||state.length===0);}// backwards compatibility.\nReadable.prototype.setEncoding=function(enc){if(!StringDecoder)StringDecoder=__webpack_require__(24).StringDecoder;this._readableState.decoder=new StringDecoder(enc);this._readableState.encoding=enc;return this;};// Don't raise the hwm > 8MB\nvar MAX_HWM=0x800000;function computeNewHighWaterMark(n){if(n>=MAX_HWM){n=MAX_HWM;}else{// Get the next highest power of 2 to prevent increasing hwm excessively in\n// tiny amounts\nn--;n|=n>>>1;n|=n>>>2;n|=n>>>4;n|=n>>>8;n|=n>>>16;n++;}return n;}// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n,state){if(n<=0||state.length===0&&state.ended)return 0;if(state.objectMode)return 1;if(n!==n){// Only flow one buffer at a time\nif(state.flowing&&state.length)return state.buffer.head.data.length;else return state.length;}// If we're asking for more than the current hwm, then raise the hwm.\nif(n>state.highWaterMark)state.highWaterMark=computeNewHighWaterMark(n);if(n<=state.length)return n;// Don't have enough\nif(!state.ended){state.needReadable=true;return 0;}return state.length;}// you can override either this method, or the async _read(n) below.\nReadable.prototype.read=function(n){debug('read',n);n=parseInt(n,10);var state=this._readableState;var nOrig=n;if(n!==0)state.emittedReadable=false;// if we're doing read(0) to trigger a readable event, but we\n// already have a bunch of data in the buffer, then just trigger\n// the 'readable' event and move on.\nif(n===0&&state.needReadable&&(state.length>=state.highWaterMark||state.ended)){debug('read: emitReadable',state.length,state.ended);if(state.length===0&&state.ended)endReadable(this);else emitReadable(this);return null;}n=howMuchToRead(n,state);// if we've ended, and we're now clear, then finish it up.\nif(n===0&&state.ended){if(state.length===0)endReadable(this);return null;}// All the actual chunk generation logic needs to be\n// *below* the call to _read.  The reason is that in certain\n// synthetic stream cases, such as passthrough streams, _read\n// may be a completely synchronous operation which may change\n// the state of the read buffer, providing enough data when\n// before there was *not* enough.\n//\n// So, the steps are:\n// 1. Figure out what the state of things will be after we do\n// a read from the buffer.\n//\n// 2. If that resulting state will trigger a _read, then call _read.\n// Note that this may be asynchronous, or synchronous.  Yes, it is\n// deeply ugly to write APIs this way, but that still doesn't mean\n// that the Readable class should behave improperly, as streams are\n// designed to be sync/async agnostic.\n// Take note if the _read call is sync or async (ie, if the read call\n// has returned yet), so that we know whether or not it's safe to emit\n// 'readable' etc.\n//\n// 3. Actually pull the requested chunks out of the buffer and return.\n// if we need a readable event, then we need to do some reading.\nvar doRead=state.needReadable;debug('need readable',doRead);// if we currently have less than the highWaterMark, then also read some\nif(state.length===0||state.length-n<state.highWaterMark){doRead=true;debug('length less than watermark',doRead);}// however, if we've ended, then there's no point, and if we're already\n// reading, then it's unnecessary.\nif(state.ended||state.reading){doRead=false;debug('reading or ended',doRead);}else if(doRead){debug('do read');state.reading=true;state.sync=true;// if the length is currently zero, then we *need* a readable event.\nif(state.length===0)state.needReadable=true;// call internal read method\nthis._read(state.highWaterMark);state.sync=false;// If _read pushed data synchronously, then `reading` will be false,\n// and we need to re-evaluate how much data we can return to the user.\nif(!state.reading)n=howMuchToRead(nOrig,state);}var ret;if(n>0)ret=fromList(n,state);else ret=null;if(ret===null){state.needReadable=true;n=0;}else{state.length-=n;}if(state.length===0){// If we have nothing in the buffer, then we want to know\n// as soon as we *do* get something into the buffer.\nif(!state.ended)state.needReadable=true;// If we tried to read() past the EOF, then emit end on the next tick.\nif(nOrig!==n&&state.ended)endReadable(this);}if(ret!==null)this.emit('data',ret);return ret;};function chunkInvalid(state,chunk){var er=null;if(!Buffer.isBuffer(chunk)&&typeof chunk!=='string'&&chunk!==null&&chunk!==undefined&&!state.objectMode){er=new TypeError('Invalid non-string/buffer chunk');}return er;}function onEofChunk(stream,state){if(state.ended)return;if(state.decoder){var chunk=state.decoder.end();if(chunk&&chunk.length){state.buffer.push(chunk);state.length+=state.objectMode?1:chunk.length;}}state.ended=true;// emit 'readable' now to make sure it gets picked up.\nemitReadable(stream);}// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream){var state=stream._readableState;state.needReadable=false;if(!state.emittedReadable){debug('emitReadable',state.flowing);state.emittedReadable=true;if(state.sync)processNextTick(emitReadable_,stream);else emitReadable_(stream);}}function emitReadable_(stream){debug('emit readable');stream.emit('readable');flow(stream);}// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream,state){if(!state.readingMore){state.readingMore=true;processNextTick(maybeReadMore_,stream,state);}}function maybeReadMore_(stream,state){var len=state.length;while(!state.reading&&!state.flowing&&!state.ended&&state.length<state.highWaterMark){debug('maybeReadMore read 0');stream.read(0);if(len===state.length)// didn't get any data, stop spinning.\nbreak;else len=state.length;}state.readingMore=false;}// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read=function(n){this.emit('error',new Error('_read() is not implemented'));};Readable.prototype.pipe=function(dest,pipeOpts){var src=this;var state=this._readableState;switch(state.pipesCount){case 0:state.pipes=dest;break;case 1:state.pipes=[state.pipes,dest];break;default:state.pipes.push(dest);break;}state.pipesCount+=1;debug('pipe count=%d opts=%j',state.pipesCount,pipeOpts);var doEnd=(!pipeOpts||pipeOpts.end!==false)&&dest!==process.stdout&&dest!==process.stderr;var endFn=doEnd?onend:cleanup;if(state.endEmitted)processNextTick(endFn);else src.once('end',endFn);dest.on('unpipe',onunpipe);function onunpipe(readable){debug('onunpipe');if(readable===src){cleanup();}}function onend(){debug('onend');dest.end();}// when the dest drains, it reduces the awaitDrain counter\n// on the source.  This would be more elegant with a .once()\n// handler in flow(), but adding and removing repeatedly is\n// too slow.\nvar ondrain=pipeOnDrain(src);dest.on('drain',ondrain);var cleanedUp=false;function cleanup(){debug('cleanup');// cleanup event handlers once the pipe is broken\ndest.removeListener('close',onclose);dest.removeListener('finish',onfinish);dest.removeListener('drain',ondrain);dest.removeListener('error',onerror);dest.removeListener('unpipe',onunpipe);src.removeListener('end',onend);src.removeListener('end',cleanup);src.removeListener('data',ondata);cleanedUp=true;// if the reader is waiting for a drain event from this\n// specific writer, then it would cause it to never start\n// flowing again.\n// So, if this is awaiting a drain, then we just call it now.\n// If we don't know, then assume that we are waiting for one.\nif(state.awaitDrain&&(!dest._writableState||dest._writableState.needDrain))ondrain();}// If the user pushes more data while we're writing to dest then we'll end up\n// in ondata again. However, we only want to increase awaitDrain once because\n// dest will only emit one 'drain' event for the multiple writes.\n// => Introduce a guard on increasing awaitDrain.\nvar increasedAwaitDrain=false;src.on('data',ondata);function ondata(chunk){debug('ondata');increasedAwaitDrain=false;var ret=dest.write(chunk);if(false===ret&&!increasedAwaitDrain){// If the user unpiped during `dest.write()`, it is possible\n// to get stuck in a permanently paused state if that write\n// also returned false.\n// => Check whether `dest` is still a piping destination.\nif((state.pipesCount===1&&state.pipes===dest||state.pipesCount>1&&indexOf(state.pipes,dest)!==-1)&&!cleanedUp){debug('false write response, pause',src._readableState.awaitDrain);src._readableState.awaitDrain++;increasedAwaitDrain=true;}src.pause();}}// if the dest has an error, then stop piping into it.\n// however, don't suppress the throwing behavior for this.\nfunction onerror(er){debug('onerror',er);unpipe();dest.removeListener('error',onerror);if(EElistenerCount(dest,'error')===0)dest.emit('error',er);}// Make sure our error handler is attached before userland ones.\nprependListener(dest,'error',onerror);// Both close and finish should trigger unpipe, but only once.\nfunction onclose(){dest.removeListener('finish',onfinish);unpipe();}dest.once('close',onclose);function onfinish(){debug('onfinish');dest.removeListener('close',onclose);unpipe();}dest.once('finish',onfinish);function unpipe(){debug('unpipe');src.unpipe(dest);}// tell the dest that it's being piped to\ndest.emit('pipe',src);// start the flow if it hasn't been started already.\nif(!state.flowing){debug('pipe resume');src.resume();}return dest;};function pipeOnDrain(src){return function(){var state=src._readableState;debug('pipeOnDrain',state.awaitDrain);if(state.awaitDrain)state.awaitDrain--;if(state.awaitDrain===0&&EElistenerCount(src,'data')){state.flowing=true;flow(src);}};}Readable.prototype.unpipe=function(dest){var state=this._readableState;// if we're not piping anywhere, then do nothing.\nif(state.pipesCount===0)return this;// just one destination.  most common case.\nif(state.pipesCount===1){// passed in one, but it's not the right one.\nif(dest&&dest!==state.pipes)return this;if(!dest)dest=state.pipes;// got a match.\nstate.pipes=null;state.pipesCount=0;state.flowing=false;if(dest)dest.emit('unpipe',this);return this;}// slow case. multiple pipe destinations.\nif(!dest){// remove all.\nvar dests=state.pipes;var len=state.pipesCount;state.pipes=null;state.pipesCount=0;state.flowing=false;for(var i=0;i<len;i++){dests[i].emit('unpipe',this);}return this;}// try to find the right one.\nvar index=indexOf(state.pipes,dest);if(index===-1)return this;state.pipes.splice(index,1);state.pipesCount-=1;if(state.pipesCount===1)state.pipes=state.pipes[0];dest.emit('unpipe',this);return this;};// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on=function(ev,fn){var res=Stream.prototype.on.call(this,ev,fn);if(ev==='data'){// Start flowing on next tick if stream isn't explicitly paused\nif(this._readableState.flowing!==false)this.resume();}else if(ev==='readable'){var state=this._readableState;if(!state.endEmitted&&!state.readableListening){state.readableListening=state.needReadable=true;state.emittedReadable=false;if(!state.reading){processNextTick(nReadingNextTick,this);}else if(state.length){emitReadable(this,state);}}}return res;};Readable.prototype.addListener=Readable.prototype.on;function nReadingNextTick(self){debug('readable nexttick read 0');self.read(0);}// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume=function(){var state=this._readableState;if(!state.flowing){debug('resume');state.flowing=true;resume(this,state);}return this;};function resume(stream,state){if(!state.resumeScheduled){state.resumeScheduled=true;processNextTick(resume_,stream,state);}}function resume_(stream,state){if(!state.reading){debug('resume read 0');stream.read(0);}state.resumeScheduled=false;state.awaitDrain=0;stream.emit('resume');flow(stream);if(state.flowing&&!state.reading)stream.read(0);}Readable.prototype.pause=function(){debug('call pause flowing=%j',this._readableState.flowing);if(false!==this._readableState.flowing){debug('pause');this._readableState.flowing=false;this.emit('pause');}return this;};function flow(stream){var state=stream._readableState;debug('flow',state.flowing);while(state.flowing&&stream.read()!==null){}}// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap=function(stream){var state=this._readableState;var paused=false;var self=this;stream.on('end',function(){debug('wrapped end');if(state.decoder&&!state.ended){var chunk=state.decoder.end();if(chunk&&chunk.length)self.push(chunk);}self.push(null);});stream.on('data',function(chunk){debug('wrapped data');if(state.decoder)chunk=state.decoder.write(chunk);// don't skip over falsy values in objectMode\nif(state.objectMode&&(chunk===null||chunk===undefined))return;else if(!state.objectMode&&(!chunk||!chunk.length))return;var ret=self.push(chunk);if(!ret){paused=true;stream.pause();}});// proxy all the other methods.\n// important when wrapping filters and duplexes.\nfor(var i in stream){if(this[i]===undefined&&typeof stream[i]==='function'){this[i]=function(method){return function(){return stream[method].apply(stream,arguments);};}(i);}}// proxy certain important events.\nvar events=['error','close','destroy','pause','resume'];forEach(events,function(ev){stream.on(ev,self.emit.bind(self,ev));});// when we try to consume some more bytes, simply unpause the\n// underlying stream.\nself._read=function(n){debug('wrapped _read',n);if(paused){paused=false;stream.resume();}};return self;};// exposed for testing purposes only.\nReadable._fromList=fromList;// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n,state){// nothing buffered\nif(state.length===0)return null;var ret;if(state.objectMode)ret=state.buffer.shift();else if(!n||n>=state.length){// read it all, truncate the list\nif(state.decoder)ret=state.buffer.join('');else if(state.buffer.length===1)ret=state.buffer.head.data;else ret=state.buffer.concat(state.length);state.buffer.clear();}else{// read part of list\nret=fromListPartial(n,state.buffer,state.decoder);}return ret;}// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n,list,hasStrings){var ret;if(n<list.head.data.length){// slice is the same for buffers and strings\nret=list.head.data.slice(0,n);list.head.data=list.head.data.slice(n);}else if(n===list.head.data.length){// first chunk is a perfect match\nret=list.shift();}else{// result spans more than one buffer\nret=hasStrings?copyFromBufferString(n,list):copyFromBuffer(n,list);}return ret;}// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n,list){var p=list.head;var c=1;var ret=p.data;n-=ret.length;while(p=p.next){var str=p.data;var nb=n>str.length?str.length:n;if(nb===str.length)ret+=str;else ret+=str.slice(0,n);n-=nb;if(n===0){if(nb===str.length){++c;if(p.next)list.head=p.next;else list.head=list.tail=null;}else{list.head=p;p.data=str.slice(nb);}break;}++c;}list.length-=c;return ret;}// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n,list){var ret=bufferShim.allocUnsafe(n);var p=list.head;var c=1;p.data.copy(ret);n-=p.data.length;while(p=p.next){var buf=p.data;var nb=n>buf.length?buf.length:n;buf.copy(ret,ret.length-n,0,nb);n-=nb;if(n===0){if(nb===buf.length){++c;if(p.next)list.head=p.next;else list.head=list.tail=null;}else{list.head=p;p.data=buf.slice(nb);}break;}++c;}list.length-=c;return ret;}function endReadable(stream){var state=stream._readableState;// If we get here before consuming all the bytes, then that is a\n// bug in node.  Should never happen.\nif(state.length>0)throw new Error('\"endReadable()\" called on non-empty stream');if(!state.endEmitted){state.ended=true;processNextTick(endReadableNT,state,stream);}}function endReadableNT(state,stream){// Check that we didn't get one last unshift.\nif(!state.endEmitted&&state.length===0){state.endEmitted=true;stream.readable=false;stream.emit('end');}}function forEach(xs,f){for(var i=0,l=xs.length;i<l;i++){f(xs[i],i);}}function indexOf(xs,x){for(var i=0,l=xs.length;i<l;i++){if(xs[i]===x)return i;}return-1;}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(6));/***/},/* 15 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(process){'use strict';if(!process.version||process.version.indexOf('v0.')===0||process.version.indexOf('v1.')===0&&process.version.indexOf('v1.8.')!==0){module.exports=nextTick;}else{module.exports=process.nextTick;}function nextTick(fn,arg1,arg2,arg3){if(typeof fn!=='function'){throw new TypeError('\"callback\" argument must be a function');}var len=arguments.length;var args,i;switch(len){case 0:case 1:return process.nextTick(fn);case 2:return process.nextTick(function afterTickOne(){fn.call(null,arg1);});case 3:return process.nextTick(function afterTickTwo(){fn.call(null,arg1,arg2);});case 4:return process.nextTick(function afterTickThree(){fn.call(null,arg1,arg2,arg3);});default:args=new Array(len-1);i=0;while(i<args.length){args[i++]=arguments[i];}return process.nextTick(function afterTick(){fn.apply(null,args);});}}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(6));/***/},/* 16 */ /***/function(module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return toString.call(arr)=='[object Array]';};/***/},/* 17 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(global){'use strict';var buffer=__webpack_require__(2);var Buffer=buffer.Buffer;var SlowBuffer=buffer.SlowBuffer;var MAX_LEN=buffer.kMaxLength||2147483647;exports.alloc=function alloc(size,fill,encoding){if(typeof Buffer.alloc==='function'){return Buffer.alloc(size,fill,encoding);}if(typeof encoding==='number'){throw new TypeError('encoding must not be number');}if(typeof size!=='number'){throw new TypeError('size must be a number');}if(size>MAX_LEN){throw new RangeError('size is too large');}var enc=encoding;var _fill=fill;if(_fill===undefined){enc=undefined;_fill=0;}var buf=new Buffer(size);if(typeof _fill==='string'){var fillBuf=new Buffer(_fill,enc);var flen=fillBuf.length;var i=-1;while(++i<size){buf[i]=fillBuf[i%flen];}}else{buf.fill(_fill);}return buf;};exports.allocUnsafe=function allocUnsafe(size){if(typeof Buffer.allocUnsafe==='function'){return Buffer.allocUnsafe(size);}if(typeof size!=='number'){throw new TypeError('size must be a number');}if(size>MAX_LEN){throw new RangeError('size is too large');}return new Buffer(size);};exports.from=function from(value,encodingOrOffset,length){if(typeof Buffer.from==='function'&&(!global.Uint8Array||Uint8Array.from!==Buffer.from)){return Buffer.from(value,encodingOrOffset,length);}if(typeof value==='number'){throw new TypeError('\"value\" argument must not be a number');}if(typeof value==='string'){return new Buffer(value,encodingOrOffset);}if(typeof ArrayBuffer!=='undefined'&&value instanceof ArrayBuffer){var offset=encodingOrOffset;if(arguments.length===1){return new Buffer(value);}if(typeof offset==='undefined'){offset=0;}var len=length;if(typeof len==='undefined'){len=value.byteLength-offset;}if(offset>=value.byteLength){throw new RangeError('\\'offset\\' is out of bounds');}if(len>value.byteLength-offset){throw new RangeError('\\'length\\' is out of bounds');}return new Buffer(value.slice(offset,offset+len));}if(Buffer.isBuffer(value)){var out=new Buffer(value.length);value.copy(out,0,0,value.length);return out;}if(value){if(Array.isArray(value)||typeof ArrayBuffer!=='undefined'&&value.buffer instanceof ArrayBuffer||'length'in value){return new Buffer(value);}if(value.type==='Buffer'&&Array.isArray(value.data)){return new Buffer(value.data);}}throw new TypeError('First argument must be a string, Buffer, '+'ArrayBuffer, Array, or array-like object.');};exports.allocUnsafeSlow=function allocUnsafeSlow(size){if(typeof Buffer.allocUnsafeSlow==='function'){return Buffer.allocUnsafeSlow(size);}if(typeof size!=='number'){throw new TypeError('size must be a number');}if(size>=MAX_LEN){throw new RangeError('size is too large');}return new SlowBuffer(size);};/* WEBPACK VAR INJECTION */}).call(exports,function(){return this;}());/***/},/* 18 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(Buffer){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(arg){if(Array.isArray){return Array.isArray(arg);}return objectToString(arg)==='[object Array]';}exports.isArray=isArray;function isBoolean(arg){return typeof arg==='boolean';}exports.isBoolean=isBoolean;function isNull(arg){return arg===null;}exports.isNull=isNull;function isNullOrUndefined(arg){return arg==null;}exports.isNullOrUndefined=isNullOrUndefined;function isNumber(arg){return typeof arg==='number';}exports.isNumber=isNumber;function isString(arg){return typeof arg==='string';}exports.isString=isString;function isSymbol(arg){return _typeof(arg)==='symbol';}exports.isSymbol=isSymbol;function isUndefined(arg){return arg===void 0;}exports.isUndefined=isUndefined;function isRegExp(re){return objectToString(re)==='[object RegExp]';}exports.isRegExp=isRegExp;function isObject(arg){return _typeof(arg)==='object'&&arg!==null;}exports.isObject=isObject;function isDate(d){return objectToString(d)==='[object Date]';}exports.isDate=isDate;function isError(e){return objectToString(e)==='[object Error]'||e instanceof Error;}exports.isError=isError;function isFunction(arg){return typeof arg==='function';}exports.isFunction=isFunction;function isPrimitive(arg){return arg===null||typeof arg==='boolean'||typeof arg==='number'||typeof arg==='string'||_typeof(arg)==='symbol'||// ES6 symbol\ntypeof arg==='undefined';}exports.isPrimitive=isPrimitive;exports.isBuffer=Buffer.isBuffer;function objectToString(o){return Object.prototype.toString.call(o);}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(1));/***/},/* 19 */ /***/function(module,exports){/* (ignored) */ /***/},/* 20 */ /***/function(module,exports,__webpack_require__){'use strict';var Buffer=__webpack_require__(2).Buffer;/*<replacement>*/var bufferShim=__webpack_require__(17);/*</replacement>*/module.exports=BufferList;function BufferList(){this.head=null;this.tail=null;this.length=0;}BufferList.prototype.push=function(v){var entry={data:v,next:null};if(this.length>0)this.tail.next=entry;else this.head=entry;this.tail=entry;++this.length;};BufferList.prototype.unshift=function(v){var entry={data:v,next:this.head};if(this.length===0)this.tail=entry;this.head=entry;++this.length;};BufferList.prototype.shift=function(){if(this.length===0)return;var ret=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return ret;};BufferList.prototype.clear=function(){this.head=this.tail=null;this.length=0;};BufferList.prototype.join=function(s){if(this.length===0)return'';var p=this.head;var ret=''+p.data;while(p=p.next){ret+=s+p.data;}return ret;};BufferList.prototype.concat=function(n){if(this.length===0)return bufferShim.alloc(0);if(this.length===1)return this.head.data;var ret=bufferShim.allocUnsafe(n>>>0);var p=this.head;var i=0;while(p){p.data.copy(ret,i);i+=p.data.length;p=p.next;}return ret;};/***/},/* 21 */ /***/function(module,exports,__webpack_require__){// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';/*<replacement>*/var objectKeys=Object.keys||function(obj){var keys=[];for(var key in obj){keys.push(key);}return keys;};/*</replacement>*/module.exports=Duplex;/*<replacement>*/var processNextTick=__webpack_require__(15);/*</replacement>*/ /*<replacement>*/var util=__webpack_require__(18);util.inherits=__webpack_require__(12);/*</replacement>*/var Readable=__webpack_require__(14);var Writable=__webpack_require__(22);util.inherits(Duplex,Readable);var keys=objectKeys(Writable.prototype);for(var v=0;v<keys.length;v++){var method=keys[v];if(!Duplex.prototype[method])Duplex.prototype[method]=Writable.prototype[method];}function Duplex(options){if(!(this instanceof Duplex))return new Duplex(options);Readable.call(this,options);Writable.call(this,options);if(options&&options.readable===false)this.readable=false;if(options&&options.writable===false)this.writable=false;this.allowHalfOpen=true;if(options&&options.allowHalfOpen===false)this.allowHalfOpen=false;this.once('end',onend);}// the no-half-open enforcer\nfunction onend(){// if we allow half-open state, or if the writable side ended,\n// then we're ok.\nif(this.allowHalfOpen||this._writableState.ended)return;// no more data can be written.\n// But allow more writes to happen in this tick.\nprocessNextTick(onEndNT,this);}function onEndNT(self){self.end();}function forEach(xs,f){for(var i=0,l=xs.length;i<l;i++){f(xs[i],i);}}/***/},/* 22 */ /***/function(module,exports,__webpack_require__){/* WEBPACK VAR INJECTION */(function(process){// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';module.exports=Writable;/*<replacement>*/var processNextTick=__webpack_require__(15);/*</replacement>*/ /*<replacement>*/var asyncWrite=!process.browser&&['v0.10','v0.9.'].indexOf(process.version.slice(0,5))>-1?setImmediate:processNextTick;/*</replacement>*/ /*<replacement>*/var Duplex;/*</replacement>*/Writable.WritableState=WritableState;/*<replacement>*/var util=__webpack_require__(18);util.inherits=__webpack_require__(12);/*</replacement>*/ /*<replacement>*/var internalUtil={deprecate:__webpack_require__(23)};/*</replacement>*/ /*<replacement>*/var Stream;(function(){try{Stream=__webpack_require__(11);}catch(_){}finally{if(!Stream)Stream=__webpack_require__(8).EventEmitter;}})();/*</replacement>*/var Buffer=__webpack_require__(2).Buffer;/*<replacement>*/var bufferShim=__webpack_require__(17);/*</replacement>*/util.inherits(Writable,Stream);function nop(){}function WriteReq(chunk,encoding,cb){this.chunk=chunk;this.encoding=encoding;this.callback=cb;this.next=null;}function WritableState(options,stream){Duplex=Duplex||__webpack_require__(21);options=options||{};// object stream flag to indicate whether or not this stream\n// contains buffers or objects.\nthis.objectMode=!!options.objectMode;if(stream instanceof Duplex)this.objectMode=this.objectMode||!!options.writableObjectMode;// the point at which write() starts returning false\n// Note: 0 is a valid value, means that we always return false if\n// the entire buffer is not flushed immediately on write()\nvar hwm=options.highWaterMark;var defaultHwm=this.objectMode?16:16*1024;this.highWaterMark=hwm||hwm===0?hwm:defaultHwm;// cast to ints.\nthis.highWaterMark=~~this.highWaterMark;// drain event flag.\nthis.needDrain=false;// at the start of calling end()\nthis.ending=false;// when end() has been called, and returned\nthis.ended=false;// when 'finish' is emitted\nthis.finished=false;// should we decode strings into buffers before passing to _write?\n// this is here so that some node-core streams can optimize string\n// handling at a lower level.\nvar noDecode=options.decodeStrings===false;this.decodeStrings=!noDecode;// Crypto is kind of old and crusty.  Historically, its default string\n// encoding is 'binary' so we have to make this configurable.\n// Everything else in the universe uses 'utf8', though.\nthis.defaultEncoding=options.defaultEncoding||'utf8';// not an actual buffer we keep track of, but a measurement\n// of how much we're waiting to get pushed to some underlying\n// socket or file.\nthis.length=0;// a flag to see when we're in the middle of a write.\nthis.writing=false;// when true all writes will be buffered until .uncork() call\nthis.corked=0;// a flag to be able to tell if the onwrite cb is called immediately,\n// or on a later tick.  We set this to true at first, because any\n// actions that shouldn't happen until \"later\" should generally also\n// not happen before the first write call.\nthis.sync=true;// a flag to know if we're processing previously buffered items, which\n// may call the _write() callback in the same tick, so that we don't\n// end up in an overlapped onwrite situation.\nthis.bufferProcessing=false;// the callback that's passed to _write(chunk,cb)\nthis.onwrite=function(er){onwrite(stream,er);};// the callback that the user supplies to write(chunk,encoding,cb)\nthis.writecb=null;// the amount that is being written when _write is called.\nthis.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;// number of pending user-supplied write callbacks\n// this must be 0 before 'finish' can be emitted\nthis.pendingcb=0;// emit prefinish if the only thing we're waiting for is _write cbs\n// This is relevant for synchronous Transform streams\nthis.prefinished=false;// True if the error was already emitted and should not be thrown again\nthis.errorEmitted=false;// count buffered requests\nthis.bufferedRequestCount=0;// allocate the first CorkedRequest, there is always\n// one allocated and free to use, and we maintain at most two\nthis.corkedRequestsFree=new CorkedRequest(this);}WritableState.prototype.getBuffer=function getBuffer(){var current=this.bufferedRequest;var out=[];while(current){out.push(current);current=current.next;}return out;};(function(){try{Object.defineProperty(WritableState.prototype,'buffer',{get:internalUtil.deprecate(function(){return this.getBuffer();},'_writableState.buffer is deprecated. Use _writableState.getBuffer '+'instead.')});}catch(_){}})();// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;if(typeof Symbol==='function'&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]==='function'){realHasInstance=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(object){if(realHasInstance.call(this,object))return true;return object&&object._writableState instanceof WritableState;}});}else{realHasInstance=function realHasInstance(object){return object instanceof this;};}function Writable(options){Duplex=Duplex||__webpack_require__(21);// Writable ctor is applied to Duplexes, too.\n// `realHasInstance` is necessary because using plain `instanceof`\n// would return false, as no `_writableState` property is attached.\n// Trying to use the custom `instanceof` for Writable here will also break the\n// Node.js LazyTransform implementation, which has a non-trivial getter for\n// `_writableState` that would lead to infinite recursion.\nif(!realHasInstance.call(Writable,this)&&!(this instanceof Duplex)){return new Writable(options);}this._writableState=new WritableState(options,this);// legacy.\nthis.writable=true;if(options){if(typeof options.write==='function')this._write=options.write;if(typeof options.writev==='function')this._writev=options.writev;}Stream.call(this);}// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe=function(){this.emit('error',new Error('Cannot pipe, not readable'));};function writeAfterEnd(stream,cb){var er=new Error('write after end');// TODO: defer error events consistently everywhere, not just the cb\nstream.emit('error',er);processNextTick(cb,er);}// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream,state,chunk,cb){var valid=true;var er=false;if(chunk===null){er=new TypeError('May not write null values to stream');}else if(typeof chunk!=='string'&&chunk!==undefined&&!state.objectMode){er=new TypeError('Invalid non-string/buffer chunk');}if(er){stream.emit('error',er);processNextTick(cb,er);valid=false;}return valid;}Writable.prototype.write=function(chunk,encoding,cb){var state=this._writableState;var ret=false;var isBuf=Buffer.isBuffer(chunk);if(typeof encoding==='function'){cb=encoding;encoding=null;}if(isBuf)encoding='buffer';else if(!encoding)encoding=state.defaultEncoding;if(typeof cb!=='function')cb=nop;if(state.ended)writeAfterEnd(this,cb);else if(isBuf||validChunk(this,state,chunk,cb)){state.pendingcb++;ret=writeOrBuffer(this,state,isBuf,chunk,encoding,cb);}return ret;};Writable.prototype.cork=function(){var state=this._writableState;state.corked++;};Writable.prototype.uncork=function(){var state=this._writableState;if(state.corked){state.corked--;if(!state.writing&&!state.corked&&!state.finished&&!state.bufferProcessing&&state.bufferedRequest)clearBuffer(this,state);}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(encoding){// node::ParseEncoding() requires lower case.\nif(typeof encoding==='string')encoding=encoding.toLowerCase();if(!(['hex','utf8','utf-8','ascii','binary','base64','ucs2','ucs-2','utf16le','utf-16le','raw'].indexOf((encoding+'').toLowerCase())>-1))throw new TypeError('Unknown encoding: '+encoding);this._writableState.defaultEncoding=encoding;return this;};function decodeChunk(state,chunk,encoding){if(!state.objectMode&&state.decodeStrings!==false&&typeof chunk==='string'){chunk=bufferShim.from(chunk,encoding);}return chunk;}// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream,state,isBuf,chunk,encoding,cb){if(!isBuf){chunk=decodeChunk(state,chunk,encoding);if(Buffer.isBuffer(chunk))encoding='buffer';}var len=state.objectMode?1:chunk.length;state.length+=len;var ret=state.length<state.highWaterMark;// we must ensure that previous needDrain will not be reset to false.\nif(!ret)state.needDrain=true;if(state.writing||state.corked){var last=state.lastBufferedRequest;state.lastBufferedRequest=new WriteReq(chunk,encoding,cb);if(last){last.next=state.lastBufferedRequest;}else{state.bufferedRequest=state.lastBufferedRequest;}state.bufferedRequestCount+=1;}else{doWrite(stream,state,false,len,chunk,encoding,cb);}return ret;}function doWrite(stream,state,writev,len,chunk,encoding,cb){state.writelen=len;state.writecb=cb;state.writing=true;state.sync=true;if(writev)stream._writev(chunk,state.onwrite);else stream._write(chunk,encoding,state.onwrite);state.sync=false;}function onwriteError(stream,state,sync,er,cb){--state.pendingcb;if(sync)processNextTick(cb,er);else cb(er);stream._writableState.errorEmitted=true;stream.emit('error',er);}function onwriteStateUpdate(state){state.writing=false;state.writecb=null;state.length-=state.writelen;state.writelen=0;}function onwrite(stream,er){var state=stream._writableState;var sync=state.sync;var cb=state.writecb;onwriteStateUpdate(state);if(er)onwriteError(stream,state,sync,er,cb);else{// Check if we're actually ready to finish, but don't emit yet\nvar finished=needFinish(state);if(!finished&&!state.corked&&!state.bufferProcessing&&state.bufferedRequest){clearBuffer(stream,state);}if(sync){/*<replacement>*/asyncWrite(afterWrite,stream,state,finished,cb);/*</replacement>*/}else{afterWrite(stream,state,finished,cb);}}}function afterWrite(stream,state,finished,cb){if(!finished)onwriteDrain(stream,state);state.pendingcb--;cb();finishMaybe(stream,state);}// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream,state){if(state.length===0&&state.needDrain){state.needDrain=false;stream.emit('drain');}}// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream,state){state.bufferProcessing=true;var entry=state.bufferedRequest;if(stream._writev&&entry&&entry.next){// Fast case, write everything using _writev()\nvar l=state.bufferedRequestCount;var buffer=new Array(l);var holder=state.corkedRequestsFree;holder.entry=entry;var count=0;while(entry){buffer[count]=entry;entry=entry.next;count+=1;}doWrite(stream,state,true,state.length,buffer,'',holder.finish);// doWrite is almost always async, defer these to save a bit of time\n// as the hot path ends with doWrite\nstate.pendingcb++;state.lastBufferedRequest=null;if(holder.next){state.corkedRequestsFree=holder.next;holder.next=null;}else{state.corkedRequestsFree=new CorkedRequest(state);}}else{// Slow case, write chunks one-by-one\nwhile(entry){var chunk=entry.chunk;var encoding=entry.encoding;var cb=entry.callback;var len=state.objectMode?1:chunk.length;doWrite(stream,state,false,len,chunk,encoding,cb);entry=entry.next;// if we didn't call the onwrite immediately, then\n// it means that we need to wait until it does.\n// also, that means that the chunk and cb are currently\n// being processed, so move the buffer counter past them.\nif(state.writing){break;}}if(entry===null)state.lastBufferedRequest=null;}state.bufferedRequestCount=0;state.bufferedRequest=entry;state.bufferProcessing=false;}Writable.prototype._write=function(chunk,encoding,cb){cb(new Error('_write() is not implemented'));};Writable.prototype._writev=null;Writable.prototype.end=function(chunk,encoding,cb){var state=this._writableState;if(typeof chunk==='function'){cb=chunk;chunk=null;encoding=null;}else if(typeof encoding==='function'){cb=encoding;encoding=null;}if(chunk!==null&&chunk!==undefined)this.write(chunk,encoding);// .end() fully uncorks\nif(state.corked){state.corked=1;this.uncork();}// ignore unnecessary end() calls.\nif(!state.ending&&!state.finished)endWritable(this,state,cb);};function needFinish(state){return state.ending&&state.length===0&&state.bufferedRequest===null&&!state.finished&&!state.writing;}function prefinish(stream,state){if(!state.prefinished){state.prefinished=true;stream.emit('prefinish');}}function finishMaybe(stream,state){var need=needFinish(state);if(need){if(state.pendingcb===0){prefinish(stream,state);state.finished=true;stream.emit('finish');}else{prefinish(stream,state);}}return need;}function endWritable(stream,state,cb){state.ending=true;finishMaybe(stream,state);if(cb){if(state.finished)processNextTick(cb);else stream.once('finish',cb);}state.ended=true;stream.writable=false;}// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state){var _this=this;this.next=null;this.entry=null;this.finish=function(err){var entry=_this.entry;_this.entry=null;while(entry){var cb=entry.callback;state.pendingcb--;cb(err);entry=entry.next;}if(state.corkedRequestsFree){state.corkedRequestsFree.next=_this;}else{state.corkedRequestsFree=_this;}};}/* WEBPACK VAR INJECTION */}).call(exports,__webpack_require__(6));/***/},/* 23 */ /***/function(module,exports){/* WEBPACK VAR INJECTION */(function(global){/**\n\t * Module exports.\n\t */module.exports=deprecate;/**\n\t * Mark that a method should not be used.\n\t * Returns a modified function which warns once by default.\n\t *\n\t * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n\t *\n\t * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n\t * will throw an Error when invoked.\n\t *\n\t * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n\t * will invoke `console.trace()` instead of `console.error()`.\n\t *\n\t * @param {Function} fn - the function to deprecate\n\t * @param {String} msg - the string to print to the console when `fn` is invoked\n\t * @returns {Function} a new \"deprecated\" version of `fn`\n\t * @api public\n\t */function deprecate(fn,msg){if(config('noDeprecation')){return fn;}var warned=false;function deprecated(){if(!warned){if(config('throwDeprecation')){throw new Error(msg);}else if(config('traceDeprecation')){console.trace(msg);}else{console.warn(msg);}warned=true;}return fn.apply(this,arguments);}return deprecated;}/**\n\t * Checks `localStorage` for boolean values for the given `name`.\n\t *\n\t * @param {String} name\n\t * @returns {Boolean}\n\t * @api private\n\t */function config(name){// accessing global.localStorage can trigger a DOMException in sandboxed iframes\ntry{if(!global.localStorage)return false;}catch(_){return false;}var val=global.localStorage[name];if(null==val)return false;return String(val).toLowerCase()==='true';}/* WEBPACK VAR INJECTION */}).call(exports,function(){return this;}());/***/},/* 24 */ /***/function(module,exports,__webpack_require__){// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar Buffer=__webpack_require__(2).Buffer;var isBufferEncoding=Buffer.isEncoding||function(encoding){switch(encoding&&encoding.toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':case'raw':return true;default:return false;}};function assertEncoding(encoding){if(encoding&&!isBufferEncoding(encoding)){throw new Error('Unknown encoding: '+encoding);}}// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder=exports.StringDecoder=function(encoding){this.encoding=(encoding||'utf8').toLowerCase().replace(/[-_]/,'');assertEncoding(encoding);switch(this.encoding){case'utf8':// CESU-8 represents each of Surrogate Pair by 3-bytes\nthis.surrogateSize=3;break;case'ucs2':case'utf16le':// UTF-16 represents each of Surrogate Pair by 2-bytes\nthis.surrogateSize=2;this.detectIncompleteChar=utf16DetectIncompleteChar;break;case'base64':// Base-64 stores 3 bytes in 4 chars, and pads the remainder.\nthis.surrogateSize=3;this.detectIncompleteChar=base64DetectIncompleteChar;break;default:this.write=passThroughWrite;return;}// Enough space to store all bytes of a single character. UTF-8 needs 4\n// bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\nthis.charBuffer=new Buffer(6);// Number of bytes received for the current incomplete multi-byte character.\nthis.charReceived=0;// Number of bytes expected for the current incomplete multi-byte character.\nthis.charLength=0;};// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write=function(buffer){var charStr='';// if our last write ended with an incomplete multibyte character\nwhile(this.charLength){// determine how many remaining bytes this buffer has to offer for this char\nvar available=buffer.length>=this.charLength-this.charReceived?this.charLength-this.charReceived:buffer.length;// add the new bytes to the char buffer\nbuffer.copy(this.charBuffer,this.charReceived,0,available);this.charReceived+=available;if(this.charReceived<this.charLength){// still not enough chars in this buffer? wait for more ...\nreturn'';}// remove bytes belonging to the current character from the buffer\nbuffer=buffer.slice(available,buffer.length);// get the character that was split\ncharStr=this.charBuffer.slice(0,this.charLength).toString(this.encoding);// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\nvar charCode=charStr.charCodeAt(charStr.length-1);if(charCode>=0xD800&&charCode<=0xDBFF){this.charLength+=this.surrogateSize;charStr='';continue;}this.charReceived=this.charLength=0;// if there are no more bytes in this buffer, just emit our char\nif(buffer.length===0){return charStr;}break;}// determine and set charLength / charReceived\nthis.detectIncompleteChar(buffer);var end=buffer.length;if(this.charLength){// buffer the incomplete character bytes we got\nbuffer.copy(this.charBuffer,0,buffer.length-this.charReceived,end);end-=this.charReceived;}charStr+=buffer.toString(this.encoding,0,end);var end=charStr.length-1;var charCode=charStr.charCodeAt(end);// CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\nif(charCode>=0xD800&&charCode<=0xDBFF){var size=this.surrogateSize;this.charLength+=size;this.charReceived+=size;this.charBuffer.copy(this.charBuffer,size,0,size);buffer.copy(this.charBuffer,0,0,size);return charStr.substring(0,end);}// or just emit the charStr\nreturn charStr;};// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar=function(buffer){// determine how many bytes we have to check at the end of this buffer\nvar i=buffer.length>=3?3:buffer.length;// Figure out if one of the last i bytes of our buffer announces an\n// incomplete char.\nfor(;i>0;i--){var c=buffer[buffer.length-i];// See http://en.wikipedia.org/wiki/UTF-8#Description\n// 110XXXXX\nif(i==1&&c>>5==0x06){this.charLength=2;break;}// 1110XXXX\nif(i<=2&&c>>4==0x0E){this.charLength=3;break;}// 11110XXX\nif(i<=3&&c>>3==0x1E){this.charLength=4;break;}}this.charReceived=i;};StringDecoder.prototype.end=function(buffer){var res='';if(buffer&&buffer.length)res=this.write(buffer);if(this.charReceived){var cr=this.charReceived;var buf=this.charBuffer;var enc=this.encoding;res+=buf.slice(0,cr).toString(enc);}return res;};function passThroughWrite(buffer){return buffer.toString(this.encoding);}function utf16DetectIncompleteChar(buffer){this.charReceived=buffer.length%2;this.charLength=this.charReceived?2:0;}function base64DetectIncompleteChar(buffer){this.charReceived=buffer.length%3;this.charLength=this.charReceived?3:0;}/***/},/* 25 */ /***/function(module,exports,__webpack_require__){// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';module.exports=Transform;var Duplex=__webpack_require__(21);/*<replacement>*/var util=__webpack_require__(18);util.inherits=__webpack_require__(12);/*</replacement>*/util.inherits(Transform,Duplex);function TransformState(stream){this.afterTransform=function(er,data){return afterTransform(stream,er,data);};this.needTransform=false;this.transforming=false;this.writecb=null;this.writechunk=null;this.writeencoding=null;}function afterTransform(stream,er,data){var ts=stream._transformState;ts.transforming=false;var cb=ts.writecb;if(!cb)return stream.emit('error',new Error('no writecb in Transform class'));ts.writechunk=null;ts.writecb=null;if(data!==null&&data!==undefined)stream.push(data);cb(er);var rs=stream._readableState;rs.reading=false;if(rs.needReadable||rs.length<rs.highWaterMark){stream._read(rs.highWaterMark);}}function Transform(options){if(!(this instanceof Transform))return new Transform(options);Duplex.call(this,options);this._transformState=new TransformState(this);var stream=this;// start out asking for a readable event once data is transformed.\nthis._readableState.needReadable=true;// we have implemented the _read method, and done the other things\n// that Readable wants before the first _read call, so unset the\n// sync guard flag.\nthis._readableState.sync=false;if(options){if(typeof options.transform==='function')this._transform=options.transform;if(typeof options.flush==='function')this._flush=options.flush;}// When the writable side finishes, then flush out anything remaining.\nthis.once('prefinish',function(){if(typeof this._flush==='function')this._flush(function(er,data){done(stream,er,data);});else done(stream);});}Transform.prototype.push=function(chunk,encoding){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,chunk,encoding);};// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform=function(chunk,encoding,cb){throw new Error('_transform() is not implemented');};Transform.prototype._write=function(chunk,encoding,cb){var ts=this._transformState;ts.writecb=cb;ts.writechunk=chunk;ts.writeencoding=encoding;if(!ts.transforming){var rs=this._readableState;if(ts.needTransform||rs.needReadable||rs.length<rs.highWaterMark)this._read(rs.highWaterMark);}};// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read=function(n){var ts=this._transformState;if(ts.writechunk!==null&&ts.writecb&&!ts.transforming){ts.transforming=true;this._transform(ts.writechunk,ts.writeencoding,ts.afterTransform);}else{// mark that we need a transform, so that any data that comes in\n// will get processed, now that we've asked for it.\nts.needTransform=true;}};function done(stream,er,data){if(er)return stream.emit('error',er);if(data!==null&&data!==undefined)stream.push(data);// if there's nothing in the write buffer, then that means\n// that nothing more will ever be provided\nvar ws=stream._writableState;var ts=stream._transformState;if(ws.length)throw new Error('Calling transform done when ws.length != 0');if(ts.transforming)throw new Error('Calling transform done when still transforming');return stream.push(null);}/***/},/* 26 */ /***/function(module,exports,__webpack_require__){// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';module.exports=PassThrough;var Transform=__webpack_require__(25);/*<replacement>*/var util=__webpack_require__(18);util.inherits=__webpack_require__(12);/*</replacement>*/util.inherits(PassThrough,Transform);function PassThrough(options){if(!(this instanceof PassThrough))return new PassThrough(options);Transform.call(this,options);}PassThrough.prototype._transform=function(chunk,encoding,cb){cb(null,chunk);};/***/},/* 27 */ /***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(22);/***/},/* 28 */ /***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(21);/***/},/* 29 */ /***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(25);/***/},/* 30 */ /***/function(module,exports,__webpack_require__){module.exports=__webpack_require__(26);/***/},/* 31 */ /***/function(module,exports,__webpack_require__){'use strict';var zlib_inflate=__webpack_require__(32);var utils=__webpack_require__(33);var strings=__webpack_require__(38);var c=__webpack_require__(39);var msg=__webpack_require__(40);var ZStream=__webpack_require__(41);var GZheader=__webpack_require__(42);var toString=Object.prototype.toString;/**\n\t * class Inflate\n\t *\n\t * Generic JS-style wrapper for zlib calls. If you don't need\n\t * streaming behaviour - use more simple functions: [[inflate]]\n\t * and [[inflateRaw]].\n\t **/ /* internal\n\t * inflate.chunks -> Array\n\t *\n\t * Chunks of output data, if [[Inflate#onData]] not overriden.\n\t **/ /**\n\t * Inflate.result -> Uint8Array|Array|String\n\t *\n\t * Uncompressed result, generated by default [[Inflate#onData]]\n\t * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n\t * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n\t * push a chunk with explicit flush (call [[Inflate#push]] with\n\t * `Z_SYNC_FLUSH` param).\n\t **/ /**\n\t * Inflate.err -> Number\n\t *\n\t * Error code after inflate finished. 0 (Z_OK) on success.\n\t * Should be checked if broken data possible.\n\t **/ /**\n\t * Inflate.msg -> String\n\t *\n\t * Error message, if [[Inflate.err]] != 0\n\t **/ /**\n\t * new Inflate(options)\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Creates new inflator instance with specified params. Throws exception\n\t * on bad params. Supported options:\n\t *\n\t * - `windowBits`\n\t * - `dictionary`\n\t *\n\t * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n\t * for more information on these.\n\t *\n\t * Additional options, for internal needs:\n\t *\n\t * - `chunkSize` - size of generated data chunks (16K by default)\n\t * - `raw` (Boolean) - do raw inflate\n\t * - `to` (String) - if equal to 'string', then result will be converted\n\t *   from utf8 to utf16 (javascript) string. When string output requested,\n\t *   chunk length can differ from `chunkSize`, depending on content.\n\t *\n\t * By default, when no options set, autodetect deflate/gzip data format via\n\t * wrapper header.\n\t *\n\t * ##### Example:\n\t *\n\t * ```javascript\n\t * var pako = require('pako')\n\t *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n\t *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n\t *\n\t * var inflate = new pako.Inflate({ level: 3});\n\t *\n\t * inflate.push(chunk1, false);\n\t * inflate.push(chunk2, true);  // true -> last chunk\n\t *\n\t * if (inflate.err) { throw new Error(inflate.err); }\n\t *\n\t * console.log(inflate.result);\n\t * ```\n\t **/function Inflate(options){if(!(this instanceof Inflate))return new Inflate(options);this.options=utils.assign({chunkSize:16384,windowBits:0,to:''},options||{});var opt=this.options;// Force window size for `raw` data, if not set directly,\n// because we have no header for autodetect.\nif(opt.raw&&opt.windowBits>=0&&opt.windowBits<16){opt.windowBits=-opt.windowBits;if(opt.windowBits===0){opt.windowBits=-15;}}// If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\nif(opt.windowBits>=0&&opt.windowBits<16&&!(options&&options.windowBits)){opt.windowBits+=32;}// Gzip header has no info about windows size, we can do autodetect only\n// for deflate. So, if window size not set, force it to max when gzip possible\nif(opt.windowBits>15&&opt.windowBits<48){// bit 3 (16) -> gzipped data\n// bit 4 (32) -> autodetect gzip/deflate\nif((opt.windowBits&15)===0){opt.windowBits|=15;}}this.err=0;// error code, if happens (0 = Z_OK)\nthis.msg='';// error message\nthis.ended=false;// used to avoid multiple onEnd() calls\nthis.chunks=[];// chunks of compressed data\nthis.strm=new ZStream();this.strm.avail_out=0;var status=zlib_inflate.inflateInit2(this.strm,opt.windowBits);if(status!==c.Z_OK){throw new Error(msg[status]);}this.header=new GZheader();zlib_inflate.inflateGetHeader(this.strm,this.header);}/**\n\t * Inflate#push(data[, mode]) -> Boolean\n\t * - data (Uint8Array|Array|ArrayBuffer|String): input data\n\t * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n\t *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n\t *\n\t * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n\t * new output chunks. Returns `true` on success. The last data block must have\n\t * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n\t * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n\t * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n\t *\n\t * On fail call [[Inflate#onEnd]] with error code and return false.\n\t *\n\t * We strongly recommend to use `Uint8Array` on input for best speed (output\n\t * format is detected automatically). Also, don't skip last param and always\n\t * use the same type in your code (boolean or number). That will improve JS speed.\n\t *\n\t * For regular `Array`-s make sure all elements are [0..255].\n\t *\n\t * ##### Example\n\t *\n\t * ```javascript\n\t * push(chunk, false); // push one of data chunks\n\t * ...\n\t * push(chunk, true);  // push last chunk\n\t * ```\n\t **/Inflate.prototype.push=function(data,mode){var strm=this.strm;var chunkSize=this.options.chunkSize;var dictionary=this.options.dictionary;var status,_mode;var next_out_utf8,tail,utf8str;var dict;// Flag to properly process Z_BUF_ERROR on testing inflate call\n// when we check that all output data was flushed.\nvar allowBufError=false;if(this.ended){return false;}_mode=mode===~~mode?mode:mode===true?c.Z_FINISH:c.Z_NO_FLUSH;// Convert data if needed\nif(typeof data==='string'){// Only binary strings can be decompressed on practice\nstrm.input=strings.binstring2buf(data);}else if(toString.call(data)==='[object ArrayBuffer]'){strm.input=new Uint8Array(data);}else{strm.input=data;}strm.next_in=0;strm.avail_in=strm.input.length;do{if(strm.avail_out===0){strm.output=new utils.Buf8(chunkSize);strm.next_out=0;strm.avail_out=chunkSize;}status=zlib_inflate.inflate(strm,c.Z_NO_FLUSH);/* no bad return value */if(status===c.Z_NEED_DICT&&dictionary){// Convert data if needed\nif(typeof dictionary==='string'){dict=strings.string2buf(dictionary);}else if(toString.call(dictionary)==='[object ArrayBuffer]'){dict=new Uint8Array(dictionary);}else{dict=dictionary;}status=zlib_inflate.inflateSetDictionary(this.strm,dict);}if(status===c.Z_BUF_ERROR&&allowBufError===true){status=c.Z_OK;allowBufError=false;}if(status!==c.Z_STREAM_END&&status!==c.Z_OK){this.onEnd(status);this.ended=true;return false;}if(strm.next_out){if(strm.avail_out===0||status===c.Z_STREAM_END||strm.avail_in===0&&(_mode===c.Z_FINISH||_mode===c.Z_SYNC_FLUSH)){if(this.options.to==='string'){next_out_utf8=strings.utf8border(strm.output,strm.next_out);tail=strm.next_out-next_out_utf8;utf8str=strings.buf2string(strm.output,next_out_utf8);// move tail\nstrm.next_out=tail;strm.avail_out=chunkSize-tail;if(tail){utils.arraySet(strm.output,strm.output,next_out_utf8,tail,0);}this.onData(utf8str);}else{this.onData(utils.shrinkBuf(strm.output,strm.next_out));}}}// When no more input data, we should check that internal inflate buffers\n// are flushed. The only way to do it when avail_out = 0 - run one more\n// inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n// Here we set flag to process this error properly.\n//\n// NOTE. Deflate does not return error in this case and does not needs such\n// logic.\nif(strm.avail_in===0&&strm.avail_out===0){allowBufError=true;}}while((strm.avail_in>0||strm.avail_out===0)&&status!==c.Z_STREAM_END);if(status===c.Z_STREAM_END){_mode=c.Z_FINISH;}// Finalize on the last chunk.\nif(_mode===c.Z_FINISH){status=zlib_inflate.inflateEnd(this.strm);this.onEnd(status);this.ended=true;return status===c.Z_OK;}// callback interim results if Z_SYNC_FLUSH.\nif(_mode===c.Z_SYNC_FLUSH){this.onEnd(c.Z_OK);strm.avail_out=0;return true;}return true;};/**\n\t * Inflate#onData(chunk) -> Void\n\t * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n\t *   on js engine support. When string output requested, each chunk\n\t *   will be string.\n\t *\n\t * By default, stores data blocks in `chunks[]` property and glue\n\t * those in `onEnd`. Override this handler, if you need another behaviour.\n\t **/Inflate.prototype.onData=function(chunk){this.chunks.push(chunk);};/**\n\t * Inflate#onEnd(status) -> Void\n\t * - status (Number): inflate status. 0 (Z_OK) on success,\n\t *   other if not.\n\t *\n\t * Called either after you tell inflate that the input stream is\n\t * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n\t * or if an error happened. By default - join collected chunks,\n\t * free memory and fill `results` / `err` properties.\n\t **/Inflate.prototype.onEnd=function(status){// On success - join\nif(status===c.Z_OK){if(this.options.to==='string'){// Glue & convert here, until we teach pako to send\n// utf8 alligned strings to onData\nthis.result=this.chunks.join('');}else{this.result=utils.flattenChunks(this.chunks);}}this.chunks=[];this.err=status;this.msg=this.strm.msg;};/**\n\t * inflate(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Decompress `data` with inflate/ungzip and `options`. Autodetect\n\t * format via wrapper header by default. That's why we don't provide\n\t * separate `ungzip` method.\n\t *\n\t * Supported options are:\n\t *\n\t * - windowBits\n\t *\n\t * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n\t * for more information.\n\t *\n\t * Sugar (options):\n\t *\n\t * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n\t *   negative windowBits implicitly.\n\t * - `to` (String) - if equal to 'string', then result will be converted\n\t *   from utf8 to utf16 (javascript) string. When string output requested,\n\t *   chunk length can differ from `chunkSize`, depending on content.\n\t *\n\t *\n\t * ##### Example:\n\t *\n\t * ```javascript\n\t * var pako = require('pako')\n\t *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n\t *   , output;\n\t *\n\t * try {\n\t *   output = pako.inflate(input);\n\t * } catch (err)\n\t *   console.log(err);\n\t * }\n\t * ```\n\t **/function inflate(input,options){var inflator=new Inflate(options);inflator.push(input,true);// That will never happens, if you don't cheat with options :)\nif(inflator.err){throw inflator.msg||msg[inflator.err];}return inflator.result;}/**\n\t * inflateRaw(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * The same as [[inflate]], but creates raw data, without wrapper\n\t * (header and adler32 crc).\n\t **/function inflateRaw(input,options){options=options||{};options.raw=true;return inflate(input,options);}/**\n\t * ungzip(data[, options]) -> Uint8Array|Array|String\n\t * - data (Uint8Array|Array|String): input data to decompress.\n\t * - options (Object): zlib inflate options.\n\t *\n\t * Just shortcut to [[inflate]], because it autodetects format\n\t * by header.content. Done for convenience.\n\t **/exports.Inflate=Inflate;exports.inflate=inflate;exports.inflateRaw=inflateRaw;exports.ungzip=inflate;/***/},/* 32 */ /***/function(module,exports,__webpack_require__){'use strict';var utils=__webpack_require__(33);var adler32=__webpack_require__(34);var crc32=__webpack_require__(35);var inflate_fast=__webpack_require__(36);var inflate_table=__webpack_require__(37);var CODES=0;var LENS=1;var DISTS=2;/* Public constants ==========================================================*/ /* ===========================================================================*/ /* Allowed flush values; see deflate() and inflate() below for details */ //var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH=4;var Z_BLOCK=5;var Z_TREES=6;/* Return codes for the compression/decompression functions. Negative values\n\t * are errors, positive values are used for special but normal events.\n\t */var Z_OK=0;var Z_STREAM_END=1;var Z_NEED_DICT=2;//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR=-2;var Z_DATA_ERROR=-3;var Z_MEM_ERROR=-4;var Z_BUF_ERROR=-5;//var Z_VERSION_ERROR = -6;\n/* The deflate compression method */var Z_DEFLATED=8;/* STATES ====================================================================*/ /* ===========================================================================*/var HEAD=1;/* i: waiting for magic header */var FLAGS=2;/* i: waiting for method and flags (gzip) */var TIME=3;/* i: waiting for modification time (gzip) */var OS=4;/* i: waiting for extra flags and operating system (gzip) */var EXLEN=5;/* i: waiting for extra length (gzip) */var EXTRA=6;/* i: waiting for extra bytes (gzip) */var NAME=7;/* i: waiting for end of file name (gzip) */var COMMENT=8;/* i: waiting for end of comment (gzip) */var HCRC=9;/* i: waiting for header crc (gzip) */var DICTID=10;/* i: waiting for dictionary check value */var DICT=11;/* waiting for inflateSetDictionary() call */var TYPE=12;/* i: waiting for type bits, including last-flag bit */var TYPEDO=13;/* i: same, but skip check to exit inflate on new block */var STORED=14;/* i: waiting for stored size (length and complement) */var COPY_=15;/* i/o: same as COPY below, but only first time in */var COPY=16;/* i/o: waiting for input or output to copy stored block */var TABLE=17;/* i: waiting for dynamic block table lengths */var LENLENS=18;/* i: waiting for code length code lengths */var CODELENS=19;/* i: waiting for length/lit and distance code lengths */var LEN_=20;/* i: same as LEN below, but only first time in */var LEN=21;/* i: waiting for length/lit/eob code */var LENEXT=22;/* i: waiting for length extra bits */var DIST=23;/* i: waiting for distance code */var DISTEXT=24;/* i: waiting for distance extra bits */var MATCH=25;/* o: waiting for output space to copy string */var LIT=26;/* o: waiting for output space to write literal */var CHECK=27;/* i: waiting for 32-bit check value */var LENGTH=28;/* i: waiting for 32-bit length (gzip) */var DONE=29;/* finished check, done -- remain here until reset */var BAD=30;/* got a data error -- remain here until reset */var MEM=31;/* got an inflate() memory error -- remain here until reset */var SYNC=32;/* looking for synchronization bytes to restart inflate() */ /* ===========================================================================*/var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\nvar MAX_WBITS=15;/* 32K LZ77 window */var DEF_WBITS=MAX_WBITS;function zswap32(q){return(q>>>24&0xff)+(q>>>8&0xff00)+((q&0xff00)<<8)+((q&0xff)<<24);}function InflateState(){this.mode=0;/* current inflate mode */this.last=false;/* true if processing last block */this.wrap=0;/* bit 0 true for zlib, bit 1 true for gzip */this.havedict=false;/* true if dictionary provided */this.flags=0;/* gzip header method and flags (0 if zlib) */this.dmax=0;/* zlib header max distance (INFLATE_STRICT) */this.check=0;/* protected copy of check value */this.total=0;/* protected copy of output count */ // TODO: may be {}\nthis.head=null;/* where to save gzip header information */ /* sliding window */this.wbits=0;/* log base 2 of requested window size */this.wsize=0;/* window size or zero if not using window */this.whave=0;/* valid bytes in the window */this.wnext=0;/* window write index */this.window=null;/* allocated sliding window, if needed */ /* bit accumulator */this.hold=0;/* input bit accumulator */this.bits=0;/* number of bits in \"in\" */ /* for string and stored block copying */this.length=0;/* literal or length of data to copy */this.offset=0;/* distance back to copy string from */ /* for table and code decoding */this.extra=0;/* extra bits needed */ /* fixed and dynamic code tables */this.lencode=null;/* starting table for length/literal codes */this.distcode=null;/* starting table for distance codes */this.lenbits=0;/* index bits for lencode */this.distbits=0;/* index bits for distcode */ /* dynamic table building */this.ncode=0;/* number of code length code lengths */this.nlen=0;/* number of length code lengths */this.ndist=0;/* number of distance code lengths */this.have=0;/* number of code lengths in lens[] */this.next=null;/* next available space in codes[] */this.lens=new utils.Buf16(320);/* temporary storage for code lengths */this.work=new utils.Buf16(288);/* work area for code table building */ /*\n\t   because we don't have pointers in js, we use lencode and distcode directly\n\t   as buffers so we don't need codes\n\t  */ //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\nthis.lendyn=null;/* dynamic table for length/literal codes (JS specific) */this.distdyn=null;/* dynamic table for distance codes (JS specific) */this.sane=0;/* if false, allow invalid distance too far */this.back=0;/* bits back of last unprocessed length/lit */this.was=0;/* initial length of match */}function inflateResetKeep(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;strm.total_in=strm.total_out=state.total=0;strm.msg='';/*Z_NULL*/if(state.wrap){/* to support ill-conceived Java test suite */strm.adler=state.wrap&1;}state.mode=HEAD;state.last=0;state.havedict=0;state.dmax=32768;state.head=null/*Z_NULL*/;state.hold=0;state.bits=0;//state.lencode = state.distcode = state.next = state.codes;\nstate.lencode=state.lendyn=new utils.Buf32(ENOUGH_LENS);state.distcode=state.distdyn=new utils.Buf32(ENOUGH_DISTS);state.sane=1;state.back=-1;//Tracev((stderr, \"inflate: reset\\n\"));\nreturn Z_OK;}function inflateReset(strm){var state;if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;state.wsize=0;state.whave=0;state.wnext=0;return inflateResetKeep(strm);}function inflateReset2(strm,windowBits){var wrap;var state;/* get the state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;/* extract wrap request from windowBits parameter */if(windowBits<0){wrap=0;windowBits=-windowBits;}else{wrap=(windowBits>>4)+1;if(windowBits<48){windowBits&=15;}}/* set number of window bits, free window if different */if(windowBits&&(windowBits<8||windowBits>15)){return Z_STREAM_ERROR;}if(state.window!==null&&state.wbits!==windowBits){state.window=null;}/* update state and reset the rest of it */state.wrap=wrap;state.wbits=windowBits;return inflateReset(strm);}function inflateInit2(strm,windowBits){var ret;var state;if(!strm){return Z_STREAM_ERROR;}//strm.msg = Z_NULL;                 /* in case we return an error */\nstate=new InflateState();//if (state === Z_NULL) return Z_MEM_ERROR;\n//Tracev((stderr, \"inflate: allocated\\n\"));\nstrm.state=state;state.window=null/*Z_NULL*/;ret=inflateReset2(strm,windowBits);if(ret!==Z_OK){strm.state=null/*Z_NULL*/;}return ret;}function inflateInit(strm){return inflateInit2(strm,DEF_WBITS);}/*\n\t Return state with length and distance decoding tables and index sizes set to\n\t fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n\t If BUILDFIXED is defined, then instead this routine builds the tables the\n\t first time it's called, and returns those tables the first time and\n\t thereafter.  This reduces the size of the code by about 2K bytes, in\n\t exchange for a little execution time.  However, BUILDFIXED should not be\n\t used for threaded applications, since the rewriting of the tables and virgin\n\t may not be thread-safe.\n\t */var virgin=true;var lenfix,distfix;// We have no pointers in JS, so keep tables separate\nfunction fixedtables(state){/* build fixed huffman tables if first call (may not be thread safe) */if(virgin){var sym;lenfix=new utils.Buf32(512);distfix=new utils.Buf32(32);/* literal/length table */sym=0;while(sym<144){state.lens[sym++]=8;}while(sym<256){state.lens[sym++]=9;}while(sym<280){state.lens[sym++]=7;}while(sym<288){state.lens[sym++]=8;}inflate_table(LENS,state.lens,0,288,lenfix,0,state.work,{bits:9});/* distance table */sym=0;while(sym<32){state.lens[sym++]=5;}inflate_table(DISTS,state.lens,0,32,distfix,0,state.work,{bits:5});/* do this just once */virgin=false;}state.lencode=lenfix;state.lenbits=9;state.distcode=distfix;state.distbits=5;}/*\n\t Update the window with the last wsize (normally 32K) bytes written before\n\t returning.  If window does not exist yet, create it.  This is only called\n\t when a window is already in use, or when output has been written during this\n\t inflate call, but the end of the deflate stream has not been reached yet.\n\t It is also called to create a window for dictionary data when a dictionary\n\t is loaded.\n\t\n\t Providing output buffers larger than 32K to inflate() should provide a speed\n\t advantage, since only the last 32K of output is copied to the sliding window\n\t upon return from inflate(), and since all distances after the first 32K of\n\t output will fall in the output data, making match copies simpler and faster.\n\t The advantage may be dependent on the size of the processor's data caches.\n\t */function updatewindow(strm,src,end,copy){var dist;var state=strm.state;/* if it hasn't been done already, allocate space for the window */if(state.window===null){state.wsize=1<<state.wbits;state.wnext=0;state.whave=0;state.window=new utils.Buf8(state.wsize);}/* copy state->wsize or less output bytes into the circular window */if(copy>=state.wsize){utils.arraySet(state.window,src,end-state.wsize,state.wsize,0);state.wnext=0;state.whave=state.wsize;}else{dist=state.wsize-state.wnext;if(dist>copy){dist=copy;}//zmemcpy(state->window + state->wnext, end - copy, dist);\nutils.arraySet(state.window,src,end-copy,dist,state.wnext);copy-=dist;if(copy){//zmemcpy(state->window, end - copy, copy);\nutils.arraySet(state.window,src,end-copy,copy,0);state.wnext=copy;state.whave=state.wsize;}else{state.wnext+=dist;if(state.wnext===state.wsize){state.wnext=0;}if(state.whave<state.wsize){state.whave+=dist;}}}return 0;}function inflate(strm,flush){var state;var input,output;// input/output buffers\nvar next;/* next input INDEX */var put;/* next output INDEX */var have,left;/* available input and output */var hold;/* bit buffer */var bits;/* bits in bit buffer */var _in,_out;/* save starting available input and output */var copy;/* number of stored or match bytes to copy */var from;/* where to copy match bytes from */var from_source;var here=0;/* current decoding table entry */var here_bits,here_op,here_val;// paked \"here\" denormalized (JS specific)\n//var last;                   /* parent table entry */\nvar last_bits,last_op,last_val;// paked \"last\" denormalized (JS specific)\nvar len;/* length to copy for repeats, bits to drop */var ret;/* return code */var hbuf=new utils.Buf8(4);/* buffer for gzip header crc calculation */var opts;var n;// temporary var for NEED_BITS\nvar order=/* permutation of code lengths */[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!strm||!strm.state||!strm.output||!strm.input&&strm.avail_in!==0){return Z_STREAM_ERROR;}state=strm.state;if(state.mode===TYPE){state.mode=TYPEDO;}/* skip check */ //--- LOAD() ---\nput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\n_in=have;_out=left;ret=Z_OK;inf_leave:// goto emulation\nfor(;;){switch(state.mode){case HEAD:if(state.wrap===0){state.mode=TYPEDO;break;}//=== NEEDBITS(16);\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.wrap&2&&hold===0x8b1f){/* gzip header */state.check=0/*crc32(0L, Z_NULL, 0)*/;//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=FLAGS;break;}state.flags=0;/* expect zlib header */if(state.head){state.head.done=false;}if(!(state.wrap&1)||/* check if zlib header allowed */(((hold&0xff)<</*BITS(8)*/8)+(hold>>8))%31){strm.msg='incorrect header check';state.mode=BAD;break;}if((hold&0x0f)!==/*BITS(4)*/Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}//--- DROPBITS(4) ---//\nhold>>>=4;bits-=4;//---//\nlen=(hold&0x0f)+/*BITS(4)*/8;if(state.wbits===0){state.wbits=len;}else if(len>state.wbits){strm.msg='invalid window size';state.mode=BAD;break;}state.dmax=1<<len;//Tracev((stderr, \"inflate:   zlib header ok\\n\"));\nstrm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=hold&0x200?DICTID:TYPE;//=== INITBITS();\nhold=0;bits=0;//===//\nbreak;case FLAGS://=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.flags=hold;if((state.flags&0xff)!==Z_DEFLATED){strm.msg='unknown compression method';state.mode=BAD;break;}if(state.flags&0xe000){strm.msg='unknown header flags set';state.mode=BAD;break;}if(state.head){state.head.text=hold>>8&1;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=TIME;/* falls through */case TIME://=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.head){state.head.time=hold;}if(state.flags&0x0200){//=== CRC4(state.check, hold)\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;hbuf[2]=hold>>>16&0xff;hbuf[3]=hold>>>24&0xff;state.check=crc32(state.check,hbuf,4,0);//===\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=OS;/* falls through */case OS://=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(state.head){state.head.xflags=hold&0xff;state.head.os=hold>>8;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=EXLEN;/* falls through */case EXLEN:if(state.flags&0x0400){//=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.length=hold;if(state.head){state.head.extra_len=hold;}if(state.flags&0x0200){//=== CRC2(state.check, hold);\nhbuf[0]=hold&0xff;hbuf[1]=hold>>>8&0xff;state.check=crc32(state.check,hbuf,2,0);//===//\n}//=== INITBITS();\nhold=0;bits=0;//===//\n}else if(state.head){state.head.extra=null/*Z_NULL*/;}state.mode=EXTRA;/* falls through */case EXTRA:if(state.flags&0x0400){copy=state.length;if(copy>have){copy=have;}if(copy){if(state.head){len=state.head.extra_len-state.length;if(!state.head.extra){// Use untyped array for more conveniend processing later\nstate.head.extra=new Array(state.head.extra_len);}utils.arraySet(state.head.extra,input,next,// extra field is limited to 65536 bytes\n// - no need for additional size check\ncopy,/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/len);//zmemcpy(state.head.extra + len, next,\n//        len + copy > state.head.extra_max ?\n//        state.head.extra_max - len : copy);\n}if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;state.length-=copy;}if(state.length){break inf_leave;}}state.length=0;state.mode=NAME;/* falls through */case NAME:if(state.flags&0x0800){if(have===0){break inf_leave;}copy=0;do{// TODO: 2 or 1 bytes?\nlen=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.name_max*/){state.head.name+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.name=null;}state.length=0;state.mode=COMMENT;/* falls through */case COMMENT:if(state.flags&0x1000){if(have===0){break inf_leave;}copy=0;do{len=input[next+copy++];/* use constant limit because in js we should not preallocate memory */if(state.head&&len&&state.length<65536/*state.head.comm_max*/){state.head.comment+=String.fromCharCode(len);}}while(len&&copy<have);if(state.flags&0x0200){state.check=crc32(state.check,input,copy,next);}have-=copy;next+=copy;if(len){break inf_leave;}}else if(state.head){state.head.comment=null;}state.mode=HCRC;/* falls through */case HCRC:if(state.flags&0x0200){//=== NEEDBITS(16); */\nwhile(bits<16){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(hold!==(state.check&0xffff)){strm.msg='header crc mismatch';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n}if(state.head){state.head.hcrc=state.flags>>9&1;state.head.done=true;}strm.adler=state.check=0;state.mode=TYPE;break;case DICTID://=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstrm.adler=state.check=zswap32(hold);//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=DICT;/* falls through */case DICT:if(state.havedict===0){//--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\nreturn Z_NEED_DICT;}strm.adler=state.check=1/*adler32(0L, Z_NULL, 0)*/;state.mode=TYPE;/* falls through */case TYPE:if(flush===Z_BLOCK||flush===Z_TREES){break inf_leave;}/* falls through */case TYPEDO:if(state.last){//--- BYTEBITS() ---//\nhold>>>=bits&7;bits-=bits&7;//---//\nstate.mode=CHECK;break;}//=== NEEDBITS(3); */\nwhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.last=hold&0x01/*BITS(1)*/;//--- DROPBITS(1) ---//\nhold>>>=1;bits-=1;//---//\nswitch(hold&0x03){/*BITS(2)*/case 0:/* stored block */ //Tracev((stderr, \"inflate:     stored block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=STORED;break;case 1:/* fixed block */fixedtables(state);//Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=LEN_;/* decode codes */if(flush===Z_TREES){//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\nbreak inf_leave;}break;case 2:/* dynamic block */ //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n//        state.last ? \" (last)\" : \"\"));\nstate.mode=TABLE;break;case 3:strm.msg='invalid block type';state.mode=BAD;}//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\nbreak;case STORED://--- BYTEBITS() ---// /* go to byte boundary */\nhold>>>=bits&7;bits-=bits&7;//---//\n//=== NEEDBITS(32); */\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif((hold&0xffff)!==(hold>>>16^0xffff)){strm.msg='invalid stored block lengths';state.mode=BAD;break;}state.length=hold&0xffff;//Tracev((stderr, \"inflate:       stored length %u\\n\",\n//        state.length));\n//=== INITBITS();\nhold=0;bits=0;//===//\nstate.mode=COPY_;if(flush===Z_TREES){break inf_leave;}/* falls through */case COPY_:state.mode=COPY;/* falls through */case COPY:copy=state.length;if(copy){if(copy>have){copy=have;}if(copy>left){copy=left;}if(copy===0){break inf_leave;}//--- zmemcpy(put, next, copy); ---\nutils.arraySet(output,input,next,copy,put);//---//\nhave-=copy;next+=copy;left-=copy;put+=copy;state.length-=copy;break;}//Tracev((stderr, \"inflate:       stored end\\n\"));\nstate.mode=TYPE;break;case TABLE://=== NEEDBITS(14); */\nwhile(bits<14){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.nlen=(hold&0x1f)+/*BITS(5)*/257;//--- DROPBITS(5) ---//\nhold>>>=5;bits-=5;//---//\nstate.ndist=(hold&0x1f)+/*BITS(5)*/1;//--- DROPBITS(5) ---//\nhold>>>=5;bits-=5;//---//\nstate.ncode=(hold&0x0f)+/*BITS(4)*/4;//--- DROPBITS(4) ---//\nhold>>>=4;bits-=4;//---//\n//#ifndef PKZIP_BUG_WORKAROUND\nif(state.nlen>286||state.ndist>30){strm.msg='too many length or distance symbols';state.mode=BAD;break;}//#endif\n//Tracev((stderr, \"inflate:       table sizes ok\\n\"));\nstate.have=0;state.mode=LENLENS;/* falls through */case LENLENS:while(state.have<state.ncode){//=== NEEDBITS(3);\nwhile(bits<3){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.lens[order[state.have++]]=hold&0x07;//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;bits-=3;//---//\n}while(state.have<19){state.lens[order[state.have++]]=0;}// We have separate tables & no pointers. 2 commented lines below not needed.\n//state.next = state.codes;\n//state.lencode = state.next;\n// Switch to use dynamic table\nstate.lencode=state.lendyn;state.lenbits=7;opts={bits:state.lenbits};ret=inflate_table(CODES,state.lens,0,19,state.lencode,0,state.work,opts);state.lenbits=opts.bits;if(ret){strm.msg='invalid code lengths set';state.mode=BAD;break;}//Tracev((stderr, \"inflate:       code lengths ok\\n\"));\nstate.have=0;state.mode=CODELENS;/* falls through */case CODELENS:while(state.have<state.nlen+state.ndist){for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if(here_val<16){//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.lens[state.have++]=here_val;}else{if(here_val===16){//=== NEEDBITS(here.bits + 2);\nn=here_bits+2;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nif(state.have===0){strm.msg='invalid bit length repeat';state.mode=BAD;break;}len=state.lens[state.have-1];copy=3+(hold&0x03);//BITS(2);\n//--- DROPBITS(2) ---//\nhold>>>=2;bits-=2;//---//\n}else if(here_val===17){//=== NEEDBITS(here.bits + 3);\nn=here_bits+3;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nlen=0;copy=3+(hold&0x07);//BITS(3);\n//--- DROPBITS(3) ---//\nhold>>>=3;bits-=3;//---//\n}else{//=== NEEDBITS(here.bits + 7);\nn=here_bits+7;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\n//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nlen=0;copy=11+(hold&0x7f);//BITS(7);\n//--- DROPBITS(7) ---//\nhold>>>=7;bits-=7;//---//\n}if(state.have+copy>state.nlen+state.ndist){strm.msg='invalid bit length repeat';state.mode=BAD;break;}while(copy--){state.lens[state.have++]=len;}}}/* handle error breaks in while */if(state.mode===BAD){break;}/* check for end-of-block code (better have one) */if(state.lens[256]===0){strm.msg='invalid code -- missing end-of-block';state.mode=BAD;break;}/* build code tables -- note: do not change the lenbits or distbits\n\t         values here (9 and 6) without reading the comments in inftrees.h\n\t         concerning the ENOUGH constants, which depend on those values */state.lenbits=9;opts={bits:state.lenbits};ret=inflate_table(LENS,state.lens,0,state.nlen,state.lencode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.lenbits=opts.bits;// state.lencode = state.next;\nif(ret){strm.msg='invalid literal/lengths set';state.mode=BAD;break;}state.distbits=6;//state.distcode.copy(state.codes);\n// Switch to use dynamic table\nstate.distcode=state.distdyn;opts={bits:state.distbits};ret=inflate_table(DISTS,state.lens,state.nlen,state.ndist,state.distcode,0,state.work,opts);// We have separate tables & no pointers. 2 commented lines below not needed.\n// state.next_index = opts.table_index;\nstate.distbits=opts.bits;// state.distcode = state.next;\nif(ret){strm.msg='invalid distances set';state.mode=BAD;break;}//Tracev((stderr, 'inflate:       codes ok\\n'));\nstate.mode=LEN_;if(flush===Z_TREES){break inf_leave;}/* falls through */case LEN_:state.mode=LEN;/* falls through */case LEN:if(have>=6&&left>=258){//--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\ninflate_fast(strm,_out);//--- LOAD() ---\nput=strm.next_out;output=strm.output;left=strm.avail_out;next=strm.next_in;input=strm.input;have=strm.avail_in;hold=state.hold;bits=state.bits;//---\nif(state.mode===TYPE){state.back=-1;}break;}state.back=0;for(;;){here=state.lencode[hold&(1<<state.lenbits)-1];/*BITS(state.lenbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if(here_op&&(here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.lencode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;bits-=last_bits;//---//\nstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.back+=here_bits;state.length=here_val;if(here_op===0){//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\nstate.mode=LIT;break;}if(here_op&32){//Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.back=-1;state.mode=TYPE;break;}if(here_op&64){strm.msg='invalid literal/length code';state.mode=BAD;break;}state.extra=here_op&15;state.mode=LENEXT;/* falls through */case LENEXT:if(state.extra){//=== NEEDBITS(state.extra);\nn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.length+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;bits-=state.extra;//---//\nstate.back+=state.extra;}//Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\nstate.was=state.length;state.mode=DIST;/* falls through */case DIST:for(;;){here=state.distcode[hold&(1<<state.distbits)-1];/*BITS(state.distbits)*/here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}if((here_op&0xf0)===0){last_bits=here_bits;last_op=here_op;last_val=here_val;for(;;){here=state.distcode[last_val+((hold&(1<<last_bits+last_op)-1)>>/*BITS(last.bits + last.op)*/last_bits)];here_bits=here>>>24;here_op=here>>>16&0xff;here_val=here&0xffff;if(last_bits+here_bits<=bits){break;}//--- PULLBYTE() ---//\nif(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;//---//\n}//--- DROPBITS(last.bits) ---//\nhold>>>=last_bits;bits-=last_bits;//---//\nstate.back+=last_bits;}//--- DROPBITS(here.bits) ---//\nhold>>>=here_bits;bits-=here_bits;//---//\nstate.back+=here_bits;if(here_op&64){strm.msg='invalid distance code';state.mode=BAD;break;}state.offset=here_val;state.extra=here_op&15;state.mode=DISTEXT;/* falls through */case DISTEXT:if(state.extra){//=== NEEDBITS(state.extra);\nn=state.extra;while(bits<n){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nstate.offset+=hold&(1<<state.extra)-1/*BITS(state.extra)*/;//--- DROPBITS(state.extra) ---//\nhold>>>=state.extra;bits-=state.extra;//---//\nstate.back+=state.extra;}//#ifdef INFLATE_STRICT\nif(state.offset>state.dmax){strm.msg='invalid distance too far back';state.mode=BAD;break;}//#endif\n//Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\nstate.mode=MATCH;/* falls through */case MATCH:if(left===0){break inf_leave;}copy=_out-left;if(state.offset>copy){/* copy from window */copy=state.offset-copy;if(copy>state.whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break;}// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n}if(copy>state.wnext){copy-=state.wnext;from=state.wsize-copy;}else{from=state.wnext-copy;}if(copy>state.length){copy=state.length;}from_source=state.window;}else{/* copy from output */from_source=output;from=put-state.offset;copy=state.length;}if(copy>left){copy=left;}left-=copy;state.length-=copy;do{output[put++]=from_source[from++];}while(--copy);if(state.length===0){state.mode=LEN;}break;case LIT:if(left===0){break inf_leave;}output[put++]=state.length;left--;state.mode=LEN;break;case CHECK:if(state.wrap){//=== NEEDBITS(32);\nwhile(bits<32){if(have===0){break inf_leave;}have--;// Use '|' insdead of '+' to make sure that result is signed\nhold|=input[next++]<<bits;bits+=8;}//===//\n_out-=left;strm.total_out+=_out;state.total+=_out;if(_out){strm.adler=state.check=/*UPDATE(state.check, put - _out, _out);*/state.flags?crc32(state.check,output,_out,put-_out):adler32(state.check,output,_out,put-_out);}_out=left;// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\nif((state.flags?hold:zswap32(hold))!==state.check){strm.msg='incorrect data check';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n//Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n}state.mode=LENGTH;/* falls through */case LENGTH:if(state.wrap&&state.flags){//=== NEEDBITS(32);\nwhile(bits<32){if(have===0){break inf_leave;}have--;hold+=input[next++]<<bits;bits+=8;}//===//\nif(hold!==(state.total&0xffffffff)){strm.msg='incorrect length check';state.mode=BAD;break;}//=== INITBITS();\nhold=0;bits=0;//===//\n//Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n}state.mode=DONE;/* falls through */case DONE:ret=Z_STREAM_END;break inf_leave;case BAD:ret=Z_DATA_ERROR;break inf_leave;case MEM:return Z_MEM_ERROR;case SYNC:/* falls through */default:return Z_STREAM_ERROR;}}// inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n/*\n\t     Return from inflate(), updating the total counts and the check value.\n\t     If there was no progress during the inflate() call, return a buffer\n\t     error.  Call updatewindow() to create and/or update the window state.\n\t     Note: a memory error from inflate() is non-recoverable.\n\t   */ //--- RESTORE() ---\nstrm.next_out=put;strm.avail_out=left;strm.next_in=next;strm.avail_in=have;state.hold=hold;state.bits=bits;//---\nif(state.wsize||_out!==strm.avail_out&&state.mode<BAD&&(state.mode<CHECK||flush!==Z_FINISH)){if(updatewindow(strm,strm.output,strm.next_out,_out-strm.avail_out)){state.mode=MEM;return Z_MEM_ERROR;}}_in-=strm.avail_in;_out-=strm.avail_out;strm.total_in+=_in;strm.total_out+=_out;state.total+=_out;if(state.wrap&&_out){strm.adler=state.check=/*UPDATE(state.check, strm.next_out - _out, _out);*/state.flags?crc32(state.check,output,_out,strm.next_out-_out):adler32(state.check,output,_out,strm.next_out-_out);}strm.data_type=state.bits+(state.last?64:0)+(state.mode===TYPE?128:0)+(state.mode===LEN_||state.mode===COPY_?256:0);if((_in===0&&_out===0||flush===Z_FINISH)&&ret===Z_OK){ret=Z_BUF_ERROR;}return ret;}function inflateEnd(strm){if(!strm||!strm.state/*|| strm->zfree == (free_func)0*/){return Z_STREAM_ERROR;}var state=strm.state;if(state.window){state.window=null;}strm.state=null;return Z_OK;}function inflateGetHeader(strm,head){var state;/* check state */if(!strm||!strm.state){return Z_STREAM_ERROR;}state=strm.state;if((state.wrap&2)===0){return Z_STREAM_ERROR;}/* save header structure */state.head=head;head.done=false;return Z_OK;}function inflateSetDictionary(strm,dictionary){var dictLength=dictionary.length;var state;var dictid;var ret;/* check state */if(!strm/* == Z_NULL */||!strm.state/* == Z_NULL */){return Z_STREAM_ERROR;}state=strm.state;if(state.wrap!==0&&state.mode!==DICT){return Z_STREAM_ERROR;}/* check for correct dictionary identifier */if(state.mode===DICT){dictid=1;/* adler32(0, null, 0)*/ /* dictid = adler32(dictid, dictionary, dictLength); */dictid=adler32(dictid,dictionary,dictLength,0);if(dictid!==state.check){return Z_DATA_ERROR;}}/* copy dictionary to window using updatewindow(), which will amend the\n\t   existing dictionary if appropriate */ret=updatewindow(strm,dictionary,dictLength,dictLength);if(ret){state.mode=MEM;return Z_MEM_ERROR;}state.havedict=1;// Tracev((stderr, \"inflate:   dictionary set\\n\"));\nreturn Z_OK;}exports.inflateReset=inflateReset;exports.inflateReset2=inflateReset2;exports.inflateResetKeep=inflateResetKeep;exports.inflateInit=inflateInit;exports.inflateInit2=inflateInit2;exports.inflate=inflate;exports.inflateEnd=inflateEnd;exports.inflateGetHeader=inflateGetHeader;exports.inflateSetDictionary=inflateSetDictionary;exports.inflateInfo='pako inflate (from Nodeca project)';/* Not implemented\n\texports.inflateCopy = inflateCopy;\n\texports.inflateGetDictionary = inflateGetDictionary;\n\texports.inflateMark = inflateMark;\n\texports.inflatePrime = inflatePrime;\n\texports.inflateSync = inflateSync;\n\texports.inflateSyncPoint = inflateSyncPoint;\n\texports.inflateUndermine = inflateUndermine;\n\t*/ /***/},/* 33 */ /***/function(module,exports){'use strict';var TYPED_OK=typeof Uint8Array!=='undefined'&&typeof Uint16Array!=='undefined'&&typeof Int32Array!=='undefined';exports.assign=function(obj/*from1, from2, from3, ...*/){var sources=Array.prototype.slice.call(arguments,1);while(sources.length){var source=sources.shift();if(!source){continue;}if(_typeof(source)!=='object'){throw new TypeError(source+'must be non-object');}for(var p in source){if(source.hasOwnProperty(p)){obj[p]=source[p];}}}return obj;};// reduce buffer size, avoiding mem copy\nexports.shrinkBuf=function(buf,size){if(buf.length===size){return buf;}if(buf.subarray){return buf.subarray(0,size);}buf.length=size;return buf;};var fnTyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){if(src.subarray&&dest.subarray){dest.set(src.subarray(src_offs,src_offs+len),dest_offs);return;}// Fallback to ordinary array\nfor(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){var i,l,len,pos,chunk,result;// calculate data length\nlen=0;for(i=0,l=chunks.length;i<l;i++){len+=chunks[i].length;}// join chunks\nresult=new Uint8Array(len);pos=0;for(i=0,l=chunks.length;i<l;i++){chunk=chunks[i];result.set(chunk,pos);pos+=chunk.length;}return result;}};var fnUntyped={arraySet:function arraySet(dest,src,src_offs,len,dest_offs){for(var i=0;i<len;i++){dest[dest_offs+i]=src[src_offs+i];}},// Join array of chunks to single array.\nflattenChunks:function flattenChunks(chunks){return[].concat.apply([],chunks);}};// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped=function(on){if(on){exports.Buf8=Uint8Array;exports.Buf16=Uint16Array;exports.Buf32=Int32Array;exports.assign(exports,fnTyped);}else{exports.Buf8=Array;exports.Buf16=Array;exports.Buf32=Array;exports.assign(exports,fnUntyped);}};exports.setTyped(TYPED_OK);/***/},/* 34 */ /***/function(module,exports){'use strict';// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\nfunction adler32(adler,buf,len,pos){var s1=adler&0xffff|0,s2=adler>>>16&0xffff|0,n=0;while(len!==0){// Set limit ~ twice less than 5552, to keep\n// s2 in 31-bits, because we force signed ints.\n// in other case %= will fail.\nn=len>2000?2000:len;len-=n;do{s1=s1+buf[pos++]|0;s2=s2+s1|0;}while(--n);s1%=65521;s2%=65521;}return s1|s2<<16|0;}module.exports=adler32;/***/},/* 35 */ /***/function(module,exports){'use strict';// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable(){var c,table=[];for(var n=0;n<256;n++){c=n;for(var k=0;k<8;k++){c=c&1?0xEDB88320^c>>>1:c>>>1;}table[n]=c;}return table;}// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable=makeTable();function crc32(crc,buf,len,pos){var t=crcTable,end=pos+len;crc^=-1;for(var i=pos;i<end;i++){crc=crc>>>8^t[(crc^buf[i])&0xFF];}return crc^-1;// >>> 0;\n}module.exports=crc32;/***/},/* 36 */ /***/function(module,exports){'use strict';// See state defs from inflate.js\nvar BAD=30;/* got a data error -- remain here until reset */var TYPE=12;/* i: waiting for type bits, including last-flag bit */ /*\n\t   Decode literal, length, and distance codes and write out the resulting\n\t   literal and match bytes until either not enough input or output is\n\t   available, an end-of-block is encountered, or a data error is encountered.\n\t   When large enough input and output buffers are supplied to inflate(), for\n\t   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n\t   inflate execution time is spent in this routine.\n\t\n\t   Entry assumptions:\n\t\n\t        state.mode === LEN\n\t        strm.avail_in >= 6\n\t        strm.avail_out >= 258\n\t        start >= strm.avail_out\n\t        state.bits < 8\n\t\n\t   On return, state.mode is one of:\n\t\n\t        LEN -- ran out of enough output space or enough available input\n\t        TYPE -- reached end of block code, inflate() to interpret next block\n\t        BAD -- error in block data\n\t\n\t   Notes:\n\t\n\t    - The maximum input bits used by a length/distance pair is 15 bits for the\n\t      length code, 5 bits for the length extra, 15 bits for the distance code,\n\t      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n\t      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n\t      checking for available input while decoding.\n\t\n\t    - The maximum bytes that a single length/distance pair can output is 258\n\t      bytes, which is the maximum length that can be coded.  inflate_fast()\n\t      requires strm.avail_out >= 258 for each loop to avoid checking for\n\t      output space.\n\t */module.exports=function inflate_fast(strm,start){var state;var _in;/* local strm.input */var last;/* have enough input while in < last */var _out;/* local strm.output */var beg;/* inflate()'s initial strm.output */var end;/* while out < end, enough space available */ //#ifdef INFLATE_STRICT\nvar dmax;/* maximum distance from zlib header */ //#endif\nvar wsize;/* window size or zero if not using window */var whave;/* valid bytes in the window */var wnext;/* window write index */ // Use `s_window` instead `window`, avoid conflict with instrumentation tools\nvar s_window;/* allocated sliding window, if wsize != 0 */var hold;/* local strm.hold */var bits;/* local strm.bits */var lcode;/* local strm.lencode */var dcode;/* local strm.distcode */var lmask;/* mask for first level of length codes */var dmask;/* mask for first level of distance codes */var here;/* retrieved table entry */var op;/* code bits, operation, extra bits, or */ /*  window position, window bytes to copy */var len;/* match length, unused bytes */var dist;/* match distance */var from;/* where to copy match from */var from_source;var input,output;// JS specific, because we have no pointers\n/* copy state to local variables */state=strm.state;//here = state.here;\n_in=strm.next_in;input=strm.input;last=_in+(strm.avail_in-5);_out=strm.next_out;output=strm.output;beg=_out-(start-strm.avail_out);end=_out+(strm.avail_out-257);//#ifdef INFLATE_STRICT\ndmax=state.dmax;//#endif\nwsize=state.wsize;whave=state.whave;wnext=state.wnext;s_window=state.window;hold=state.hold;bits=state.bits;lcode=state.lencode;dcode=state.distcode;lmask=(1<<state.lenbits)-1;dmask=(1<<state.distbits)-1;/* decode literals and length/distances until end-of-block or not enough\n\t     input data or output space */top:do{if(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=lcode[hold&lmask];dolen:for(;;){// Goto emulation\nop=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op===0){/* literal */ //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n//        \"inflate:         literal '%c'\\n\" :\n//        \"inflate:         literal 0x%02x\\n\", here.val));\noutput[_out++]=here&0xffff/*here.val*/;}else if(op&16){/* length base */len=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(op){if(bits<op){hold+=input[_in++]<<bits;bits+=8;}len+=hold&(1<<op)-1;hold>>>=op;bits-=op;}//Tracevv((stderr, \"inflate:         length %u\\n\", len));\nif(bits<15){hold+=input[_in++]<<bits;bits+=8;hold+=input[_in++]<<bits;bits+=8;}here=dcode[hold&dmask];dodist:for(;;){// goto emulation\nop=here>>>24/*here.bits*/;hold>>>=op;bits-=op;op=here>>>16&0xff/*here.op*/;if(op&16){/* distance base */dist=here&0xffff/*here.val*/;op&=15;/* number of extra bits */if(bits<op){hold+=input[_in++]<<bits;bits+=8;if(bits<op){hold+=input[_in++]<<bits;bits+=8;}}dist+=hold&(1<<op)-1;//#ifdef INFLATE_STRICT\nif(dist>dmax){strm.msg='invalid distance too far back';state.mode=BAD;break top;}//#endif\nhold>>>=op;bits-=op;//Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\nop=_out-beg;/* max distance in output */if(dist>op){/* see if copy from window */op=dist-op;/* distance back in window */if(op>whave){if(state.sane){strm.msg='invalid distance too far back';state.mode=BAD;break top;}// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n}from=0;// window index\nfrom_source=s_window;if(wnext===0){/* very common case */from+=wsize-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}else if(wnext<op){/* wrap around window */from+=wsize+wnext-op;op-=wnext;if(op<len){/* some from end of window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=0;if(wnext<len){/* some from start of window */op=wnext;len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}}else{/* contiguous in window */from+=wnext-op;if(op<len){/* some from window */len-=op;do{output[_out++]=s_window[from++];}while(--op);from=_out-dist;/* rest from output */from_source=output;}}while(len>2){output[_out++]=from_source[from++];output[_out++]=from_source[from++];output[_out++]=from_source[from++];len-=3;}if(len){output[_out++]=from_source[from++];if(len>1){output[_out++]=from_source[from++];}}}else{from=_out-dist;/* copy direct from output */do{/* minimum length is three */output[_out++]=output[from++];output[_out++]=output[from++];output[_out++]=output[from++];len-=3;}while(len>2);if(len){output[_out++]=output[from++];if(len>1){output[_out++]=output[from++];}}}}else if((op&64)===0){/* 2nd level distance code */here=dcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dodist;}else{strm.msg='invalid distance code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n}}else if((op&64)===0){/* 2nd level length code */here=lcode[(here&0xffff)+(/*here.val*/hold&(1<<op)-1)];continue dolen;}else if(op&32){/* end-of-block */ //Tracevv((stderr, \"inflate:         end of block\\n\"));\nstate.mode=TYPE;break top;}else{strm.msg='invalid literal/length code';state.mode=BAD;break top;}break;// need to emulate goto via \"continue\"\n}}while(_in<last&&_out<end);/* return unused bytes (on entry, bits < 8, so in won't go too far back) */len=bits>>3;_in-=len;bits-=len<<3;hold&=(1<<bits)-1;/* update state and return */strm.next_in=_in;strm.next_out=_out;strm.avail_in=_in<last?5+(last-_in):5-(_in-last);strm.avail_out=_out<end?257+(end-_out):257-(_out-end);state.hold=hold;state.bits=bits;return;};/***/},/* 37 */ /***/function(module,exports,__webpack_require__){'use strict';var utils=__webpack_require__(33);var MAXBITS=15;var ENOUGH_LENS=852;var ENOUGH_DISTS=592;//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\nvar CODES=0;var LENS=1;var DISTS=2;var lbase=[/* Length codes 257..285 base */3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var lext=[/* Length codes 257..285 extra */16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var dbase=[/* Distance codes 0..29 base */1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var dext=[/* Distance codes 0..29 extra */16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];module.exports=function inflate_table(type,lens,lens_index,codes,table,table_index,work,opts){var bits=opts.bits;//here = opts.here; /* table entry for duplication */\nvar len=0;/* a code's length in bits */var sym=0;/* index of code symbols */var min=0,max=0;/* minimum and maximum code lengths */var root=0;/* number of index bits for root table */var curr=0;/* number of index bits for current table */var drop=0;/* code bits to drop for sub-table */var left=0;/* number of prefix codes available */var used=0;/* code entries in table used */var huff=0;/* Huffman code */var incr;/* for incrementing code, index */var fill;/* index for replicating entries */var low;/* low bits for current root entry */var mask;/* mask for low root bits */var next;/* next available space in table */var base=null;/* base value table to use */var base_index=0;//  var shoextra;    /* extra bits table to use */\nvar end;/* use base and extra for symbol > end */var count=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];    /* number of codes of each length */\nvar offs=new utils.Buf16(MAXBITS+1);//[MAXBITS+1];     /* offsets in table for each length */\nvar extra=null;var extra_index=0;var here_bits,here_op,here_val;/*\n\t   Process a set of code lengths to create a canonical Huffman code.  The\n\t   code lengths are lens[0..codes-1].  Each length corresponds to the\n\t   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n\t   symbols by length from short to long, and retaining the symbol order\n\t   for codes with equal lengths.  Then the code starts with all zero bits\n\t   for the first code of the shortest length, and the codes are integer\n\t   increments for the same length, and zeros are appended as the length\n\t   increases.  For the deflate format, these bits are stored backwards\n\t   from their more natural integer increment ordering, and so when the\n\t   decoding tables are built in the large loop below, the integer codes\n\t   are incremented backwards.\n\t\n\t   This routine assumes, but does not check, that all of the entries in\n\t   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n\t   1..MAXBITS is interpreted as that code length.  zero means that that\n\t   symbol does not occur in this code.\n\t\n\t   The codes are sorted by computing a count of codes for each length,\n\t   creating from that a table of starting indices for each length in the\n\t   sorted table, and then entering the symbols in order in the sorted\n\t   table.  The sorted table is work[], with that space being provided by\n\t   the caller.\n\t\n\t   The length counts are used for other purposes as well, i.e. finding\n\t   the minimum and maximum length codes, determining if there are any\n\t   codes at all, checking for a valid set of lengths, and looking ahead\n\t   at length counts to determine sub-table sizes when building the\n\t   decoding tables.\n\t   */ /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */for(len=0;len<=MAXBITS;len++){count[len]=0;}for(sym=0;sym<codes;sym++){count[lens[lens_index+sym]]++;}/* bound code lengths, force root to be within code lengths */root=bits;for(max=MAXBITS;max>=1;max--){if(count[max]!==0){break;}}if(root>max){root=max;}if(max===0){/* no symbols to code at all */ //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n//table.val[opts.table_index++] = 0;   //here.val = (var short)0;\ntable[table_index++]=1<<24|64<<16|0;//table.op[opts.table_index] = 64;\n//table.bits[opts.table_index] = 1;\n//table.val[opts.table_index++] = 0;\ntable[table_index++]=1<<24|64<<16|0;opts.bits=1;return 0;/* no symbols, but wait for decoding to report error */}for(min=1;min<max;min++){if(count[min]!==0){break;}}if(root<min){root=min;}/* check for an over-subscribed or incomplete set of lengths */left=1;for(len=1;len<=MAXBITS;len++){left<<=1;left-=count[len];if(left<0){return-1;}/* over-subscribed */}if(left>0&&(type===CODES||max!==1)){return-1;/* incomplete set */}/* generate offsets into symbol table for each length for sorting */offs[1]=0;for(len=1;len<MAXBITS;len++){offs[len+1]=offs[len]+count[len];}/* sort symbols by length, by symbol order within each length */for(sym=0;sym<codes;sym++){if(lens[lens_index+sym]!==0){work[offs[lens[lens_index+sym]]++]=sym;}}/*\n\t   Create and fill in decoding tables.  In this loop, the table being\n\t   filled is at next and has curr index bits.  The code being used is huff\n\t   with length len.  That code is converted to an index by dropping drop\n\t   bits off of the bottom.  For codes where len is less than drop + curr,\n\t   those top drop + curr - len bits are incremented through all values to\n\t   fill the table with replicated entries.\n\t\n\t   root is the number of index bits for the root table.  When len exceeds\n\t   root, sub-tables are created pointed to by the root entry with an index\n\t   of the low root bits of huff.  This is saved in low to check for when a\n\t   new sub-table should be started.  drop is zero when the root table is\n\t   being filled, and drop is root when sub-tables are being filled.\n\t\n\t   When a new sub-table is needed, it is necessary to look ahead in the\n\t   code lengths to determine what size sub-table is needed.  The length\n\t   counts are used for this, and so count[] is decremented as codes are\n\t   entered in the tables.\n\t\n\t   used keeps track of how many table entries have been allocated from the\n\t   provided *table space.  It is checked for LENS and DIST tables against\n\t   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n\t   the initial root table size constants.  See the comments in inftrees.h\n\t   for more information.\n\t\n\t   sym increments through all symbols, and the loop terminates when\n\t   all codes of length max, i.e. all codes, have been processed.  This\n\t   routine permits incomplete codes, so another loop after this one fills\n\t   in the rest of the decoding tables with invalid code markers.\n\t   */ /* set up for code type */ // poor man optimization - use if-else instead of switch,\n// to avoid deopts in old v8\nif(type===CODES){base=extra=work;/* dummy value--not used */end=19;}else if(type===LENS){base=lbase;base_index-=257;extra=lext;extra_index-=257;end=256;}else{/* DISTS */base=dbase;extra=dext;end=-1;}/* initialize opts for loop */huff=0;/* starting code */sym=0;/* starting code symbol */len=min;/* starting code length */next=table_index;/* current table to fill in */curr=root;/* current table index bits */drop=0;/* current bits to drop from code for index */low=-1;/* trigger new sub-table when len > root */used=1<<root;/* use root table entries */mask=used-1;/* mask for comparing low */ /* check available table space */if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* process all codes and make table entries */for(;;){/* create table entry */here_bits=len-drop;if(work[sym]<end){here_op=0;here_val=work[sym];}else if(work[sym]>end){here_op=extra[extra_index+work[sym]];here_val=base[base_index+work[sym]];}else{here_op=32+64;/* end of block */here_val=0;}/* replicate for those indices with low len bits equal to huff */incr=1<<len-drop;fill=1<<curr;min=fill;/* save offset to next table */do{fill-=incr;table[next+(huff>>drop)+fill]=here_bits<<24|here_op<<16|here_val|0;}while(fill!==0);/* backwards increment the len-bit code huff */incr=1<<len-1;while(huff&incr){incr>>=1;}if(incr!==0){huff&=incr-1;huff+=incr;}else{huff=0;}/* go to next symbol, update count, len */sym++;if(--count[len]===0){if(len===max){break;}len=lens[lens_index+work[sym]];}/* create new sub-table if needed */if(len>root&&(huff&mask)!==low){/* if first time, transition to sub-tables */if(drop===0){drop=root;}/* increment past last table */next+=min;/* here min is 1 << curr */ /* determine length of next table */curr=len-drop;left=1<<curr;while(curr+drop<max){left-=count[curr+drop];if(left<=0){break;}curr++;left<<=1;}/* check for enough space */used+=1<<curr;if(type===LENS&&used>ENOUGH_LENS||type===DISTS&&used>ENOUGH_DISTS){return 1;}/* point entry in root table to sub-table */low=huff&mask;/*table.op[low] = curr;\n\t      table.bits[low] = root;\n\t      table.val[low] = next - opts.table_index;*/table[low]=root<<24|curr<<16|next-table_index|0;}}/* fill in remaining table entry if code is incomplete (guaranteed to have\n\t   at most one remaining entry, since if the code is incomplete, the\n\t   maximum code length that was allowed to get this far is one bit) */if(huff!==0){//table.op[next + huff] = 64;            /* invalid code marker */\n//table.bits[next + huff] = len - drop;\n//table.val[next + huff] = 0;\ntable[next+huff]=len-drop<<24|64<<16|0;}/* set return parameters */ //opts.table_index += used;\nopts.bits=root;return 0;};/***/},/* 38 */ /***/function(module,exports,__webpack_require__){// String encode/decode helpers\n'use strict';var utils=__webpack_require__(33);// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safary\n//\nvar STR_APPLY_OK=true;var STR_APPLY_UIA_OK=true;try{String.fromCharCode.apply(null,[0]);}catch(__){STR_APPLY_OK=false;}try{String.fromCharCode.apply(null,new Uint8Array(1));}catch(__){STR_APPLY_UIA_OK=false;}// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len=new utils.Buf8(256);for(var q=0;q<256;q++){_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;}_utf8len[254]=_utf8len[254]=1;// Invalid sequence start\n// convert string to array (typed, when possible)\nexports.string2buf=function(str){var buf,c,c2,m_pos,i,str_len=str.length,buf_len=0;// count binary size\nfor(m_pos=0;m_pos<str_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}buf_len+=c<0x80?1:c<0x800?2:c<0x10000?3:4;}// allocate buffer\nbuf=new utils.Buf8(buf_len);// convert\nfor(i=0,m_pos=0;i<buf_len;m_pos++){c=str.charCodeAt(m_pos);if((c&0xfc00)===0xd800&&m_pos+1<str_len){c2=str.charCodeAt(m_pos+1);if((c2&0xfc00)===0xdc00){c=0x10000+(c-0xd800<<10)+(c2-0xdc00);m_pos++;}}if(c<0x80){/* one byte */buf[i++]=c;}else if(c<0x800){/* two bytes */buf[i++]=0xC0|c>>>6;buf[i++]=0x80|c&0x3f;}else if(c<0x10000){/* three bytes */buf[i++]=0xE0|c>>>12;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}else{/* four bytes */buf[i++]=0xf0|c>>>18;buf[i++]=0x80|c>>>12&0x3f;buf[i++]=0x80|c>>>6&0x3f;buf[i++]=0x80|c&0x3f;}}return buf;};// Helper (used in 2 places)\nfunction buf2binstring(buf,len){// use fallback for big arrays to avoid stack overflow\nif(len<65537){if(buf.subarray&&STR_APPLY_UIA_OK||!buf.subarray&&STR_APPLY_OK){return String.fromCharCode.apply(null,utils.shrinkBuf(buf,len));}}var result='';for(var i=0;i<len;i++){result+=String.fromCharCode(buf[i]);}return result;}// Convert byte array to binary string\nexports.buf2binstring=function(buf){return buf2binstring(buf,buf.length);};// Convert binary string (typed, when possible)\nexports.binstring2buf=function(str){var buf=new utils.Buf8(str.length);for(var i=0,len=buf.length;i<len;i++){buf[i]=str.charCodeAt(i);}return buf;};// convert array to string\nexports.buf2string=function(buf,max){var i,out,c,c_len;var len=max||buf.length;// Reserve max possible length (2 words per char)\n// NB: by unknown reasons, Array is significantly faster for\n//     String.fromCharCode.apply than Uint16Array.\nvar utf16buf=new Array(len*2);for(out=0,i=0;i<len;){c=buf[i++];// quick process ascii\nif(c<0x80){utf16buf[out++]=c;continue;}c_len=_utf8len[c];// skip 5 & 6 byte codes\nif(c_len>4){utf16buf[out++]=0xfffd;i+=c_len-1;continue;}// apply mask on first byte\nc&=c_len===2?0x1f:c_len===3?0x0f:0x07;// join the rest\nwhile(c_len>1&&i<len){c=c<<6|buf[i++]&0x3f;c_len--;}// terminated by end of string?\nif(c_len>1){utf16buf[out++]=0xfffd;continue;}if(c<0x10000){utf16buf[out++]=c;}else{c-=0x10000;utf16buf[out++]=0xd800|c>>10&0x3ff;utf16buf[out++]=0xdc00|c&0x3ff;}}return buf2binstring(utf16buf,out);};// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border=function(buf,max){var pos;max=max||buf.length;if(max>buf.length){max=buf.length;}// go back from last position, until start of sequence found\npos=max-1;while(pos>=0&&(buf[pos]&0xC0)===0x80){pos--;}// Fuckup - very small and broken sequence,\n// return max, because we should return something anyway.\nif(pos<0){return max;}// If we came to start of buffer - that means vuffer is too small,\n// return max too.\nif(pos===0){return max;}return pos+_utf8len[buf[pos]]>max?pos:max;};/***/},/* 39 */ /***/function(module,exports){'use strict';module.exports={/* Allowed flush values; see deflate() and inflate() below for details */Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,/* Return codes for the compression/decompression functions. Negative values\n\t  * are errors, positive values are used for special but normal events.\n\t  */Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,//Z_MEM_ERROR:     -4,\nZ_BUF_ERROR:-5,//Z_VERSION_ERROR: -6,\n/* compression levels */Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,/* Possible values of the data_type field (though see inflate()) */Z_BINARY:0,Z_TEXT:1,//Z_ASCII:                1, // = Z_TEXT (deprecated)\nZ_UNKNOWN:2,/* The deflate compression method */Z_DEFLATED:8//Z_NULL:                 null // Use -1 or null inline, depending on var type\n};/***/},/* 40 */ /***/function(module,exports){'use strict';module.exports={2:'need dictionary',/* Z_NEED_DICT       2  */1:'stream end',/* Z_STREAM_END      1  */0:'',/* Z_OK              0  */'-1':'file error',/* Z_ERRNO         (-1) */'-2':'stream error',/* Z_STREAM_ERROR  (-2) */'-3':'data error',/* Z_DATA_ERROR    (-3) */'-4':'insufficient memory',/* Z_MEM_ERROR     (-4) */'-5':'buffer error',/* Z_BUF_ERROR     (-5) */'-6':'incompatible version'/* Z_VERSION_ERROR (-6) */};/***/},/* 41 */ /***/function(module,exports){'use strict';function ZStream(){/* next input byte */this.input=null;// JS specific, because we have no pointers\nthis.next_in=0;/* number of bytes available at input */this.avail_in=0;/* total number of input bytes read so far */this.total_in=0;/* next output byte should be put there */this.output=null;// JS specific, because we have no pointers\nthis.next_out=0;/* remaining free space at output */this.avail_out=0;/* total number of bytes output so far */this.total_out=0;/* last error message, NULL if no error */this.msg=''/*Z_NULL*/;/* not visible by applications */this.state=null;/* best guess about the data type: binary or text */this.data_type=2/*Z_UNKNOWN*/;/* adler32 value of the uncompressed data */this.adler=0;}module.exports=ZStream;/***/},/* 42 */ /***/function(module,exports){'use strict';function GZheader(){/* true if compressed data believed to be text */this.text=0;/* modification time */this.time=0;/* extra flags (not used when writing a gzip file) */this.xflags=0;/* operating system */this.os=0;/* pointer to extra field or Z_NULL if none */this.extra=null;/* extra field length (valid if extra != Z_NULL) */this.extra_len=0;// Actually, we don't need it in JS,\n// but leave for few code modifications\n//\n// Setup limits is not necessary because in js we should not preallocate memory\n// for inflate use constant limit in 65536 bytes\n//\n/* space at extra (only when reading header) */ // this.extra_max  = 0;\n/* pointer to zero-terminated file name or Z_NULL */this.name='';/* space at name (only when reading header) */ // this.name_max   = 0;\n/* pointer to zero-terminated comment or Z_NULL */this.comment='';/* space at comment (only when reading header) */ // this.comm_max   = 0;\n/* true if there was or will be a header crc */this.hcrc=0;/* true when done reading gzip header (not used when writing a gzip file) */this.done=false;}module.exports=GZheader;/***/}/******/]));});;\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/browserfs.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/browserfs.min.js":
/*!******************************************************!*\
  !*** ./node_modules/browserfs/dist/browserfs.min.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate, module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n!function (t, e) {\n  \"object\" == ( false ? undefined : _typeof(exports)) && \"object\" == ( false ? undefined : _typeof(module)) ? module.exports = e() :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  return function (t) {\n    function e(r) {\n      if (n[r]) return n[r].exports;\n      var i = n[r] = {\n        exports: {},\n        id: r,\n        loaded: !1\n      };\n      return t[r].call(i.exports, i, i.exports, e), i.loaded = !0, i.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.p = \"\", e(0);\n  }([function (t, e, n) {\n    (function (t, r, i, o) {\n      \"use strict\";\n\n      function s(t) {\n        if (t) return t;\n        throw new Fe(be.EIO, \"Initialize BrowserFS with a file system using BrowserFS.initialize(filesystem)\");\n      }\n\n      function a(t, e) {\n        switch (_typeof(t)) {\n          case \"number\":\n            return t;\n\n          case \"string\":\n            var n = parseInt(t, 8);\n            return isNaN(n) ? e : n;\n\n          default:\n            return e;\n        }\n      }\n\n      function c(t) {\n        if (t instanceof Date) return t;\n        if (\"number\" == typeof t) return new Date(1e3 * t);\n        throw new Fe(be.EINVAL, \"Invalid time.\");\n      }\n\n      function u(t) {\n        if (t.indexOf(\"\\0\") >= 0) throw new Fe(be.EINVAL, \"Path must be a string without null bytes.\");\n        if (\"\" === t) throw new Fe(be.EINVAL, \"Path must not be empty.\");\n        return ke.resolve(t);\n      }\n\n      function f(t, e, n, r) {\n        switch (_typeof(t)) {\n          case \"object\":\n            return {\n              encoding: \"undefined\" != typeof t.encoding ? t.encoding : e,\n              flag: \"undefined\" != typeof t.flag ? t.flag : n,\n              mode: a(t.mode, r)\n            };\n\n          case \"string\":\n            return {\n              encoding: t,\n              flag: n,\n              mode: r\n            };\n\n          default:\n            return {\n              encoding: e,\n              flag: n,\n              mode: r\n            };\n        }\n      }\n\n      function h() {}\n\n      function p(t, e, n, r, i) {\n        return t < e || n < e ? t > n ? n + 1 : t + 1 : r === i ? e : e + 1;\n      }\n\n      function l(t, e) {\n        if (t === e) return 0;\n\n        if (t.length > e.length) {\n          var n = t;\n          t = e, e = n;\n        }\n\n        for (var r = t.length, i = e.length; r > 0 && t.charCodeAt(r - 1) === e.charCodeAt(i - 1);) {\n          r--, i--;\n        }\n\n        for (var o = 0; o < r && t.charCodeAt(o) === e.charCodeAt(o);) {\n          o++;\n        }\n\n        if (r -= o, i -= o, 0 === r || 1 === i) return i;\n\n        for (var s = new Array(r << 1), a = 0; a < r;) {\n          s[r + a] = t.charCodeAt(o + a), s[a] = ++a;\n        }\n\n        var c, u, f, h, l;\n\n        for (c = 0; c + 3 < i;) {\n          for (var d = e.charCodeAt(o + (u = c)), y = e.charCodeAt(o + (f = c + 1)), g = e.charCodeAt(o + (h = c + 2)), v = e.charCodeAt(o + (l = c + 3)), m = c += 4, _ = 0; _ < r;) {\n            var w = s[r + _],\n                E = s[_];\n            u = p(E, u, f, d, w), f = p(u, f, h, y, w), h = p(f, h, l, g, w), m = p(h, l, m, v, w), s[_++] = m, l = h, h = f, f = u, u = E;\n          }\n        }\n\n        for (var b = 0; c < i;) {\n          var S = e.charCodeAt(o + (u = c));\n          b = ++c;\n\n          for (var k = 0; k < r; k++) {\n            var I = s[k];\n            s[k] = b = I < u || b < u ? I > b ? b + 1 : I + 1 : S === s[r + k] ? u : u + 1, u = I;\n          }\n        }\n\n        return b;\n      }\n\n      function d(t, e, n) {\n        t && console.warn(\"[\" + e + \"] Direct file system constructor usage is deprecated for this file system, and will be removed in the next major version. Please use the '\" + e + \".Create(\" + JSON.stringify(n) + \", callback)' method instead. See https://github.com/jvilk/BrowserFS/issues/176 for more details.\");\n      }\n\n      function y() {\n        throw new Error(\"BFS has reached an impossible code path; please file a bug.\");\n      }\n\n      function g(t, e, n) {\n        n.existsSync(t) || (g(ke.dirname(t), e, n), n.mkdirSync(t, e));\n      }\n\n      function v(t) {\n        var e = m(t),\n            n = e.byteOffset,\n            r = e.byteLength;\n        return 0 === n && r === e.buffer.byteLength ? e.buffer : e.buffer.slice(n, n + r);\n      }\n\n      function m(t) {\n        return t instanceof Uint8Array ? t : new Uint8Array(t);\n      }\n\n      function _(e) {\n        return e instanceof t ? e : e instanceof Uint8Array ? w(e) : t.from(e);\n      }\n\n      function w(e) {\n        return e instanceof t ? e : 0 === e.byteOffset && e.byteLength === e.buffer.byteLength ? E(e.buffer) : t.from(e.buffer, e.byteOffset, e.byteLength);\n      }\n\n      function E(e) {\n        return t.from(e);\n      }\n\n      function b(t, e, n) {\n        if (void 0 === e && (e = 0), void 0 === n && (n = t.length), e < 0 || n < 0 || n > t.length || e > n) throw new TypeError(\"Invalid slice bounds on buffer of length \" + t.length + \": [\" + e + \", \" + n + \"]\");\n        if (0 === t.length) return S();\n        var r = m(t),\n            i = t[0],\n            o = (i + 1) % 255;\n        return t[0] = o, r[0] === o ? (r[0] = i, w(r.slice(e, n))) : (t[0] = i, w(r.subarray(e, n)));\n      }\n\n      function S() {\n        return je ? je : je = t.alloc(0);\n      }\n\n      function k(e, n) {\n        t.isBuffer(e) ? n() : n(new Fe(be.EINVAL, \"option must be a Buffer.\"));\n      }\n\n      function I(t, e, n) {\n        function r(t) {\n          a || (t && (a = !0, n(t)), s--, 0 === s && c && n());\n        }\n\n        var i = t.Options,\n            o = t.Name,\n            s = 0,\n            a = !1,\n            c = !1,\n            u = function u(t) {\n          if (i.hasOwnProperty(t)) {\n            var c = i[t],\n                u = e[t];\n\n            if (void 0 === u || null === u) {\n              if (!c.optional) {\n                var f = Object.keys(e).filter(function (t) {\n                  return !(t in i);\n                }).map(function (e) {\n                  return {\n                    str: e,\n                    distance: l(t, e)\n                  };\n                }).filter(function (t) {\n                  return t.distance < 5;\n                }).sort(function (t, e) {\n                  return t.distance - e.distance;\n                });\n                return a ? {} : (a = !0, {\n                  v: n(new Fe(be.EINVAL, \"[\" + o + \"] Required option '\" + t + \"' not provided.\" + (f.length > 0 ? \" You provided unrecognized option '\" + f[0].str + \"'; perhaps you meant to type '\" + t + \"'.\" : \"\") + \"\\nOption description: \" + c.description))\n                });\n              }\n            } else {\n              var h = !1;\n              if (h = Array.isArray(c.type) ? c.type.indexOf(_typeof(u)) !== -1 : _typeof(u) === c.type, !h) return a ? {} : (a = !0, {\n                v: n(new Fe(be.EINVAL, \"[\" + o + \"] Value provided for option \" + t + \" is not the proper type. Expected \" + (Array.isArray(c.type) ? \"one of {\" + c.type.join(\", \") + \"}\" : c.type) + \", but received \" + _typeof(u) + \"\\nOption description: \" + c.description))\n              });\n              c.validator && (s++, c.validator(u, r));\n            }\n          }\n        };\n\n        for (var f in i) {\n          var h = u(f);\n          if (h) return h.v;\n        }\n\n        c = !0, 0 !== s || a || n();\n      }\n\n      function O(t, e, n) {\n        switch (n.length) {\n          case 0:\n            return t.call(e);\n\n          case 1:\n            return t.call(e, n[0]);\n\n          case 2:\n            return t.call(e, n[0], n[1]);\n\n          case 3:\n            return t.call(e, n[0], n[1], n[2]);\n        }\n\n        return t.apply(e, n);\n      }\n\n      function F(t, e, n) {\n        return e = Ge(void 0 === e ? t.length - 1 : e, 0), function () {\n          for (var r = arguments, i = -1, o = Ge(r.length - e, 0), s = Array(o); ++i < o;) {\n            s[i] = r[e + i];\n          }\n\n          i = -1;\n\n          for (var a = Array(e + 1); ++i < e;) {\n            a[i] = r[i];\n          }\n\n          return a[e] = n(s), O(t, this, a);\n        };\n      }\n\n      function N(t) {\n        return t;\n      }\n\n      function R(t, e) {\n        return F(t, e, N);\n      }\n\n      function L(t) {\n        return R(function (e, n) {\n          var r = Qe(function (n, r) {\n            var i = this;\n            return t(e, function (t, e) {\n              t.apply(i, n.concat(e));\n            }, r);\n          });\n          return n.length ? r.apply(this, n) : r;\n        });\n      }\n\n      function T(t) {\n        var e = on.call(t, an),\n            n = t[an];\n\n        try {\n          t[an] = void 0;\n          var r = !0;\n        } catch (t) {}\n\n        var i = sn.call(t);\n        return r && (e ? t[an] = n : delete t[an]), i;\n      }\n\n      function x(t) {\n        return un.call(t);\n      }\n\n      function A(t) {\n        return null == t ? void 0 === t ? hn : fn : pn && pn in Object(t) ? T(t) : x(t);\n      }\n\n      function D(t) {\n        var e = _typeof(t);\n\n        return null != t && (\"object\" == e || \"function\" == e);\n      }\n\n      function P(t) {\n        if (!D(t)) return !1;\n        var e = A(t);\n        return e == dn || e == yn || e == ln || e == gn;\n      }\n\n      function C(t) {\n        return \"number\" == typeof t && t > -1 && t % 1 == 0 && t <= vn;\n      }\n\n      function U(t) {\n        return null != t && C(t.length) && !P(t);\n      }\n\n      function M() {}\n\n      function j(t) {\n        return function () {\n          if (null !== t) {\n            var e = t;\n            t = null, e.apply(this, arguments);\n          }\n        };\n      }\n\n      function B(t, e) {\n        for (var n = -1, r = Array(t); ++n < t;) {\n          r[n] = e(n);\n        }\n\n        return r;\n      }\n\n      function z(t) {\n        return null != t && \"object\" == _typeof(t);\n      }\n\n      function q(t) {\n        return z(t) && A(t) == En;\n      }\n\n      function V() {\n        return !1;\n      }\n\n      function W(t, e) {\n        return e = null == e ? An : e, !!e && (\"number\" == typeof t || Dn.test(t)) && t > -1 && t % 1 == 0 && t < e;\n      }\n\n      function H(t) {\n        return z(t) && C(t.length) && !!or[A(t)];\n      }\n\n      function Z(t) {\n        return function (e) {\n          return t(e);\n        };\n      }\n\n      function Y(t, e) {\n        var n = On(t),\n            r = !n && In(t),\n            i = !n && !r && xn(t),\n            o = !n && !r && !i && pr(t),\n            s = n || r || i || o,\n            a = s ? B(t.length, String) : [],\n            c = a.length;\n\n        for (var u in t) {\n          !e && !dr.call(t, u) || s && (\"length\" == u || i && (\"offset\" == u || \"parent\" == u) || o && (\"buffer\" == u || \"byteLength\" == u || \"byteOffset\" == u) || W(u, c)) || a.push(u);\n        }\n\n        return a;\n      }\n\n      function X(t) {\n        var e = t && t.constructor,\n            n = \"function\" == typeof e && e.prototype || yr;\n        return t === n;\n      }\n\n      function K(t, e) {\n        return function (n) {\n          return t(e(n));\n        };\n      }\n\n      function J(t) {\n        if (!X(t)) return gr(t);\n        var e = [];\n\n        for (var n in Object(t)) {\n          mr.call(t, n) && \"constructor\" != n && e.push(n);\n        }\n\n        return e;\n      }\n\n      function G(t) {\n        return U(t) ? Y(t) : J(t);\n      }\n\n      function Q(t) {\n        var e = -1,\n            n = t.length;\n        return function () {\n          return ++e < n ? {\n            value: t[e],\n            key: e\n          } : null;\n        };\n      }\n\n      function $(t) {\n        var e = -1;\n        return function () {\n          var n = t.next();\n          return n.done ? null : (e++, {\n            value: n.value,\n            key: e\n          });\n        };\n      }\n\n      function tt(t) {\n        var e = G(t),\n            n = -1,\n            r = e.length;\n        return function () {\n          var i = e[++n];\n          return n < r ? {\n            value: t[i],\n            key: i\n          } : null;\n        };\n      }\n\n      function et(t) {\n        if (U(t)) return Q(t);\n        var e = wn(t);\n        return e ? $(e) : tt(t);\n      }\n\n      function nt(t) {\n        return function () {\n          if (null === t) throw new Error(\"Callback was already called.\");\n          var e = t;\n          t = null, e.apply(this, arguments);\n        };\n      }\n\n      function rt(t) {\n        return function (e, n, r) {\n          function i(t, e) {\n            if (c -= 1, t) a = !0, r(t);else {\n              if (e === mn || a && c <= 0) return a = !0, r(null);\n              o();\n            }\n          }\n\n          function o() {\n            for (; c < t && !a;) {\n              var e = s();\n              if (null === e) return a = !0, void (c <= 0 && r(null));\n              c += 1, n(e.value, e.key, nt(i));\n            }\n          }\n\n          if (r = j(r || M), t <= 0 || !e) return r(null);\n          var s = et(e),\n              a = !1,\n              c = 0;\n          o();\n        };\n      }\n\n      function it(t, e, n, r) {\n        rt(e)(t, n, r);\n      }\n\n      function ot(t, e) {\n        return function (n, r, i) {\n          return t(n, e, r, i);\n        };\n      }\n\n      function st(t, e, n) {\n        function r(t, e) {\n          t ? n(t) : ++o !== s && e !== mn || n(null);\n        }\n\n        n = j(n || M);\n        var i = 0,\n            o = 0,\n            s = t.length;\n\n        for (0 === s && n(null); i < s; i++) {\n          e(t[i], i, nt(r));\n        }\n      }\n\n      function at(t) {\n        return function (e, n, r) {\n          return t(wr, e, n, r);\n        };\n      }\n\n      function ct(t, e, n, r) {\n        r = r || M, e = e || [];\n        var i = [],\n            o = 0;\n        t(e, function (t, e, r) {\n          var s = o++;\n          n(t, function (t, e) {\n            i[s] = e, r(t);\n          });\n        }, function (t) {\n          r(t, i);\n        });\n      }\n\n      function ut(t) {\n        return function (e, n, r, i) {\n          return t(rt(n), e, r, i);\n        };\n      }\n\n      function ft(t, e) {\n        for (var n = -1, r = null == t ? 0 : t.length; ++n < r && e(t[n], n, t) !== !1;) {\n          ;\n        }\n\n        return t;\n      }\n\n      function ht(t) {\n        return function (e, n, r) {\n          for (var i = -1, o = Object(e), s = r(e), a = s.length; a--;) {\n            var c = s[t ? a : ++i];\n            if (n(o[c], c, o) === !1) break;\n          }\n\n          return e;\n        };\n      }\n\n      function pt(t) {\n        setTimeout(t, 0);\n      }\n\n      function lt(t) {\n        return R(function (e, n) {\n          t(function () {\n            e.apply(null, n);\n          });\n        });\n      }\n\n      function dt(t, e, n, r) {\n        r = j(r || M), Vr(t, function (t, r, i) {\n          n(e, t, function (t, n) {\n            e = n, i(t);\n          });\n        }, function (t) {\n          r(t, e);\n        });\n      }\n\n      function yt(t) {\n        return R(function (e, n) {\n          e.apply(null, n.concat(R(function (e, n) {\n            \"object\" == (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) && (e ? console.error && console.error(e) : console[t] && ft(n, function (e) {\n              console[t](e);\n            }));\n          })));\n        });\n      }\n\n      function gt(t) {\n        return function (e, n, r) {\n          return t(e, r);\n        };\n      }\n\n      function vt(t, e, n) {\n        wr(t, gt(e), n);\n      }\n\n      function mt() {\n        Zr || (Zr = {}, Zr[Dropbox.ApiError.NETWORK_ERROR] = be.EIO, Zr[Dropbox.ApiError.INVALID_PARAM] = be.EINVAL, Zr[Dropbox.ApiError.INVALID_TOKEN] = be.EPERM, Zr[Dropbox.ApiError.OAUTH_ERROR] = be.EPERM, Zr[Dropbox.ApiError.NOT_FOUND] = be.ENOENT, Zr[Dropbox.ApiError.INVALID_METHOD] = be.EINVAL, Zr[Dropbox.ApiError.NOT_ACCEPTABLE] = be.EINVAL, Zr[Dropbox.ApiError.CONFLICT] = be.EINVAL, Zr[Dropbox.ApiError.RATE_LIMITED] = be.EBUSY, Zr[Dropbox.ApiError.SERVER_ERROR] = be.EBUSY, Zr[Dropbox.ApiError.OVER_QUOTA] = be.ENOSPC);\n      }\n\n      function _t(t) {\n        return t && t.stat.isFile;\n      }\n\n      function wt(t) {\n        return t && t.stat.isFolder;\n      }\n\n      function Et(t) {\n        return null === t || void 0 === t || \"object\" == _typeof(t) && \"number\" == typeof t.byteLength;\n      }\n\n      function bt(t, e) {\n        void 0 === e && (e = \"\");\n\n        for (var n = t.errno, r = t.node, i = []; r && (i.unshift(r.name), r !== r.parent);) {\n          r = r.parent;\n        }\n\n        return new Fe(n, Ie[n], i.length > 0 ? \"/\" + i.join(\"/\") : e);\n      }\n\n      function St(t, e) {\n        if (null !== e && \"object\" == _typeof(e)) {\n          var n = e,\n              r = n.path;\n          r && (r = \"/\" + ke.relative(t, r), n.message = n.message.replace(n.path, r), n.path = r);\n        }\n\n        return e;\n      }\n\n      function kt(t, e) {\n        return \"function\" == typeof e ? function (n) {\n          arguments.length > 0 && (arguments[0] = St(t, n)), e.apply(null, arguments);\n        } : e;\n      }\n\n      function It(t, e, n) {\n        return \"Sync\" !== t.slice(t.length - 4) ? function () {\n          return arguments.length > 0 && (e && (arguments[0] = ke.join(this._folder, arguments[0])), n && (arguments[1] = ke.join(this._folder, arguments[1])), arguments[arguments.length - 1] = kt(this._folder, arguments[arguments.length - 1])), this._wrapped[t].apply(this._wrapped, arguments);\n        } : function () {\n          try {\n            return e && (arguments[0] = ke.join(this._folder, arguments[0])), n && (arguments[1] = ke.join(this._folder, arguments[1])), this._wrapped[t].apply(this._wrapped, arguments);\n          } catch (t) {\n            throw St(this._folder, t);\n          }\n        };\n      }\n\n      function Ot(t) {\n        return t.isDirectory;\n      }\n\n      function Ft(t, e, n, r) {\n        if (\"undefined\" != typeof navigator.webkitPersistentStorage) switch (t) {\n          case ti.PERSISTENT:\n            navigator.webkitPersistentStorage.requestQuota(e, n, r);\n            break;\n\n          case ti.TEMPORARY:\n            navigator.webkitTemporaryStorage.requestQuota(e, n, r);\n            break;\n\n          default:\n            r(new TypeError(\"Invalid storage type: \" + t));\n        } else ti.webkitStorageInfo.requestQuota(t, e, n, r);\n      }\n\n      function Nt(t) {\n        return Array.prototype.slice.call(t || [], 0);\n      }\n\n      function Rt(t, e, n) {\n        switch (t.name) {\n          case \"PathExistsError\":\n            return Fe.EEXIST(e);\n\n          case \"QuotaExceededError\":\n            return Fe.FileError(be.ENOSPC, e);\n\n          case \"NotFoundError\":\n            return Fe.ENOENT(e);\n\n          case \"SecurityError\":\n            return Fe.FileError(be.EACCES, e);\n\n          case \"InvalidModificationError\":\n            return Fe.FileError(be.EPERM, e);\n\n          case \"TypeMismatchError\":\n            return Fe.FileError(n ? be.ENOTDIR : be.EISDIR, e);\n\n          case \"EncodingError\":\n          case \"InvalidStateError\":\n          case \"NoModificationAllowedError\":\n          default:\n            return Fe.FileError(be.EINVAL, e);\n        }\n      }\n\n      function Lt() {\n        return si ? si : si = t.from(\"{}\");\n      }\n\n      function Tt() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (t) {\n          var e = 16 * Math.random() | 0,\n              n = \"x\" === t ? e : 3 & e | 8;\n          return n.toString(16);\n        });\n      }\n\n      function xt(t, e) {\n        return !t || (e(t), !1);\n      }\n\n      function At(t, e, n) {\n        return !t || (e.abort(function () {\n          n(t);\n        }), !1);\n      }\n\n      function Dt(t, e) {\n        switch (void 0 === e && (e = t.toString()), t.name) {\n          case \"NotFoundError\":\n            return new Fe(be.ENOENT, e);\n\n          case \"QuotaExceededError\":\n            return new Fe(be.ENOSPC, e);\n\n          default:\n            return new Fe(be.EIO, e);\n        }\n      }\n\n      function Pt(t, e, n) {\n        return void 0 === e && (e = be.EIO), void 0 === n && (n = null), function (r) {\n          r.preventDefault(), t(new Fe(e, null !== n ? n : void 0));\n        };\n      }\n\n      function Ct(t, e, n) {\n        return e ? function () {\n          for (var e = [], n = arguments.length; n--;) {\n            e[n] = arguments[n];\n          }\n\n          var r = e[0],\n              i = this._getFs(r);\n\n          e[0] = i.path;\n\n          try {\n            return i.fs[t].apply(i.fs, e);\n          } catch (t) {\n            throw this.standardizeError(t, i.path, r), t;\n          }\n        } : function () {\n          for (var e = this, n = [], r = arguments.length; r--;) {\n            n[r] = arguments[r];\n          }\n\n          var i = n[0],\n              o = this._getFs(i);\n\n          if (n[0] = o.path, \"function\" == typeof n[n.length - 1]) {\n            var s = n[n.length - 1];\n\n            n[n.length - 1] = function () {\n              for (var t = [], n = arguments.length; n--;) {\n                t[n] = arguments[n];\n              }\n\n              t.length > 0 && t[0] instanceof Fe && e.standardizeError(t[0], o.path, i), s.apply(null, t);\n            };\n          }\n\n          return o.fs[t].apply(o.fs, n);\n        };\n      }\n\n      function Ut(t) {\n        return 146 | t;\n      }\n\n      function Mt(t) {\n        return Re.getFileFlag(t);\n      }\n\n      function jt(t) {\n        return {\n          type: Wi.API_ERROR,\n          errorData: Yt(t.writeToBuffer())\n        };\n      }\n\n      function Bt(t) {\n        return Fe.fromBuffer(Xt(t.errorData));\n      }\n\n      function zt(t) {\n        return {\n          type: Wi.ERROR,\n          name: t.name,\n          message: t.message,\n          stack: t.stack\n        };\n      }\n\n      function qt(t) {\n        var e = ti[t.name];\n        \"function\" != typeof e && (e = Error);\n        var n = new e(t.message);\n        return n.stack = t.stack, n;\n      }\n\n      function Vt(t) {\n        return {\n          type: Wi.STATS,\n          statsData: Yt(t.toBuffer())\n        };\n      }\n\n      function Wt(t) {\n        return Te.fromBuffer(Xt(t.statsData));\n      }\n\n      function Ht(t) {\n        return {\n          type: Wi.FILEFLAG,\n          flagStr: t.getFlagString()\n        };\n      }\n\n      function Zt(t) {\n        return Re.getFileFlag(t.flagStr);\n      }\n\n      function Yt(t) {\n        return v(t);\n      }\n\n      function Xt(t) {\n        return E(t);\n      }\n\n      function Kt(t) {\n        return {\n          type: Wi.BUFFER,\n          data: Yt(t)\n        };\n      }\n\n      function Jt(t) {\n        return Xt(t.data);\n      }\n\n      function Gt(t) {\n        return t && \"object\" == _typeof(t) && t.hasOwnProperty(\"browserfsMessage\") && t.browserfsMessage;\n      }\n\n      function Qt(t) {\n        return t && \"object\" == _typeof(t) && t.hasOwnProperty(\"browserfsMessage\") && t.browserfsMessage;\n      }\n\n      function $t(e, n, r) {\n        var i = new XMLHttpRequest();\n        i.open(\"GET\", e, !0);\n        var o = !0;\n\n        switch (n) {\n          case \"buffer\":\n            i.responseType = \"arraybuffer\";\n            break;\n\n          case \"json\":\n            try {\n              i.responseType = \"json\", o = \"json\" === i.responseType;\n            } catch (t) {\n              o = !1;\n            }\n\n            break;\n\n          default:\n            return r(new Fe(be.EINVAL, \"Invalid download type: \" + n));\n        }\n\n        i.onreadystatechange = function (e) {\n          if (4 === i.readyState) {\n            if (200 !== i.status) return r(new Fe(i.status, \"XHR error.\"));\n\n            switch (n) {\n              case \"buffer\":\n                return r(null, i.response ? t.from(i.response) : S());\n\n              case \"json\":\n                return o ? r(null, i.response) : r(null, JSON.parse(i.responseText));\n            }\n          }\n        }, i.send();\n      }\n\n      function te(e, n) {\n        var r = new XMLHttpRequest();\n        r.open(\"GET\", e, !1);\n        var i = null,\n            o = null;\n        if (r.overrideMimeType(\"text/plain; charset=x-user-defined\"), r.onreadystatechange = function (e) {\n          if (4 === r.readyState) {\n            if (200 !== r.status) return void (o = new Fe(r.status, \"XHR error.\"));\n\n            switch (n) {\n              case \"buffer\":\n                var s = r.responseText;\n                i = t.alloc(s.length);\n\n                for (var a = 0; a < s.length; a++) {\n                  i[a] = s.charCodeAt(a);\n                }\n\n                return;\n\n              case \"json\":\n                return void (i = JSON.parse(r.responseText));\n            }\n          }\n        }, r.send(), o) throw o;\n        return i;\n      }\n\n      function ee(e, n) {\n        var r = new XMLHttpRequest();\n\n        switch (r.open(\"GET\", e, !1), n) {\n          case \"buffer\":\n            r.responseType = \"arraybuffer\";\n            break;\n\n          case \"json\":\n            break;\n\n          default:\n            throw new Fe(be.EINVAL, \"Invalid download type: \" + n);\n        }\n\n        var i, o;\n        if (r.onreadystatechange = function (e) {\n          if (4 === r.readyState) if (200 === r.status) switch (n) {\n            case \"buffer\":\n              i = t.from(r.response);\n              break;\n\n            case \"json\":\n              i = JSON.parse(r.response);\n          } else o = new Fe(r.status, \"XHR error.\");\n        }, r.send(), o) throw o;\n        return i;\n      }\n\n      function ne(t, e, n) {\n        var r = new XMLHttpRequest();\n        r.open(\"HEAD\", e, t), r.onreadystatechange = function (t) {\n          if (4 === r.readyState) {\n            if (200 !== r.status) return n(new Fe(r.status, \"XHR HEAD error.\"));\n\n            try {\n              return n(null, parseInt(r.getResponseHeader(\"Content-Length\") || \"-1\", 10));\n            } catch (t) {\n              return n(new Fe(be.EIO, \"XHR HEAD error: Could not read content-length.\"));\n            }\n          }\n        }, r.send();\n      }\n\n      function re(t) {\n        var e = -1;\n        return ne(!1, t, function (t, n) {\n          if (t) throw t;\n          e = n;\n        }), e;\n      }\n\n      function ie(t, e) {\n        ne(!0, t, e);\n      }\n\n      function oe(t) {\n        return !!t && t.isFile();\n      }\n\n      function se(t) {\n        return !!t && t.isDir();\n      }\n\n      function ae(t, e, n) {\n        try {\n          n(null, t.toString(e));\n        } catch (t) {\n          n(t);\n        }\n      }\n\n      function ce(t, e) {\n        var n = 31 & e,\n            r = (e >> 5 & 15) - 1,\n            i = (e >> 9) + 1980,\n            o = 31 & t,\n            s = t >> 5 & 63,\n            a = t >> 11;\n        return new Date(i, r, n, a, s, o);\n      }\n\n      function ue(t, e, n, r) {\n        return 0 === r ? \"\" : e ? t.toString(\"utf8\", n, n + r) : eo.byte2str(t.slice(n, n + r));\n      }\n\n      function fe(t, e, n) {\n        return t.toString(\"ascii\", e, e + n).trim();\n      }\n\n      function he(t, e, n) {\n        if (1 === n) return String.fromCharCode(t[e]);\n\n        for (var r = Math.floor(n / 2), i = new Array(r), o = 0; o < r; o++) {\n          var s = e + (o << 1);\n          i[o] = String.fromCharCode(t[s + 1] | t[s] << 8);\n        }\n\n        return i.join(\"\");\n      }\n\n      function pe(t, e) {\n        var n = parseInt(fe(t, e, 4), 10),\n            r = parseInt(fe(t, e + 4, 2), 10),\n            i = parseInt(fe(t, e + 6, 2), 10),\n            o = parseInt(fe(t, e + 8, 2), 10),\n            s = parseInt(fe(t, e + 10, 2), 10),\n            a = parseInt(fe(t, e + 12, 2), 10),\n            c = parseInt(fe(t, e + 14, 2), 10);\n        return new Date(n, r, i, o, s, a, 100 * c);\n      }\n\n      function le(t, e) {\n        var n = t[e],\n            r = t[e + 1],\n            i = t[e + 2],\n            o = t[e + 3],\n            s = t[e + 4],\n            a = t[e + 5];\n        return new Date(n, r - 1, i, o, s, a);\n      }\n\n      function de(t, e) {\n        var n = t.slice(e),\n            r = new ko(n);\n\n        switch (r.signatureWord()) {\n          case 17221:\n            return new Io(n);\n\n          case 20548:\n            return new Oo(n);\n\n          case 21328:\n            return new Fo(n);\n\n          case 21332:\n            return new No(n);\n\n          case 17746:\n            return new Ro(n);\n\n          case 17747:\n            return new Lo(n);\n\n          case 20568:\n            return new xo(n);\n\n          case 20558:\n            return new Ao(n);\n\n          case 21324:\n            return new Do(n);\n\n          case 20045:\n            return new Co(n);\n\n          case 17228:\n            return new Uo(n);\n\n          case 20556:\n            return new Mo(n);\n\n          case 21061:\n            return new jo(n);\n\n          case 21574:\n            return new Bo(n);\n\n          case 21318:\n            return new zo(n);\n\n          case 21074:\n            return new To(n);\n\n          default:\n            return r;\n        }\n      }\n\n      function ye(t, e, n, r) {\n        n -= 4;\n\n        for (var i = new Array(); e < n;) {\n          var o = de(t, e),\n              s = o.length();\n          if (0 === s) return i;\n          if (e += s, o instanceof No) break;\n          o instanceof Io ? i = i.concat(o.getEntries(r)) : i.push(o);\n        }\n\n        return i;\n      }\n\n      function ge(e) {\n        e.Buffer = t, e.process = o;\n        var n = e.require ? e.require : null;\n\n        e.require = function (t) {\n          var e = me(t);\n          return e ? e : n.apply(null, Array.prototype.slice.call(arguments, 0));\n        };\n      }\n\n      function ve(t, e) {\n        Zo[t] = e;\n      }\n\n      function me(t) {\n        switch (t) {\n          case \"fs\":\n            return Pe;\n\n          case \"path\":\n            return ke;\n\n          case \"buffer\":\n            return Se;\n\n          case \"process\":\n            return o;\n\n          case \"bfs_utils\":\n            return Be;\n\n          default:\n            return Zo[t];\n        }\n      }\n\n      function _e(t) {\n        return Pe.initialize(t);\n      }\n\n      function we(t, e) {\n        Ee(t, function (t, n) {\n          n ? (_e(n), e()) : e(t);\n        });\n      }\n\n      function Ee(t, e) {\n        function n() {\n          if (!s) {\n            s = !0;\n            var t = Zo[r];\n            t ? t.Create(i, e) : e(new Fe(be.EPERM, \"File system \" + r + \" is not available in BrowserFS.\"));\n          }\n        }\n\n        var r = t.fs;\n        if (!r) return e(new Fe(be.EPERM, 'Missing \"fs\" property on configuration object.'));\n        var i = t.options,\n            o = 0,\n            s = !1;\n\n        if (null !== i && \"object\" == _typeof(i)) {\n          var a = !1,\n              c = Object.keys(i).filter(function (t) {\n            return \"fs\" !== t;\n          });\n          c.forEach(function (t) {\n            var r = i[t];\n            null !== r && \"object\" == _typeof(r) && r.fs && (o++, Ee(r, function (r, c) {\n              if (o--, r) {\n                if (s) return;\n                s = !0, e(r);\n              } else i[t] = c, 0 === o && a && n();\n            }));\n          }), a = !0;\n        }\n\n        0 === o && n();\n      }\n\n      Object.defineProperty(e, \"__esModule\", {\n        value: !0\n      });\n      var be,\n          Se = n(1),\n          ke = n(14);\n      !function (t) {\n        t[t.EPERM = 1] = \"EPERM\", t[t.ENOENT = 2] = \"ENOENT\", t[t.EIO = 5] = \"EIO\", t[t.EBADF = 9] = \"EBADF\", t[t.EACCES = 13] = \"EACCES\", t[t.EBUSY = 16] = \"EBUSY\", t[t.EEXIST = 17] = \"EEXIST\", t[t.ENOTDIR = 20] = \"ENOTDIR\", t[t.EISDIR = 21] = \"EISDIR\", t[t.EINVAL = 22] = \"EINVAL\", t[t.EFBIG = 27] = \"EFBIG\", t[t.ENOSPC = 28] = \"ENOSPC\", t[t.EROFS = 30] = \"EROFS\", t[t.ENOTEMPTY = 39] = \"ENOTEMPTY\", t[t.ENOTSUP = 95] = \"ENOTSUP\";\n      }(be || (be = {}));\n      var Ie = {};\n      Ie[be.EPERM] = \"Operation not permitted.\", Ie[be.ENOENT] = \"No such file or directory.\", Ie[be.EIO] = \"Input/output error.\", Ie[be.EBADF] = \"Bad file descriptor.\", Ie[be.EACCES] = \"Permission denied.\", Ie[be.EBUSY] = \"Resource busy or locked.\", Ie[be.EEXIST] = \"File exists.\", Ie[be.ENOTDIR] = \"File is not a directory.\", Ie[be.EISDIR] = \"File is a directory.\", Ie[be.EINVAL] = \"Invalid argument.\", Ie[be.EFBIG] = \"File is too big.\", Ie[be.ENOSPC] = \"No space left on disk.\", Ie[be.EROFS] = \"Cannot modify a read-only file system.\", Ie[be.ENOTEMPTY] = \"Directory is not empty.\", Ie[be.ENOTSUP] = \"Operation is not supported.\";\n\n      var Oe,\n          Fe = function (e) {\n        function n(t, n, r) {\n          void 0 === n && (n = Ie[t]), e.call(this, n), this.syscall = \"\", this.errno = t, this.code = be[t], this.path = r, this.stack = new e().stack, this.message = \"Error: \" + this.code + \": \" + n + (this.path ? \", '\" + this.path + \"'\" : \"\");\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.fromJSON = function (t) {\n          var e = new n(0);\n          return e.errno = t.errno, e.code = t.code, e.path = t.path, e.stack = t.stack, e.message = t.message, e;\n        }, n.fromBuffer = function (t, e) {\n          return void 0 === e && (e = 0), n.fromJSON(JSON.parse(t.toString(\"utf8\", e + 4, e + 4 + t.readUInt32LE(e))));\n        }, n.FileError = function (t, e) {\n          return new n(t, Ie[t], e);\n        }, n.ENOENT = function (t) {\n          return this.FileError(be.ENOENT, t);\n        }, n.EEXIST = function (t) {\n          return this.FileError(be.EEXIST, t);\n        }, n.EISDIR = function (t) {\n          return this.FileError(be.EISDIR, t);\n        }, n.ENOTDIR = function (t) {\n          return this.FileError(be.ENOTDIR, t);\n        }, n.EPERM = function (t) {\n          return this.FileError(be.EPERM, t);\n        }, n.ENOTEMPTY = function (t) {\n          return this.FileError(be.ENOTEMPTY, t);\n        }, n.prototype.toString = function () {\n          return this.message;\n        }, n.prototype.toJSON = function () {\n          return {\n            errno: this.errno,\n            code: this.code,\n            path: this.path,\n            stack: this.stack,\n            message: this.message\n          };\n        }, n.prototype.writeToBuffer = function (e, n) {\n          void 0 === e && (e = t.alloc(this.bufferSize())), void 0 === n && (n = 0);\n          var r = e.write(JSON.stringify(this.toJSON()), n + 4);\n          return e.writeUInt32LE(r, n), e;\n        }, n.prototype.bufferSize = function () {\n          return 4 + t.byteLength(JSON.stringify(this.toJSON()));\n        }, n;\n      }(Error),\n          Ne = Object.freeze({\n        get ErrorCode() {\n          return be;\n        },\n\n        ErrorStrings: Ie,\n        ApiError: Fe\n      });\n\n      !function (t) {\n        t[t.NOP = 0] = \"NOP\", t[t.THROW_EXCEPTION = 1] = \"THROW_EXCEPTION\", t[t.TRUNCATE_FILE = 2] = \"TRUNCATE_FILE\", t[t.CREATE_FILE = 3] = \"CREATE_FILE\";\n      }(Oe || (Oe = {}));\n\n      var Re = function t(e) {\n        if (this.flagStr = e, t.validFlagStrs.indexOf(e) < 0) throw new Fe(be.EINVAL, \"Invalid flag: \" + e);\n      };\n\n      Re.getFileFlag = function (t) {\n        return Re.flagCache.hasOwnProperty(t) ? Re.flagCache[t] : Re.flagCache[t] = new Re(t);\n      }, Re.prototype.getFlagString = function () {\n        return this.flagStr;\n      }, Re.prototype.isReadable = function () {\n        return this.flagStr.indexOf(\"r\") !== -1 || this.flagStr.indexOf(\"+\") !== -1;\n      }, Re.prototype.isWriteable = function () {\n        return this.flagStr.indexOf(\"w\") !== -1 || this.flagStr.indexOf(\"a\") !== -1 || this.flagStr.indexOf(\"+\") !== -1;\n      }, Re.prototype.isTruncating = function () {\n        return this.flagStr.indexOf(\"w\") !== -1;\n      }, Re.prototype.isAppendable = function () {\n        return this.flagStr.indexOf(\"a\") !== -1;\n      }, Re.prototype.isSynchronous = function () {\n        return this.flagStr.indexOf(\"s\") !== -1;\n      }, Re.prototype.isExclusive = function () {\n        return this.flagStr.indexOf(\"x\") !== -1;\n      }, Re.prototype.pathExistsAction = function () {\n        return this.isExclusive() ? Oe.THROW_EXCEPTION : this.isTruncating() ? Oe.TRUNCATE_FILE : Oe.NOP;\n      }, Re.prototype.pathNotExistsAction = function () {\n        return (this.isWriteable() || this.isAppendable()) && \"r+\" !== this.flagStr ? Oe.CREATE_FILE : Oe.THROW_EXCEPTION;\n      }, Re.flagCache = {}, Re.validFlagStrs = [\"r\", \"r+\", \"rs\", \"rs+\", \"w\", \"wx\", \"w+\", \"wx+\", \"a\", \"ax\", \"a+\", \"ax+\"];\n      var Le;\n      !function (t) {\n        t[t.FILE = 32768] = \"FILE\", t[t.DIRECTORY = 16384] = \"DIRECTORY\", t[t.SYMLINK = 40960] = \"SYMLINK\";\n      }(Le || (Le = {}));\n\n      var Te = function Te(t, e, n, r, i, o) {\n        if (void 0 === r && (r = new Date()), void 0 === i && (i = new Date()), void 0 === o && (o = new Date()), this.size = e, this.atime = r, this.mtime = i, this.ctime = o, this.dev = 0, this.ino = 0, this.rdev = 0, this.nlink = 1, this.blksize = 4096, this.uid = 0, this.gid = 0, this.birthtime = new Date(0), this.fileData = null, n) this.mode = n;else switch (t) {\n          case Le.FILE:\n            this.mode = 420;\n            break;\n\n          case Le.DIRECTORY:\n          default:\n            this.mode = 511;\n        }\n        this.blocks = Math.ceil(e / 512), this.mode < 4096 && (this.mode |= t);\n      };\n\n      Te.fromBuffer = function (t) {\n        var e = t.readUInt32LE(0),\n            n = t.readUInt32LE(4),\n            r = t.readDoubleLE(8),\n            i = t.readDoubleLE(16),\n            o = t.readDoubleLE(24);\n        return new Te(61440 & n, e, 4095 & n, new Date(r), new Date(i), new Date(o));\n      }, Te.prototype.toBuffer = function () {\n        var e = t.alloc(32);\n        return e.writeUInt32LE(this.size, 0), e.writeUInt32LE(this.mode, 4), e.writeDoubleLE(this.atime.getTime(), 8), e.writeDoubleLE(this.mtime.getTime(), 16), e.writeDoubleLE(this.ctime.getTime(), 24), e;\n      }, Te.prototype.clone = function () {\n        return new Te(61440 & this.mode, this.size, 4095 & this.mode, this.atime, this.mtime, this.ctime);\n      }, Te.prototype.isFile = function () {\n        return (61440 & this.mode) === Le.FILE;\n      }, Te.prototype.isDirectory = function () {\n        return (61440 & this.mode) === Le.DIRECTORY;\n      }, Te.prototype.isSymbolicLink = function () {\n        return (61440 & this.mode) === Le.SYMLINK;\n      }, Te.prototype.chmod = function (t) {\n        this.mode = 61440 & this.mode | t;\n      }, Te.prototype.isSocket = function () {\n        return !1;\n      }, Te.prototype.isBlockDevice = function () {\n        return !1;\n      }, Te.prototype.isCharacterDevice = function () {\n        return !1;\n      }, Te.prototype.isFIFO = function () {\n        return !1;\n      };\n\n      var xe = function xe(t, e) {\n        return t;\n      },\n          Ae = function Ae() {\n        this.F_OK = 0, this.R_OK = 4, this.W_OK = 2, this.X_OK = 1, this.root = null, this.fdMap = {}, this.nextFd = 100;\n      };\n\n      Ae.prototype.initialize = function (t) {\n        if (!t.constructor.isAvailable()) throw new Fe(be.EINVAL, \"Tried to instantiate BrowserFS with an unavailable file system.\");\n        return this.root = t;\n      }, Ae.prototype._toUnixTimestamp = function (t) {\n        if (\"number\" == typeof t) return t;\n        if (t instanceof Date) return t.getTime() / 1e3;\n        throw new Error(\"Cannot parse time: \" + t);\n      }, Ae.prototype.getRootFS = function () {\n        return this.root ? this.root : null;\n      }, Ae.prototype.rename = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = xe(n, 1);\n\n        try {\n          s(this.root).rename(u(t), u(e), r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.renameSync = function (t, e) {\n        s(this.root).renameSync(u(t), u(e));\n      }, Ae.prototype.exists = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 1);\n\n        try {\n          return s(this.root).exists(u(t), n);\n        } catch (t) {\n          return n(!1);\n        }\n      }, Ae.prototype.existsSync = function (t) {\n        try {\n          return s(this.root).existsSync(u(t));\n        } catch (t) {\n          return !1;\n        }\n      }, Ae.prototype.stat = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 2);\n\n        try {\n          return s(this.root).stat(u(t), !1, n);\n        } catch (t) {\n          return n(t);\n        }\n      }, Ae.prototype.statSync = function (t) {\n        return s(this.root).statSync(u(t), !1);\n      }, Ae.prototype.lstat = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 2);\n\n        try {\n          return s(this.root).stat(u(t), !0, n);\n        } catch (t) {\n          return n(t);\n        }\n      }, Ae.prototype.lstatSync = function (t) {\n        return s(this.root).statSync(u(t), !0);\n      }, Ae.prototype.truncate = function (t, e, n) {\n        void 0 === e && (e = 0), void 0 === n && (n = h);\n        var r = 0;\n        \"function\" == typeof e ? n = e : \"number\" == typeof e && (r = e);\n        var i = xe(n, 1);\n\n        try {\n          if (r < 0) throw new Fe(be.EINVAL);\n          return s(this.root).truncate(u(t), r, i);\n        } catch (t) {\n          return i(t);\n        }\n      }, Ae.prototype.truncateSync = function (t, e) {\n        if (void 0 === e && (e = 0), e < 0) throw new Fe(be.EINVAL);\n        return s(this.root).truncateSync(u(t), e);\n      }, Ae.prototype.unlink = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 1);\n\n        try {\n          return s(this.root).unlink(u(t), n);\n        } catch (t) {\n          return n(t);\n        }\n      }, Ae.prototype.unlinkSync = function (t) {\n        return s(this.root).unlinkSync(u(t));\n      }, Ae.prototype.open = function (t, e, n, r) {\n        var i = this;\n        void 0 === r && (r = h);\n        var o = a(n, 420);\n        r = \"function\" == typeof n ? n : r;\n        var c = xe(r, 2);\n\n        try {\n          s(this.root).open(u(t), Re.getFileFlag(e), o, function (t, e) {\n            e ? c(t, i.getFdForFile(e)) : c(t);\n          });\n        } catch (t) {\n          c(t);\n        }\n      }, Ae.prototype.openSync = function (t, e, n) {\n        return void 0 === n && (n = 420), this.getFdForFile(s(this.root).openSync(u(t), Re.getFileFlag(e), a(n, 420)));\n      }, Ae.prototype.readFile = function (t, e, n) {\n        void 0 === e && (e = {}), void 0 === n && (n = h);\n        var r = f(e, null, \"r\", null);\n        n = \"function\" == typeof e ? e : n;\n        var i = xe(n, 2);\n\n        try {\n          var o = Re.getFileFlag(r.flag);\n          return o.isReadable() ? s(this.root).readFile(u(t), r.encoding, o, i) : i(new Fe(be.EINVAL, \"Flag passed to readFile must allow for reading.\"));\n        } catch (t) {\n          return i(t);\n        }\n      }, Ae.prototype.readFileSync = function (t, e) {\n        void 0 === e && (e = {});\n        var n = f(e, null, \"r\", null),\n            r = Re.getFileFlag(n.flag);\n        if (!r.isReadable()) throw new Fe(be.EINVAL, \"Flag passed to readFile must allow for reading.\");\n        return s(this.root).readFileSync(u(t), n.encoding, r);\n      }, Ae.prototype.writeFile = function (t, e, n, r) {\n        void 0 === n && (n = {}), void 0 === r && (r = h);\n        var i = f(n, \"utf8\", \"w\", 420);\n        r = \"function\" == typeof n ? n : r;\n        var o = xe(r, 1);\n\n        try {\n          var a = Re.getFileFlag(i.flag);\n          return a.isWriteable() ? s(this.root).writeFile(u(t), e, i.encoding, a, i.mode, o) : o(new Fe(be.EINVAL, \"Flag passed to writeFile must allow for writing.\"));\n        } catch (t) {\n          return o(t);\n        }\n      }, Ae.prototype.writeFileSync = function (t, e, n) {\n        var r = f(n, \"utf8\", \"w\", 420),\n            i = Re.getFileFlag(r.flag);\n        if (!i.isWriteable()) throw new Fe(be.EINVAL, \"Flag passed to writeFile must allow for writing.\");\n        return s(this.root).writeFileSync(u(t), e, r.encoding, i, r.mode);\n      }, Ae.prototype.appendFile = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = f(n, \"utf8\", \"a\", 420);\n        r = \"function\" == typeof n ? n : r;\n        var o = xe(r, 1);\n\n        try {\n          var a = Re.getFileFlag(i.flag);\n          if (!a.isAppendable()) return o(new Fe(be.EINVAL, \"Flag passed to appendFile must allow for appending.\"));\n          s(this.root).appendFile(u(t), e, i.encoding, a, i.mode, o);\n        } catch (t) {\n          o(t);\n        }\n      }, Ae.prototype.appendFileSync = function (t, e, n) {\n        var r = f(n, \"utf8\", \"a\", 420),\n            i = Re.getFileFlag(r.flag);\n        if (!i.isAppendable()) throw new Fe(be.EINVAL, \"Flag passed to appendFile must allow for appending.\");\n        return s(this.root).appendFileSync(u(t), e, r.encoding, i, r.mode);\n      }, Ae.prototype.fstat = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 2);\n\n        try {\n          var r = this.fd2file(t);\n          r.stat(n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.fstatSync = function (t) {\n        return this.fd2file(t).statSync();\n      }, Ae.prototype.close = function (t, e) {\n        var n = this;\n        void 0 === e && (e = h);\n        var r = xe(e, 1);\n\n        try {\n          this.fd2file(t).close(function (e) {\n            e || n.closeFd(t), r(e);\n          });\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.closeSync = function (t) {\n        this.fd2file(t).closeSync(), this.closeFd(t);\n      }, Ae.prototype.ftruncate = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = \"number\" == typeof e ? e : 0;\n        n = \"function\" == typeof e ? e : n;\n        var i = xe(n, 1);\n\n        try {\n          var o = this.fd2file(t);\n          if (r < 0) throw new Fe(be.EINVAL);\n          o.truncate(r, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.ftruncateSync = function (t, e) {\n        void 0 === e && (e = 0);\n        var n = this.fd2file(t);\n        if (e < 0) throw new Fe(be.EINVAL);\n        n.truncateSync(e);\n      }, Ae.prototype.fsync = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 1);\n\n        try {\n          this.fd2file(t).sync(n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.fsyncSync = function (t) {\n        this.fd2file(t).syncSync();\n      }, Ae.prototype.fdatasync = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 1);\n\n        try {\n          this.fd2file(t).datasync(n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.fdatasyncSync = function (t) {\n        this.fd2file(t).datasyncSync();\n      }, Ae.prototype.write = function (e, n, r, i, o, s) {\n        void 0 === s && (s = h);\n        var a,\n            c,\n            u,\n            f = null;\n\n        if (\"string\" == typeof n) {\n          var p = \"utf8\";\n\n          switch (_typeof(r)) {\n            case \"function\":\n              s = r;\n              break;\n\n            case \"number\":\n              f = r, p = \"string\" == typeof i ? i : \"utf8\", s = \"function\" == typeof o ? o : s;\n              break;\n\n            default:\n              return (s = \"function\" == typeof i ? i : \"function\" == typeof o ? o : s)(new Fe(be.EINVAL, \"Invalid arguments.\"));\n          }\n\n          a = t.from(n, p), c = 0, u = a.length;\n        } else a = n, c = r, u = i, f = \"number\" == typeof o ? o : null, s = \"function\" == typeof o ? o : s;\n\n        var l = xe(s, 3);\n\n        try {\n          var d = this.fd2file(e);\n          void 0 !== f && null !== f || (f = d.getPos()), d.write(a, c, u, f, l);\n        } catch (t) {\n          l(t);\n        }\n      }, Ae.prototype.writeSync = function (e, n, r, i, o) {\n        var s,\n            a,\n            c,\n            u = 0;\n\n        if (\"string\" == typeof n) {\n          c = \"number\" == typeof r ? r : null;\n          var f = \"string\" == typeof i ? i : \"utf8\";\n          u = 0, s = t.from(n, f), a = s.length;\n        } else s = n, u = r, a = i, c = \"number\" == typeof o ? o : null;\n\n        var h = this.fd2file(e);\n        return void 0 !== c && null !== c || (c = h.getPos()), h.writeSync(s, u, a, c);\n      }, Ae.prototype.read = function (e, n, r, i, o, s) {\n        void 0 === s && (s = h);\n        var a, c, u, f, p;\n\n        if (\"number\" == typeof n) {\n          u = n, a = r;\n          var l = i;\n          s = \"function\" == typeof o ? o : s, c = 0, f = t.alloc(u), p = xe(function (t, e, n) {\n            return t ? s(t) : void s(t, n.toString(l), e);\n          }, 3);\n        } else f = n, c = r, u = i, a = o, p = xe(s, 3);\n\n        try {\n          var d = this.fd2file(e);\n          void 0 !== a && null !== a || (a = d.getPos()), d.read(f, c, u, a, p);\n        } catch (t) {\n          p(t);\n        }\n      }, Ae.prototype.readSync = function (e, n, r, i, o) {\n        var s,\n            a,\n            c,\n            u,\n            f = !1,\n            h = \"utf8\";\n        \"number\" == typeof n ? (c = n, u = r, h = i, a = 0, s = t.alloc(c), f = !0) : (s = n, a = r, c = i, u = o);\n        var p = this.fd2file(e);\n        void 0 !== u && null !== u || (u = p.getPos());\n        var l = p.readSync(s, a, c, u);\n        return f ? [s.toString(h), l] : l;\n      }, Ae.prototype.fchown = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = xe(r, 1);\n\n        try {\n          this.fd2file(t).chown(e, n, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.fchownSync = function (t, e, n) {\n        this.fd2file(t).chownSync(e, n);\n      }, Ae.prototype.fchmod = function (t, e, n) {\n        var r = xe(n, 1);\n\n        try {\n          var i = \"string\" == typeof e ? parseInt(e, 8) : e;\n          this.fd2file(t).chmod(i, r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.fchmodSync = function (t, e) {\n        var n = \"string\" == typeof e ? parseInt(e, 8) : e;\n        this.fd2file(t).chmodSync(n);\n      }, Ae.prototype.futimes = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = xe(r, 1);\n\n        try {\n          var o = this.fd2file(t);\n          \"number\" == typeof e && (e = new Date(1e3 * e)), \"number\" == typeof n && (n = new Date(1e3 * n)), o.utimes(e, n, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.futimesSync = function (t, e, n) {\n        this.fd2file(t).utimesSync(c(e), c(n));\n      }, Ae.prototype.rmdir = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 1);\n\n        try {\n          t = u(t), s(this.root).rmdir(t, n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.rmdirSync = function (t) {\n        return t = u(t), s(this.root).rmdirSync(t);\n      }, Ae.prototype.mkdir = function (t, e, n) {\n        void 0 === n && (n = h), \"function\" == typeof e && (n = e, e = 511);\n        var r = xe(n, 1);\n\n        try {\n          t = u(t), s(this.root).mkdir(t, e, r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.mkdirSync = function (t, e) {\n        s(this.root).mkdirSync(u(t), a(e, 511));\n      }, Ae.prototype.readdir = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 2);\n\n        try {\n          t = u(t), s(this.root).readdir(t, n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.readdirSync = function (t) {\n        return t = u(t), s(this.root).readdirSync(t);\n      }, Ae.prototype.link = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = xe(n, 1);\n\n        try {\n          t = u(t), e = u(e), s(this.root).link(t, e, r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.linkSync = function (t, e) {\n        return t = u(t), e = u(e), s(this.root).linkSync(t, e);\n      }, Ae.prototype.symlink = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = \"string\" == typeof n ? n : \"file\";\n        r = \"function\" == typeof n ? n : r;\n        var o = xe(r, 1);\n\n        try {\n          if (\"file\" !== i && \"dir\" !== i) return o(new Fe(be.EINVAL, \"Invalid type: \" + i));\n          t = u(t), e = u(e), s(this.root).symlink(t, e, i, o);\n        } catch (t) {\n          o(t);\n        }\n      }, Ae.prototype.symlinkSync = function (t, e, n) {\n        if (n) {\n          if (\"file\" !== n && \"dir\" !== n) throw new Fe(be.EINVAL, \"Invalid type: \" + n);\n        } else n = \"file\";\n\n        return t = u(t), e = u(e), s(this.root).symlinkSync(t, e, n);\n      }, Ae.prototype.readlink = function (t, e) {\n        void 0 === e && (e = h);\n        var n = xe(e, 2);\n\n        try {\n          t = u(t), s(this.root).readlink(t, n);\n        } catch (t) {\n          n(t);\n        }\n      }, Ae.prototype.readlinkSync = function (t) {\n        return t = u(t), s(this.root).readlinkSync(t);\n      }, Ae.prototype.chown = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = xe(r, 1);\n\n        try {\n          t = u(t), s(this.root).chown(t, !1, e, n, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.chownSync = function (t, e, n) {\n        t = u(t), s(this.root).chownSync(t, !1, e, n);\n      }, Ae.prototype.lchown = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = xe(r, 1);\n\n        try {\n          t = u(t), s(this.root).chown(t, !0, e, n, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.lchownSync = function (t, e, n) {\n        t = u(t), s(this.root).chownSync(t, !0, e, n);\n      }, Ae.prototype.chmod = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = xe(n, 1);\n\n        try {\n          var i = a(e, -1);\n          if (i < 0) throw new Fe(be.EINVAL, \"Invalid mode.\");\n          s(this.root).chmod(u(t), !1, i, r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.chmodSync = function (t, e) {\n        var n = a(e, -1);\n        if (n < 0) throw new Fe(be.EINVAL, \"Invalid mode.\");\n        t = u(t), s(this.root).chmodSync(t, !1, n);\n      }, Ae.prototype.lchmod = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = xe(n, 1);\n\n        try {\n          var i = a(e, -1);\n          if (i < 0) throw new Fe(be.EINVAL, \"Invalid mode.\");\n          s(this.root).chmod(u(t), !0, i, r);\n        } catch (t) {\n          r(t);\n        }\n      }, Ae.prototype.lchmodSync = function (t, e) {\n        var n = a(e, -1);\n        if (n < 1) throw new Fe(be.EINVAL, \"Invalid mode.\");\n        s(this.root).chmodSync(u(t), !0, n);\n      }, Ae.prototype.utimes = function (t, e, n, r) {\n        void 0 === r && (r = h);\n        var i = xe(r, 1);\n\n        try {\n          s(this.root).utimes(u(t), c(e), c(n), i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.utimesSync = function (t, e, n) {\n        s(this.root).utimesSync(u(t), c(e), c(n));\n      }, Ae.prototype.realpath = function (t, e, n) {\n        void 0 === n && (n = h);\n        var r = \"object\" == _typeof(e) ? e : {};\n        n = \"function\" == typeof e ? e : h;\n        var i = xe(n, 2);\n\n        try {\n          t = u(t), s(this.root).realpath(t, r, i);\n        } catch (t) {\n          i(t);\n        }\n      }, Ae.prototype.realpathSync = function (t, e) {\n        return void 0 === e && (e = {}), t = u(t), s(this.root).realpathSync(t, e);\n      }, Ae.prototype.watchFile = function (t, e, n) {\n        throw void 0 === n && (n = h), new Fe(be.ENOTSUP);\n      }, Ae.prototype.unwatchFile = function (t, e) {\n        throw void 0 === e && (e = h), new Fe(be.ENOTSUP);\n      }, Ae.prototype.watch = function (t, e, n) {\n        throw void 0 === n && (n = h), new Fe(be.ENOTSUP);\n      }, Ae.prototype.access = function (t, e, n) {\n        throw void 0 === n && (n = h), new Fe(be.ENOTSUP);\n      }, Ae.prototype.accessSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, Ae.prototype.createReadStream = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, Ae.prototype.createWriteStream = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, Ae.prototype.wrapCallbacks = function (t) {\n        xe = t;\n      }, Ae.prototype.getFdForFile = function (t) {\n        var e = this.nextFd++;\n        return this.fdMap[e] = t, e;\n      }, Ae.prototype.fd2file = function (t) {\n        var e = this.fdMap[t];\n        if (e) return e;\n        throw new Fe(be.EBADF, \"Invalid file descriptor.\");\n      }, Ae.prototype.closeFd = function (t) {\n        delete this.fdMap[t];\n      }, Ae.Stats = Te;\n      var De = new Ae(),\n          Pe = {},\n          Ce = Ae.prototype;\n      Object.keys(Ce).forEach(function (t) {\n        \"function\" == typeof De[t] ? Pe[t] = function () {\n          return De[t].apply(De, arguments);\n        } : Pe[t] = De[t];\n      }), Pe.changeFSModule = function (t) {\n        De = t;\n      }, Pe.getFSModule = function () {\n        return De;\n      }, Pe.FS = Ae;\n\n      var Ue = \"undefined\" != typeof navigator && !(!/(msie) ([\\w.]+)/.exec(navigator.userAgent.toLowerCase()) && navigator.userAgent.indexOf(\"Trident\") === -1),\n          Me = \"undefined\" == typeof window,\n          je = null,\n          Be = Object.freeze({\n        deprecationMessage: d,\n        isIE: Ue,\n        isWebWorker: Me,\n        fail: y,\n        mkdirpSync: g,\n        buffer2ArrayBuffer: v,\n        buffer2Uint8array: m,\n        arrayish2Buffer: _,\n        uint8Array2Buffer: w,\n        arrayBuffer2Buffer: E,\n        copyingSlice: b,\n        emptyBuffer: S,\n        bufferValidator: k,\n        checkOptions: I\n      }),\n          ze = function ze(t) {\n        this.fs = t, this.nodefs = t.getNodeFS(), this.FS = t.getFS(), this.PATH = t.getPATH(), this.ERRNO_CODES = t.getERRNO_CODES();\n      };\n\n      ze.prototype.open = function (t) {\n        var e = this.fs.realPath(t.node),\n            n = this.FS;\n\n        try {\n          n.isFile(t.node.mode) && (t.nfd = this.nodefs.openSync(e, this.fs.flagsToPermissionString(t.flags)));\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new n.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, ze.prototype.close = function (t) {\n        var e = this.FS;\n\n        try {\n          e.isFile(t.node.mode) && t.nfd && this.nodefs.closeSync(t.nfd);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new e.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, ze.prototype.read = function (t, e, n, r, i) {\n        try {\n          return this.nodefs.readSync(t.nfd, w(e), n, r, i);\n        } catch (t) {\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, ze.prototype.write = function (t, e, n, r, i) {\n        try {\n          return this.nodefs.writeSync(t.nfd, w(e), n, r, i);\n        } catch (t) {\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, ze.prototype.llseek = function (t, e, n) {\n        var r = e;\n        if (1 === n) r += t.position;else if (2 === n && this.FS.isFile(t.node.mode)) try {\n          var i = this.nodefs.fstatSync(t.nfd);\n          r += i.size;\n        } catch (t) {\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n        if (r < 0) throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);\n        return t.position = r, r;\n      };\n\n      var qe = function qe(t) {\n        this.fs = t, this.nodefs = t.getNodeFS(), this.FS = t.getFS(), this.PATH = t.getPATH(), this.ERRNO_CODES = t.getERRNO_CODES();\n      };\n\n      qe.prototype.getattr = function (t) {\n        var e,\n            n = this.fs.realPath(t);\n\n        try {\n          e = this.nodefs.lstatSync(n);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n\n        return {\n          dev: e.dev,\n          ino: e.ino,\n          mode: e.mode,\n          nlink: e.nlink,\n          uid: e.uid,\n          gid: e.gid,\n          rdev: e.rdev,\n          size: e.size,\n          atime: e.atime,\n          mtime: e.mtime,\n          ctime: e.ctime,\n          blksize: e.blksize,\n          blocks: e.blocks\n        };\n      }, qe.prototype.setattr = function (t, e) {\n        var n = this.fs.realPath(t);\n\n        try {\n          if (void 0 !== e.mode && (this.nodefs.chmodSync(n, e.mode), t.mode = e.mode), void 0 !== e.timestamp) {\n            var r = new Date(e.timestamp);\n            this.nodefs.utimesSync(n, r, r);\n          }\n        } catch (t) {\n          if (!t.code) throw t;\n          if (\"ENOTSUP\" !== t.code) throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n\n        if (void 0 !== e.size) try {\n          this.nodefs.truncateSync(n, e.size);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.lookup = function (t, e) {\n        var n = this.PATH.join2(this.fs.realPath(t), e),\n            r = this.fs.getMode(n);\n        return this.fs.createNode(t, e, r);\n      }, qe.prototype.mknod = function (t, e, n, r) {\n        var i = this.fs.createNode(t, e, n, r),\n            o = this.fs.realPath(i);\n\n        try {\n          this.FS.isDir(i.mode) ? this.nodefs.mkdirSync(o, i.mode) : this.nodefs.writeFileSync(o, \"\", {\n            mode: i.mode\n          });\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n\n        return i;\n      }, qe.prototype.rename = function (t, e, n) {\n        var r = this.fs.realPath(t),\n            i = this.PATH.join2(this.fs.realPath(e), n);\n\n        try {\n          this.nodefs.renameSync(r, i), t.name = n, t.parent = e;\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.unlink = function (t, e) {\n        var n = this.PATH.join2(this.fs.realPath(t), e);\n\n        try {\n          this.nodefs.unlinkSync(n);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.rmdir = function (t, e) {\n        var n = this.PATH.join2(this.fs.realPath(t), e);\n\n        try {\n          this.nodefs.rmdirSync(n);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.readdir = function (t) {\n        var e = this.fs.realPath(t);\n\n        try {\n          var n = this.nodefs.readdirSync(e);\n          return n.push(\".\", \"..\"), n;\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.symlink = function (t, e, n) {\n        var r = this.PATH.join2(this.fs.realPath(t), e);\n\n        try {\n          this.nodefs.symlinkSync(n, r);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      }, qe.prototype.readlink = function (t) {\n        var e = this.fs.realPath(t);\n\n        try {\n          return this.nodefs.readlinkSync(e);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n      };\n\n      var Ve = function Ve(t, e, n, r) {\n        void 0 === t && (t = self.FS), void 0 === e && (e = self.PATH), void 0 === n && (n = self.ERRNO_CODES), void 0 === r && (r = Pe), this.flagsToPermissionStringMap = {\n          0: \"r\",\n          1: \"r+\",\n          2: \"r+\",\n          64: \"r\",\n          65: \"r+\",\n          66: \"r+\",\n          129: \"rx+\",\n          193: \"rx+\",\n          514: \"w+\",\n          577: \"w\",\n          578: \"w+\",\n          705: \"wx\",\n          706: \"wx+\",\n          1024: \"a\",\n          1025: \"a\",\n          1026: \"a+\",\n          1089: \"a\",\n          1090: \"a+\",\n          1153: \"ax\",\n          1154: \"ax+\",\n          1217: \"ax\",\n          1218: \"ax+\",\n          4096: \"rs\",\n          4098: \"rs+\"\n        }, this.nodefs = r, this.FS = t, this.PATH = e, this.ERRNO_CODES = n, this.node_ops = new qe(this), this.stream_ops = new ze(this);\n      };\n\n      Ve.prototype.mount = function (t) {\n        return this.createNode(null, \"/\", this.getMode(t.opts.root), 0);\n      }, Ve.prototype.createNode = function (t, e, n, r) {\n        var i = this.FS;\n        if (!i.isDir(n) && !i.isFile(n) && !i.isLink(n)) throw new i.ErrnoError(this.ERRNO_CODES.EINVAL);\n        var o = i.createNode(t, e, n);\n        return o.node_ops = this.node_ops, o.stream_ops = this.stream_ops, o;\n      }, Ve.prototype.getMode = function (t) {\n        var e;\n\n        try {\n          e = this.nodefs.lstatSync(t);\n        } catch (t) {\n          if (!t.code) throw t;\n          throw new this.FS.ErrnoError(this.ERRNO_CODES[t.code]);\n        }\n\n        return e.mode;\n      }, Ve.prototype.realPath = function (t) {\n        for (var e = []; t.parent !== t;) {\n          e.push(t.name), t = t.parent;\n        }\n\n        return e.push(t.mount.opts.root), e.reverse(), this.PATH.join.apply(null, e);\n      }, Ve.prototype.flagsToPermissionString = function (t) {\n        var e = \"string\" == typeof t ? parseInt(t, 10) : t;\n        return e &= 8191, e in this.flagsToPermissionStringMap ? this.flagsToPermissionStringMap[e] : t;\n      }, Ve.prototype.getNodeFS = function () {\n        return this.nodefs;\n      }, Ve.prototype.getFS = function () {\n        return this.FS;\n      }, Ve.prototype.getPATH = function () {\n        return this.PATH;\n      }, Ve.prototype.getERRNO_CODES = function () {\n        return this.ERRNO_CODES;\n      };\n\n      var We = function We() {};\n\n      We.prototype.supportsLinks = function () {\n        return !1;\n      }, We.prototype.diskSpace = function (t, e) {\n        e(0, 0);\n      }, We.prototype.openFile = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.createFile = function (t, e, n, r) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.open = function (t, e, n, r) {\n        var i = this,\n            o = function o(_o2, s) {\n          if (_o2) switch (e.pathNotExistsAction()) {\n            case Oe.CREATE_FILE:\n              return i.stat(ke.dirname(t), !1, function (o, s) {\n                o ? r(o) : s && !s.isDirectory() ? r(Fe.ENOTDIR(ke.dirname(t))) : i.createFile(t, e, n, r);\n              });\n\n            case Oe.THROW_EXCEPTION:\n              return r(Fe.ENOENT(t));\n\n            default:\n              return r(new Fe(be.EINVAL, \"Invalid FileFlag object.\"));\n          } else {\n            if (s && s.isDirectory()) return r(Fe.EISDIR(t));\n\n            switch (e.pathExistsAction()) {\n              case Oe.THROW_EXCEPTION:\n                return r(Fe.EEXIST(t));\n\n              case Oe.TRUNCATE_FILE:\n                return i.openFile(t, e, function (t, e) {\n                  t ? r(t) : e ? e.truncate(0, function () {\n                    e.sync(function () {\n                      r(null, e);\n                    });\n                  }) : y();\n                });\n\n              case Oe.NOP:\n                return i.openFile(t, e, r);\n\n              default:\n                return r(new Fe(be.EINVAL, \"Invalid FileFlag object.\"));\n            }\n          }\n        };\n\n        this.stat(t, !1, o);\n      }, We.prototype.rename = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, We.prototype.renameSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.stat = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, We.prototype.statSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.openFileSync = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.createFileSync = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.openSync = function (t, e, n) {\n        var r;\n\n        try {\n          r = this.statSync(t, !1);\n        } catch (r) {\n          switch (e.pathNotExistsAction()) {\n            case Oe.CREATE_FILE:\n              var i = this.statSync(ke.dirname(t), !1);\n              if (!i.isDirectory()) throw Fe.ENOTDIR(ke.dirname(t));\n              return this.createFileSync(t, e, n);\n\n            case Oe.THROW_EXCEPTION:\n              throw Fe.ENOENT(t);\n\n            default:\n              throw new Fe(be.EINVAL, \"Invalid FileFlag object.\");\n          }\n        }\n\n        if (r.isDirectory()) throw Fe.EISDIR(t);\n\n        switch (e.pathExistsAction()) {\n          case Oe.THROW_EXCEPTION:\n            throw Fe.EEXIST(t);\n\n          case Oe.TRUNCATE_FILE:\n            return this.unlinkSync(t), this.createFileSync(t, e, r.mode);\n\n          case Oe.NOP:\n            return this.openFileSync(t, e, n);\n\n          default:\n            throw new Fe(be.EINVAL, \"Invalid FileFlag object.\");\n        }\n      }, We.prototype.unlink = function (t, e) {\n        e(new Fe(be.ENOTSUP));\n      }, We.prototype.unlinkSync = function (t) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.rmdir = function (t, e) {\n        e(new Fe(be.ENOTSUP));\n      }, We.prototype.rmdirSync = function (t) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.mkdir = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, We.prototype.mkdirSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.readdir = function (t, e) {\n        e(new Fe(be.ENOTSUP));\n      }, We.prototype.readdirSync = function (t) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.exists = function (t, e) {\n        this.stat(t, null, function (t) {\n          e(!t);\n        });\n      }, We.prototype.existsSync = function (t) {\n        try {\n          return this.statSync(t, !0), !0;\n        } catch (t) {\n          return !1;\n        }\n      }, We.prototype.realpath = function (t, e, n) {\n        if (this.supportsLinks()) for (var r = t.split(ke.sep), i = 0; i < r.length; i++) {\n          var o = r.slice(0, i + 1);\n          r[i] = ke.join.apply(null, o);\n        } else this.exists(t, function (e) {\n          e ? n(null, t) : n(Fe.ENOENT(t));\n        });\n      }, We.prototype.realpathSync = function (t, e) {\n        if (this.supportsLinks()) {\n          for (var n = t.split(ke.sep), r = 0; r < n.length; r++) {\n            var i = n.slice(0, r + 1);\n            n[r] = ke.join.apply(ke, i);\n          }\n\n          return n.join(ke.sep);\n        }\n\n        if (this.existsSync(t)) return t;\n        throw Fe.ENOENT(t);\n      }, We.prototype.truncate = function (t, e, n) {\n        this.open(t, Re.getFileFlag(\"r+\"), 420, function (t, r) {\n          return t ? n(t) : void r.truncate(e, function (t) {\n            r.close(function (e) {\n              n(t || e);\n            });\n          });\n        });\n      }, We.prototype.truncateSync = function (t, e) {\n        var n = this.openSync(t, Re.getFileFlag(\"r+\"), 420);\n\n        try {\n          n.truncateSync(e);\n        } catch (t) {\n          throw t;\n        } finally {\n          n.closeSync();\n        }\n      }, We.prototype.readFile = function (e, n, r, i) {\n        var o = i;\n        this.open(e, r, 420, function (e, r) {\n          return e ? i(e) : (i = function i(t, e) {\n            r.close(function (n) {\n              return t || (t = n), o(t, e);\n            });\n          }, void r.stat(function (e, o) {\n            if (e) return i(e);\n            var s = t.alloc(o.size);\n            r.read(s, 0, o.size, 0, function (t) {\n              if (t) return i(t);\n              if (null === n) return i(t, s);\n\n              try {\n                i(null, s.toString(n));\n              } catch (t) {\n                i(t);\n              }\n            });\n          }));\n        });\n      }, We.prototype.readFileSync = function (e, n, r) {\n        var i = this.openSync(e, r, 420);\n\n        try {\n          var o = i.statSync(),\n              s = t.alloc(o.size);\n          return i.readSync(s, 0, o.size, 0), i.closeSync(), null === n ? s : s.toString(n);\n        } finally {\n          i.closeSync();\n        }\n      }, We.prototype.writeFile = function (e, n, r, i, o, s) {\n        var a = s;\n        this.open(e, i, 420, function (e, i) {\n          if (e) return s(e);\n\n          s = function s(t) {\n            i.close(function (e) {\n              a(t ? t : e);\n            });\n          };\n\n          try {\n            \"string\" == typeof n && (n = t.from(n, r));\n          } catch (t) {\n            return s(t);\n          }\n\n          i.write(n, 0, n.length, 0, s);\n        });\n      }, We.prototype.writeFileSync = function (e, n, r, i, o) {\n        var s = this.openSync(e, i, o);\n\n        try {\n          \"string\" == typeof n && (n = t.from(n, r)), s.writeSync(n, 0, n.length, 0);\n        } finally {\n          s.closeSync();\n        }\n      }, We.prototype.appendFile = function (e, n, r, i, o, s) {\n        var a = s;\n        this.open(e, i, o, function (e, i) {\n          return e ? s(e) : (s = function s(t) {\n            i.close(function (e) {\n              a(t ? t : e);\n            });\n          }, \"string\" == typeof n && (n = t.from(n, r)), void i.write(n, 0, n.length, null, s));\n        });\n      }, We.prototype.appendFileSync = function (e, n, r, i, o) {\n        var s = this.openSync(e, i, o);\n\n        try {\n          \"string\" == typeof n && (n = t.from(n, r)), s.writeSync(n, 0, n.length, null);\n        } finally {\n          s.closeSync();\n        }\n      }, We.prototype.chmod = function (t, e, n, r) {\n        r(new Fe(be.ENOTSUP));\n      }, We.prototype.chmodSync = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.chown = function (t, e, n, r, i) {\n        i(new Fe(be.ENOTSUP));\n      }, We.prototype.chownSync = function (t, e, n, r) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.utimes = function (t, e, n, r) {\n        r(new Fe(be.ENOTSUP));\n      }, We.prototype.utimesSync = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.link = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, We.prototype.linkSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.symlink = function (t, e, n, r) {\n        r(new Fe(be.ENOTSUP));\n      }, We.prototype.symlinkSync = function (t, e, n) {\n        throw new Fe(be.ENOTSUP);\n      }, We.prototype.readlink = function (t, e) {\n        e(new Fe(be.ENOTSUP));\n      }, We.prototype.readlinkSync = function (t) {\n        throw new Fe(be.ENOTSUP);\n      };\n\n      var He = function (t) {\n        function e() {\n          t.apply(this, arguments);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.rename = function (t, e, n) {\n          try {\n            this.renameSync(t, e), n();\n          } catch (t) {\n            n(t);\n          }\n        }, e.prototype.stat = function (t, e, n) {\n          try {\n            n(null, this.statSync(t, e));\n          } catch (t) {\n            n(t);\n          }\n        }, e.prototype.open = function (t, e, n, r) {\n          try {\n            r(null, this.openSync(t, e, n));\n          } catch (t) {\n            r(t);\n          }\n        }, e.prototype.unlink = function (t, e) {\n          try {\n            this.unlinkSync(t), e();\n          } catch (t) {\n            e(t);\n          }\n        }, e.prototype.rmdir = function (t, e) {\n          try {\n            this.rmdirSync(t), e();\n          } catch (t) {\n            e(t);\n          }\n        }, e.prototype.mkdir = function (t, e, n) {\n          try {\n            this.mkdirSync(t, e), n();\n          } catch (t) {\n            n(t);\n          }\n        }, e.prototype.readdir = function (t, e) {\n          try {\n            e(null, this.readdirSync(t));\n          } catch (t) {\n            e(t);\n          }\n        }, e.prototype.chmod = function (t, e, n, r) {\n          try {\n            this.chmodSync(t, e, n), r();\n          } catch (t) {\n            r(t);\n          }\n        }, e.prototype.chown = function (t, e, n, r, i) {\n          try {\n            this.chownSync(t, e, n, r), i();\n          } catch (t) {\n            i(t);\n          }\n        }, e.prototype.utimes = function (t, e, n, r) {\n          try {\n            this.utimesSync(t, e, n), r();\n          } catch (t) {\n            r(t);\n          }\n        }, e.prototype.link = function (t, e, n) {\n          try {\n            this.linkSync(t, e), n();\n          } catch (t) {\n            n(t);\n          }\n        }, e.prototype.symlink = function (t, e, n, r) {\n          try {\n            this.symlinkSync(t, e, n), r();\n          } catch (t) {\n            r(t);\n          }\n        }, e.prototype.readlink = function (t, e) {\n          try {\n            e(null, this.readlinkSync(t));\n          } catch (t) {\n            e(t);\n          }\n        }, e;\n      }(We),\n          Ze = function Ze() {};\n\n      Ze.prototype.sync = function (t) {\n        t(new Fe(be.ENOTSUP));\n      }, Ze.prototype.syncSync = function () {\n        throw new Fe(be.ENOTSUP);\n      }, Ze.prototype.datasync = function (t) {\n        this.sync(t);\n      }, Ze.prototype.datasyncSync = function () {\n        return this.syncSync();\n      }, Ze.prototype.chown = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, Ze.prototype.chownSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      }, Ze.prototype.chmod = function (t, e) {\n        e(new Fe(be.ENOTSUP));\n      }, Ze.prototype.chmodSync = function (t) {\n        throw new Fe(be.ENOTSUP);\n      }, Ze.prototype.utimes = function (t, e, n) {\n        n(new Fe(be.ENOTSUP));\n      }, Ze.prototype.utimesSync = function (t, e) {\n        throw new Fe(be.ENOTSUP);\n      };\n\n      var Ye = function (e) {\n        function n(t, n, r, i, o) {\n          if (e.call(this), this._pos = 0, this._dirty = !1, this._fs = t, this._path = n, this._flag = r, this._stat = i, o ? this._buffer = o : this._buffer = S(), this._stat.size !== this._buffer.length && this._flag.isReadable()) throw new Error(\"Invalid buffer: Buffer is \" + this._buffer.length + \" long, yet Stats object specifies that file is \" + this._stat.size + \" long.\");\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.prototype.getBuffer = function () {\n          return this._buffer;\n        }, n.prototype.getStats = function () {\n          return this._stat;\n        }, n.prototype.getFlag = function () {\n          return this._flag;\n        }, n.prototype.getPath = function () {\n          return this._path;\n        }, n.prototype.getPos = function () {\n          return this._flag.isAppendable() ? this._stat.size : this._pos;\n        }, n.prototype.advancePos = function (t) {\n          return this._pos += t;\n        }, n.prototype.setPos = function (t) {\n          return this._pos = t;\n        }, n.prototype.sync = function (t) {\n          try {\n            this.syncSync(), t();\n          } catch (e) {\n            t(e);\n          }\n        }, n.prototype.syncSync = function () {\n          throw new Fe(be.ENOTSUP);\n        }, n.prototype.close = function (t) {\n          try {\n            this.closeSync(), t();\n          } catch (e) {\n            t(e);\n          }\n        }, n.prototype.closeSync = function () {\n          throw new Fe(be.ENOTSUP);\n        }, n.prototype.stat = function (t) {\n          try {\n            t(null, this._stat.clone());\n          } catch (e) {\n            t(e);\n          }\n        }, n.prototype.statSync = function () {\n          return this._stat.clone();\n        }, n.prototype.truncate = function (t, e) {\n          try {\n            this.truncateSync(t), this._flag.isSynchronous() && !Pe.getRootFS().supportsSynch() && this.sync(e), e();\n          } catch (t) {\n            return e(t);\n          }\n        }, n.prototype.truncateSync = function (e) {\n          if (this._dirty = !0, !this._flag.isWriteable()) throw new Fe(be.EPERM, \"File not opened with a writeable mode.\");\n\n          if (this._stat.mtime = new Date(), e > this._buffer.length) {\n            var n = t.alloc(e - this._buffer.length, 0);\n            return this.writeSync(n, 0, n.length, this._buffer.length), void (this._flag.isSynchronous() && Pe.getRootFS().supportsSynch() && this.syncSync());\n          }\n\n          this._stat.size = e;\n          var r = t.alloc(e);\n          this._buffer.copy(r, 0, 0, e), this._buffer = r, this._flag.isSynchronous() && Pe.getRootFS().supportsSynch() && this.syncSync();\n        }, n.prototype.write = function (t, e, n, r, i) {\n          try {\n            i(null, this.writeSync(t, e, n, r), t);\n          } catch (t) {\n            i(t);\n          }\n        }, n.prototype.writeSync = function (e, n, r, i) {\n          if (this._dirty = !0, void 0 !== i && null !== i || (i = this.getPos()), !this._flag.isWriteable()) throw new Fe(be.EPERM, \"File not opened with a writeable mode.\");\n          var o = i + r;\n\n          if (o > this._stat.size && (this._stat.size = o, o > this._buffer.length)) {\n            var s = t.alloc(o);\n            this._buffer.copy(s), this._buffer = s;\n          }\n\n          var a = e.copy(this._buffer, i, n, n + r);\n          return this._stat.mtime = new Date(), this._flag.isSynchronous() ? (this.syncSync(), a) : (this.setPos(i + a), a);\n        }, n.prototype.read = function (t, e, n, r, i) {\n          try {\n            i(null, this.readSync(t, e, n, r), t);\n          } catch (t) {\n            i(t);\n          }\n        }, n.prototype.readSync = function (t, e, n, r) {\n          if (!this._flag.isReadable()) throw new Fe(be.EPERM, \"File not opened with a readable mode.\");\n          void 0 !== r && null !== r || (r = this.getPos());\n          var i = r + n;\n          i > this._stat.size && (n = this._stat.size - r);\n\n          var o = this._buffer.copy(t, e, r, r + n);\n\n          return this._stat.atime = new Date(), this._pos = r + n, o;\n        }, n.prototype.chmod = function (t, e) {\n          try {\n            this.chmodSync(t), e();\n          } catch (t) {\n            e(t);\n          }\n        }, n.prototype.chmodSync = function (t) {\n          if (!this._fs.supportsProps()) throw new Fe(be.ENOTSUP);\n          this._dirty = !0, this._stat.chmod(t), this.syncSync();\n        }, n.prototype.isDirty = function () {\n          return this._dirty;\n        }, n.prototype.resetDirty = function () {\n          this._dirty = !1;\n        }, n;\n      }(Ze),\n          Xe = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.sync = function (t) {\n          t();\n        }, e.prototype.syncSync = function () {}, e.prototype.close = function (t) {\n          t();\n        }, e.prototype.closeSync = function () {}, e;\n      }(Ye),\n          Ke = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.syncSync = function () {\n          this.isDirty() && (this._fs._syncSync(this), this.resetDirty());\n        }, e.prototype.closeSync = function () {\n          this.syncSync();\n        }, e;\n      }(Ye),\n          Je = function (t) {\n        function e(n, r, i) {\n          if (void 0 === i && (i = !0), t.call(this), this._queue = [], this._queueRunning = !1, this._isInitialized = !1, this._initializeCallbacks = [], this._sync = n, this._async = r, !n.supportsSynch()) throw new Error(\"The first argument to AsyncMirror needs to be a synchronous file system.\");\n          d(i, e.Name, {\n            sync: \"sync file system instance\",\n            async: \"async file system instance\"\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          try {\n            var r = new e(t.sync, t.async, !1);\n            r.initialize(function (t) {\n              t ? n(t) : n(null, r);\n            }, !1);\n          } catch (t) {\n            n(t);\n          }\n        }, e.isAvailable = function () {\n          return !0;\n        }, e.prototype.getName = function () {\n          return e.Name;\n        }, e.prototype._syncSync = function (t) {\n          this._sync.writeFileSync(t.getPath(), t.getBuffer(), null, Re.getFileFlag(\"w\"), t.getStats().mode), this.enqueueOp({\n            apiMethod: \"writeFile\",\n            arguments: [t.getPath(), t.getBuffer(), null, t.getFlag(), t.getStats().mode]\n          });\n        }, e.prototype.initialize = function (t, e) {\n          var n = this;\n          void 0 === e && (e = !0), e && console.warn(\"[AsyncMirror] AsyncMirror.initialize() is deprecated and will be removed in the next major version. Please use 'AsyncMirror.Create({ sync: (sync file system instance), async: (async file system instance)}, cb)' to create and initialize AsyncMirror instances.\");\n\n          var r = this._initializeCallbacks,\n              i = function i(t) {\n            n._isInitialized = !t, n._initializeCallbacks = [], r.forEach(function (e) {\n              return e(t);\n            });\n          };\n\n          if (this._isInitialized) t();else if (1 === r.push(t)) {\n            var o = function o(t, e, r) {\n              \"/\" !== t && n._sync.mkdirSync(t, e), n._async.readdir(t, function (e, n) {\n                function i(e) {\n                  e ? r(e) : o < n.length ? (a(ke.join(t, n[o]), i), o++) : r();\n                }\n\n                var o = 0;\n                e ? r(e) : i();\n              });\n            },\n                s = function s(t, e, r) {\n              n._async.readFile(t, null, Re.getFileFlag(\"r\"), function (i, o) {\n                if (i) r(i);else try {\n                  n._sync.writeFileSync(t, o, null, Re.getFileFlag(\"w\"), e);\n                } catch (t) {\n                  i = t;\n                } finally {\n                  r(i);\n                }\n              });\n            },\n                a = function a(t, e) {\n              n._async.stat(t, !1, function (n, r) {\n                n ? e(n) : r.isDirectory() ? o(t, r.mode, e) : s(t, r.mode, e);\n              });\n            };\n\n            o(\"/\", 0, i);\n          }\n        }, e.prototype.isReadOnly = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return this._sync.supportsProps() && this._async.supportsProps();\n        }, e.prototype.renameSync = function (t, e) {\n          this.checkInitialized(), this._sync.renameSync(t, e), this.enqueueOp({\n            apiMethod: \"rename\",\n            arguments: [t, e]\n          });\n        }, e.prototype.statSync = function (t, e) {\n          return this.checkInitialized(), this._sync.statSync(t, e);\n        }, e.prototype.openSync = function (t, e, n) {\n          this.checkInitialized();\n\n          var r = this._sync.openSync(t, e, n);\n\n          return r.closeSync(), new Ke(this, t, e, this._sync.statSync(t, !1), this._sync.readFileSync(t, null, Re.getFileFlag(\"r\")));\n        }, e.prototype.unlinkSync = function (t) {\n          this.checkInitialized(), this._sync.unlinkSync(t), this.enqueueOp({\n            apiMethod: \"unlink\",\n            arguments: [t]\n          });\n        }, e.prototype.rmdirSync = function (t) {\n          this.checkInitialized(), this._sync.rmdirSync(t), this.enqueueOp({\n            apiMethod: \"rmdir\",\n            arguments: [t]\n          });\n        }, e.prototype.mkdirSync = function (t, e) {\n          this.checkInitialized(), this._sync.mkdirSync(t, e), this.enqueueOp({\n            apiMethod: \"mkdir\",\n            arguments: [t, e]\n          });\n        }, e.prototype.readdirSync = function (t) {\n          return this.checkInitialized(), this._sync.readdirSync(t);\n        }, e.prototype.existsSync = function (t) {\n          return this.checkInitialized(), this._sync.existsSync(t);\n        }, e.prototype.chmodSync = function (t, e, n) {\n          this.checkInitialized(), this._sync.chmodSync(t, e, n), this.enqueueOp({\n            apiMethod: \"chmod\",\n            arguments: [t, e, n]\n          });\n        }, e.prototype.chownSync = function (t, e, n, r) {\n          this.checkInitialized(), this._sync.chownSync(t, e, n, r), this.enqueueOp({\n            apiMethod: \"chown\",\n            arguments: [t, e, n, r]\n          });\n        }, e.prototype.utimesSync = function (t, e, n) {\n          this.checkInitialized(), this._sync.utimesSync(t, e, n), this.enqueueOp({\n            apiMethod: \"utimes\",\n            arguments: [t, e, n]\n          });\n        }, e.prototype.checkInitialized = function () {\n          if (!this._isInitialized) throw new Fe(be.EPERM, \"AsyncMirrorFS is not initialized. Please initialize AsyncMirrorFS using its initialize() method before using it.\");\n        }, e.prototype.enqueueOp = function (t) {\n          var e = this;\n\n          if (this._queue.push(t), !this._queueRunning) {\n            this._queueRunning = !0;\n\n            var n = function n(t) {\n              if (t && console.error(\"WARNING: File system has desynchronized. Received following error: \" + t + \"\\n$\"), e._queue.length > 0) {\n                var r = e._queue.shift(),\n                    i = r.arguments;\n\n                i.push(n), e._async[r.apiMethod].apply(e._async, i);\n              } else e._queueRunning = !1;\n            };\n\n            n();\n          }\n        }, e;\n      }(He);\n\n      Je.Name = \"AsyncMirror\", Je.Options = {\n        sync: {\n          type: \"object\",\n          description: \"The synchronous file system to mirror the asynchronous file system to.\"\n        },\n        async: {\n          type: \"object\",\n          description: \"The asynchronous file system to mirror.\"\n        }\n      };\n\n      var Ge = Math.max,\n          Qe = function Qe(t) {\n        return R(function (e) {\n          var n = e.pop();\n          t.call(this, e, n);\n        });\n      },\n          $e = \"object\" == _typeof(r) && r && r.Object === Object && r,\n          tn = \"object\" == (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) && self && self.Object === Object && self,\n          en = $e || tn || Function(\"return this\")(),\n          nn = en.Symbol,\n          rn = Object.prototype,\n          on = rn.hasOwnProperty,\n          sn = rn.toString,\n          an = nn ? nn.toStringTag : void 0,\n          cn = Object.prototype,\n          un = cn.toString,\n          fn = \"[object Null]\",\n          hn = \"[object Undefined]\",\n          pn = nn ? nn.toStringTag : void 0,\n          ln = \"[object AsyncFunction]\",\n          dn = \"[object Function]\",\n          yn = \"[object GeneratorFunction]\",\n          gn = \"[object Proxy]\",\n          vn = 9007199254740991,\n          mn = {},\n          _n = \"function\" == typeof Symbol && Symbol.iterator,\n          wn = function wn(t) {\n        return _n && t[_n] && t[_n]();\n      },\n          En = \"[object Arguments]\",\n          bn = Object.prototype,\n          Sn = bn.hasOwnProperty,\n          kn = bn.propertyIsEnumerable,\n          In = q(function () {\n        return arguments;\n      }()) ? q : function (t) {\n        return z(t) && Sn.call(t, \"callee\") && !kn.call(t, \"callee\");\n      },\n          On = Array.isArray,\n          Fn = \"object\" == _typeof(e) && e && !e.nodeType && e,\n          Nn = Fn && \"object\" == _typeof(i) && i && !i.nodeType && i,\n          Rn = Nn && Nn.exports === Fn,\n          Ln = Rn ? en.Buffer : void 0,\n          Tn = Ln ? Ln.isBuffer : void 0,\n          xn = Tn || V,\n          An = 9007199254740991,\n          Dn = /^(?:0|[1-9]\\d*)$/,\n          Pn = \"[object Arguments]\",\n          Cn = \"[object Array]\",\n          Un = \"[object Boolean]\",\n          Mn = \"[object Date]\",\n          jn = \"[object Error]\",\n          Bn = \"[object Function]\",\n          zn = \"[object Map]\",\n          qn = \"[object Number]\",\n          Vn = \"[object Object]\",\n          Wn = \"[object RegExp]\",\n          Hn = \"[object Set]\",\n          Zn = \"[object String]\",\n          Yn = \"[object WeakMap]\",\n          Xn = \"[object ArrayBuffer]\",\n          Kn = \"[object DataView]\",\n          Jn = \"[object Float32Array]\",\n          Gn = \"[object Float64Array]\",\n          Qn = \"[object Int8Array]\",\n          $n = \"[object Int16Array]\",\n          tr = \"[object Int32Array]\",\n          er = \"[object Uint8Array]\",\n          nr = \"[object Uint8ClampedArray]\",\n          rr = \"[object Uint16Array]\",\n          ir = \"[object Uint32Array]\",\n          or = {};\n\n      or[Jn] = or[Gn] = or[Qn] = or[$n] = or[tr] = or[er] = or[nr] = or[rr] = or[ir] = !0, or[Pn] = or[Cn] = or[Xn] = or[Un] = or[Kn] = or[Mn] = or[jn] = or[Bn] = or[zn] = or[qn] = or[Vn] = or[Wn] = or[Hn] = or[Zn] = or[Yn] = !1;\n\n      var sr = \"object\" == _typeof(e) && e && !e.nodeType && e,\n          ar = sr && \"object\" == _typeof(i) && i && !i.nodeType && i,\n          cr = ar && ar.exports === sr,\n          ur = cr && $e.process,\n          fr = function () {\n        try {\n          return ur && ur.binding && ur.binding(\"util\");\n        } catch (t) {}\n      }(),\n          hr = fr && fr.isTypedArray,\n          pr = hr ? Z(hr) : H,\n          lr = Object.prototype,\n          dr = lr.hasOwnProperty,\n          yr = Object.prototype,\n          gr = K(Object.keys, Object),\n          vr = Object.prototype,\n          mr = vr.hasOwnProperty,\n          _r = ot(it, 1 / 0),\n          wr = function wr(t, e, n) {\n        var r = U(t) ? st : _r;\n        r(t, e, n);\n      },\n          Er = at(ct);\n\n      L(Er);\n      var br = ut(ct),\n          Sr = ot(br, 1);\n      L(Sr), R(function (t, e) {\n        return R(function (n) {\n          return t.apply(null, e.concat(n));\n        });\n      });\n      var kr,\n          Ir = (ht(), \"\\\\ud800-\\\\udfff\"),\n          Or = \"\\\\u0300-\\\\u036f\",\n          Fr = \"\\\\ufe20-\\\\ufe2f\",\n          Nr = \"\\\\u20d0-\\\\u20ff\",\n          Rr = Or + Fr + Nr,\n          Lr = \"\\\\ufe0e\\\\ufe0f\",\n          Tr = \"[\" + Ir + \"]\",\n          xr = \"[\" + Rr + \"]\",\n          Ar = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n          Dr = \"(?:\" + xr + \"|\" + Ar + \")\",\n          Pr = \"[^\" + Ir + \"]\",\n          Cr = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n          Ur = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n          Mr = \"\\\\u200d\",\n          jr = Dr + \"?\",\n          Br = \"[\" + Lr + \"]?\",\n          zr = (\"(?:\" + Mr + \"(?:\" + [Pr, Cr, Ur].join(\"|\") + \")\" + Br + jr + \")*\", \"(?:\" + [Pr + xr + \"?\", xr, Cr, Ur, Tr].join(\"|\") + \")\", \"function\" == typeof setImmediate && setImmediate),\n          qr = \"object\" == _typeof(o) && \"function\" == typeof o.nextTick;\n      kr = zr ? setImmediate : qr ? o.nextTick : pt, lt(kr);\n      var Vr = ot(it, 1),\n          Wr = R(function (t) {\n        return R(function (e) {\n          var n = this,\n              r = e[e.length - 1];\n          \"function\" == typeof r ? e.pop() : r = M, dt(t, e, function (t, e, r) {\n            e.apply(n, t.concat(R(function (t, e) {\n              r(t, e);\n            })));\n          }, function (t, e) {\n            r.apply(n, [t].concat(e));\n          });\n        });\n      });\n      R(function (t) {\n        return Wr.apply(null, t.reverse());\n      }), R(function (t) {\n        var e = [null].concat(t);\n        return Qe(function (t, n) {\n          return n.apply(this, e);\n        });\n      }), yt(\"dir\"), yt(\"log\");\n      var Hr;\n      Hr = qr ? o.nextTick : zr ? setImmediate : pt, lt(Hr);\n      var Zr,\n          Yr = (Math.ceil, Math.max, function (t) {\n        this._cache = {}, this._client = t;\n      });\n      Yr.prototype.readdir = function (t, e) {\n        var n = this,\n            r = this.getCachedDirInfo(t);\n\n        this._wrap(function (e) {\n          null !== r && r.contents ? n._client.readdir(t, {\n            contentHash: r.stat.contentHash\n          }, e) : n._client.readdir(t, e);\n        }, function (i, o, s, a) {\n          i ? i.status === Dropbox.ApiError.NO_CONTENT && null !== r ? e(null, r.contents.slice(0)) : e(i) : (n.updateCachedDirInfo(t, s, o.slice(0)), a.forEach(function (e) {\n            n.updateCachedInfo(ke.join(t, e.name), e);\n          }), e(null, o));\n        });\n      }, Yr.prototype.remove = function (t, e) {\n        var n = this;\n\n        this._wrap(function (e) {\n          n._client.remove(t, e);\n        }, function (r, i) {\n          r || n.updateCachedInfo(t, i), e(r);\n        });\n      }, Yr.prototype.move = function (t, e, n) {\n        var r = this;\n\n        this._wrap(function (n) {\n          r._client.move(t, e, n);\n        }, function (i, o) {\n          i || (r.deleteCachedInfo(t), r.updateCachedInfo(e, o)), n(i);\n        });\n      }, Yr.prototype.stat = function (t, e) {\n        var n = this;\n\n        this._wrap(function (e) {\n          n._client.stat(t, e);\n        }, function (r, i) {\n          r || n.updateCachedInfo(t, i), e(r, i);\n        });\n      }, Yr.prototype.readFile = function (t, e) {\n        var n = this,\n            r = this.getCachedFileInfo(t);\n        null !== r && null !== r.contents ? this.stat(t, function (i, o) {\n          i ? e(i) : o.contentHash === r.stat.contentHash ? e(i, r.contents.slice(0), r.stat) : n.readFile(t, e);\n        }) : this._wrap(function (e) {\n          n._client.readFile(t, {\n            arrayBuffer: !0\n          }, e);\n        }, function (r, i, o) {\n          r || n.updateCachedInfo(t, o, i.slice(0)), e(r, i, o);\n        });\n      }, Yr.prototype.writeFile = function (t, e, n) {\n        var r = this;\n\n        this._wrap(function (n) {\n          r._client.writeFile(t, e, n);\n        }, function (i, o) {\n          i || r.updateCachedInfo(t, o, e.slice(0)), n(i, o);\n        });\n      }, Yr.prototype.mkdir = function (t, e) {\n        var n = this;\n\n        this._wrap(function (e) {\n          n._client.mkdir(t, e);\n        }, function (r, i) {\n          r || n.updateCachedInfo(t, i, []), e(r);\n        });\n      }, Yr.prototype._wrap = function (t, e) {\n        var n = 0,\n            r = function r(i) {\n          var o = 2;\n          if (i && 3 > ++n) switch (i.status) {\n            case Dropbox.ApiError.SERVER_ERROR:\n            case Dropbox.ApiError.NETWORK_ERROR:\n            case Dropbox.ApiError.RATE_LIMITED:\n              setTimeout(function () {\n                t(r);\n              }, 1e3 * o);\n              break;\n\n            default:\n              e.apply(null, arguments);\n          } else e.apply(null, arguments);\n        };\n\n        t(r);\n      }, Yr.prototype.getCachedInfo = function (t) {\n        return this._cache[t.toLowerCase()];\n      }, Yr.prototype.putCachedInfo = function (t, e) {\n        this._cache[t.toLowerCase()] = e;\n      }, Yr.prototype.deleteCachedInfo = function (t) {\n        delete this._cache[t.toLowerCase()];\n      }, Yr.prototype.getCachedDirInfo = function (t) {\n        var e = this.getCachedInfo(t);\n        return wt(e) ? e : null;\n      }, Yr.prototype.getCachedFileInfo = function (t) {\n        var e = this.getCachedInfo(t);\n        return _t(e) ? e : null;\n      }, Yr.prototype.updateCachedDirInfo = function (t, e, n) {\n        void 0 === n && (n = null);\n        var r = this.getCachedInfo(t);\n        null === e.contentHash || void 0 !== r && r.stat.contentHash === e.contentHash || this.putCachedInfo(t, {\n          stat: e,\n          contents: n\n        });\n      }, Yr.prototype.updateCachedFileInfo = function (t, e, n) {\n        void 0 === n && (n = null);\n        var r = this.getCachedInfo(t);\n        null === e.versionTag || void 0 !== r && r.stat.versionTag === e.versionTag || this.putCachedInfo(t, {\n          stat: e,\n          contents: n\n        });\n      }, Yr.prototype.updateCachedInfo = function (t, e, n) {\n        void 0 === n && (n = null), e.isFile && Et(n) ? this.updateCachedFileInfo(t, e, n) : e.isFolder && Array.isArray(n) && this.updateCachedDirInfo(t, e, n);\n      };\n\n      var Xr = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.sync = function (t) {\n          var e = this;\n\n          if (this.isDirty()) {\n            var n = this.getBuffer(),\n                r = v(n);\n\n            this._fs._writeFileStrict(this.getPath(), r, function (n) {\n              n || e.resetDirty(), t(n);\n            });\n          } else t();\n        }, e.prototype.close = function (t) {\n          this.sync(t);\n        }, e;\n      }(Ye),\n          Kr = function (t) {\n        function e(n, r) {\n          void 0 === r && (r = !0), t.call(this), this._client = new Yr(n), d(r, e.Name, {\n            client: \"authenticated dropbox client instance\"\n          }), mt();\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          n(null, new e(t.client, !1));\n        }, e.isAvailable = function () {\n          return \"undefined\" != typeof Dropbox;\n        }, e.prototype.getName = function () {\n          return e.Name;\n        }, e.prototype.isReadOnly = function () {\n          return !1;\n        }, e.prototype.supportsSymlinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !1;\n        }, e.prototype.empty = function (t) {\n          var e = this;\n\n          this._client.readdir(\"/\", function (n, r) {\n            if (n) t(e.convert(n, \"/\"));else {\n              var i = function i(t, n) {\n                var r = ke.join(\"/\", t);\n\n                e._client.remove(r, function (t) {\n                  n(t ? e.convert(t, r) : null);\n                });\n              },\n                  o = function o(e) {\n                e ? t(e) : t();\n              };\n\n              vt(r, i, o);\n            }\n          });\n        }, e.prototype.rename = function (t, e, n) {\n          var r = this;\n\n          this._client.move(t, e, function (i) {\n            i ? r._client.stat(e, function (o, s) {\n              if (o || s.isFolder) {\n                var a = i.response.error.indexOf(t) > -1 ? t : e;\n                n(r.convert(i, a));\n              } else r._client.remove(e, function (i) {\n                i ? n(r.convert(i, e)) : r.rename(t, e, n);\n              });\n            }) : n();\n          });\n        }, e.prototype.stat = function (t, e, n) {\n          var r = this;\n\n          this._client.stat(t, function (e, i) {\n            if (e) n(r.convert(e, t));else {\n              if (!i || !i.isRemoved) {\n                var o = new Te(r._statType(i), i.size);\n                return n(null, o);\n              }\n\n              n(Fe.FileError(be.ENOENT, t));\n            }\n          });\n        }, e.prototype.open = function (t, e, n, r) {\n          var i = this;\n\n          this._client.readFile(t, function (n, o, s) {\n            if (!n) {\n              var a;\n              a = null === o ? S() : E(o);\n\n              var c = i._makeFile(t, e, s, a);\n\n              return r(null, c);\n            }\n\n            if (e.isReadable()) r(i.convert(n, t));else switch (n.status) {\n              case Dropbox.ApiError.NOT_FOUND:\n                var u = new ArrayBuffer(0);\n                return i._writeFileStrict(t, u, function (n, o) {\n                  if (n) r(n);else {\n                    var s = i._makeFile(t, e, o, E(u));\n\n                    r(null, s);\n                  }\n                });\n\n              default:\n                return r(i.convert(n, t));\n            }\n          });\n        }, e.prototype._writeFileStrict = function (t, e, n) {\n          var r = this,\n              i = ke.dirname(t);\n          this.stat(i, !1, function (o, s) {\n            o ? n(Fe.FileError(be.ENOENT, i)) : r._client.writeFile(t, e, function (e, i) {\n              e ? n(r.convert(e, t)) : n(null, i);\n            });\n          });\n        }, e.prototype._statType = function (t) {\n          return t.isFile ? Le.FILE : Le.DIRECTORY;\n        }, e.prototype._makeFile = function (t, e, n, r) {\n          var i = this._statType(n),\n              o = new Te(i, n.size);\n\n          return new Xr(this, t, e, o, r);\n        }, e.prototype._remove = function (t, e, n) {\n          var r = this;\n\n          this._client.stat(t, function (i, o) {\n            i ? e(r.convert(i, t)) : o.isFile && !n ? e(Fe.FileError(be.ENOTDIR, t)) : !o.isFile && n ? e(Fe.FileError(be.EISDIR, t)) : r._client.remove(t, function (n) {\n              e(n ? r.convert(n, t) : null);\n            });\n          });\n        }, e.prototype.unlink = function (t, e) {\n          this._remove(t, e, !0);\n        }, e.prototype.rmdir = function (t, e) {\n          this._remove(t, e, !1);\n        }, e.prototype.mkdir = function (t, e, n) {\n          var r = this,\n              i = ke.dirname(t);\n\n          this._client.stat(i, function (e, o) {\n            e ? n(r.convert(e, i)) : r._client.mkdir(t, function (e) {\n              n(e ? Fe.FileError(be.EEXIST, t) : null);\n            });\n          });\n        }, e.prototype.readdir = function (t, e) {\n          var n = this;\n\n          this._client.readdir(t, function (t, r) {\n            return t ? e(n.convert(t)) : e(null, r);\n          });\n        }, e.prototype.convert = function (t, e) {\n          void 0 === e && (e = null);\n          var n = Zr[t.status];\n          return void 0 === n && (n = be.EIO), e ? Fe.FileError(n, e) : new Fe(n);\n        }, e;\n      }(We);\n\n      Kr.Name = \"Dropbox\", Kr.Options = {\n        client: {\n          type: \"object\",\n          description: \"An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\",\n          validator: function validator(t, e) {\n            t.isAuthenticated && t.isAuthenticated() ? e() : e(new Fe(be.EINVAL, \"'client' option must be an authenticated Dropbox client from the v0.10 JS SDK.\"));\n          }\n        }\n      };\n\n      var Jr = function (t) {\n        function e(e, n, r, i) {\n          t.call(this), this._fs = e, this._FS = n, this._path = r, this._stream = i;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.getPos = function () {}, e.prototype.close = function (t) {\n          var e = null;\n\n          try {\n            this.closeSync();\n          } catch (t) {\n            e = t;\n          } finally {\n            t(e);\n          }\n        }, e.prototype.closeSync = function () {\n          try {\n            this._FS.close(this._stream);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.stat = function (t) {\n          try {\n            t(null, this.statSync());\n          } catch (e) {\n            t(e);\n          }\n        }, e.prototype.statSync = function () {\n          try {\n            return this._fs.statSync(this._path, !1);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.truncate = function (t, e) {\n          var n = null;\n\n          try {\n            this.truncateSync(t);\n          } catch (t) {\n            n = t;\n          } finally {\n            e(n);\n          }\n        }, e.prototype.truncateSync = function (t) {\n          try {\n            this._FS.ftruncate(this._stream.fd, t);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.write = function (t, e, n, r, i) {\n          try {\n            i(null, this.writeSync(t, e, n, r), t);\n          } catch (t) {\n            i(t);\n          }\n        }, e.prototype.writeSync = function (t, e, n, r) {\n          try {\n            var i = m(t),\n                o = null === r ? void 0 : r;\n            return this._FS.write(this._stream, i, e, n, o);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.read = function (t, e, n, r, i) {\n          try {\n            i(null, this.readSync(t, e, n, r), t);\n          } catch (t) {\n            i(t);\n          }\n        }, e.prototype.readSync = function (t, e, n, r) {\n          try {\n            var i = m(t),\n                o = null === r ? void 0 : r;\n            return this._FS.read(this._stream, i, e, n, o);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.sync = function (t) {\n          t();\n        }, e.prototype.syncSync = function () {}, e.prototype.chown = function (t, e, n) {\n          var r = null;\n\n          try {\n            this.chownSync(t, e);\n          } catch (t) {\n            r = t;\n          } finally {\n            n(r);\n          }\n        }, e.prototype.chownSync = function (t, e) {\n          try {\n            this._FS.fchown(this._stream.fd, t, e);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.chmod = function (t, e) {\n          var n = null;\n\n          try {\n            this.chmodSync(t);\n          } catch (t) {\n            n = t;\n          } finally {\n            e(n);\n          }\n        }, e.prototype.chmodSync = function (t) {\n          try {\n            this._FS.fchmod(this._stream.fd, t);\n          } catch (t) {\n            throw bt(t, this._path);\n          }\n        }, e.prototype.utimes = function (t, e, n) {\n          var r = null;\n\n          try {\n            this.utimesSync(t, e);\n          } catch (t) {\n            r = t;\n          } finally {\n            n(r);\n          }\n        }, e.prototype.utimesSync = function (t, e) {\n          this._fs.utimesSync(this._path, t, e);\n        }, e;\n      }(Ze),\n          Gr = function (e) {\n        function n(t) {\n          e.call(this), this._FS = t;\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.Create = function (t, e) {\n          e(null, new n(t.FS));\n        }, n.isAvailable = function () {\n          return !0;\n        }, n.prototype.getName = function () {\n          return this._FS.DB_NAME();\n        }, n.prototype.isReadOnly = function () {\n          return !1;\n        }, n.prototype.supportsLinks = function () {\n          return !0;\n        }, n.prototype.supportsProps = function () {\n          return !0;\n        }, n.prototype.supportsSynch = function () {\n          return !0;\n        }, n.prototype.renameSync = function (t, e) {\n          try {\n            this._FS.rename(t, e);\n          } catch (n) {\n            throw n.errno === be.ENOENT ? bt(n, this.existsSync(t) ? e : t) : bt(n);\n          }\n        }, n.prototype.statSync = function (t, e) {\n          try {\n            var n = e ? this._FS.lstat(t) : this._FS.stat(t),\n                r = this.modeToFileType(n.mode);\n            return new Te(r, n.size, n.mode, n.atime, n.mtime, n.ctime);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.openSync = function (t, e, n) {\n          try {\n            var r = this._FS.open(t, e.getFlagString(), n);\n\n            if (this._FS.isDir(r.node.mode)) throw this._FS.close(r), Fe.EISDIR(t);\n            return new Jr(this, this._FS, t, r);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.unlinkSync = function (t) {\n          try {\n            this._FS.unlink(t);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.rmdirSync = function (t) {\n          try {\n            this._FS.rmdir(t);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.mkdirSync = function (t, e) {\n          try {\n            this._FS.mkdir(t, e);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.readdirSync = function (t) {\n          try {\n            return this._FS.readdir(t).filter(function (t) {\n              return \".\" !== t && \"..\" !== t;\n            });\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.truncateSync = function (t, e) {\n          try {\n            this._FS.truncate(t, e);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.readFileSync = function (t, e, n) {\n          try {\n            var r = this._FS.readFile(t, {\n              flags: n.getFlagString()\n            }),\n                i = w(r);\n\n            return e ? i.toString(e) : i;\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.writeFileSync = function (e, n, r, i, o) {\n          try {\n            r && (n = t.from(n, r));\n            var s = m(n);\n            this._FS.writeFile(e, s, {\n              flags: i.getFlagString(),\n              encoding: \"binary\"\n            }), this._FS.chmod(e, o);\n          } catch (t) {\n            throw bt(t, e);\n          }\n        }, n.prototype.chmodSync = function (t, e, n) {\n          try {\n            e ? this._FS.lchmod(t, n) : this._FS.chmod(t, n);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.chownSync = function (t, e, n, r) {\n          try {\n            e ? this._FS.lchown(t, n, r) : this._FS.chown(t, n, r);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.symlinkSync = function (t, e, n) {\n          try {\n            this._FS.symlink(t, e);\n          } catch (t) {\n            throw bt(t);\n          }\n        }, n.prototype.readlinkSync = function (t) {\n          try {\n            return this._FS.readlink(t);\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.utimesSync = function (t, e, n) {\n          try {\n            this._FS.utime(t, e.getTime(), n.getTime());\n          } catch (e) {\n            throw bt(e, t);\n          }\n        }, n.prototype.modeToFileType = function (t) {\n          if (this._FS.isDir(t)) return Le.DIRECTORY;\n          if (this._FS.isFile(t)) return Le.FILE;\n          if (this._FS.isLink(t)) return Le.SYMLINK;\n          throw Fe.EPERM(\"Invalid mode: \" + t);\n        }, n;\n      }(He);\n\n      Gr.Name = \"EmscriptenFileSystem\", Gr.Options = {\n        FS: {\n          type: \"object\",\n          description: \"The Emscripten file system to use (the `FS` variable)\"\n        }\n      };\n\n      var Qr = function (t) {\n        function e(e, n) {\n          t.call(this), this._folder = e, this._wrapped = n;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          n(null, new e(t.folder, t.wrapped));\n        }, e.isAvailable = function () {\n          return !0;\n        }, e.prototype.initialize = function (t) {\n          var e = this;\n\n          this._wrapped.exists(this._folder, function (n) {\n            n ? t() : e._wrapped.isReadOnly() ? t(Fe.ENOENT(e._folder)) : e._wrapped.mkdir(e._folder, 511, t);\n          });\n        }, e.prototype.getName = function () {\n          return this._wrapped.getName();\n        }, e.prototype.isReadOnly = function () {\n          return this._wrapped.isReadOnly();\n        }, e.prototype.supportsProps = function () {\n          return this._wrapped.supportsProps();\n        }, e.prototype.supportsSynch = function () {\n          return this._wrapped.supportsSynch();\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e;\n      }(We);\n\n      Qr.Name = \"FolderAdapter\", Qr.Options = {\n        folder: {\n          type: \"string\",\n          description: \"The folder to use as the root directory\"\n        },\n        wrapped: {\n          type: \"object\",\n          description: \"The file system to wrap\"\n        }\n      }, [\"diskSpace\", \"stat\", \"statSync\", \"open\", \"openSync\", \"unlink\", \"unlinkSync\", \"rmdir\", \"rmdirSync\", \"mkdir\", \"mkdirSync\", \"readdir\", \"readdirSync\", \"exists\", \"existsSync\", \"realpath\", \"realpathSync\", \"truncate\", \"truncateSync\", \"readFile\", \"readFileSync\", \"writeFile\", \"writeFileSync\", \"appendFile\", \"appendFileSync\", \"chmod\", \"chmodSync\", \"chown\", \"chownSync\", \"utimes\", \"utimesSync\", \"readlink\", \"readlinkSync\"].forEach(function (t) {\n        Qr.prototype[t] = It(t, !0, !1);\n      }), [\"rename\", \"renameSync\", \"link\", \"linkSync\", \"symlink\", \"symlinkSync\"].forEach(function (t) {\n        Qr.prototype[t] = It(t, !0, !0);\n      });\n      var $r;\n      $r = \"undefined\" != typeof window ? window : \"undefined\" != typeof self ? self : r;\n\n      var ti = $r,\n          ei = ti.webkitRequestFileSystem || ti.requestFileSystem || null,\n          ni = function (t) {\n        function e(e, n, r, i, o, s) {\n          t.call(this, e, r, i, o, s), this._entry = n;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.sync = function (t) {\n          var e = this;\n          return this.isDirty() ? void this._entry.createWriter(function (n) {\n            var r = e.getBuffer(),\n                i = new Blob([v(r)]),\n                o = i.size;\n            n.onwriteend = function (r) {\n              n.onwriteend = null, n.onerror = null, n.truncate(o), e.resetDirty(), t();\n            }, n.onerror = function (n) {\n              t(Rt(n, e.getPath(), !1));\n            }, n.write(i);\n          }) : t();\n        }, e.prototype.close = function (t) {\n          this.sync(t);\n        }, e;\n      }(Ye),\n          ri = function (t) {\n        function e(n, r, i) {\n          void 0 === n && (n = 5), void 0 === r && (r = ti.PERSISTENT), void 0 === i && (i = !0), t.call(this), this.size = 1048576 * n, this.type = r, d(i, e.Name, {\n            size: n,\n            type: r\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          var r = new e(t.size, t.type, !1);\n          r.allocate(function (t) {\n            return t ? n(t) : n(null, r);\n          }, !1);\n        }, e.isAvailable = function () {\n          return !!ei;\n        }, e.prototype.getName = function () {\n          return e.Name;\n        }, e.prototype.isReadOnly = function () {\n          return !1;\n        }, e.prototype.supportsSymlinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !1;\n        }, e.prototype.allocate = function (t, e) {\n          var n = this;\n          void 0 === t && (t = function t() {}), void 0 === e && (e = !0), e && console.warn(\"[HTML5FS] HTML5FS.allocate() is deprecated and will be removed in the next major release. Please use 'HTML5FS.Create({type: \" + this.type + \", size: \" + this.size + \"}, cb)' to create and allocate HTML5FS instances.\");\n\n          var r = function r(e) {\n            n.fs = e, t();\n          },\n              i = function i(e) {\n            t(Rt(e, \"/\", !0));\n          };\n\n          this.type === ti.PERSISTENT ? Ft(this.type, this.size, function (t) {\n            ei(n.type, t, r, i);\n          }, i) : ei(this.type, this.size, r, i);\n        }, e.prototype.empty = function (t) {\n          this._readdir(\"/\", function (e, n) {\n            if (e) console.error(\"Failed to empty FS\"), t(e);else {\n              var r = function r(n) {\n                e ? (console.error(\"Failed to empty FS\"), t(e)) : t();\n              },\n                  i = function i(t, e) {\n                var n = function n() {\n                  e();\n                },\n                    r = function r(n) {\n                  e(Rt(n, t.fullPath, !t.isDirectory));\n                };\n\n                Ot(t) ? t.removeRecursively(n, r) : t.remove(n, r);\n              };\n\n              vt(n, i, r);\n            }\n          });\n        }, e.prototype.rename = function (t, e, n) {\n          var r = this,\n              i = 2,\n              o = 0,\n              s = this.fs.root,\n              a = t,\n              c = function c(t) {\n            --i <= 0 && n(Rt(t, a, !1));\n          },\n              u = function u(i) {\n            return 2 === ++o ? n(new Fe(be.EINVAL, \"Something was identified as both a file and a directory. This should never happen.\")) : t === e ? n() : (a = ke.dirname(e), void s.getDirectory(a, {}, function (o) {\n              a = ke.basename(e), i.moveTo(o, a, function (t) {\n                n();\n              }, function (o) {\n                i.isDirectory ? (a = e, r.unlink(e, function (i) {\n                  i ? c(o) : r.rename(t, e, n);\n                })) : c(o);\n              });\n            }, c));\n          };\n\n          s.getFile(t, {}, u, c), s.getDirectory(t, {}, u, c);\n        }, e.prototype.stat = function (t, e, n) {\n          var r = this,\n              i = {\n            create: !1\n          },\n              o = function o(t) {\n            var e = function e(t) {\n              var e = new Te(Le.FILE, t.size);\n              n(null, e);\n            };\n\n            t.file(e, a);\n          },\n              s = function s(t) {\n            var e = 4096,\n                r = new Te(Le.DIRECTORY, e);\n            n(null, r);\n          },\n              a = function a(e) {\n            n(Rt(e, t, !1));\n          },\n              c = function c() {\n            r.fs.root.getDirectory(t, i, s, a);\n          };\n\n          this.fs.root.getFile(t, i, o, c);\n        }, e.prototype.open = function (t, e, n, r) {\n          var i = this,\n              o = function o(n) {\n            r(\"InvalidModificationError\" === n.name && e.isExclusive() ? Fe.EEXIST(t) : Rt(n, t, !1));\n          };\n\n          this.fs.root.getFile(t, {\n            create: e.pathNotExistsAction() === Oe.CREATE_FILE,\n            exclusive: e.isExclusive()\n          }, function (n) {\n            n.file(function (s) {\n              var a = new FileReader();\n              a.onloadend = function (o) {\n                var c = i._makeFile(t, n, e, s, a.result);\n\n                r(null, c);\n              }, a.onerror = function (t) {\n                o(a.error);\n              }, a.readAsArrayBuffer(s);\n            }, o);\n          }, o);\n        }, e.prototype.unlink = function (t, e) {\n          this._remove(t, e, !0);\n        }, e.prototype.rmdir = function (t, e) {\n          var n = this;\n          this.readdir(t, function (r, i) {\n            r ? e(r) : i.length > 0 ? e(Fe.ENOTEMPTY(t)) : n._remove(t, e, !1);\n          });\n        }, e.prototype.mkdir = function (t, e, n) {\n          var r = {\n            create: !0,\n            exclusive: !0\n          },\n              i = function i(t) {\n            n();\n          },\n              o = function o(e) {\n            n(Rt(e, t, !0));\n          };\n\n          this.fs.root.getDirectory(t, r, i, o);\n        }, e.prototype.readdir = function (t, e) {\n          this._readdir(t, function (t, n) {\n            if (!n) return e(t);\n\n            for (var r = [], i = 0, o = n; i < o.length; i += 1) {\n              var s = o[i];\n              r.push(s.name);\n            }\n\n            e(null, r);\n          });\n        }, e.prototype._makeFile = function (t, e, n, r, i) {\n          void 0 === i && (i = new ArrayBuffer(0));\n          var o = new Te(Le.FILE, r.size),\n              s = E(i);\n          return new ni(this, e, t, n, o, s);\n        }, e.prototype._readdir = function (t, e) {\n          var n = function n(_n2) {\n            e(Rt(_n2, t, !0));\n          };\n\n          this.fs.root.getDirectory(t, {\n            create: !1\n          }, function (t) {\n            var r = t.createReader(),\n                i = [],\n                o = function o() {\n              r.readEntries(function (t) {\n                t.length ? (i = i.concat(Nt(t)), o()) : e(null, i);\n              }, n);\n            };\n\n            o();\n          }, n);\n        }, e.prototype._remove = function (t, e, n) {\n          var r = function r(_r2) {\n            var i = function i() {\n              e();\n            },\n                o = function o(r) {\n              e(Rt(r, t, !n));\n            };\n\n            _r2.remove(i, o);\n          },\n              i = function i(r) {\n            e(Rt(r, t, !n));\n          },\n              o = {\n            create: !1\n          };\n\n          n ? this.fs.root.getFile(t, o, r, i) : this.fs.root.getDirectory(t, o, r, i);\n        }, e;\n      }(We);\n\n      ri.Name = \"HTML5FS\", ri.Options = {\n        size: {\n          type: \"number\",\n          optional: !0,\n          description: \"Storage quota to request, in megabytes. Allocated value may be less. Defaults to 5.\"\n        },\n        type: {\n          type: \"number\",\n          optional: !0,\n          description: \"window.PERSISTENT or window.TEMPORARY. Defaults to PERSISTENT.\"\n        }\n      };\n\n      var ii = function ii(t, e, n, r, i, o) {\n        this.id = t, this.size = e, this.mode = n, this.atime = r, this.mtime = i, this.ctime = o;\n      };\n\n      ii.fromBuffer = function (t) {\n        if (void 0 === t) throw new Error(\"NO\");\n        return new ii(t.toString(\"ascii\", 30), t.readUInt32LE(0), t.readUInt16LE(4), t.readDoubleLE(6), t.readDoubleLE(14), t.readDoubleLE(22));\n      }, ii.prototype.toStats = function () {\n        return new Te((61440 & this.mode) === Le.DIRECTORY ? Le.DIRECTORY : Le.FILE, this.size, this.mode, new Date(this.atime), new Date(this.mtime), new Date(this.ctime));\n      }, ii.prototype.getSize = function () {\n        return 30 + this.id.length;\n      }, ii.prototype.toBuffer = function (e) {\n        return void 0 === e && (e = t.alloc(this.getSize())), e.writeUInt32LE(this.size, 0), e.writeUInt16LE(this.mode, 4), e.writeDoubleLE(this.atime, 6), e.writeDoubleLE(this.mtime, 14), e.writeDoubleLE(this.ctime, 22), e.write(this.id, 30, this.id.length, \"ascii\"), e;\n      }, ii.prototype.update = function (t) {\n        var e = !1;\n        this.size !== t.size && (this.size = t.size, e = !0), this.mode !== t.mode && (this.mode = t.mode, e = !0);\n        var n = t.atime.getTime();\n        this.atime !== n && (this.atime = n, e = !0);\n        var r = t.mtime.getTime();\n        this.mtime !== r && (this.mtime = r, e = !0);\n        var i = t.ctime.getTime();\n        return this.ctime !== i && (this.ctime = i, e = !0), e;\n      }, ii.prototype.isFile = function () {\n        return (61440 & this.mode) === Le.FILE;\n      }, ii.prototype.isDirectory = function () {\n        return (61440 & this.mode) === Le.DIRECTORY;\n      };\n\n      var oi = \"/\",\n          si = null,\n          ai = function ai(t) {\n        this.store = t, this.originalData = {}, this.modifiedKeys = [];\n      };\n\n      ai.prototype.get = function (t) {\n        var e = this.store.get(t);\n        return this.stashOldValue(t, e), e;\n      }, ai.prototype.put = function (t, e, n) {\n        return this.markModified(t), this.store.put(t, e, n);\n      }, ai.prototype.del = function (t) {\n        this.markModified(t), this.store.del(t);\n      }, ai.prototype.commit = function () {}, ai.prototype.abort = function () {\n        for (var t = this, e = 0, n = t.modifiedKeys; e < n.length; e += 1) {\n          var r = n[e],\n              i = t.originalData[r];\n          i ? t.store.put(r, i, !0) : t.store.del(r);\n        }\n      }, ai.prototype.stashOldValue = function (t, e) {\n        this.originalData.hasOwnProperty(t) || (this.originalData[t] = e);\n      }, ai.prototype.markModified = function (t) {\n        this.modifiedKeys.indexOf(t) === -1 && (this.modifiedKeys.push(t), this.originalData.hasOwnProperty(t) || (this.originalData[t] = this.store.get(t)));\n      };\n\n      var ci = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.syncSync = function () {\n          this.isDirty() && (this._fs._syncSync(this.getPath(), this.getBuffer(), this.getStats()), this.resetDirty());\n        }, e.prototype.closeSync = function () {\n          this.syncSync();\n        }, e;\n      }(Ye),\n          ui = function (e) {\n        function n(t) {\n          e.call(this), this.store = t.store, this.makeRootDirectory();\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.isAvailable = function () {\n          return !0;\n        }, n.prototype.getName = function () {\n          return this.store.name();\n        }, n.prototype.isReadOnly = function () {\n          return !1;\n        }, n.prototype.supportsSymlinks = function () {\n          return !1;\n        }, n.prototype.supportsProps = function () {\n          return !1;\n        }, n.prototype.supportsSynch = function () {\n          return !0;\n        }, n.prototype.empty = function () {\n          this.store.clear(), this.makeRootDirectory();\n        }, n.prototype.renameSync = function (e, n) {\n          var r = this.store.beginTransaction(\"readwrite\"),\n              i = ke.dirname(e),\n              o = ke.basename(e),\n              s = ke.dirname(n),\n              a = ke.basename(n),\n              c = this.findINode(r, i),\n              u = this.getDirListing(r, i, c);\n          if (!u[o]) throw Fe.ENOENT(e);\n          var f = u[o];\n          if (delete u[o], 0 === (s + \"/\").indexOf(e + \"/\")) throw new Fe(be.EBUSY, i);\n          var h, p;\n\n          if (s === i ? (h = c, p = u) : (h = this.findINode(r, s), p = this.getDirListing(r, s, h)), p[a]) {\n            var l = this.getINode(r, n, p[a]);\n            if (!l.isFile()) throw Fe.EPERM(n);\n\n            try {\n              r.del(l.id), r.del(p[a]);\n            } catch (t) {\n              throw r.abort(), t;\n            }\n          }\n\n          p[a] = f;\n\n          try {\n            r.put(c.id, t.from(JSON.stringify(u)), !0), r.put(h.id, t.from(JSON.stringify(p)), !0);\n          } catch (t) {\n            throw r.abort(), t;\n          }\n\n          r.commit();\n        }, n.prototype.statSync = function (t, e) {\n          return this.findINode(this.store.beginTransaction(\"readonly\"), t).toStats();\n        }, n.prototype.createFileSync = function (t, e, n) {\n          var r = this.store.beginTransaction(\"readwrite\"),\n              i = S(),\n              o = this.commitNewFile(r, t, Le.FILE, n, i);\n          return new ci(this, t, e, o.toStats(), i);\n        }, n.prototype.openFileSync = function (t, e) {\n          var n = this.store.beginTransaction(\"readonly\"),\n              r = this.findINode(n, t),\n              i = n.get(r.id);\n          if (void 0 === i) throw Fe.ENOENT(t);\n          return new ci(this, t, e, r.toStats(), i);\n        }, n.prototype.unlinkSync = function (t) {\n          this.removeEntry(t, !1);\n        }, n.prototype.rmdirSync = function (t) {\n          if (this.readdirSync(t).length > 0) throw Fe.ENOTEMPTY(t);\n          this.removeEntry(t, !0);\n        }, n.prototype.mkdirSync = function (e, n) {\n          var r = this.store.beginTransaction(\"readwrite\"),\n              i = t.from(\"{}\");\n          this.commitNewFile(r, e, Le.DIRECTORY, n, i);\n        }, n.prototype.readdirSync = function (t) {\n          var e = this.store.beginTransaction(\"readonly\");\n          return Object.keys(this.getDirListing(e, t, this.findINode(e, t)));\n        }, n.prototype._syncSync = function (t, e, n) {\n          var r = this.store.beginTransaction(\"readwrite\"),\n              i = this._findINode(r, ke.dirname(t), ke.basename(t)),\n              o = this.getINode(r, t, i),\n              s = o.update(n);\n\n          try {\n            r.put(o.id, e, !0), s && r.put(i, o.toBuffer(), !0);\n          } catch (t) {\n            throw r.abort(), t;\n          }\n\n          r.commit();\n        }, n.prototype.makeRootDirectory = function () {\n          var t = this.store.beginTransaction(\"readwrite\");\n\n          if (void 0 === t.get(oi)) {\n            var e = new Date().getTime(),\n                n = new ii(Tt(), 4096, 511 | Le.DIRECTORY, e, e, e);\n            t.put(n.id, Lt(), !1), t.put(oi, n.toBuffer(), !1), t.commit();\n          }\n        }, n.prototype._findINode = function (t, e, n) {\n          var r = this,\n              i = function i(_i2) {\n            var o = r.getDirListing(t, e, _i2);\n            if (o[n]) return o[n];\n            throw Fe.ENOENT(ke.resolve(e, n));\n          };\n\n          return \"/\" === e ? \"\" === n ? oi : i(this.getINode(t, e, oi)) : i(this.getINode(t, e + ke.sep + n, this._findINode(t, ke.dirname(e), ke.basename(e))));\n        }, n.prototype.findINode = function (t, e) {\n          return this.getINode(t, e, this._findINode(t, ke.dirname(e), ke.basename(e)));\n        }, n.prototype.getINode = function (t, e, n) {\n          var r = t.get(n);\n          if (void 0 === r) throw Fe.ENOENT(e);\n          return ii.fromBuffer(r);\n        }, n.prototype.getDirListing = function (t, e, n) {\n          if (!n.isDirectory()) throw Fe.ENOTDIR(e);\n          var r = t.get(n.id);\n          if (void 0 === r) throw Fe.ENOENT(e);\n          return JSON.parse(r.toString());\n        }, n.prototype.addNewNode = function (t, e) {\n          for (var n, r = 0; r < 5;) {\n            try {\n              return n = Tt(), t.put(n, e, !1), n;\n            } catch (t) {}\n          }\n\n          throw new Fe(be.EIO, \"Unable to commit data to key-value store.\");\n        }, n.prototype.commitNewFile = function (e, n, r, i, o) {\n          var s = ke.dirname(n),\n              a = ke.basename(n),\n              c = this.findINode(e, s),\n              u = this.getDirListing(e, s, c),\n              f = new Date().getTime();\n          if (\"/\" === n) throw Fe.EEXIST(n);\n          if (u[a]) throw Fe.EEXIST(n);\n          var h;\n\n          try {\n            var p = this.addNewNode(e, o);\n            h = new ii(p, o.length, i | r, f, f, f);\n            var l = this.addNewNode(e, h.toBuffer());\n            u[a] = l, e.put(c.id, t.from(JSON.stringify(u)), !0);\n          } catch (t) {\n            throw e.abort(), t;\n          }\n\n          return e.commit(), h;\n        }, n.prototype.removeEntry = function (e, n) {\n          var r = this.store.beginTransaction(\"readwrite\"),\n              i = ke.dirname(e),\n              o = this.findINode(r, i),\n              s = this.getDirListing(r, i, o),\n              a = ke.basename(e);\n          if (!s[a]) throw Fe.ENOENT(e);\n          var c = s[a];\n          delete s[a];\n          var u = this.getINode(r, e, c);\n          if (!n && u.isDirectory()) throw Fe.EISDIR(e);\n          if (n && !u.isDirectory()) throw Fe.ENOTDIR(e);\n\n          try {\n            r.del(u.id), r.del(c), r.put(o.id, t.from(JSON.stringify(s)), !0);\n          } catch (t) {\n            throw r.abort(), t;\n          }\n\n          r.commit();\n        }, n;\n      }(He),\n          fi = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.sync = function (t) {\n          var e = this;\n          this.isDirty() ? this._fs._sync(this.getPath(), this.getBuffer(), this.getStats(), function (n) {\n            n || e.resetDirty(), t(n);\n          }) : t();\n        }, e.prototype.close = function (t) {\n          this.sync(t);\n        }, e;\n      }(Ye),\n          hi = function (e) {\n        function n() {\n          e.apply(this, arguments);\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.isAvailable = function () {\n          return !0;\n        }, n.prototype.init = function (t, e) {\n          this.store = t, this.makeRootDirectory(e);\n        }, n.prototype.getName = function () {\n          return this.store.name();\n        }, n.prototype.isReadOnly = function () {\n          return !1;\n        }, n.prototype.supportsSymlinks = function () {\n          return !1;\n        }, n.prototype.supportsProps = function () {\n          return !1;\n        }, n.prototype.supportsSynch = function () {\n          return !1;\n        }, n.prototype.empty = function (t) {\n          var e = this;\n          this.store.clear(function (n) {\n            xt(n, t) && e.makeRootDirectory(t);\n          });\n        }, n.prototype.rename = function (e, n, r) {\n          var i = this,\n              o = this.store.beginTransaction(\"readwrite\"),\n              s = ke.dirname(e),\n              a = ke.basename(e),\n              c = ke.dirname(n),\n              u = ke.basename(n),\n              f = {},\n              h = {},\n              p = !1;\n          if (0 === (c + \"/\").indexOf(e + \"/\")) return r(new Fe(be.EBUSY, s));\n\n          var l = function l() {\n            if (!p && h.hasOwnProperty(s) && h.hasOwnProperty(c)) {\n              var l = h[s],\n                  d = f[s],\n                  y = h[c],\n                  g = f[c];\n\n              if (l[a]) {\n                var v = l[a];\n                delete l[a];\n\n                var m = function m() {\n                  y[u] = v, o.put(d.id, t.from(JSON.stringify(l)), !0, function (e) {\n                    At(e, o, r) && (s === c ? o.commit(r) : o.put(g.id, t.from(JSON.stringify(y)), !0, function (t) {\n                      At(t, o, r) && o.commit(r);\n                    }));\n                  });\n                };\n\n                y[u] ? i.getINode(o, n, y[u], function (t, e) {\n                  At(t, o, r) && (e.isFile() ? o.del(e.id, function (t) {\n                    At(t, o, r) && o.del(y[u], function (t) {\n                      At(t, o, r) && m();\n                    });\n                  }) : o.abort(function (t) {\n                    r(Fe.EPERM(n));\n                  }));\n                }) : m();\n              } else r(Fe.ENOENT(e));\n            }\n          },\n              d = function d(t) {\n            i.findINodeAndDirListing(o, t, function (e, n, i) {\n              e ? p || (p = !0, o.abort(function () {\n                r(e);\n              })) : (f[t] = n, h[t] = i, l());\n            });\n          };\n\n          d(s), s !== c && d(c);\n        }, n.prototype.stat = function (t, e, n) {\n          var r = this.store.beginTransaction(\"readonly\");\n          this.findINode(r, t, function (t, e) {\n            xt(t, n) && n(null, e.toStats());\n          });\n        }, n.prototype.createFile = function (t, e, n, r) {\n          var i = this,\n              o = this.store.beginTransaction(\"readwrite\"),\n              s = S();\n          this.commitNewFile(o, t, Le.FILE, n, s, function (n, o) {\n            xt(n, r) && r(null, new fi(i, t, e, o.toStats(), s));\n          });\n        }, n.prototype.openFile = function (t, e, n) {\n          var r = this,\n              i = this.store.beginTransaction(\"readonly\");\n          this.findINode(i, t, function (o, s) {\n            xt(o, n) && i.get(s.id, function (i, o) {\n              xt(i, n) && (void 0 === o ? n(Fe.ENOENT(t)) : n(null, new fi(r, t, e, s.toStats(), o)));\n            });\n          });\n        }, n.prototype.unlink = function (t, e) {\n          this.removeEntry(t, !1, e);\n        }, n.prototype.rmdir = function (t, e) {\n          var n = this;\n          this.readdir(t, function (r, i) {\n            r ? e(r) : i.length > 0 ? e(Fe.ENOTEMPTY(t)) : n.removeEntry(t, !0, e);\n          });\n        }, n.prototype.mkdir = function (e, n, r) {\n          var i = this.store.beginTransaction(\"readwrite\"),\n              o = t.from(\"{}\");\n          this.commitNewFile(i, e, Le.DIRECTORY, n, o, r);\n        }, n.prototype.readdir = function (t, e) {\n          var n = this,\n              r = this.store.beginTransaction(\"readonly\");\n          this.findINode(r, t, function (i, o) {\n            xt(i, e) && n.getDirListing(r, t, o, function (t, n) {\n              xt(t, e) && e(null, Object.keys(n));\n            });\n          });\n        }, n.prototype._sync = function (t, e, n, r) {\n          var i = this,\n              o = this.store.beginTransaction(\"readwrite\");\n\n          this._findINode(o, ke.dirname(t), ke.basename(t), function (s, a) {\n            At(s, o, r) && i.getINode(o, t, a, function (t, i) {\n              if (At(t, o, r)) {\n                var s = i.update(n);\n                o.put(i.id, e, !0, function (t) {\n                  At(t, o, r) && (s ? o.put(a, i.toBuffer(), !0, function (t) {\n                    At(t, o, r) && o.commit(r);\n                  }) : o.commit(r));\n                });\n              }\n            });\n          });\n        }, n.prototype.makeRootDirectory = function (t) {\n          var e = this.store.beginTransaction(\"readwrite\");\n          e.get(oi, function (n, r) {\n            if (n || void 0 === r) {\n              var i = new Date().getTime(),\n                  o = new ii(Tt(), 4096, 511 | Le.DIRECTORY, i, i, i);\n              e.put(o.id, Lt(), !1, function (n) {\n                At(n, e, t) && e.put(oi, o.toBuffer(), !1, function (n) {\n                  n ? e.abort(function () {\n                    t(n);\n                  }) : e.commit(t);\n                });\n              });\n            } else e.commit(t);\n          });\n        }, n.prototype._findINode = function (t, e, n, r) {\n          var i = this,\n              o = function o(t, i, _o3) {\n            t ? r(t) : _o3[n] ? r(null, _o3[n]) : r(Fe.ENOENT(ke.resolve(e, n)));\n          };\n\n          \"/\" === e ? \"\" === n ? r(null, oi) : this.getINode(t, e, oi, function (n, s) {\n            xt(n, r) && i.getDirListing(t, e, s, function (t, e) {\n              o(t, s, e);\n            });\n          }) : this.findINodeAndDirListing(t, e, o);\n        }, n.prototype.findINode = function (t, e, n) {\n          var r = this;\n\n          this._findINode(t, ke.dirname(e), ke.basename(e), function (i, o) {\n            xt(i, n) && r.getINode(t, e, o, n);\n          });\n        }, n.prototype.getINode = function (t, e, n, r) {\n          t.get(n, function (t, n) {\n            xt(t, r) && (void 0 === n ? r(Fe.ENOENT(e)) : r(null, ii.fromBuffer(n)));\n          });\n        }, n.prototype.getDirListing = function (t, e, n, r) {\n          n.isDirectory() ? t.get(n.id, function (t, n) {\n            if (xt(t, r)) try {\n              r(null, JSON.parse(n.toString()));\n            } catch (t) {\n              r(Fe.ENOENT(e));\n            }\n          }) : r(Fe.ENOTDIR(e));\n        }, n.prototype.findINodeAndDirListing = function (t, e, n) {\n          var r = this;\n          this.findINode(t, e, function (i, o) {\n            xt(i, n) && r.getDirListing(t, e, o, function (t, e) {\n              xt(t, n) && n(null, o, e);\n            });\n          });\n        }, n.prototype.addNewNode = function (t, e, n) {\n          var r,\n              i = 0,\n              o = function o() {\n            5 === ++i ? n(new Fe(be.EIO, \"Unable to commit data to key-value store.\")) : (r = Tt(), t.put(r, e, !1, function (t, e) {\n              t || !e ? o() : n(null, r);\n            }));\n          };\n\n          o();\n        }, n.prototype.commitNewFile = function (e, n, r, i, o, s) {\n          var a = this,\n              c = ke.dirname(n),\n              u = ke.basename(n),\n              f = new Date().getTime();\n          return \"/\" === n ? s(Fe.EEXIST(n)) : void this.findINodeAndDirListing(e, c, function (c, h, p) {\n            At(c, e, s) && (p[u] ? e.abort(function () {\n              s(Fe.EEXIST(n));\n            }) : a.addNewNode(e, o, function (n, c) {\n              if (At(n, e, s)) {\n                var l = new ii(c, o.length, i | r, f, f, f);\n                a.addNewNode(e, l.toBuffer(), function (n, r) {\n                  At(n, e, s) && (p[u] = r, e.put(h.id, t.from(JSON.stringify(p)), !0, function (t) {\n                    At(t, e, s) && e.commit(function (t) {\n                      At(t, e, s) && s(null, l);\n                    });\n                  }));\n                });\n              }\n            }));\n          });\n        }, n.prototype.removeEntry = function (e, n, r) {\n          var i = this,\n              o = this.store.beginTransaction(\"readwrite\"),\n              s = ke.dirname(e),\n              a = ke.basename(e);\n          this.findINodeAndDirListing(o, s, function (s, c, u) {\n            if (At(s, o, r)) if (u[a]) {\n              var f = u[a];\n              delete u[a], i.getINode(o, e, f, function (i, s) {\n                At(i, o, r) && (!n && s.isDirectory() ? o.abort(function () {\n                  r(Fe.EISDIR(e));\n                }) : n && !s.isDirectory() ? o.abort(function () {\n                  r(Fe.ENOTDIR(e));\n                }) : o.del(s.id, function (e) {\n                  At(e, o, r) && o.del(f, function (e) {\n                    At(e, o, r) && o.put(c.id, t.from(JSON.stringify(u)), !0, function (t) {\n                      At(t, o, r) && o.commit(r);\n                    });\n                  });\n                }));\n              });\n            } else o.abort(function () {\n              r(Fe.ENOENT(e));\n            });\n          });\n        }, n;\n      }(We),\n          pi = function pi() {\n        this.store = {};\n      };\n\n      pi.prototype.name = function () {\n        return li.Name;\n      }, pi.prototype.clear = function () {\n        this.store = {};\n      }, pi.prototype.beginTransaction = function (t) {\n        return new ai(this);\n      }, pi.prototype.get = function (t) {\n        return this.store[t];\n      }, pi.prototype.put = function (t, e, n) {\n        return !(!n && this.store.hasOwnProperty(t)) && (this.store[t] = e, !0);\n      }, pi.prototype.del = function (t) {\n        delete this.store[t];\n      };\n\n      var li = function (t) {\n        function e() {\n          t.call(this, {\n            store: new pi()\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          n(null, new e());\n        }, e;\n      }(ui);\n\n      li.Name = \"InMemory\", li.Options = {};\n\n      var di = ti.indexedDB || ti.mozIndexedDB || ti.webkitIndexedDB || ti.msIndexedDB,\n          yi = function yi(t, e) {\n        this.tx = t, this.store = e;\n      };\n\n      yi.prototype.get = function (t, e) {\n        try {\n          var n = this.store.get(t);\n          n.onerror = Pt(e), n.onsuccess = function (t) {\n            var n = t.target.result;\n            void 0 === n ? e(null, n) : e(null, E(n));\n          };\n        } catch (t) {\n          e(Dt(t));\n        }\n      };\n\n      var gi = function (t) {\n        function e(e, n) {\n          t.call(this, e, n);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.put = function (t, e, n, r) {\n          try {\n            var i,\n                o = v(e);\n            i = n ? this.store.put(o, t) : this.store.add(o, t), i.onerror = Pt(r), i.onsuccess = function (t) {\n              r(null, !0);\n            };\n          } catch (t) {\n            r(Dt(t));\n          }\n        }, e.prototype.del = function (t, e) {\n          try {\n            var n = this.store.delete(t);\n            n.onerror = Pt(e), n.onsuccess = function (t) {\n              e();\n            };\n          } catch (t) {\n            e(Dt(t));\n          }\n        }, e.prototype.commit = function (t) {\n          setTimeout(t, 0);\n        }, e.prototype.abort = function (t) {\n          var e = null;\n\n          try {\n            this.tx.abort();\n          } catch (t) {\n            e = Dt(t);\n          } finally {\n            t(e);\n          }\n        }, e;\n      }(yi),\n          vi = function vi(t, e) {\n        var n = this;\n        void 0 === e && (e = \"browserfs\"), this.storeName = e;\n        var r = di.open(this.storeName, 1);\n        r.onupgradeneeded = function (t) {\n          var e = t.target.result;\n          e.objectStoreNames.contains(n.storeName) && e.deleteObjectStore(n.storeName), e.createObjectStore(n.storeName);\n        }, r.onsuccess = function (e) {\n          n.db = e.target.result, t(null, n);\n        }, r.onerror = Pt(t, be.EACCES);\n      };\n\n      vi.prototype.name = function () {\n        return mi.Name + \" - \" + this.storeName;\n      }, vi.prototype.clear = function (t) {\n        try {\n          var e = this.db.transaction(this.storeName, \"readwrite\"),\n              n = e.objectStore(this.storeName),\n              r = n.clear();\n          r.onsuccess = function (e) {\n            setTimeout(t, 0);\n          }, r.onerror = Pt(t);\n        } catch (e) {\n          t(Dt(e));\n        }\n      }, vi.prototype.beginTransaction = function (t) {\n        void 0 === t && (t = \"readonly\");\n        var e = this.db.transaction(this.storeName, t),\n            n = e.objectStore(this.storeName);\n        if (\"readwrite\" === t) return new gi(e, n);\n        if (\"readonly\" === t) return new yi(e, n);\n        throw new Fe(be.EINVAL, \"Invalid transaction type.\");\n      };\n\n      var mi = function (t) {\n        function e(n, r, i) {\n          var o = this;\n          void 0 === i && (i = !0), t.call(this), this.store = new vi(function (t) {\n            t ? n(t) : o.init(o.store, function (t) {\n              n(t, o);\n            });\n          }, r), d(i, e.Name, {\n            storeName: r\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          new e(n, t.storeName, !1);\n        }, e.isAvailable = function () {\n          try {\n            return \"undefined\" != typeof di && null !== di.open(\"__browserfs_test__\");\n          } catch (t) {\n            return !1;\n          }\n        }, e;\n      }(hi);\n\n      mi.Name = \"IndexedDB\", mi.Options = {\n        storeName: {\n          type: \"string\",\n          optional: !0,\n          description: \"The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.\"\n        }\n      };\n\n      var _i,\n          wi = !1;\n\n      try {\n        ti.localStorage.setItem(\"__test__\", String.fromCharCode(55296)), wi = ti.localStorage.getItem(\"__test__\") === String.fromCharCode(55296);\n      } catch (t) {\n        wi = !1;\n      }\n\n      _i = wi ? \"binary_string\" : \"binary_string_ie\", t.isEncoding(_i) || (_i = \"base64\");\n\n      var Ei = function Ei() {};\n\n      Ei.prototype.name = function () {\n        return bi.Name;\n      }, Ei.prototype.clear = function () {\n        ti.localStorage.clear();\n      }, Ei.prototype.beginTransaction = function (t) {\n        return new ai(this);\n      }, Ei.prototype.get = function (e) {\n        try {\n          var n = ti.localStorage.getItem(e);\n          if (null !== n) return t.from(n, _i);\n        } catch (t) {}\n      }, Ei.prototype.put = function (t, e, n) {\n        try {\n          return !(!n && null !== ti.localStorage.getItem(t)) && (ti.localStorage.setItem(t, e.toString(_i)), !0);\n        } catch (t) {\n          throw new Fe(be.ENOSPC, \"LocalStorage is full.\");\n        }\n      }, Ei.prototype.del = function (t) {\n        try {\n          ti.localStorage.removeItem(t);\n        } catch (e) {\n          throw new Fe(be.EIO, \"Unable to delete key \" + t + \": \" + e);\n        }\n      };\n\n      var bi = function (t) {\n        function e() {\n          t.call(this, {\n            store: new Ei()\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          n(null, new e());\n        }, e.isAvailable = function () {\n          return \"undefined\" != typeof ti.localStorage;\n        }, e;\n      }(ui);\n\n      bi.Name = \"LocalStorage\", bi.Options = {};\n\n      var Si = function (t) {\n        function e() {\n          t.call(this), this.mountList = [], this.mntMap = {}, this.rootFs = new li();\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          var r = new e();\n          Object.keys(t).forEach(function (e) {\n            r.mount(e, t[e]);\n          }), n(null, r);\n        }, e.isAvailable = function () {\n          return !0;\n        }, e.prototype.mount = function (t, e) {\n          if (\"/\" !== t[0] && (t = \"/\" + t), t = ke.resolve(t), this.mntMap[t]) throw new Fe(be.EINVAL, \"Mount point \" + t + \" is already taken.\");\n          g(t, 511, this.rootFs), this.mntMap[t] = e, this.mountList.push(t), this.mountList = this.mountList.sort(function (t, e) {\n            return e.length - t.length;\n          });\n        }, e.prototype.umount = function (t) {\n          var e = this;\n          if (\"/\" !== t[0] && (t = \"/\" + t), t = ke.resolve(t), !this.mntMap[t]) throw new Fe(be.EINVAL, \"Mount point \" + t + \" is already unmounted.\");\n\n          for (delete this.mntMap[t], this.mountList.splice(this.mountList.indexOf(t), 1); \"/\" !== t && 0 === e.rootFs.readdirSync(t).length;) {\n            e.rootFs.rmdirSync(t), t = ke.dirname(t);\n          }\n        }, e.prototype._getFs = function (t) {\n          for (var e = this, n = this.mountList, r = n.length, i = 0; i < r; i++) {\n            var o = n[i];\n            if (o.length <= t.length && 0 === t.indexOf(o)) return t = t.substr(o.length > 1 ? o.length : 0), \"\" === t && (t = \"/\"), {\n              fs: e.mntMap[o],\n              path: t\n            };\n          }\n\n          return {\n            fs: this.rootFs,\n            path: t\n          };\n        }, e.prototype.getName = function () {\n          return e.Name;\n        }, e.prototype.diskSpace = function (t, e) {\n          e(0, 0);\n        }, e.prototype.isReadOnly = function () {\n          return !1;\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.standardizeError = function (t, e, n) {\n          var r = t.message.indexOf(e);\n          return r !== -1 && (t.message = t.message.substr(0, r) + n + t.message.substr(r + e.length), t.path = n), t;\n        }, e.prototype.rename = function (t, e, n) {\n          var r = this,\n              i = this._getFs(t),\n              o = this._getFs(e);\n\n          return i.fs === o.fs ? i.fs.rename(i.path, o.path, function (s) {\n            s && r.standardizeError(r.standardizeError(s, i.path, t), o.path, e), n(s);\n          }) : Pe.readFile(t, function (r, i) {\n            return r ? n(r) : void Pe.writeFile(e, i, function (e) {\n              return e ? n(e) : void Pe.unlink(t, n);\n            });\n          });\n        }, e.prototype.renameSync = function (t, e) {\n          var n = this._getFs(t),\n              r = this._getFs(e);\n\n          if (n.fs === r.fs) try {\n            return n.fs.renameSync(n.path, r.path);\n          } catch (i) {\n            throw this.standardizeError(this.standardizeError(i, n.path, t), r.path, e), i;\n          }\n          var i = Pe.readFileSync(t);\n          return Pe.writeFileSync(e, i), Pe.unlinkSync(t);\n        }, e.prototype.readdirSync = function (t) {\n          var e = this._getFs(t),\n              n = null;\n\n          if (e.fs !== this.rootFs) try {\n            n = this.rootFs.readdirSync(t);\n          } catch (t) {}\n\n          try {\n            var r = e.fs.readdirSync(e.path);\n            return null === n ? r : r.concat(n.filter(function (t) {\n              return r.indexOf(t) === -1;\n            }));\n          } catch (r) {\n            if (null === n) throw this.standardizeError(r, e.path, t);\n            return n;\n          }\n        }, e.prototype.readdir = function (t, e) {\n          var n = this,\n              r = this._getFs(t);\n\n          r.fs.readdir(r.path, function (i, o) {\n            if (r.fs !== n.rootFs) try {\n              var s = n.rootFs.readdirSync(t);\n              o = o ? o.concat(s.filter(function (t) {\n                return o.indexOf(t) === -1;\n              })) : s;\n            } catch (o) {\n              if (i) return e(n.standardizeError(i, r.path, t));\n            } else if (i) return e(n.standardizeError(i, r.path, t));\n            e(null, o);\n          });\n        }, e.prototype.rmdirSync = function (t) {\n          var e = this._getFs(t);\n\n          if (this._containsMountPt(t)) throw Fe.ENOTEMPTY(t);\n\n          try {\n            e.fs.rmdirSync(e.path);\n          } catch (n) {\n            throw this.standardizeError(n, e.path, t);\n          }\n        }, e.prototype.rmdir = function (t, e) {\n          var n = this,\n              r = this._getFs(t);\n\n          this._containsMountPt(t) ? e(Fe.ENOTEMPTY(t)) : r.fs.rmdir(r.path, function (i) {\n            e(i ? n.standardizeError(i, r.path, t) : null);\n          });\n        }, e.prototype._containsMountPt = function (t) {\n          for (var e = this.mountList, n = e.length, r = 0; r < n; r++) {\n            var i = e[r];\n            if (i.length >= t.length && i.slice(0, t.length) === t) return !0;\n          }\n\n          return !1;\n        }, e;\n      }(We);\n\n      Si.Name = \"MountableFileSystem\", Si.Options = {};\n\n      for (var ki = [[\"exists\", \"unlink\", \"readlink\"], [\"stat\", \"mkdir\", \"realpath\", \"truncate\"], [\"open\", \"readFile\", \"chmod\", \"utimes\"], [\"chown\"], [\"writeFile\", \"appendFile\"]], Ii = 0; Ii < ki.length; Ii++) {\n        for (var Oi = ki[Ii], Fi = 0, Ni = Oi; Fi < Ni.length; Fi += 1) {\n          var Ri = Ni[Fi];\n          Si.prototype[Ri] = Ct(Ri, !1, Ii + 1), Si.prototype[Ri + \"Sync\"] = Ct(Ri + \"Sync\", !0, Ii + 1);\n        }\n      }\n\n      var Li;\n      if (\"undefined\" != typeof setImmediate) Li = setImmediate;else {\n        var Ti = ti,\n            xi = [],\n            Ai = \"zero-timeout-message\",\n            Di = function Di() {\n          if (\"undefined\" != typeof Ti.importScripts || !Ti.postMessage) return !1;\n          var t = !0,\n              e = Ti.onmessage;\n          return Ti.onmessage = function () {\n            t = !1;\n          }, Ti.postMessage(\"\", \"*\"), Ti.onmessage = e, t;\n        };\n\n        if (Di()) {\n          Li = function Li(t) {\n            xi.push(t), Ti.postMessage(Ai, \"*\");\n          };\n\n          var Pi = function Pi(t) {\n            if (t.source === self && t.data === Ai && (t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, xi.length > 0)) {\n              var e = xi.shift();\n              return e();\n            }\n          };\n\n          Ti.addEventListener ? Ti.addEventListener(\"message\", Pi, !0) : Ti.attachEvent(\"onmessage\", Pi);\n        } else if (Ti.MessageChannel) {\n          var Ci = new Ti.MessageChannel();\n          Ci.port1.onmessage = function (t) {\n            if (xi.length > 0) return xi.shift()();\n          }, Li = function Li(t) {\n            xi.push(t), Ci.port2.postMessage(\"\");\n          };\n        } else Li = function Li(t) {\n          return setTimeout(t, 0);\n        };\n      }\n\n      var Ui = Li,\n          Mi = function Mi() {\n        this._locked = !1, this._waiters = [];\n      };\n\n      Mi.prototype.lock = function (t) {\n        return this._locked ? void this._waiters.push(t) : (this._locked = !0, void t());\n      }, Mi.prototype.unlock = function () {\n        if (!this._locked) throw new Error(\"unlock of a non-locked mutex\");\n\n        var t = this._waiters.shift();\n\n        return t ? void Ui(t) : void (this._locked = !1);\n      }, Mi.prototype.tryLock = function () {\n        return !this._locked && (this._locked = !0, !0);\n      }, Mi.prototype.isLocked = function () {\n        return this._locked;\n      };\n\n      var ji = function ji(t) {\n        this._fs = t, this._mu = new Mi();\n      };\n\n      ji.prototype.getName = function () {\n        return \"LockedFS<\" + this._fs.getName() + \">\";\n      }, ji.prototype.getFSUnlocked = function () {\n        return this._fs;\n      }, ji.prototype.initialize = function (t) {\n        this._fs.initialize(t);\n      }, ji.prototype.diskSpace = function (t, e) {\n        this._fs.diskSpace(t, e);\n      }, ji.prototype.isReadOnly = function () {\n        return this._fs.isReadOnly();\n      }, ji.prototype.supportsLinks = function () {\n        return this._fs.supportsLinks();\n      }, ji.prototype.supportsProps = function () {\n        return this._fs.supportsProps();\n      }, ji.prototype.supportsSynch = function () {\n        return this._fs.supportsSynch();\n      }, ji.prototype.rename = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.rename(t, e, function (t) {\n            r._mu.unlock(), n(t);\n          });\n        });\n      }, ji.prototype.renameSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.renameSync(t, e);\n      }, ji.prototype.stat = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.stat(t, e, function (t, e) {\n            r._mu.unlock(), n(t, e);\n          });\n        });\n      }, ji.prototype.statSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.statSync(t, e);\n      }, ji.prototype.open = function (t, e, n, r) {\n        var i = this;\n\n        this._mu.lock(function () {\n          i._fs.open(t, e, n, function (t, e) {\n            i._mu.unlock(), r(t, e);\n          });\n        });\n      }, ji.prototype.openSync = function (t, e, n) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.openSync(t, e, n);\n      }, ji.prototype.unlink = function (t, e) {\n        var n = this;\n\n        this._mu.lock(function () {\n          n._fs.unlink(t, function (t) {\n            n._mu.unlock(), e(t);\n          });\n        });\n      }, ji.prototype.unlinkSync = function (t) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.unlinkSync(t);\n      }, ji.prototype.rmdir = function (t, e) {\n        var n = this;\n\n        this._mu.lock(function () {\n          n._fs.rmdir(t, function (t) {\n            n._mu.unlock(), e(t);\n          });\n        });\n      }, ji.prototype.rmdirSync = function (t) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.rmdirSync(t);\n      }, ji.prototype.mkdir = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.mkdir(t, e, function (t) {\n            r._mu.unlock(), n(t);\n          });\n        });\n      }, ji.prototype.mkdirSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.mkdirSync(t, e);\n      }, ji.prototype.readdir = function (t, e) {\n        var n = this;\n\n        this._mu.lock(function () {\n          n._fs.readdir(t, function (t, r) {\n            n._mu.unlock(), e(t, r);\n          });\n        });\n      }, ji.prototype.readdirSync = function (t) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.readdirSync(t);\n      }, ji.prototype.exists = function (t, e) {\n        var n = this;\n\n        this._mu.lock(function () {\n          n._fs.exists(t, function (t) {\n            n._mu.unlock(), e(t);\n          });\n        });\n      }, ji.prototype.existsSync = function (t) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.existsSync(t);\n      }, ji.prototype.realpath = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.realpath(t, e, function (t, e) {\n            r._mu.unlock(), n(t, e);\n          });\n        });\n      }, ji.prototype.realpathSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.realpathSync(t, e);\n      }, ji.prototype.truncate = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.truncate(t, e, function (t) {\n            r._mu.unlock(), n(t);\n          });\n        });\n      }, ji.prototype.truncateSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.truncateSync(t, e);\n      }, ji.prototype.readFile = function (t, e, n, r) {\n        var i = this;\n\n        this._mu.lock(function () {\n          i._fs.readFile(t, e, n, function (t, e) {\n            i._mu.unlock(), r(t, e);\n          });\n        });\n      }, ji.prototype.readFileSync = function (t, e, n) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.readFileSync(t, e, n);\n      }, ji.prototype.writeFile = function (t, e, n, r, i, o) {\n        var s = this;\n\n        this._mu.lock(function () {\n          s._fs.writeFile(t, e, n, r, i, function (t) {\n            s._mu.unlock(), o(t);\n          });\n        });\n      }, ji.prototype.writeFileSync = function (t, e, n, r, i) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.writeFileSync(t, e, n, r, i);\n      }, ji.prototype.appendFile = function (t, e, n, r, i, o) {\n        var s = this;\n\n        this._mu.lock(function () {\n          s._fs.appendFile(t, e, n, r, i, function (t) {\n            s._mu.unlock(), o(t);\n          });\n        });\n      }, ji.prototype.appendFileSync = function (t, e, n, r, i) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.appendFileSync(t, e, n, r, i);\n      }, ji.prototype.chmod = function (t, e, n, r) {\n        var i = this;\n\n        this._mu.lock(function () {\n          i._fs.chmod(t, e, n, function (t) {\n            i._mu.unlock(), r(t);\n          });\n        });\n      }, ji.prototype.chmodSync = function (t, e, n) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.chmodSync(t, e, n);\n      }, ji.prototype.chown = function (t, e, n, r, i) {\n        var o = this;\n\n        this._mu.lock(function () {\n          o._fs.chown(t, e, n, r, function (t) {\n            o._mu.unlock(), i(t);\n          });\n        });\n      }, ji.prototype.chownSync = function (t, e, n, r) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.chownSync(t, e, n, r);\n      }, ji.prototype.utimes = function (t, e, n, r) {\n        var i = this;\n\n        this._mu.lock(function () {\n          i._fs.utimes(t, e, n, function (t) {\n            i._mu.unlock(), r(t);\n          });\n        });\n      }, ji.prototype.utimesSync = function (t, e, n) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.utimesSync(t, e, n);\n      }, ji.prototype.link = function (t, e, n) {\n        var r = this;\n\n        this._mu.lock(function () {\n          r._fs.link(t, e, function (t) {\n            r._mu.unlock(), n(t);\n          });\n        });\n      }, ji.prototype.linkSync = function (t, e) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.linkSync(t, e);\n      }, ji.prototype.symlink = function (t, e, n, r) {\n        var i = this;\n\n        this._mu.lock(function () {\n          i._fs.symlink(t, e, n, function (t) {\n            i._mu.unlock(), r(t);\n          });\n        });\n      }, ji.prototype.symlinkSync = function (t, e, n) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.symlinkSync(t, e, n);\n      }, ji.prototype.readlink = function (t, e) {\n        var n = this;\n\n        this._mu.lock(function () {\n          n._fs.readlink(t, function (t, r) {\n            n._mu.unlock(), e(t, r);\n          });\n        });\n      }, ji.prototype.readlinkSync = function (t) {\n        if (this._mu.isLocked()) throw new Error(\"invalid sync call\");\n        return this._fs.readlinkSync(t);\n      };\n\n      var Bi = \"/.deletedFiles.log\",\n          zi = function (t) {\n        function e(e, n, r, i, o) {\n          t.call(this, e, n, r, i, o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.sync = function (t) {\n          var e = this;\n          return this.isDirty() ? void this._fs._syncAsync(this, function (n) {\n            e.resetDirty(), t(n);\n          }) : void t(null);\n        }, e.prototype.syncSync = function () {\n          this.isDirty() && (this._fs._syncSync(this), this.resetDirty());\n        }, e.prototype.close = function (t) {\n          this.sync(t);\n        }, e.prototype.closeSync = function () {\n          this.syncSync();\n        }, e;\n      }(Ye),\n          qi = function (t) {\n        function e(e, n) {\n          if (t.call(this), this._isInitialized = !1, this._initializeCallbacks = [], this._deletedFiles = {}, this._deleteLog = \"\", this._deleteLogUpdatePending = !1, this._deleteLogUpdateNeeded = !1, this._deleteLogError = null, this._writable = e, this._readable = n, this._writable.isReadOnly()) throw new Fe(be.EINVAL, \"Writable file system must be writable.\");\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.isAvailable = function () {\n          return !0;\n        }, e.prototype.getOverlayedFileSystems = function () {\n          return {\n            readable: this._readable,\n            writable: this._writable\n          };\n        }, e.prototype._syncAsync = function (t, e) {\n          var n = this;\n          this.createParentDirectoriesAsync(t.getPath(), function (r) {\n            return r ? e(r) : void n._writable.writeFile(t.getPath(), t.getBuffer(), null, Mt(\"w\"), t.getStats().mode, e);\n          });\n        }, e.prototype._syncSync = function (t) {\n          this.createParentDirectories(t.getPath()), this._writable.writeFileSync(t.getPath(), t.getBuffer(), null, Mt(\"w\"), t.getStats().mode);\n        }, e.prototype.getName = function () {\n          return Vi.Name;\n        }, e.prototype.initialize = function (t) {\n          var e = this,\n              n = this._initializeCallbacks,\n              r = function r(t) {\n            e._isInitialized = !t, e._initializeCallbacks = [], n.forEach(function (e) {\n              return e(t);\n            });\n          };\n\n          return this._isInitialized ? t() : (n.push(t), void (1 === n.length && this._writable.readFile(Bi, \"utf8\", Mt(\"r\"), function (t, n) {\n            if (t) {\n              if (t.errno !== be.ENOENT) return r(t);\n            } else e._deleteLog = n;\n\n            e._reparseDeletionLog(), r();\n          })));\n        }, e.prototype.isReadOnly = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return this._readable.supportsSynch() && this._writable.supportsSynch();\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return this._readable.supportsProps() && this._writable.supportsProps();\n        }, e.prototype.getDeletionLog = function () {\n          return this._deleteLog;\n        }, e.prototype.restoreDeletionLog = function (t) {\n          this._deleteLog = t, this._reparseDeletionLog(), this.updateLog(\"\");\n        }, e.prototype.rename = function (t, e, n) {\n          var r = this;\n          if (this.checkInitAsync(n) && !this.checkPathAsync(t, n) && !this.checkPathAsync(e, n)) return t === Bi || e === Bi ? n(Fe.EPERM(\"Cannot rename deletion log.\")) : t === e ? n() : void this.stat(t, !1, function (i, o) {\n            return i ? n(i) : r.stat(e, !1, function (i, s) {\n              function a(r) {\n                var i = r.shift();\n                if (!i) return n();\n                var o = ke.resolve(t, i),\n                    s = ke.resolve(e, i);\n                c.rename(o, s, function (t) {\n                  return t ? n(t) : void a(r);\n                });\n              }\n\n              var c = r,\n                  u = 511;\n\n              if (o.isDirectory()) {\n                if (i) return i.errno !== be.ENOENT ? n(i) : r._writable.exists(t, function (i) {\n                  return i ? r._writable.rename(t, e, n) : void r._writable.mkdir(e, u, function (e) {\n                    return e ? n(e) : void r._readable.readdir(t, function (t, e) {\n                      return t ? n() : void a(e);\n                    });\n                  });\n                });\n                if (u = s.mode, !s.isDirectory()) return n(Fe.ENOTDIR(e));\n                r.readdir(e, function (i, o) {\n                  return o && o.length ? n(Fe.ENOTEMPTY(e)) : void r._readable.readdir(t, function (t, e) {\n                    return t ? n() : void a(e);\n                  });\n                });\n              }\n\n              return s && s.isDirectory() ? n(Fe.EISDIR(e)) : void r.readFile(t, null, Mt(\"r\"), function (i, s) {\n                return i ? n(i) : r.writeFile(e, s, null, Mt(\"w\"), o.mode, function (e) {\n                  return e ? n(e) : r.unlink(t, n);\n                });\n              });\n            });\n          });\n        }, e.prototype.renameSync = function (t, e) {\n          var n = this;\n          if (this.checkInitialized(), this.checkPath(t), this.checkPath(e), t === Bi || e === Bi) throw Fe.EPERM(\"Cannot rename deletion log.\");\n          var r = this.statSync(t, !1);\n\n          if (r.isDirectory()) {\n            if (t === e) return;\n            var i = 511;\n\n            if (this.existsSync(e)) {\n              var o = this.statSync(e, !1);\n              if (i = o.mode, !o.isDirectory()) throw Fe.ENOTDIR(e);\n              if (this.readdirSync(e).length > 0) throw Fe.ENOTEMPTY(e);\n            }\n\n            this._writable.existsSync(t) ? this._writable.renameSync(t, e) : this._writable.existsSync(e) || this._writable.mkdirSync(e, i), this._readable.existsSync(t) && this._readable.readdirSync(t).forEach(function (r) {\n              n.renameSync(ke.resolve(t, r), ke.resolve(e, r));\n            });\n          } else {\n            if (this.existsSync(e) && this.statSync(e, !1).isDirectory()) throw Fe.EISDIR(e);\n            this.writeFileSync(e, this.readFileSync(t, null, Mt(\"r\")), null, Mt(\"w\"), r.mode);\n          }\n\n          t !== e && this.existsSync(t) && this.unlinkSync(t);\n        }, e.prototype.stat = function (t, e, n) {\n          var r = this;\n          this.checkInitAsync(n) && this._writable.stat(t, e, function (i, o) {\n            i && i.errno === be.ENOENT ? (r._deletedFiles[t] && n(Fe.ENOENT(t)), r._readable.stat(t, e, function (t, e) {\n              e && (e = e.clone(), e.mode = Ut(e.mode)), n(t, e);\n            })) : n(i, o);\n          });\n        }, e.prototype.statSync = function (t, e) {\n          this.checkInitialized();\n\n          try {\n            return this._writable.statSync(t, e);\n          } catch (r) {\n            if (this._deletedFiles[t]) throw Fe.ENOENT(t);\n\n            var n = this._readable.statSync(t, e).clone();\n\n            return n.mode = Ut(n.mode), n;\n          }\n        }, e.prototype.open = function (t, e, n, r) {\n          var i = this;\n          this.checkInitAsync(r) && !this.checkPathAsync(t, r) && this.stat(t, !1, function (o, s) {\n            if (s) switch (e.pathExistsAction()) {\n              case Oe.TRUNCATE_FILE:\n                return i.createParentDirectoriesAsync(t, function (o) {\n                  return o ? r(o) : void i._writable.open(t, e, n, r);\n                });\n\n              case Oe.NOP:\n                return i._writable.exists(t, function (o) {\n                  o ? i._writable.open(t, e, n, r) : (s = s.clone(), s.mode = n, i._readable.readFile(t, null, Mt(\"r\"), function (n, o) {\n                    if (n) return r(n);\n                    s.size === -1 && (s.size = o.length);\n                    var a = new zi(i, t, e, s, o);\n                    r(null, a);\n                  }));\n                });\n\n              default:\n                return r(Fe.EEXIST(t));\n            } else switch (e.pathNotExistsAction()) {\n              case Oe.CREATE_FILE:\n                return i.createParentDirectoriesAsync(t, function (o) {\n                  return o ? r(o) : i._writable.open(t, e, n, r);\n                });\n\n              default:\n                return r(Fe.ENOENT(t));\n            }\n          });\n        }, e.prototype.openSync = function (t, e, n) {\n          if (this.checkInitialized(), this.checkPath(t), t === Bi) throw Fe.EPERM(\"Cannot open deletion log.\");\n          if (this.existsSync(t)) switch (e.pathExistsAction()) {\n            case Oe.TRUNCATE_FILE:\n              return this.createParentDirectories(t), this._writable.openSync(t, e, n);\n\n            case Oe.NOP:\n              if (this._writable.existsSync(t)) return this._writable.openSync(t, e, n);\n\n              var r = this._readable.readFileSync(t, null, Mt(\"r\")),\n                  i = this._readable.statSync(t, !1).clone();\n\n              return i.mode = n, new zi(this, t, e, i, r);\n\n            default:\n              throw Fe.EEXIST(t);\n          } else switch (e.pathNotExistsAction()) {\n            case Oe.CREATE_FILE:\n              return this.createParentDirectories(t), this._writable.openSync(t, e, n);\n\n            default:\n              throw Fe.ENOENT(t);\n          }\n        }, e.prototype.unlink = function (t, e) {\n          var n = this;\n          this.checkInitAsync(e) && !this.checkPathAsync(t, e) && this.exists(t, function (r) {\n            return r ? void n._writable.exists(t, function (r) {\n              return r ? n._writable.unlink(t, function (r) {\n                return r ? e(r) : void n.exists(t, function (r) {\n                  r && n.deletePath(t), e(null);\n                });\n              }) : (n.deletePath(t), void e(null));\n            }) : e(Fe.ENOENT(t));\n          });\n        }, e.prototype.unlinkSync = function (t) {\n          if (this.checkInitialized(), this.checkPath(t), !this.existsSync(t)) throw Fe.ENOENT(t);\n          this._writable.existsSync(t) && this._writable.unlinkSync(t), this.existsSync(t) && this.deletePath(t);\n        }, e.prototype.rmdir = function (t, e) {\n          var n = this;\n\n          if (this.checkInitAsync(e)) {\n            var r = function r() {\n              n.readdir(t, function (r, i) {\n                return r ? e(r) : i.length ? e(Fe.ENOTEMPTY(t)) : (n.deletePath(t), void e(null));\n              });\n            };\n\n            this.exists(t, function (i) {\n              return i ? void n._writable.exists(t, function (i) {\n                i ? n._writable.rmdir(t, function (i) {\n                  return i ? e(i) : void n._readable.exists(t, function (t) {\n                    t ? r() : e();\n                  });\n                }) : r();\n              }) : e(Fe.ENOENT(t));\n            });\n          }\n        }, e.prototype.rmdirSync = function (t) {\n          if (this.checkInitialized(), !this.existsSync(t)) throw Fe.ENOENT(t);\n\n          if (this._writable.existsSync(t) && this._writable.rmdirSync(t), this.existsSync(t)) {\n            if (this.readdirSync(t).length > 0) throw Fe.ENOTEMPTY(t);\n            this.deletePath(t);\n          }\n        }, e.prototype.mkdir = function (t, e, n) {\n          var r = this;\n          this.checkInitAsync(n) && this.exists(t, function (i) {\n            return i ? n(Fe.EEXIST(t)) : void r.createParentDirectoriesAsync(t, function (i) {\n              return i ? n(i) : void r._writable.mkdir(t, e, n);\n            });\n          });\n        }, e.prototype.mkdirSync = function (t, e) {\n          if (this.checkInitialized(), this.existsSync(t)) throw Fe.EEXIST(t);\n          this.createParentDirectories(t), this._writable.mkdirSync(t, e);\n        }, e.prototype.readdir = function (t, e) {\n          var n = this;\n          this.checkInitAsync(e) && this.stat(t, !1, function (r, i) {\n            return r ? e(r) : i.isDirectory() ? void n._writable.readdir(t, function (r, i) {\n              return r && \"ENOENT\" !== r.code ? e(r) : (!r && i || (i = []), void n._readable.readdir(t, function (r, o) {\n                !r && o || (o = []);\n                var s = {},\n                    a = i.concat(o.filter(function (e) {\n                  return !n._deletedFiles[t + \"/\" + e];\n                })).filter(function (t) {\n                  var e = !s[t];\n                  return s[t] = !0, e;\n                });\n                e(null, a);\n              }));\n            }) : e(Fe.ENOTDIR(t));\n          });\n        }, e.prototype.readdirSync = function (t) {\n          var e = this;\n          this.checkInitialized();\n          var n = this.statSync(t, !1);\n          if (!n.isDirectory()) throw Fe.ENOTDIR(t);\n          var r = [];\n\n          try {\n            r = r.concat(this._writable.readdirSync(t));\n          } catch (t) {}\n\n          try {\n            r = r.concat(this._readable.readdirSync(t).filter(function (n) {\n              return !e._deletedFiles[t + \"/\" + n];\n            }));\n          } catch (t) {}\n\n          var i = {};\n          return r.filter(function (t) {\n            var e = !i[t];\n            return i[t] = !0, e;\n          });\n        }, e.prototype.exists = function (t, e) {\n          var n = this;\n          this.checkInitialized(), this._writable.exists(t, function (r) {\n            return r ? e(!0) : void n._readable.exists(t, function (r) {\n              e(r && n._deletedFiles[t] !== !0);\n            });\n          });\n        }, e.prototype.existsSync = function (t) {\n          return this.checkInitialized(), this._writable.existsSync(t) || this._readable.existsSync(t) && this._deletedFiles[t] !== !0;\n        }, e.prototype.chmod = function (t, e, n, r) {\n          var i = this;\n          this.checkInitAsync(r) && this.operateOnWritableAsync(t, function (o) {\n            return o ? r(o) : void i._writable.chmod(t, e, n, r);\n          });\n        }, e.prototype.chmodSync = function (t, e, n) {\n          var r = this;\n          this.checkInitialized(), this.operateOnWritable(t, function () {\n            r._writable.chmodSync(t, e, n);\n          });\n        }, e.prototype.chown = function (t, e, n, r, i) {\n          var o = this;\n          this.checkInitAsync(i) && this.operateOnWritableAsync(t, function (s) {\n            return s ? i(s) : void o._writable.chown(t, e, n, r, i);\n          });\n        }, e.prototype.chownSync = function (t, e, n, r) {\n          var i = this;\n          this.checkInitialized(), this.operateOnWritable(t, function () {\n            i._writable.chownSync(t, e, n, r);\n          });\n        }, e.prototype.utimes = function (t, e, n, r) {\n          var i = this;\n          this.checkInitAsync(r) && this.operateOnWritableAsync(t, function (o) {\n            return o ? r(o) : void i._writable.utimes(t, e, n, r);\n          });\n        }, e.prototype.utimesSync = function (t, e, n) {\n          var r = this;\n          this.checkInitialized(), this.operateOnWritable(t, function () {\n            r._writable.utimesSync(t, e, n);\n          });\n        }, e.prototype.deletePath = function (t) {\n          this._deletedFiles[t] = !0, this.updateLog(\"d\" + t + \"\\n\");\n        }, e.prototype.updateLog = function (t) {\n          var e = this;\n          this._deleteLog += t, this._deleteLogUpdatePending ? this._deleteLogUpdateNeeded = !0 : (this._deleteLogUpdatePending = !0, this._writable.writeFile(Bi, this._deleteLog, \"utf8\", Re.getFileFlag(\"w\"), 420, function (t) {\n            e._deleteLogUpdatePending = !1, t ? e._deleteLogError = t : e._deleteLogUpdateNeeded && (e._deleteLogUpdateNeeded = !1, e.updateLog(\"\"));\n          }));\n        }, e.prototype._reparseDeletionLog = function () {\n          var t = this;\n          this._deletedFiles = {}, this._deleteLog.split(\"\\n\").forEach(function (e) {\n            t._deletedFiles[e.slice(1)] = \"d\" === e.slice(0, 1);\n          });\n        }, e.prototype.checkInitialized = function () {\n          if (!this._isInitialized) throw new Fe(be.EPERM, \"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\");\n\n          if (null !== this._deleteLogError) {\n            var t = this._deleteLogError;\n            throw this._deleteLogError = null, t;\n          }\n        }, e.prototype.checkInitAsync = function (t) {\n          if (!this._isInitialized) return t(new Fe(be.EPERM, \"OverlayFS is not initialized. Please initialize OverlayFS using its initialize() method before using it.\")), !1;\n\n          if (null !== this._deleteLogError) {\n            var e = this._deleteLogError;\n            return this._deleteLogError = null, t(e), !1;\n          }\n\n          return !0;\n        }, e.prototype.checkPath = function (t) {\n          if (t === Bi) throw Fe.EPERM(t);\n        }, e.prototype.checkPathAsync = function (t, e) {\n          return t === Bi && (e(Fe.EPERM(t)), !0);\n        }, e.prototype.createParentDirectoriesAsync = function (t, e) {\n          function n(t, e) {\n            t ? (o.push(i), i = ke.dirname(i), s._writable.stat(i, !1, n)) : r();\n          }\n\n          function r() {\n            if (!o.length) return e();\n            var t = o.pop();\n\n            s._readable.stat(t, !1, function (n, i) {\n              return i ? void s._writable.mkdir(t, i.mode, function (t) {\n                return t ? e(t) : void r();\n              }) : e();\n            });\n          }\n\n          var i = ke.dirname(t),\n              o = [],\n              s = this;\n\n          this._writable.stat(i, !1, n);\n        }, e.prototype.createParentDirectories = function (t) {\n          for (var e = this, n = ke.dirname(t), r = []; !this._writable.existsSync(n);) {\n            r.push(n), n = ke.dirname(n);\n          }\n\n          r = r.reverse(), r.forEach(function (t) {\n            e._writable.mkdirSync(t, e.statSync(t, !1).mode);\n          });\n        }, e.prototype.operateOnWritable = function (t, e) {\n          if (!this.existsSync(t)) throw Fe.ENOENT(t);\n          this._writable.existsSync(t) || this.copyToWritable(t), e();\n        }, e.prototype.operateOnWritableAsync = function (t, e) {\n          var n = this;\n          this.exists(t, function (r) {\n            return r ? void n._writable.exists(t, function (r) {\n              return r ? void e() : n.copyToWritableAsync(t, e);\n            }) : e(Fe.ENOENT(t));\n          });\n        }, e.prototype.copyToWritable = function (t) {\n          var e = this.statSync(t, !1);\n          e.isDirectory() ? this._writable.mkdirSync(t, e.mode) : this.writeFileSync(t, this._readable.readFileSync(t, null, Mt(\"r\")), null, Mt(\"w\"), this.statSync(t, !1).mode);\n        }, e.prototype.copyToWritableAsync = function (t, e) {\n          var n = this;\n          this.stat(t, !1, function (r, i) {\n            return r ? e(r) : i.isDirectory() ? n._writable.mkdir(t, i.mode, e) : void n._readable.readFile(t, null, Mt(\"r\"), function (r, o) {\n              return r ? e(r) : void n.writeFile(t, o, null, Mt(\"w\"), i.mode, e);\n            });\n          });\n        }, e;\n      }(We),\n          Vi = function (t) {\n        function e(n, r, i) {\n          void 0 === i && (i = !0), t.call(this, new qi(n, r)), d(i, e.Name, {\n            readable: \"readable file system\",\n            writable: \"writable file system\"\n          });\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          try {\n            var r = new e(t.writable, t.readable, !1);\n            r.initialize(function (t) {\n              n(t, r);\n            }, !1);\n          } catch (t) {\n            n(t);\n          }\n        }, e.isAvailable = function () {\n          return qi.isAvailable();\n        }, e.prototype.initialize = function (e, n) {\n          void 0 === n && (n = !0), n && console.warn(\"[OverlayFS] OverlayFS.initialize() is deprecated and will be removed in the next major release. Please use 'OverlayFS.Create({readable: readable file system instance, writable: writable file system instance}, cb)' to create and initialize OverlayFS instances.\"), t.prototype.initialize.call(this, e);\n        }, e.prototype.getOverlayedFileSystems = function () {\n          return t.prototype.getFSUnlocked.call(this).getOverlayedFileSystems();\n        }, e.prototype.unwrap = function () {\n          return t.prototype.getFSUnlocked.call(this);\n        }, e;\n      }(ji);\n\n      Vi.Name = \"OverlayFS\", Vi.Options = {\n        writable: {\n          type: \"object\",\n          description: \"The file system to write modified files to.\"\n        },\n        readable: {\n          type: \"object\",\n          description: \"The file system that initially populates this file system.\"\n        }\n      };\n      var Wi;\n      !function (t) {\n        t[t.CB = 0] = \"CB\", t[t.FD = 1] = \"FD\", t[t.API_ERROR = 2] = \"API_ERROR\", t[t.STATS = 3] = \"STATS\", t[t.PROBE = 4] = \"PROBE\", t[t.FILEFLAG = 5] = \"FILEFLAG\", t[t.BUFFER = 6] = \"BUFFER\", t[t.ERROR = 7] = \"ERROR\";\n      }(Wi || (Wi = {}));\n\n      var Hi = function Hi() {\n        this._callbacks = {}, this._nextId = 0;\n      };\n\n      Hi.prototype.toRemoteArg = function (t) {\n        var e = this._nextId++;\n        return this._callbacks[e] = t, {\n          type: Wi.CB,\n          id: e\n        };\n      }, Hi.prototype.toLocalArg = function (t) {\n        var e = this._callbacks[t];\n        return delete this._callbacks[t], e;\n      };\n\n      var Zi = function Zi() {\n        this._fileDescriptors = {}, this._nextId = 0;\n      };\n\n      Zi.prototype.toRemoteArg = function (e, n, r, i) {\n        var o,\n            s,\n            a = this._nextId++;\n        this._fileDescriptors[a] = e, e.stat(function (c, u) {\n          c ? i(c) : (s = Yt(u.toBuffer()), r.isReadable() ? e.read(t.alloc(u.size), 0, u.size, 0, function (t, e, c) {\n            t ? i(t) : (o = Yt(c), i(null, {\n              type: Wi.FD,\n              id: a,\n              data: o,\n              stat: s,\n              path: n,\n              flag: r.getFlagString()\n            }));\n          }) : i(null, {\n            type: Wi.FD,\n            id: a,\n            data: new ArrayBuffer(0),\n            stat: s,\n            path: n,\n            flag: r.getFlagString()\n          }));\n        });\n      }, Zi.prototype.applyFdAPIRequest = function (t, e) {\n        var n = this,\n            r = t.args[0];\n\n        this._applyFdChanges(r, function (i, o) {\n          i ? e(i) : o[t.method](function (i) {\n            \"close\" === t.method && delete n._fileDescriptors[r.id], e(i);\n          });\n        });\n      }, Zi.prototype._applyFdChanges = function (t, e) {\n        var n = this._fileDescriptors[t.id],\n            r = Xt(t.data),\n            i = Te.fromBuffer(Xt(t.stat)),\n            o = Re.getFileFlag(t.flag);\n        o.isWriteable() ? n.write(r, 0, r.length, o.isAppendable() ? n.getPos() : 0, function (t) {\n          function s() {\n            n.stat(function (t, r) {\n              t ? e(t) : r.mode !== i.mode ? n.chmod(i.mode, function (t) {\n                e(t, n);\n              }) : e(t, n);\n            });\n          }\n\n          t ? e(t) : o.isAppendable() ? s() : n.truncate(r.length, function () {\n            s();\n          });\n        }) : e(null, n);\n      };\n\n      var Yi = function (t) {\n        function e(e, n, r, i, o, s) {\n          t.call(this, e, n, r, i, s), this._remoteFdId = o;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.getRemoteFdId = function () {\n          return this._remoteFdId;\n        }, e.prototype.toRemoteArg = function () {\n          return {\n            type: Wi.FD,\n            id: this._remoteFdId,\n            data: Yt(this.getBuffer()),\n            stat: Yt(this.getStats().toBuffer()),\n            path: this.getPath(),\n            flag: this.getFlag().getFlagString()\n          };\n        }, e.prototype.sync = function (t) {\n          this._syncClose(\"sync\", t);\n        }, e.prototype.close = function (t) {\n          this._syncClose(\"close\", t);\n        }, e.prototype._syncClose = function (t, e) {\n          var n = this;\n          this.isDirty() ? this._fs.syncClose(t, this, function (t) {\n            t || n.resetDirty(), e(t);\n          }) : e();\n        }, e;\n      }(Ye),\n          Xi = function (e) {\n        function n(t, r) {\n          var i = this;\n          void 0 === r && (r = !0), e.call(this), this._callbackConverter = new Hi(), this._isInitialized = !1, this._isReadOnly = !1, this._supportLinks = !1, this._supportProps = !1, this._worker = t, d(r, n.Name, {\n            worker: \"Web Worker instance\"\n          }), this._worker.addEventListener(\"message\", function (t) {\n            var e = t.data;\n\n            if (Qt(e)) {\n              var n,\n                  r = e.args,\n                  o = new Array(r.length);\n\n              for (n = 0; n < o.length; n++) {\n                o[n] = i._argRemote2Local(r[n]);\n              }\n\n              i._callbackConverter.toLocalArg(e.cbId).apply(null, o);\n            }\n          });\n        }\n\n        return e && (n.__proto__ = e), n.prototype = Object.create(e && e.prototype), n.prototype.constructor = n, n.Create = function (t, e) {\n          var r = new n(t.worker, !1);\n          r.initialize(function () {\n            e(null, r);\n          });\n        }, n.isAvailable = function () {\n          return \"undefined\" != typeof importScripts || \"undefined\" != typeof Worker;\n        }, n.attachRemoteListener = function (e) {\n          function n(e, n, r) {\n            switch (_typeof(e)) {\n              case \"object\":\n                e instanceof Te ? r(null, Vt(e)) : e instanceof Fe ? r(null, jt(e)) : e instanceof Ze ? r(null, i.toRemoteArg(e, n[0], n[1], r)) : e instanceof Re ? r(null, Ht(e)) : e instanceof t ? r(null, Kt(e)) : e instanceof Error ? r(null, zt(e)) : r(null, e);\n                break;\n\n              default:\n                r(null, e);\n            }\n          }\n\n          function r(t, r) {\n            if (!t) return t;\n\n            switch (_typeof(t)) {\n              case \"object\":\n                if (\"number\" != typeof t.type) return t;\n                var i = t;\n\n                switch (i.type) {\n                  case Wi.CB:\n                    var o = t.id;\n                    return function () {\n                      function t(t) {\n                        u > 0 && (u = -1, s = {\n                          browserfsMessage: !0,\n                          cbId: o,\n                          args: [jt(t)]\n                        }, e.postMessage(s));\n                      }\n\n                      var i,\n                          s,\n                          a = arguments,\n                          c = new Array(arguments.length),\n                          u = arguments.length;\n\n                      for (i = 0; i < arguments.length; i++) {\n                        !function (i, a) {\n                          n(a, r, function (n, r) {\n                            c[i] = r, n ? t(n) : 0 === --u && (s = {\n                              browserfsMessage: !0,\n                              cbId: o,\n                              args: c\n                            }, e.postMessage(s));\n                          });\n                        }(i, a[i]);\n                      }\n\n                      0 === arguments.length && (s = {\n                        browserfsMessage: !0,\n                        cbId: o,\n                        args: c\n                      }, e.postMessage(s));\n                    };\n\n                  case Wi.API_ERROR:\n                    return Bt(i);\n\n                  case Wi.STATS:\n                    return Wt(i);\n\n                  case Wi.FILEFLAG:\n                    return Zt(i);\n\n                  case Wi.BUFFER:\n                    return Jt(i);\n\n                  case Wi.ERROR:\n                    return qt(i);\n\n                  default:\n                    return t;\n                }\n\n              default:\n                return t;\n            }\n          }\n\n          var i = new Zi();\n          e.addEventListener(\"message\", function (t) {\n            var n = t.data;\n\n            if (Gt(n)) {\n              var o = n.args,\n                  s = new Array(o.length);\n\n              switch (n.method) {\n                case \"close\":\n                case \"sync\":\n                  !function () {\n                    var t = o[1];\n                    i.applyFdAPIRequest(n, function (n) {\n                      var r = {\n                        browserfsMessage: !0,\n                        cbId: t.id,\n                        args: n ? [jt(n)] : []\n                      };\n                      e.postMessage(r);\n                    });\n                  }();\n                  break;\n\n                case \"probe\":\n                  !function () {\n                    var t = Pe.getRootFS(),\n                        n = o[1],\n                        r = {\n                      type: Wi.PROBE,\n                      isReadOnly: t.isReadOnly(),\n                      supportsLinks: t.supportsLinks(),\n                      supportsProps: t.supportsProps()\n                    },\n                        i = {\n                      browserfsMessage: !0,\n                      cbId: n.id,\n                      args: [r]\n                    };\n                    e.postMessage(i);\n                  }();\n                  break;\n\n                default:\n                  for (var a = 0; a < o.length; a++) {\n                    s[a] = r(o[a], s);\n                  }\n\n                  var c = Pe.getRootFS();\n                  c[n.method].apply(c, s);\n              }\n            }\n          });\n        }, n.prototype.getName = function () {\n          return n.Name;\n        }, n.prototype.initialize = function (t) {\n          var e = this;\n          if (this._isInitialized) t();else {\n            var n = {\n              browserfsMessage: !0,\n              method: \"probe\",\n              args: [this._argLocal2Remote(S()), this._callbackConverter.toRemoteArg(function (n) {\n                e._isInitialized = !0, e._isReadOnly = n.isReadOnly, e._supportLinks = n.supportsLinks, e._supportProps = n.supportsProps, t();\n              })]\n            };\n\n            this._worker.postMessage(n);\n          }\n        }, n.prototype.isReadOnly = function () {\n          return this._isReadOnly;\n        }, n.prototype.supportsSynch = function () {\n          return !1;\n        }, n.prototype.supportsLinks = function () {\n          return this._supportLinks;\n        }, n.prototype.supportsProps = function () {\n          return this._supportProps;\n        }, n.prototype.rename = function (t, e, n) {\n          this._rpc(\"rename\", arguments);\n        }, n.prototype.stat = function (t, e, n) {\n          this._rpc(\"stat\", arguments);\n        }, n.prototype.open = function (t, e, n, r) {\n          this._rpc(\"open\", arguments);\n        }, n.prototype.unlink = function (t, e) {\n          this._rpc(\"unlink\", arguments);\n        }, n.prototype.rmdir = function (t, e) {\n          this._rpc(\"rmdir\", arguments);\n        }, n.prototype.mkdir = function (t, e, n) {\n          this._rpc(\"mkdir\", arguments);\n        }, n.prototype.readdir = function (t, e) {\n          this._rpc(\"readdir\", arguments);\n        }, n.prototype.exists = function (t, e) {\n          this._rpc(\"exists\", arguments);\n        }, n.prototype.realpath = function (t, e, n) {\n          this._rpc(\"realpath\", arguments);\n        }, n.prototype.truncate = function (t, e, n) {\n          this._rpc(\"truncate\", arguments);\n        }, n.prototype.readFile = function (t, e, n, r) {\n          this._rpc(\"readFile\", arguments);\n        }, n.prototype.writeFile = function (t, e, n, r, i, o) {\n          this._rpc(\"writeFile\", arguments);\n        }, n.prototype.appendFile = function (t, e, n, r, i, o) {\n          this._rpc(\"appendFile\", arguments);\n        }, n.prototype.chmod = function (t, e, n, r) {\n          this._rpc(\"chmod\", arguments);\n        }, n.prototype.chown = function (t, e, n, r, i) {\n          this._rpc(\"chown\", arguments);\n        }, n.prototype.utimes = function (t, e, n, r) {\n          this._rpc(\"utimes\", arguments);\n        }, n.prototype.link = function (t, e, n) {\n          this._rpc(\"link\", arguments);\n        }, n.prototype.symlink = function (t, e, n, r) {\n          this._rpc(\"symlink\", arguments);\n        }, n.prototype.readlink = function (t, e) {\n          this._rpc(\"readlink\", arguments);\n        }, n.prototype.syncClose = function (t, e, n) {\n          this._worker.postMessage({\n            browserfsMessage: !0,\n            method: t,\n            args: [e.toRemoteArg(), this._callbackConverter.toRemoteArg(n)]\n          });\n        }, n.prototype._argRemote2Local = function (t) {\n          if (!t) return t;\n\n          switch (_typeof(t)) {\n            case \"object\":\n              if (\"number\" != typeof t.type) return t;\n              var e = t;\n\n              switch (e.type) {\n                case Wi.API_ERROR:\n                  return Bt(e);\n\n                case Wi.FD:\n                  var n = e;\n                  return new Yi(this, n.path, Re.getFileFlag(n.flag), Te.fromBuffer(Xt(n.stat)), n.id, Xt(n.data));\n\n                case Wi.STATS:\n                  return Wt(e);\n\n                case Wi.FILEFLAG:\n                  return Zt(e);\n\n                case Wi.BUFFER:\n                  return Jt(e);\n\n                case Wi.ERROR:\n                  return qt(e);\n\n                default:\n                  return t;\n              }\n\n            default:\n              return t;\n          }\n        }, n.prototype._rpc = function (t, e) {\n          for (var n = this, r = new Array(e.length), i = 0; i < e.length; i++) {\n            r[i] = n._argLocal2Remote(e[i]);\n          }\n\n          var o = {\n            browserfsMessage: !0,\n            method: t,\n            args: r\n          };\n\n          this._worker.postMessage(o);\n        }, n.prototype._argLocal2Remote = function (e) {\n          if (!e) return e;\n\n          switch (_typeof(e)) {\n            case \"object\":\n              return e instanceof Te ? Vt(e) : e instanceof Fe ? jt(e) : e instanceof Yi ? e.toRemoteArg() : e instanceof Re ? Ht(e) : e instanceof t ? Kt(e) : e instanceof Error ? zt(e) : \"Unknown argument\";\n\n            case \"function\":\n              return this._callbackConverter.toRemoteArg(e);\n\n            default:\n              return e;\n          }\n        }, n;\n      }(We);\n\n      Xi.Name = \"WorkerFS\", Xi.Options = {\n        worker: {\n          type: \"object\",\n          description: \"The target worker that you want to connect to, or the current worker if in a worker context.\",\n          validator: function validator(t, e) {\n            t.postMessage ? e() : e(new Fe(be.EINVAL, \"option must be a Web Worker instance.\"));\n          }\n        }\n      };\n\n      var Ki = $t,\n          Ji = Ue && \"undefined\" != typeof Blob ? ee : te,\n          Gi = function Gi() {\n        this._index = {}, this.addPath(\"/\", new $i());\n      };\n\n      Gi.fromListing = function (t) {\n        var e = new Gi(),\n            n = new $i();\n        e._index[\"/\"] = n;\n\n        for (var r = [[\"\", t, n]]; r.length > 0;) {\n          var i = void 0,\n              o = r.pop(),\n              s = o[0],\n              a = o[1],\n              c = o[2];\n\n          for (var u in a) {\n            if (a.hasOwnProperty(u)) {\n              var f = a[u],\n                  h = s + \"/\" + u;\n              f ? (e._index[h] = i = new $i(), r.push([h, f, i])) : i = new Qi(new Te(Le.FILE, -1, 365)), c && (c._ls[u] = i);\n            }\n          }\n        }\n\n        return e;\n      }, Gi.prototype.fileIterator = function (t) {\n        var e = this;\n\n        for (var n in e._index) {\n          if (e._index.hasOwnProperty(n)) for (var r = e._index[n], i = r.getListing(), o = 0, s = i; o < s.length; o += 1) {\n            var a = s[o],\n                c = r.getItem(a);\n            oe(c) && t(c.getData());\n          }\n        }\n      }, Gi.prototype.addPath = function (t, e) {\n        if (!e) throw new Error(\"Inode must be specified\");\n        if (\"/\" !== t[0]) throw new Error(\"Path must be absolute, got: \" + t);\n        if (this._index.hasOwnProperty(t)) return this._index[t] === e;\n\n        var n = this._split_path(t),\n            r = n[0],\n            i = n[1],\n            o = this._index[r];\n\n        return !(void 0 === o && \"/\" !== t && (o = new $i(), !this.addPath(r, o))) && !(\"/\" !== t && !o.addItem(i, e)) && (se(e) && (this._index[t] = e), !0);\n      }, Gi.prototype.addPathFast = function (t, e) {\n        var n = t.lastIndexOf(\"/\"),\n            r = 0 === n ? \"/\" : t.substring(0, n),\n            i = t.substring(n + 1),\n            o = this._index[r];\n        return void 0 === o && (o = new $i(), this.addPathFast(r, o)), !!o.addItem(i, e) && (e.isDir() && (this._index[t] = e), !0);\n      }, Gi.prototype.removePath = function (t) {\n        var e = this,\n            n = this._split_path(t),\n            r = n[0],\n            i = n[1],\n            o = this._index[r];\n\n        if (void 0 === o) return null;\n        var s = o.remItem(i);\n        if (null === s) return null;\n\n        if (se(s)) {\n          for (var a = s.getListing(), c = 0, u = a; c < u.length; c += 1) {\n            var f = u[c];\n            e.removePath(t + \"/\" + f);\n          }\n\n          \"/\" !== t && delete this._index[t];\n        }\n\n        return s;\n      }, Gi.prototype.ls = function (t) {\n        var e = this._index[t];\n        return void 0 === e ? null : e.getListing();\n      }, Gi.prototype.getInode = function (t) {\n        var e = this._split_path(t),\n            n = e[0],\n            r = e[1],\n            i = this._index[n];\n\n        return void 0 === i ? null : n === t ? i : i.getItem(r);\n      }, Gi.prototype._split_path = function (t) {\n        var e = ke.dirname(t),\n            n = t.substr(e.length + (\"/\" === e ? 0 : 1));\n        return [e, n];\n      };\n\n      var Qi = function Qi(t) {\n        this.data = t;\n      };\n\n      Qi.prototype.isFile = function () {\n        return !0;\n      }, Qi.prototype.isDir = function () {\n        return !1;\n      }, Qi.prototype.getData = function () {\n        return this.data;\n      }, Qi.prototype.setData = function (t) {\n        this.data = t;\n      };\n\n      var $i = function $i(t) {\n        void 0 === t && (t = null), this.data = t, this._ls = {};\n      };\n\n      $i.prototype.isFile = function () {\n        return !1;\n      }, $i.prototype.isDir = function () {\n        return !0;\n      }, $i.prototype.getData = function () {\n        return this.data;\n      }, $i.prototype.getStats = function () {\n        return new Te(Le.DIRECTORY, 4096, 365);\n      }, $i.prototype.getListing = function () {\n        return Object.keys(this._ls);\n      }, $i.prototype.getItem = function (t) {\n        var e = this._ls[t];\n        return e ? e : null;\n      }, $i.prototype.addItem = function (t, e) {\n        return !(t in this._ls) && (this._ls[t] = e, !0);\n      }, $i.prototype.remItem = function (t) {\n        var e = this._ls[t];\n        return void 0 === e ? null : (delete this._ls[t], e);\n      };\n\n      var to = function (t) {\n        function e(n, r, i) {\n          void 0 === r && (r = \"\"), void 0 === i && (i = !0), t.call(this), n || (n = \"index.json\"), r.length > 0 && \"/\" !== r.charAt(r.length - 1) && (r += \"/\"), this.prefixUrl = r;\n          var o = null;\n\n          if (\"string\" == typeof n) {\n            if (o = this._requestFileSync(n, \"json\"), !o) throw new Error(\"Unable to find listing at URL: ${listingUrlOrObj}\");\n          } else o = n;\n\n          d(i, e.Name, {\n            index: \"string\" == typeof n ? n : \"file index as an object\",\n            baseUrl: r\n          }), this._index = Gi.fromListing(o);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          void 0 === t.index && (t.index = \"index.json\"), \"string\" == typeof t.index ? e.FromURL(t.index, n, t.baseUrl, !1) : n(null, new e(t.index, t.baseUrl, !1));\n        }, e.isAvailable = function () {\n          return \"undefined\" != typeof XMLHttpRequest && null !== XMLHttpRequest;\n        }, e.FromURL = function (t, n, r, i) {\n          void 0 === r && (r = t.slice(0, t.lastIndexOf(\"/\") + 1)), void 0 === i && (i = !0), i && console.warn(\"[XmlHttpRequest] XmlHttpRequest.FromURL() is deprecated and will be removed in the next major release. Please use 'XmlHttpRequest.Create({ index: \\\"\" + t + '\", baseUrl: \"' + r + \"\\\" }, cb)' instead.\"), Ki(t, \"json\", function (t, i) {\n            t ? n(t) : n(null, new e(i, r, !1));\n          });\n        }, e.prototype.empty = function () {\n          this._index.fileIterator(function (t) {\n            t.fileData = null;\n          });\n        }, e.prototype.getName = function () {\n          return e.Name;\n        }, e.prototype.diskSpace = function (t, e) {\n          e(0, 0);\n        }, e.prototype.isReadOnly = function () {\n          return !0;\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.preloadFile = function (t, e) {\n          var n = this._index.getInode(t);\n\n          if (!oe(n)) throw Fe.EISDIR(t);\n          if (null === n) throw Fe.ENOENT(t);\n          var r = n.getData();\n          r.size = e.length, r.fileData = e;\n        }, e.prototype.stat = function (t, e, n) {\n          var r = this._index.getInode(t);\n\n          if (null === r) return n(Fe.ENOENT(t));\n          var i;\n          oe(r) ? (i = r.getData(), i.size < 0 ? this._requestFileSizeAsync(t, function (t, e) {\n            return t ? n(t) : (i.size = e, void n(null, i.clone()));\n          }) : n(null, i.clone())) : se(r) ? (i = r.getStats(), n(null, i)) : n(Fe.FileError(be.EINVAL, t));\n        }, e.prototype.statSync = function (t, e) {\n          var n = this._index.getInode(t);\n\n          if (null === n) throw Fe.ENOENT(t);\n          var r;\n          if (oe(n)) r = n.getData(), r.size < 0 && (r.size = this._requestFileSizeSync(t));else {\n            if (!se(n)) throw Fe.FileError(be.EINVAL, t);\n            r = n.getStats();\n          }\n          return r;\n        }, e.prototype.open = function (t, e, n, r) {\n          if (e.isWriteable()) return r(new Fe(be.EPERM, t));\n\n          var i = this,\n              o = this._index.getInode(t);\n\n          if (null === o) return r(Fe.ENOENT(t));\n          if (!oe(o)) return r(Fe.EISDIR(t));\n          var s = o.getData();\n\n          switch (e.pathExistsAction()) {\n            case Oe.THROW_EXCEPTION:\n            case Oe.TRUNCATE_FILE:\n              return r(Fe.EEXIST(t));\n\n            case Oe.NOP:\n              if (s.fileData) return r(null, new Xe(i, t, e, s.clone(), s.fileData));\n\n              this._requestFileAsync(t, \"buffer\", function (n, o) {\n                return n ? r(n) : (s.size = o.length, s.fileData = o, r(null, new Xe(i, t, e, s.clone(), o)));\n              });\n\n              break;\n\n            default:\n              return r(new Fe(be.EINVAL, \"Invalid FileMode object.\"));\n          }\n        }, e.prototype.openSync = function (t, e, n) {\n          if (e.isWriteable()) throw new Fe(be.EPERM, t);\n\n          var r = this._index.getInode(t);\n\n          if (null === r) throw Fe.ENOENT(t);\n          if (!oe(r)) throw Fe.EISDIR(t);\n          var i = r.getData();\n\n          switch (e.pathExistsAction()) {\n            case Oe.THROW_EXCEPTION:\n            case Oe.TRUNCATE_FILE:\n              throw Fe.EEXIST(t);\n\n            case Oe.NOP:\n              if (i.fileData) return new Xe(this, t, e, i.clone(), i.fileData);\n\n              var o = this._requestFileSync(t, \"buffer\");\n\n              return i.size = o.length, i.fileData = o, new Xe(this, t, e, i.clone(), o);\n\n            default:\n              throw new Fe(be.EINVAL, \"Invalid FileMode object.\");\n          }\n        }, e.prototype.readdir = function (t, e) {\n          try {\n            e(null, this.readdirSync(t));\n          } catch (t) {\n            e(t);\n          }\n        }, e.prototype.readdirSync = function (t) {\n          var e = this._index.getInode(t);\n\n          if (null === e) throw Fe.ENOENT(t);\n          if (se(e)) return e.getListing();\n          throw Fe.ENOTDIR(t);\n        }, e.prototype.readFile = function (t, e, n, r) {\n          var i = r;\n          this.open(t, n, 420, function (t, n) {\n            if (t) return r(t);\n\n            r = function r(t, e) {\n              n.close(function (n) {\n                return t || (t = n), i(t, e);\n              });\n            };\n\n            var o = n,\n                s = o.getBuffer();\n            null === e ? r(t, b(s)) : ae(s, e, r);\n          });\n        }, e.prototype.readFileSync = function (t, e, n) {\n          var r = this.openSync(t, n, 420);\n\n          try {\n            var i = r,\n                o = i.getBuffer();\n            return null === e ? b(o) : o.toString(e);\n          } finally {\n            r.closeSync();\n          }\n        }, e.prototype.getXhrPath = function (t) {\n          return \"/\" === t.charAt(0) && (t = t.slice(1)), this.prefixUrl + t;\n        }, e.prototype._requestFileAsync = function (t, e, n) {\n          Ki(this.getXhrPath(t), e, n);\n        }, e.prototype._requestFileSync = function (t, e) {\n          return Ji(this.getXhrPath(t), e);\n        }, e.prototype._requestFileSizeAsync = function (t, e) {\n          ie(this.getXhrPath(t), e);\n        }, e.prototype._requestFileSizeSync = function (t) {\n          return re(this.getXhrPath(t));\n        }, e;\n      }(We);\n\n      to.Name = \"XmlHttpRequest\", to.Options = {\n        index: {\n          type: [\"string\", \"object\"],\n          optional: !0,\n          description: \"URL to a file index as a JSON file or the file index object itself, generated with the make_xhrfs_index script. Defaults to `index.json`.\"\n        },\n        baseUrl: {\n          type: \"string\",\n          optional: !0,\n          description: \"Used as the URL prefix for fetched files. Default: Fetch files relative to the index.\"\n        }\n      };\n\n      var eo = function eo() {};\n\n      eo.str2byte = function (t, e) {\n        for (var n = t.length > e.length ? e.length : t.length, r = 0; r < n; r++) {\n          var i = t.charCodeAt(r);\n\n          if (i > 127) {\n            var o = eo.extendedChars.indexOf(t.charAt(r));\n            o > -1 && (i = o + 128);\n          }\n\n          e[i] = r;\n        }\n\n        return n;\n      }, eo.byte2str = function (t) {\n        for (var e = new Array(t.length), n = 0; n < t.length; n++) {\n          var r = t[n];\n          r > 127 ? e[n] = eo.extendedChars[r - 128] : e[n] = String.fromCharCode(r);\n        }\n\n        return e.join(\"\");\n      }, eo.byteLength = function (t) {\n        return t.length;\n      }, eo.extendedChars = [\"Ç\", \"ü\", \"é\", \"â\", \"ä\", \"à\", \"å\", \"ç\", \"ê\", \"ë\", \"è\", \"ï\", \"î\", \"ì\", \"Ä\", \"Å\", \"É\", \"æ\", \"Æ\", \"ô\", \"ö\", \"ò\", \"û\", \"ù\", \"ÿ\", \"Ö\", \"Ü\", \"ø\", \"£\", \"Ø\", \"×\", \"ƒ\", \"á\", \"í\", \"ó\", \"ú\", \"ñ\", \"Ñ\", \"ª\", \"º\", \"¿\", \"®\", \"¬\", \"½\", \"¼\", \"¡\", \"«\", \"»\", \"_\", \"_\", \"_\", \"¦\", \"¦\", \"Á\", \"Â\", \"À\", \"©\", \"¦\", \"¦\", \"+\", \"+\", \"¢\", \"¥\", \"+\", \"+\", \"-\", \"-\", \"+\", \"-\", \"+\", \"ã\", \"Ã\", \"+\", \"+\", \"-\", \"-\", \"¦\", \"-\", \"+\", \"¤\", \"ð\", \"Ð\", \"Ê\", \"Ë\", \"È\", \"i\", \"Í\", \"Î\", \"Ï\", \"+\", \"+\", \"_\", \"_\", \"¦\", \"Ì\", \"_\", \"Ó\", \"ß\", \"Ô\", \"Ò\", \"õ\", \"Õ\", \"µ\", \"þ\", \"Þ\", \"Ú\", \"Û\", \"Ù\", \"ý\", \"Ý\", \"¯\", \"´\", \"­\", \"±\", \"_\", \"¾\", \"¶\", \"§\", \"÷\", \"¸\", \"°\", \"¨\", \"·\", \"¹\", \"³\", \"²\", \"_\", \" \"];\n      var no,\n          ro = n(23).inflateRaw,\n          io = {};\n      !function (t) {\n        t[t.MSDOS = 0] = \"MSDOS\", t[t.AMIGA = 1] = \"AMIGA\", t[t.OPENVMS = 2] = \"OPENVMS\", t[t.UNIX = 3] = \"UNIX\", t[t.VM_CMS = 4] = \"VM_CMS\", t[t.ATARI_ST = 5] = \"ATARI_ST\", t[t.OS2_HPFS = 6] = \"OS2_HPFS\", t[t.MAC = 7] = \"MAC\", t[t.Z_SYSTEM = 8] = \"Z_SYSTEM\", t[t.CP_M = 9] = \"CP_M\", t[t.NTFS = 10] = \"NTFS\", t[t.MVS = 11] = \"MVS\", t[t.VSE = 12] = \"VSE\", t[t.ACORN_RISC = 13] = \"ACORN_RISC\", t[t.VFAT = 14] = \"VFAT\", t[t.ALT_MVS = 15] = \"ALT_MVS\", t[t.BEOS = 16] = \"BEOS\", t[t.TANDEM = 17] = \"TANDEM\", t[t.OS_400 = 18] = \"OS_400\", t[t.OSX = 19] = \"OSX\";\n      }(no || (no = {}));\n      var oo;\n      !function (t) {\n        t[t.STORED = 0] = \"STORED\", t[t.SHRUNK = 1] = \"SHRUNK\", t[t.REDUCED_1 = 2] = \"REDUCED_1\", t[t.REDUCED_2 = 3] = \"REDUCED_2\", t[t.REDUCED_3 = 4] = \"REDUCED_3\", t[t.REDUCED_4 = 5] = \"REDUCED_4\", t[t.IMPLODE = 6] = \"IMPLODE\", t[t.DEFLATE = 8] = \"DEFLATE\", t[t.DEFLATE64 = 9] = \"DEFLATE64\", t[t.TERSE_OLD = 10] = \"TERSE_OLD\", t[t.BZIP2 = 12] = \"BZIP2\", t[t.LZMA = 14] = \"LZMA\", t[t.TERSE_NEW = 18] = \"TERSE_NEW\", t[t.LZ77 = 19] = \"LZ77\", t[t.WAVPACK = 97] = \"WAVPACK\", t[t.PPMD = 98] = \"PPMD\";\n      }(oo || (oo = {}));\n\n      var so = function so(t) {\n        if (this.data = t, 67324752 !== t.readUInt32LE(0)) throw new Fe(be.EINVAL, \"Invalid Zip file: Local file header has invalid signature: \" + this.data.readUInt32LE(0));\n      };\n\n      so.prototype.versionNeeded = function () {\n        return this.data.readUInt16LE(4);\n      }, so.prototype.flags = function () {\n        return this.data.readUInt16LE(6);\n      }, so.prototype.compressionMethod = function () {\n        return this.data.readUInt16LE(8);\n      }, so.prototype.lastModFileTime = function () {\n        return ce(this.data.readUInt16LE(10), this.data.readUInt16LE(12));\n      }, so.prototype.rawLastModFileTime = function () {\n        return this.data.readUInt32LE(10);\n      }, so.prototype.crc32 = function () {\n        return this.data.readUInt32LE(14);\n      }, so.prototype.fileNameLength = function () {\n        return this.data.readUInt16LE(26);\n      }, so.prototype.extraFieldLength = function () {\n        return this.data.readUInt16LE(28);\n      }, so.prototype.fileName = function () {\n        return ue(this.data, this.useUTF8(), 30, this.fileNameLength());\n      }, so.prototype.extraField = function () {\n        var t = 30 + this.fileNameLength();\n        return this.data.slice(t, t + this.extraFieldLength());\n      }, so.prototype.totalSize = function () {\n        return 30 + this.fileNameLength() + this.extraFieldLength();\n      }, so.prototype.useUTF8 = function () {\n        return 2048 === (2048 & this.flags());\n      };\n\n      var ao = function ao(t, e, n) {\n        this.header = t, this.record = e, this.data = n;\n      };\n\n      ao.prototype.decompress = function () {\n        var t = this.header.compressionMethod(),\n            e = io[t];\n        if (e) return e(this.data, this.record.compressedSize(), this.record.uncompressedSize(), this.record.flag());\n        var n = oo[t];\n        throw n || (n = \"Unknown: \" + t), new Fe(be.EINVAL, \"Invalid compression method on file '\" + this.header.fileName() + \"': \" + n);\n      }, ao.prototype.getHeader = function () {\n        return this.header;\n      }, ao.prototype.getRecord = function () {\n        return this.record;\n      }, ao.prototype.getRawData = function () {\n        return this.data;\n      };\n\n      var co = function co(t) {\n        this.data = t;\n      };\n\n      co.prototype.crc32 = function () {\n        return this.data.readUInt32LE(0);\n      }, co.prototype.compressedSize = function () {\n        return this.data.readUInt32LE(4);\n      }, co.prototype.uncompressedSize = function () {\n        return this.data.readUInt32LE(8);\n      };\n\n      var uo = function uo(t) {\n        if (this.data = t, 134630224 !== this.data.readUInt32LE(0)) throw new Fe(be.EINVAL, \"Invalid archive extra data record signature: \" + this.data.readUInt32LE(0));\n      };\n\n      uo.prototype.length = function () {\n        return this.data.readUInt32LE(4);\n      }, uo.prototype.extraFieldData = function () {\n        return this.data.slice(8, 8 + this.length());\n      };\n\n      var fo = function fo(t) {\n        if (this.data = t, 84233040 !== this.data.readUInt32LE(0)) throw new Fe(be.EINVAL, \"Invalid digital signature signature: \" + this.data.readUInt32LE(0));\n      };\n\n      fo.prototype.size = function () {\n        return this.data.readUInt16LE(4);\n      }, fo.prototype.signatureData = function () {\n        return this.data.slice(6, 6 + this.size());\n      };\n\n      var ho = function ho(t, e) {\n        if (this.zipData = t, this.data = e, 33639248 !== this.data.readUInt32LE(0)) throw new Fe(be.EINVAL, \"Invalid Zip file: Central directory record has invalid signature: \" + this.data.readUInt32LE(0));\n        this._filename = this.produceFilename();\n      };\n\n      ho.prototype.versionMadeBy = function () {\n        return this.data.readUInt16LE(4);\n      }, ho.prototype.versionNeeded = function () {\n        return this.data.readUInt16LE(6);\n      }, ho.prototype.flag = function () {\n        return this.data.readUInt16LE(8);\n      }, ho.prototype.compressionMethod = function () {\n        return this.data.readUInt16LE(10);\n      }, ho.prototype.lastModFileTime = function () {\n        return ce(this.data.readUInt16LE(12), this.data.readUInt16LE(14));\n      }, ho.prototype.rawLastModFileTime = function () {\n        return this.data.readUInt32LE(12);\n      }, ho.prototype.crc32 = function () {\n        return this.data.readUInt32LE(16);\n      }, ho.prototype.compressedSize = function () {\n        return this.data.readUInt32LE(20);\n      }, ho.prototype.uncompressedSize = function () {\n        return this.data.readUInt32LE(24);\n      }, ho.prototype.fileNameLength = function () {\n        return this.data.readUInt16LE(28);\n      }, ho.prototype.extraFieldLength = function () {\n        return this.data.readUInt16LE(30);\n      }, ho.prototype.fileCommentLength = function () {\n        return this.data.readUInt16LE(32);\n      }, ho.prototype.diskNumberStart = function () {\n        return this.data.readUInt16LE(34);\n      }, ho.prototype.internalAttributes = function () {\n        return this.data.readUInt16LE(36);\n      }, ho.prototype.externalAttributes = function () {\n        return this.data.readUInt32LE(38);\n      }, ho.prototype.headerRelativeOffset = function () {\n        return this.data.readUInt32LE(42);\n      }, ho.prototype.produceFilename = function () {\n        var t = ue(this.data, this.useUTF8(), 46, this.fileNameLength());\n        return t.replace(/\\\\/g, \"/\");\n      }, ho.prototype.fileName = function () {\n        return this._filename;\n      }, ho.prototype.rawFileName = function () {\n        return this.data.slice(46, 46 + this.fileNameLength());\n      }, ho.prototype.extraField = function () {\n        var t = 44 + this.fileNameLength();\n        return this.data.slice(t, t + this.extraFieldLength());\n      }, ho.prototype.fileComment = function () {\n        var t = 46 + this.fileNameLength() + this.extraFieldLength();\n        return ue(this.data, this.useUTF8(), t, this.fileCommentLength());\n      }, ho.prototype.rawFileComment = function () {\n        var t = 46 + this.fileNameLength() + this.extraFieldLength();\n        return this.data.slice(t, t + this.fileCommentLength());\n      }, ho.prototype.totalSize = function () {\n        return 46 + this.fileNameLength() + this.extraFieldLength() + this.fileCommentLength();\n      }, ho.prototype.isDirectory = function () {\n        var t = this.fileName();\n        return !!(16 & this.externalAttributes()) || \"/\" === t.charAt(t.length - 1);\n      }, ho.prototype.isFile = function () {\n        return !this.isDirectory();\n      }, ho.prototype.useUTF8 = function () {\n        return 2048 === (2048 & this.flag());\n      }, ho.prototype.isEncrypted = function () {\n        return 1 === (1 & this.flag());\n      }, ho.prototype.getFileData = function () {\n        var t = this.headerRelativeOffset(),\n            e = new so(this.zipData.slice(t));\n        return new ao(e, this, this.zipData.slice(t + e.totalSize()));\n      }, ho.prototype.getData = function () {\n        return this.getFileData().decompress();\n      }, ho.prototype.getRawData = function () {\n        return this.getFileData().getRawData();\n      }, ho.prototype.getStats = function () {\n        return new Te(Le.FILE, this.uncompressedSize(), 365, new Date(), this.lastModFileTime());\n      };\n\n      var po = function po(t) {\n        if (this.data = t, 101010256 !== this.data.readUInt32LE(0)) throw new Fe(be.EINVAL, \"Invalid Zip file: End of central directory record has invalid signature: \" + this.data.readUInt32LE(0));\n      };\n\n      po.prototype.diskNumber = function () {\n        return this.data.readUInt16LE(4);\n      }, po.prototype.cdDiskNumber = function () {\n        return this.data.readUInt16LE(6);\n      }, po.prototype.cdDiskEntryCount = function () {\n        return this.data.readUInt16LE(8);\n      }, po.prototype.cdTotalEntryCount = function () {\n        return this.data.readUInt16LE(10);\n      }, po.prototype.cdSize = function () {\n        return this.data.readUInt32LE(12);\n      }, po.prototype.cdOffset = function () {\n        return this.data.readUInt32LE(16);\n      }, po.prototype.cdZipCommentLength = function () {\n        return this.data.readUInt16LE(20);\n      }, po.prototype.cdZipComment = function () {\n        return ue(this.data, !0, 22, this.cdZipCommentLength());\n      }, po.prototype.rawCdZipComment = function () {\n        return this.data.slice(22, 22 + this.cdZipCommentLength());\n      };\n\n      var lo = function lo(t, e, n, r) {\n        this.index = t, this.directoryEntries = e, this.eocd = n, this.data = r;\n      },\n          yo = function (t) {\n        function e(n, r, i) {\n          void 0 === r && (r = \"\"), void 0 === i && (i = !0), t.call(this), this.name = r, this._index = new Gi(), this._directoryEntries = [], this._eocd = null, d(i, e.Name, {\n            zipData: \"zip data as a Buffer\",\n            name: r\n          }), n instanceof lo ? (this._index = n.index, this._directoryEntries = n.directoryEntries, this._eocd = n.eocd, this.data = n.data) : (this.data = n, this.populateIndex());\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          try {\n            e.computeIndex(t.zipData, function (r) {\n              var i = new e(r, t.name, !1);\n              n(null, i);\n            }, !1);\n          } catch (t) {\n            n(t);\n          }\n        }, e.isAvailable = function () {\n          return !0;\n        }, e.RegisterDecompressionMethod = function (t, e) {\n          io[t] = e;\n        }, e.computeIndex = function (t, n, r) {\n          void 0 === r && (r = !0), r && console.warn(\"[ZipFS] ZipFS.computeIndex is now deprecated, and will be removed in the next major release. Please update your code to use 'ZipFS.Create({ zipData: zip file as a Buffer}, cb)' instead.\");\n          var i = new Gi(),\n              o = e.getEOCD(t);\n          if (o.diskNumber() !== o.cdDiskNumber()) throw new Fe(be.EINVAL, \"ZipFS does not support spanned zip files.\");\n          var s = o.cdOffset();\n          if (4294967295 === s) throw new Fe(be.EINVAL, \"ZipFS does not support Zip64.\");\n          var a = s + o.cdSize();\n          e.computeIndexResponsive(t, i, s, a, n, [], o);\n        }, e.getEOCD = function (t) {\n          for (var e = 22, n = Math.min(e + 65535, t.length - 1), r = e; r < n; r++) {\n            if (101010256 === t.readUInt32LE(t.length - r)) return new po(t.slice(t.length - r));\n          }\n\n          throw new Fe(be.EINVAL, \"Invalid ZIP file: Could not locate End of Central Directory signature.\");\n        }, e.addToIndex = function (t, e) {\n          var n = t.fileName();\n          if (\"/\" === n.charAt(0)) throw new Error(\"WHY IS THIS ABSOLUTE\");\n          \"/\" === n.charAt(n.length - 1) && (n = n.substr(0, n.length - 1)), t.isDirectory() ? e.addPathFast(\"/\" + n, new $i(t)) : e.addPathFast(\"/\" + n, new Qi(t));\n        }, e.computeIndexResponsive = function (t, n, r, i, o, s, a) {\n          if (r < i) {\n            for (var c = 0; c++ < 200 && r < i;) {\n              var u = new ho(t, t.slice(r));\n              e.addToIndex(u, n), r += u.totalSize(), s.push(u);\n            }\n\n            Ui(function () {\n              e.computeIndexResponsive(t, n, r, i, o, s, a);\n            });\n          } else o(new lo(n, s, a, t));\n        }, e.prototype.getName = function () {\n          return e.Name + (\"\" !== this.name ? \" \" + this.name : \"\");\n        }, e.prototype.getCentralDirectoryEntry = function (t) {\n          var e = this._index.getInode(t);\n\n          if (null === e) throw Fe.ENOENT(t);\n          if (oe(e)) return e.getData();\n          if (se(e)) return e.getData();\n          throw Fe.EPERM(\"Invalid inode: \" + e);\n        }, e.prototype.getCentralDirectoryEntryAt = function (t) {\n          var e = this._directoryEntries[t];\n          if (!e) throw new RangeError(\"Invalid directory index: \" + t + \".\");\n          return e;\n        }, e.prototype.getNumberOfCentralDirectoryEntries = function () {\n          return this._directoryEntries.length;\n        }, e.prototype.getEndOfCentralDirectory = function () {\n          return this._eocd;\n        }, e.prototype.diskSpace = function (t, e) {\n          e(this.data.length, 0);\n        }, e.prototype.isReadOnly = function () {\n          return !0;\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.statSync = function (t, e) {\n          var n = this._index.getInode(t);\n\n          if (null === n) throw Fe.ENOENT(t);\n          var r;\n          if (oe(n)) r = n.getData().getStats();else {\n            if (!se(n)) throw new Fe(be.EINVAL, \"Invalid inode.\");\n            r = n.getStats();\n          }\n          return r;\n        }, e.prototype.openSync = function (t, e, n) {\n          if (e.isWriteable()) throw new Fe(be.EPERM, t);\n\n          var r = this._index.getInode(t);\n\n          if (!r) throw Fe.ENOENT(t);\n          if (!oe(r)) throw Fe.EISDIR(t);\n          var i = r.getData(),\n              o = i.getStats();\n\n          switch (e.pathExistsAction()) {\n            case Oe.THROW_EXCEPTION:\n            case Oe.TRUNCATE_FILE:\n              throw Fe.EEXIST(t);\n\n            case Oe.NOP:\n              return new Xe(this, t, e, o, i.getData());\n\n            default:\n              throw new Fe(be.EINVAL, \"Invalid FileMode object.\");\n          }\n        }, e.prototype.readdirSync = function (t) {\n          var e = this._index.getInode(t);\n\n          if (e) {\n            if (se(e)) return e.getListing();\n            throw Fe.ENOTDIR(t);\n          }\n\n          throw Fe.ENOENT(t);\n        }, e.prototype.readFileSync = function (t, e, n) {\n          var r = this.openSync(t, n, 420);\n\n          try {\n            var i = r,\n                o = i.getBuffer();\n            return null === e ? b(o) : o.toString(e);\n          } finally {\n            r.closeSync();\n          }\n        }, e.prototype.populateIndex = function () {\n          var t = this,\n              n = this._eocd = e.getEOCD(this.data);\n          if (n.diskNumber() !== n.cdDiskNumber()) throw new Fe(be.EINVAL, \"ZipFS does not support spanned zip files.\");\n          var r = n.cdOffset();\n          if (4294967295 === r) throw new Fe(be.EINVAL, \"ZipFS does not support Zip64.\");\n\n          for (var i = r + n.cdSize(); r < i;) {\n            var o = new ho(t.data, t.data.slice(r));\n            r += o.totalSize(), e.addToIndex(o, t._index), t._directoryEntries.push(o);\n          }\n        }, e;\n      }(He);\n\n      yo.Name = \"ZipFS\", yo.Options = {\n        zipData: {\n          type: \"object\",\n          description: \"The zip file as a Buffer object.\",\n          validator: k\n        },\n        name: {\n          type: \"string\",\n          optional: !0,\n          description: \"The name of the zip file (optional).\"\n        }\n      }, yo.CompressionMethod = oo, yo.RegisterDecompressionMethod(oo.DEFLATE, function (t, e, n) {\n        return _(ro(t.slice(0, e), {\n          chunkSize: n\n        }));\n      }), yo.RegisterDecompressionMethod(oo.STORED, function (t, e, n) {\n        return b(t, 0, n);\n      });\n\n      var go = \"IEEE_P1282\",\n          vo = function vo(t) {\n        this._data = t;\n      };\n\n      vo.prototype.type = function () {\n        return this._data[0];\n      }, vo.prototype.standardIdentifier = function () {\n        return fe(this._data, 1, 5);\n      }, vo.prototype.version = function () {\n        return this._data[6];\n      }, vo.prototype.data = function () {\n        return this._data.slice(7, 2048);\n      };\n\n      var mo = function (t) {\n        function e(e) {\n          t.call(this, e), this._root = null;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.systemIdentifier = function () {\n          return this._getString32(8);\n        }, e.prototype.volumeIdentifier = function () {\n          return this._getString32(40);\n        }, e.prototype.volumeSpaceSize = function () {\n          return this._data.readUInt32LE(80);\n        }, e.prototype.volumeSetSize = function () {\n          return this._data.readUInt16LE(120);\n        }, e.prototype.volumeSequenceNumber = function () {\n          return this._data.readUInt16LE(124);\n        }, e.prototype.logicalBlockSize = function () {\n          return this._data.readUInt16LE(128);\n        }, e.prototype.pathTableSize = function () {\n          return this._data.readUInt32LE(132);\n        }, e.prototype.locationOfTypeLPathTable = function () {\n          return this._data.readUInt32LE(140);\n        }, e.prototype.locationOfOptionalTypeLPathTable = function () {\n          return this._data.readUInt32LE(144);\n        }, e.prototype.locationOfTypeMPathTable = function () {\n          return this._data.readUInt32BE(148);\n        }, e.prototype.locationOfOptionalTypeMPathTable = function () {\n          return this._data.readUInt32BE(152);\n        }, e.prototype.rootDirectoryEntry = function (t) {\n          return null === this._root && (this._root = this._constructRootDirectoryRecord(this._data.slice(156)), this._root.rootCheckForRockRidge(t)), this._root;\n        }, e.prototype.volumeSetIdentifier = function () {\n          return this._getString(190, 128);\n        }, e.prototype.publisherIdentifier = function () {\n          return this._getString(318, 128);\n        }, e.prototype.dataPreparerIdentifier = function () {\n          return this._getString(446, 128);\n        }, e.prototype.applicationIdentifier = function () {\n          return this._getString(574, 128);\n        }, e.prototype.copyrightFileIdentifier = function () {\n          return this._getString(702, 38);\n        }, e.prototype.abstractFileIdentifier = function () {\n          return this._getString(740, 36);\n        }, e.prototype.bibliographicFileIdentifier = function () {\n          return this._getString(776, 37);\n        }, e.prototype.volumeCreationDate = function () {\n          return pe(this._data, 813);\n        }, e.prototype.volumeModificationDate = function () {\n          return pe(this._data, 830);\n        }, e.prototype.volumeExpirationDate = function () {\n          return pe(this._data, 847);\n        }, e.prototype.volumeEffectiveDate = function () {\n          return pe(this._data, 864);\n        }, e.prototype.fileStructureVersion = function () {\n          return this._data[881];\n        }, e.prototype.applicationUsed = function () {\n          return this._data.slice(883, 1395);\n        }, e.prototype.reserved = function () {\n          return this._data.slice(1395, 2048);\n        }, e.prototype._getString32 = function (t) {\n          return this._getString(t, 32);\n        }, e;\n      }(vo),\n          _o = function (t) {\n        function e(e) {\n          if (t.call(this, e), 1 !== this.type()) throw new Fe(be.EIO, \"Invalid primary volume descriptor.\");\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.name = function () {\n          return \"ISO9660\";\n        }, e.prototype._constructRootDirectoryRecord = function (t) {\n          return new bo(t, -1);\n        }, e.prototype._getString = function (t, e) {\n          return this._getString(t, e);\n        }, e;\n      }(mo),\n          wo = function (t) {\n        function e(e) {\n          if (t.call(this, e), 2 !== this.type()) throw new Fe(be.EIO, \"Invalid supplementary volume descriptor.\");\n          var n = this.escapeSequence(),\n              r = n[2];\n          if (37 !== n[0] || 47 !== n[1] || 64 !== r && 67 !== r && 69 !== r) throw new Fe(be.EIO, \"Unrecognized escape sequence for SupplementaryVolumeDescriptor: \" + n.toString());\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.name = function () {\n          return \"Joliet\";\n        }, e.prototype.escapeSequence = function () {\n          return this._data.slice(88, 120);\n        }, e.prototype._constructRootDirectoryRecord = function (t) {\n          return new So(t, -1);\n        }, e.prototype._getString = function (t, e) {\n          return he(this._data, t, e);\n        }, e;\n      }(mo),\n          Eo = function Eo(t, e) {\n        this._suEntries = null, this._fileOrDir = null, this._data = t, this._rockRidgeOffset = e;\n      };\n\n      Eo.prototype.hasRockRidge = function () {\n        return this._rockRidgeOffset > -1;\n      }, Eo.prototype.getRockRidgeOffset = function () {\n        return this._rockRidgeOffset;\n      }, Eo.prototype.rootCheckForRockRidge = function (t) {\n        var e = this.getDirectory(t);\n        this._rockRidgeOffset = e.getDotEntry(t)._getRockRidgeOffset(t), this._rockRidgeOffset > -1 && (this._fileOrDir = null);\n      }, Eo.prototype.length = function () {\n        return this._data[0];\n      }, Eo.prototype.extendedAttributeRecordLength = function () {\n        return this._data[1];\n      }, Eo.prototype.lba = function () {\n        return 2048 * this._data.readUInt32LE(2);\n      }, Eo.prototype.dataLength = function () {\n        return this._data.readUInt32LE(10);\n      }, Eo.prototype.recordingDate = function () {\n        return le(this._data, 18);\n      }, Eo.prototype.fileFlags = function () {\n        return this._data[25];\n      }, Eo.prototype.fileUnitSize = function () {\n        return this._data[26];\n      }, Eo.prototype.interleaveGapSize = function () {\n        return this._data[27];\n      }, Eo.prototype.volumeSequenceNumber = function () {\n        return this._data.readUInt16LE(28);\n      }, Eo.prototype.identifier = function () {\n        return this._getString(33, this._data[32]);\n      }, Eo.prototype.fileName = function (t) {\n        if (this.hasRockRidge()) {\n          var e = this._rockRidgeFilename(t);\n\n          if (null !== e) return e;\n        }\n\n        var n = this.identifier();\n        if (this.isDirectory(t)) return n;\n        var r = n.indexOf(\";\");\n        return r === -1 ? n : \".\" === n[r - 1] ? n.slice(0, r - 1) : n.slice(0, r);\n      }, Eo.prototype.isDirectory = function (t) {\n        var e = !!(2 & this.fileFlags());\n        return !e && this.hasRockRidge() && (e = this.getSUEntries(t).filter(function (t) {\n          return t instanceof Uo;\n        }).length > 0), e;\n      }, Eo.prototype.isSymlink = function (t) {\n        return this.hasRockRidge() && this.getSUEntries(t).filter(function (t) {\n          return t instanceof Do;\n        }).length > 0;\n      }, Eo.prototype.getSymlinkPath = function (t) {\n        for (var e = \"\", n = this.getSUEntries(t), r = this._getGetString(), i = 0, o = n; i < o.length; i += 1) {\n          var s = o[i];\n\n          if (s instanceof Do) {\n            for (var a = s.componentRecords(), c = 0, u = a; c < u.length; c += 1) {\n              var f = u[c],\n                  h = f.flags();\n              2 & h ? e += \"./\" : 4 & h ? e += \"../\" : 8 & h ? e += \"/\" : (e += f.content(r), 1 & h || (e += \"/\"));\n            }\n\n            if (!s.continueFlag()) break;\n          }\n        }\n\n        return e.length > 1 && \"/\" === e[e.length - 1] ? e.slice(0, e.length - 1) : e;\n      }, Eo.prototype.getFile = function (t) {\n        if (this.isDirectory(t)) throw new Error(\"Tried to get a File from a directory.\");\n        return null === this._fileOrDir && (this._fileOrDir = t.slice(this.lba(), this.lba() + this.dataLength())), this._fileOrDir;\n      }, Eo.prototype.getDirectory = function (t) {\n        if (!this.isDirectory(t)) throw new Error(\"Tried to get a Directory from a file.\");\n        return null === this._fileOrDir && (this._fileOrDir = this._constructDirectory(t)), this._fileOrDir;\n      }, Eo.prototype.getSUEntries = function (t) {\n        return this._suEntries || this._constructSUEntries(t), this._suEntries;\n      }, Eo.prototype._rockRidgeFilename = function (t) {\n        var e = this.getSUEntries(t).filter(function (t) {\n          return t instanceof Co;\n        });\n        if (0 === e.length || 6 & e[0].flags()) return null;\n\n        for (var n = \"\", r = this._getGetString(), i = 0, o = e; i < o.length; i += 1) {\n          var s = o[i];\n          if (n += s.name(r), !(1 & s.flags())) break;\n        }\n\n        return n;\n      }, Eo.prototype._constructSUEntries = function (t) {\n        var e = 33 + this._data[32];\n        e % 2 === 1 && e++, e += this._rockRidgeOffset, this._suEntries = ye(this._data, e, this.length(), t);\n      }, Eo.prototype._getRockRidgeOffset = function (t) {\n        this._rockRidgeOffset = 0;\n        var e = this.getSUEntries(t);\n\n        if (e.length > 0) {\n          var n = e[0];\n          if (n instanceof Fo && n.checkBytesPass()) for (var r = 1; r < e.length; r++) {\n            var i = e[r];\n            if (i instanceof To || i instanceof Ro && i.extensionIdentifier() === go) return n.bytesSkipped();\n          }\n        }\n\n        return this._rockRidgeOffset = -1, -1;\n      };\n\n      var bo = function (t) {\n        function e(e, n) {\n          t.call(this, e, n);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype._getString = function (t, e) {\n          return fe(this._data, t, e);\n        }, e.prototype._constructDirectory = function (t) {\n          return new Vo(this, t);\n        }, e.prototype._getGetString = function () {\n          return fe;\n        }, e;\n      }(Eo),\n          So = function (t) {\n        function e(e, n) {\n          t.call(this, e, n);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype._getString = function (t, e) {\n          return he(this._data, t, e);\n        }, e.prototype._constructDirectory = function (t) {\n          return new Wo(this, t);\n        }, e.prototype._getGetString = function () {\n          return he;\n        }, e;\n      }(Eo),\n          ko = function ko(t) {\n        this._data = t;\n      };\n\n      ko.prototype.signatureWord = function () {\n        return this._data.readUInt16BE(0);\n      }, ko.prototype.signatureWordString = function () {\n        return fe(this._data, 0, 2);\n      }, ko.prototype.length = function () {\n        return this._data[2];\n      }, ko.prototype.suVersion = function () {\n        return this._data[3];\n      };\n\n      var Io = function (t) {\n        function e(e) {\n          t.call(this, e), this._entries = null;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.continuationLba = function () {\n          return this._data.readUInt32LE(4);\n        }, e.prototype.continuationLbaOffset = function () {\n          return this._data.readUInt32LE(12);\n        }, e.prototype.continuationLength = function () {\n          return this._data.readUInt32LE(20);\n        }, e.prototype.getEntries = function (t) {\n          if (!this._entries) {\n            var e = 2048 * this.continuationLba() + this.continuationLbaOffset();\n            this._entries = ye(t, e, this.continuationLength(), t);\n          }\n\n          return this._entries;\n        }, e;\n      }(ko),\n          Oo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e;\n      }(ko),\n          Fo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.checkBytesPass = function () {\n          return 190 === this._data[4] && 239 === this._data[5];\n        }, e.prototype.bytesSkipped = function () {\n          return this._data[6];\n        }, e;\n      }(ko),\n          No = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e;\n      }(ko),\n          Ro = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.identifierLength = function () {\n          return this._data[4];\n        }, e.prototype.descriptorLength = function () {\n          return this._data[5];\n        }, e.prototype.sourceLength = function () {\n          return this._data[6];\n        }, e.prototype.extensionVersion = function () {\n          return this._data[7];\n        }, e.prototype.extensionIdentifier = function () {\n          return fe(this._data, 8, this.identifierLength());\n        }, e.prototype.extensionDescriptor = function () {\n          return fe(this._data, 8 + this.identifierLength(), this.descriptorLength());\n        }, e.prototype.extensionSource = function () {\n          return fe(this._data, 8 + this.identifierLength() + this.descriptorLength(), this.sourceLength());\n        }, e;\n      }(ko),\n          Lo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.extensionSequence = function () {\n          return this._data[4];\n        }, e;\n      }(ko),\n          To = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e;\n      }(ko),\n          xo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.mode = function () {\n          return this._data.readUInt32LE(4);\n        }, e.prototype.fileLinks = function () {\n          return this._data.readUInt32LE(12);\n        }, e.prototype.uid = function () {\n          return this._data.readUInt32LE(20);\n        }, e.prototype.gid = function () {\n          return this._data.readUInt32LE(28);\n        }, e.prototype.inode = function () {\n          return this._data.readUInt32LE(36);\n        }, e;\n      }(ko),\n          Ao = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.devTHigh = function () {\n          return this._data.readUInt32LE(4);\n        }, e.prototype.devTLow = function () {\n          return this._data.readUInt32LE(12);\n        }, e;\n      }(ko),\n          Do = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flags = function () {\n          return this._data[4];\n        }, e.prototype.continueFlag = function () {\n          return 1 & this.flags();\n        }, e.prototype.componentRecords = function () {\n          for (var t = this, e = new Array(), n = 5; n < this.length();) {\n            var r = new Po(t._data.slice(n));\n            e.push(r), n += r.length();\n          }\n\n          return e;\n        }, e;\n      }(ko),\n          Po = function Po(t) {\n        this._data = t;\n      };\n\n      Po.prototype.flags = function () {\n        return this._data[0];\n      }, Po.prototype.length = function () {\n        return 2 + this.componentLength();\n      }, Po.prototype.componentLength = function () {\n        return this._data[1];\n      }, Po.prototype.content = function (t) {\n        return t(this._data, 2, this.componentLength());\n      };\n\n      var Co = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flags = function () {\n          return this._data[4];\n        }, e.prototype.name = function (t) {\n          return t(this._data, 5, this.length() - 5);\n        }, e;\n      }(ko),\n          Uo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.childDirectoryLba = function () {\n          return this._data.readUInt32LE(4);\n        }, e;\n      }(ko),\n          Mo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.parentDirectoryLba = function () {\n          return this._data.readUInt32LE(4);\n        }, e;\n      }(ko),\n          jo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e;\n      }(ko),\n          Bo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flags = function () {\n          return this._data[4];\n        }, e.prototype.creation = function () {\n          return 1 & this.flags() ? this._longFormDates() ? pe(this._data, 5) : le(this._data, 5) : null;\n        }, e.prototype.modify = function () {\n          if (2 & this.flags()) {\n            var t = 1 & this.flags() ? 1 : 0;\n            return this._longFormDates ? pe(this._data, 5 + 17 * t) : le(this._data, 5 + 7 * t);\n          }\n\n          return null;\n        }, e.prototype.access = function () {\n          if (4 & this.flags()) {\n            var t = 1 & this.flags() ? 1 : 0;\n            return t += 2 & this.flags() ? 1 : 0, this._longFormDates ? pe(this._data, 5 + 17 * t) : le(this._data, 5 + 7 * t);\n          }\n\n          return null;\n        }, e.prototype.backup = function () {\n          if (16 & this.flags()) {\n            var t = 1 & this.flags() ? 1 : 0;\n            return t += 2 & this.flags() ? 1 : 0, t += 4 & this.flags() ? 1 : 0, this._longFormDates ? pe(this._data, 5 + 17 * t) : le(this._data, 5 + 7 * t);\n          }\n\n          return null;\n        }, e.prototype.expiration = function () {\n          if (32 & this.flags()) {\n            var t = 1 & this.flags() ? 1 : 0;\n            return t += 2 & this.flags() ? 1 : 0, t += 4 & this.flags() ? 1 : 0, t += 16 & this.flags() ? 1 : 0, this._longFormDates ? pe(this._data, 5 + 17 * t) : le(this._data, 5 + 7 * t);\n          }\n\n          return null;\n        }, e.prototype.effective = function () {\n          if (64 & this.flags()) {\n            var t = 1 & this.flags() ? 1 : 0;\n            return t += 2 & this.flags() ? 1 : 0, t += 4 & this.flags() ? 1 : 0, t += 16 & this.flags() ? 1 : 0, t += 32 & this.flags() ? 1 : 0, this._longFormDates ? pe(this._data, 5 + 17 * t) : le(this._data, 5 + 7 * t);\n          }\n\n          return null;\n        }, e.prototype._longFormDates = function () {\n          return !!this.flags();\n        }, e;\n      }(ko),\n          zo = function (t) {\n        function e(e) {\n          t.call(this, e);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.virtualSizeHigh = function () {\n          return this._data.readUInt32LE(4);\n        }, e.prototype.virtualSizeLow = function () {\n          return this._data.readUInt32LE(12);\n        }, e.prototype.tableDepth = function () {\n          return this._data[20];\n        }, e;\n      }(ko),\n          qo = function qo(t, e) {\n        var n = this;\n        this._fileList = [], this._fileMap = {}, this._record = t;\n        var r = t.lba(),\n            i = r + t.dataLength();\n\n        if (!(2 & t.fileFlags())) {\n          var o = t.getSUEntries(e).filter(function (t) {\n            return t instanceof Uo;\n          })[0];\n          r = 2048 * o.childDirectoryLba(), i = 1 / 0;\n        }\n\n        for (; r < i;) {\n          var s = e[r];\n\n          if (0 !== s) {\n            var a = n._constructDirectoryRecord(e.slice(r)),\n                c = a.fileName(e);\n\n            \"\\0\" !== c && \"\u0001\" !== c ? a.hasRockRidge() && 0 !== a.getSUEntries(e).filter(function (t) {\n              return t instanceof jo;\n            }).length || (n._fileMap[c] = a, n._fileList.push(c)) : i === 1 / 0 && (i = r + a.dataLength()), r += a.length();\n          } else r++;\n        }\n      };\n\n      qo.prototype.getRecord = function (t) {\n        return this._fileMap[t];\n      }, qo.prototype.getFileList = function () {\n        return this._fileList;\n      }, qo.prototype.getDotEntry = function (t) {\n        return this._constructDirectoryRecord(t.slice(this._record.lba()));\n      };\n\n      var Vo = function (t) {\n        function e(e, n) {\n          t.call(this, e, n);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype._constructDirectoryRecord = function (t) {\n          return new bo(t, this._record.getRockRidgeOffset());\n        }, e;\n      }(qo),\n          Wo = function (t) {\n        function e(e, n) {\n          t.call(this, e, n);\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype._constructDirectoryRecord = function (t) {\n          return new So(t, this._record.getRockRidgeOffset());\n        }, e;\n      }(qo),\n          Ho = function (t) {\n        function e(n, r, i) {\n          var o = this;\n          void 0 === r && (r = \"\"), void 0 === i && (i = !0), t.call(this), this._data = n, d(i, e.Name, {\n            data: \"ISO data as a Buffer\",\n            name: r\n          });\n\n          for (var s = !1, a = 32768, c = new Array(); !s;) {\n            var u = n.slice(a),\n                f = new vo(u);\n\n            switch (f.type()) {\n              case 1:\n                c.push(new _o(u));\n                break;\n\n              case 2:\n                c.push(new wo(u));\n                break;\n\n              case 255:\n                s = !0;\n            }\n\n            a += 2048;\n          }\n\n          if (0 === c.length) throw new Fe(be.EIO, \"Unable to find a suitable volume descriptor.\");\n          c.forEach(function (t) {\n            o._pvd && 2 === o._pvd.type() || (o._pvd = t);\n          }), this._root = this._pvd.rootDirectoryEntry(n), this._name = r;\n        }\n\n        return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.Create = function (t, n) {\n          var r, i;\n\n          try {\n            r = new e(t.data, t.name, !1);\n          } catch (t) {\n            t = t;\n          } finally {\n            n(i, r);\n          }\n        }, e.isAvailable = function () {\n          return !0;\n        }, e.prototype.getName = function () {\n          var t = \"IsoFS\" + this._name + (this._pvd ? \"-\" + this._pvd.name() : \"\");\n          return this._root && this._root.hasRockRidge() && (t += \"-RockRidge\"), t;\n        }, e.prototype.diskSpace = function (t, e) {\n          e(this._data.length, 0);\n        }, e.prototype.isReadOnly = function () {\n          return !0;\n        }, e.prototype.supportsLinks = function () {\n          return !1;\n        }, e.prototype.supportsProps = function () {\n          return !1;\n        }, e.prototype.supportsSynch = function () {\n          return !0;\n        }, e.prototype.statSync = function (t, e) {\n          var n = this._getDirectoryRecord(t);\n\n          if (null === n) throw Fe.ENOENT(t);\n          return this._getStats(t, n);\n        }, e.prototype.openSync = function (t, e, n) {\n          if (e.isWriteable()) throw new Fe(be.EPERM, t);\n\n          var r = this._getDirectoryRecord(t);\n\n          if (!r) throw Fe.ENOENT(t);\n          if (r.isSymlink(this._data)) return this.openSync(ke.resolve(t, r.getSymlinkPath(this._data)), e, n);\n          if (r.isDirectory(this._data)) throw Fe.EISDIR(t);\n\n          var i = r.getFile(this._data),\n              o = this._getStats(t, r);\n\n          switch (e.pathExistsAction()) {\n            case Oe.THROW_EXCEPTION:\n            case Oe.TRUNCATE_FILE:\n              throw Fe.EEXIST(t);\n\n            case Oe.NOP:\n              return new Xe(this, t, e, o, i);\n\n            default:\n              throw new Fe(be.EINVAL, \"Invalid FileMode object.\");\n          }\n        }, e.prototype.readdirSync = function (t) {\n          var e = this._getDirectoryRecord(t);\n\n          if (e) {\n            if (e.isDirectory(this._data)) return e.getDirectory(this._data).getFileList().slice(0);\n            throw Fe.ENOTDIR(t);\n          }\n\n          throw Fe.ENOENT(t);\n        }, e.prototype.readFileSync = function (t, e, n) {\n          var r = this.openSync(t, n, 420);\n\n          try {\n            var i = r,\n                o = i.getBuffer();\n            return null === e ? b(o) : o.toString(e);\n          } finally {\n            r.closeSync();\n          }\n        }, e.prototype._getDirectoryRecord = function (t) {\n          var e = this;\n          if (\"/\" === t) return this._root;\n\n          for (var n = t.split(\"/\").slice(1), r = this._root, i = 0, o = n; i < o.length; i += 1) {\n            var s = o[i];\n            if (!r.isDirectory(e._data)) return null;\n            if (r = r.getDirectory(e._data).getRecord(s), !r) return null;\n          }\n\n          return r;\n        }, e.prototype._getStats = function (t, e) {\n          if (e.isSymlink(this._data)) {\n            var n = ke.resolve(t, e.getSymlinkPath(this._data)),\n                r = this._getDirectoryRecord(n);\n\n            return r ? this._getStats(n, r) : null;\n          }\n\n          var i = e.dataLength(),\n              o = 365,\n              s = e.recordingDate(),\n              a = s,\n              c = s,\n              u = s;\n          if (e.hasRockRidge()) for (var f = e.getSUEntries(this._data), h = 0, p = f; h < p.length; h += 1) {\n            var l = p[h];\n            if (l instanceof xo) o = l.mode();else if (l instanceof Bo) {\n              var d = l.flags();\n              4 & d && (a = l.access()), 2 & d && (c = l.modify()), 1 & d && (u = l.creation());\n            }\n          }\n          return o &= 365, new Te(e.isDirectory(this._data) ? Le.DIRECTORY : Le.FILE, i, o, a, c, u);\n        }, e;\n      }(He);\n\n      Ho.Name = \"IsoFS\", Ho.Options = {\n        data: {\n          type: \"object\",\n          description: \"The ISO file in a buffer\",\n          validator: k\n        }\n      }, [Je, Kr, Gr, Qr, ri, li, mi, Ho, bi, Si, Vi, Xi, to, yo].forEach(function (t) {\n        var e = t.Create;\n\n        t.Create = function (n, r) {\n          function i(n) {\n            n ? s(n) : e.call(t, a, s);\n          }\n\n          var o = \"function\" == typeof n,\n              s = o ? n : r,\n              a = o ? {} : n;\n          I(t, a, i);\n        };\n      });\n      var Zo = {\n        AsyncMirror: Je,\n        Dropbox: Kr,\n        Emscripten: Gr,\n        FolderAdapter: Qr,\n        HTML5FS: ri,\n        InMemory: li,\n        IndexedDB: mi,\n        IsoFS: Ho,\n        LocalStorage: bi,\n        MountableFileSystem: Si,\n        OverlayFS: Vi,\n        WorkerFS: Xi,\n        XmlHttpRequest: to,\n        ZipFS: yo\n      };\n      o.initializeTTYs && o.initializeTTYs(), \"b\" !== \"ab\".substr(-1) && (String.prototype.substr = function (t) {\n        return function (e, n) {\n          return e < 0 && (e = this.length + e), t.call(this, e, n);\n        };\n      }(String.prototype.substr)), \"undefined\" != typeof ArrayBuffer && \"undefined\" != typeof Uint8Array && (Uint8Array.prototype.slice || (Uint8Array.prototype.slice = function (t, e) {\n        void 0 === t && (t = 0), void 0 === e && (e = this.length);\n        var n = this;\n        return t < 0 && (t = this.length + t, t < 0 && (t = 0)), e < 0 && (e = this.length + e, e < 0 && (e = 0)), e < t && (e = t), new Uint8Array(n.buffer, n.byteOffset + t, e - t);\n      })), e.install = ge, e.registerFileSystem = ve, e.BFSRequire = me, e.initialize = _e, e.configure = we, e.getFileSystem = Ee, e.EmscriptenFS = Ve, e.FileSystem = Zo, e.Errors = Ne, e.setImmediate = Ui;\n    }).call(e, n(7), function () {\n      return this;\n    }(), n(41)(t), n(3));\n  }, function (t, e, n) {\n    (function (t) {\n      /*!\n      * The buffer module from node.js, for the browser.\n      *\n      * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n      * @license  MIT\n      */\n      \"use strict\";\n\n      function r() {\n        try {\n          var t = new Uint8Array(1);\n          return t.__proto__ = {\n            __proto__: Uint8Array.prototype,\n            foo: function foo() {\n              return 42;\n            }\n          }, 42 === t.foo();\n        } catch (t) {\n          return !1;\n        }\n      }\n\n      function i(e) {\n        if (e > J) throw new RangeError(\"Invalid typed array length\");\n        var n = new Uint8Array(e);\n        return n.__proto__ = t.prototype, n;\n      }\n\n      function t(t, e, n) {\n        if (\"number\" == typeof t) {\n          if (\"string\" == typeof e) throw new Error(\"If encoding is specified then the first argument must be a string\");\n          return c(t);\n        }\n\n        return o(t, e, n);\n      }\n\n      function o(t, e, n) {\n        if (\"number\" == typeof t) throw new TypeError('\"value\" argument must not be a number');\n        return H(t) ? h(t, e, n) : \"string\" == typeof t ? u(t, e) : p(t);\n      }\n\n      function s(t) {\n        if (\"number\" != typeof t) throw new TypeError('\"size\" argument must be a number');\n        if (t < 0) throw new RangeError('\"size\" argument must not be negative');\n      }\n\n      function a(t, e, n) {\n        return s(t), t <= 0 ? i(t) : void 0 !== e ? \"string\" == typeof n ? i(t).fill(e, n) : i(t).fill(e) : i(t);\n      }\n\n      function c(t) {\n        return s(t), i(t < 0 ? 0 : 0 | l(t));\n      }\n\n      function u(e, n) {\n        if (\"string\" == typeof n && \"\" !== n || (n = \"utf8\"), !t.isEncoding(n)) throw new TypeError('\"encoding\" must be a valid string encoding');\n        var r = 0 | y(e, n),\n            o = i(r),\n            s = o.write(e, n);\n        return s !== r && (o = o.slice(0, s)), o;\n      }\n\n      function f(t) {\n        for (var e = t.length < 0 ? 0 : 0 | l(t.length), n = i(e), r = 0; r < e; r += 1) {\n          n[r] = 255 & t[r];\n        }\n\n        return n;\n      }\n\n      function h(e, n, r) {\n        if (n < 0 || e.byteLength < n) throw new RangeError(\"'offset' is out of bounds\");\n        if (e.byteLength < n + (r || 0)) throw new RangeError(\"'length' is out of bounds\");\n        var i;\n        return i = void 0 === n && void 0 === r ? new Uint8Array(e) : void 0 === r ? new Uint8Array(e, n) : new Uint8Array(e, n, r), i.__proto__ = t.prototype, i;\n      }\n\n      function p(e) {\n        if (t.isBuffer(e)) {\n          var n = 0 | l(e.length),\n              r = i(n);\n          return 0 === r.length ? r : (e.copy(r, 0, 0, n), r);\n        }\n\n        if (e) {\n          if (Z(e) || \"length\" in e) return \"number\" != typeof e.length || Y(e.length) ? i(0) : f(e);\n          if (\"Buffer\" === e.type && Array.isArray(e.data)) return f(e.data);\n        }\n\n        throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n      }\n\n      function l(t) {\n        if (t >= J) throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + J.toString(16) + \" bytes\");\n        return 0 | t;\n      }\n\n      function d(e) {\n        return +e != e && (e = 0), t.alloc(+e);\n      }\n\n      function y(e, n) {\n        if (t.isBuffer(e)) return e.length;\n        if (Z(e) || H(e)) return e.byteLength;\n        \"string\" != typeof e && (e = \"\" + e);\n        var r = e.length;\n        if (0 === r) return 0;\n\n        for (var i = !1;;) {\n          switch (n) {\n            case \"ascii\":\n            case \"latin1\":\n            case \"binary\":\n              return r;\n\n            case \"utf8\":\n            case \"utf-8\":\n            case void 0:\n              return B(e).length;\n\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return 2 * r;\n\n            case \"hex\":\n              return r >>> 1;\n\n            case \"base64\":\n              return V(e).length;\n\n            default:\n              if (i) return B(e).length;\n              n = (\"\" + n).toLowerCase(), i = !0;\n          }\n        }\n      }\n\n      function g(t, e, n) {\n        var r = !1;\n        if ((void 0 === e || e < 0) && (e = 0), e > this.length) return \"\";\n        if ((void 0 === n || n > this.length) && (n = this.length), n <= 0) return \"\";\n        if (n >>>= 0, e >>>= 0, n <= e) return \"\";\n\n        for (t || (t = \"utf8\");;) {\n          switch (t) {\n            case \"hex\":\n              return T(this, e, n);\n\n            case \"utf8\":\n            case \"utf-8\":\n              return F(this, e, n);\n\n            case \"ascii\":\n              return R(this, e, n);\n\n            case \"latin1\":\n            case \"binary\":\n              return L(this, e, n);\n\n            case \"base64\":\n              return O(this, e, n);\n\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return x(this, e, n);\n\n            default:\n              if (r) throw new TypeError(\"Unknown encoding: \" + t);\n              t = (t + \"\").toLowerCase(), r = !0;\n          }\n        }\n      }\n\n      function v(t, e, n) {\n        var r = t[e];\n        t[e] = t[n], t[n] = r;\n      }\n\n      function m(e, n, r, i, o) {\n        if (0 === e.length) return -1;\n\n        if (\"string\" == typeof r ? (i = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, Y(r) && (r = o ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {\n          if (o) return -1;\n          r = e.length - 1;\n        } else if (r < 0) {\n          if (!o) return -1;\n          r = 0;\n        }\n\n        if (\"string\" == typeof n && (n = t.from(n, i)), t.isBuffer(n)) return 0 === n.length ? -1 : _(e, n, r, i, o);\n        if (\"number\" == typeof n) return n &= 255, \"function\" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(e, n, r) : Uint8Array.prototype.lastIndexOf.call(e, n, r) : _(e, [n], r, i, o);\n        throw new TypeError(\"val must be string, number or Buffer\");\n      }\n\n      function _(t, e, n, r, i) {\n        function o(t, e) {\n          return 1 === s ? t[e] : t.readUInt16BE(e * s);\n        }\n\n        var s = 1,\n            a = t.length,\n            c = e.length;\n\n        if (void 0 !== r && (r = String(r).toLowerCase(), \"ucs2\" === r || \"ucs-2\" === r || \"utf16le\" === r || \"utf-16le\" === r)) {\n          if (t.length < 2 || e.length < 2) return -1;\n          s = 2, a /= 2, c /= 2, n /= 2;\n        }\n\n        var u;\n\n        if (i) {\n          var f = -1;\n\n          for (u = n; u < a; u++) {\n            if (o(t, u) === o(e, f === -1 ? 0 : u - f)) {\n              if (f === -1 && (f = u), u - f + 1 === c) return f * s;\n            } else f !== -1 && (u -= u - f), f = -1;\n          }\n        } else for (n + c > a && (n = a - c), u = n; u >= 0; u--) {\n          for (var h = !0, p = 0; p < c; p++) {\n            if (o(t, u + p) !== o(e, p)) {\n              h = !1;\n              break;\n            }\n          }\n\n          if (h) return u;\n        }\n\n        return -1;\n      }\n\n      function w(t, e, n, r) {\n        n = Number(n) || 0;\n        var i = t.length - n;\n        r ? (r = Number(r), r > i && (r = i)) : r = i;\n        var o = e.length;\n        if (o % 2 !== 0) throw new TypeError(\"Invalid hex string\");\n        r > o / 2 && (r = o / 2);\n\n        for (var s = 0; s < r; ++s) {\n          var a = parseInt(e.substr(2 * s, 2), 16);\n          if (Y(a)) return s;\n          t[n + s] = a;\n        }\n\n        return s;\n      }\n\n      function E(t, e, n, r) {\n        return W(B(e, t.length - n), t, n, r);\n      }\n\n      function b(t, e, n, r) {\n        return W(z(e), t, n, r);\n      }\n\n      function S(t, e, n, r) {\n        return b(t, e, n, r);\n      }\n\n      function k(t, e, n, r) {\n        return W(V(e), t, n, r);\n      }\n\n      function I(t, e, n, r) {\n        return W(q(e, t.length - n), t, n, r);\n      }\n\n      function O(t, e, n) {\n        return 0 === e && n === t.length ? X.fromByteArray(t) : X.fromByteArray(t.slice(e, n));\n      }\n\n      function F(t, e, n) {\n        n = Math.min(t.length, n);\n\n        for (var r = [], i = e; i < n;) {\n          var o = t[i],\n              s = null,\n              a = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1;\n\n          if (i + a <= n) {\n            var c, u, f, h;\n\n            switch (a) {\n              case 1:\n                o < 128 && (s = o);\n                break;\n\n              case 2:\n                c = t[i + 1], 128 === (192 & c) && (h = (31 & o) << 6 | 63 & c, h > 127 && (s = h));\n                break;\n\n              case 3:\n                c = t[i + 1], u = t[i + 2], 128 === (192 & c) && 128 === (192 & u) && (h = (15 & o) << 12 | (63 & c) << 6 | 63 & u, h > 2047 && (h < 55296 || h > 57343) && (s = h));\n                break;\n\n              case 4:\n                c = t[i + 1], u = t[i + 2], f = t[i + 3], 128 === (192 & c) && 128 === (192 & u) && 128 === (192 & f) && (h = (15 & o) << 18 | (63 & c) << 12 | (63 & u) << 6 | 63 & f, h > 65535 && h < 1114112 && (s = h));\n            }\n          }\n\n          null === s ? (s = 65533, a = 1) : s > 65535 && (s -= 65536, r.push(s >>> 10 & 1023 | 55296), s = 56320 | 1023 & s), r.push(s), i += a;\n        }\n\n        return N(r);\n      }\n\n      function N(t) {\n        var e = t.length;\n        if (e <= G) return String.fromCharCode.apply(String, t);\n\n        for (var n = \"\", r = 0; r < e;) {\n          n += String.fromCharCode.apply(String, t.slice(r, r += G));\n        }\n\n        return n;\n      }\n\n      function R(t, e, n) {\n        var r = \"\";\n        n = Math.min(t.length, n);\n\n        for (var i = e; i < n; ++i) {\n          r += String.fromCharCode(127 & t[i]);\n        }\n\n        return r;\n      }\n\n      function L(t, e, n) {\n        var r = \"\";\n        n = Math.min(t.length, n);\n\n        for (var i = e; i < n; ++i) {\n          r += String.fromCharCode(t[i]);\n        }\n\n        return r;\n      }\n\n      function T(t, e, n) {\n        var r = t.length;\n        (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r);\n\n        for (var i = \"\", o = e; o < n; ++o) {\n          i += j(t[o]);\n        }\n\n        return i;\n      }\n\n      function x(t, e, n) {\n        for (var r = t.slice(e, n), i = \"\", o = 0; o < r.length; o += 2) {\n          i += String.fromCharCode(r[o] + 256 * r[o + 1]);\n        }\n\n        return i;\n      }\n\n      function A(t, e, n) {\n        if (t % 1 !== 0 || t < 0) throw new RangeError(\"offset is not uint\");\n        if (t + e > n) throw new RangeError(\"Trying to access beyond buffer length\");\n      }\n\n      function D(e, n, r, i, o, s) {\n        if (!t.isBuffer(e)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n        if (n > o || n < s) throw new RangeError('\"value\" argument is out of bounds');\n        if (r + i > e.length) throw new RangeError(\"Index out of range\");\n      }\n\n      function P(t, e, n, r, i, o) {\n        if (n + r > t.length) throw new RangeError(\"Index out of range\");\n        if (n < 0) throw new RangeError(\"Index out of range\");\n      }\n\n      function C(t, e, n, r, i) {\n        return e = +e, n >>>= 0, i || P(t, e, n, 4, 3.4028234663852886e38, -3.4028234663852886e38), K.write(t, e, n, r, 23, 4), n + 4;\n      }\n\n      function U(t, e, n, r, i) {\n        return e = +e, n >>>= 0, i || P(t, e, n, 8, 1.7976931348623157e308, -1.7976931348623157e308), K.write(t, e, n, r, 52, 8), n + 8;\n      }\n\n      function M(t) {\n        if (t = t.trim().replace(Q, \"\"), t.length < 2) return \"\";\n\n        for (; t.length % 4 !== 0;) {\n          t += \"=\";\n        }\n\n        return t;\n      }\n\n      function j(t) {\n        return t < 16 ? \"0\" + t.toString(16) : t.toString(16);\n      }\n\n      function B(t, e) {\n        e = e || 1 / 0;\n\n        for (var n, r = t.length, i = null, o = [], s = 0; s < r; ++s) {\n          if (n = t.charCodeAt(s), n > 55295 && n < 57344) {\n            if (!i) {\n              if (n > 56319) {\n                (e -= 3) > -1 && o.push(239, 191, 189);\n                continue;\n              }\n\n              if (s + 1 === r) {\n                (e -= 3) > -1 && o.push(239, 191, 189);\n                continue;\n              }\n\n              i = n;\n              continue;\n            }\n\n            if (n < 56320) {\n              (e -= 3) > -1 && o.push(239, 191, 189), i = n;\n              continue;\n            }\n\n            n = (i - 55296 << 10 | n - 56320) + 65536;\n          } else i && (e -= 3) > -1 && o.push(239, 191, 189);\n\n          if (i = null, n < 128) {\n            if ((e -= 1) < 0) break;\n            o.push(n);\n          } else if (n < 2048) {\n            if ((e -= 2) < 0) break;\n            o.push(n >> 6 | 192, 63 & n | 128);\n          } else if (n < 65536) {\n            if ((e -= 3) < 0) break;\n            o.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128);\n          } else {\n            if (!(n < 1114112)) throw new Error(\"Invalid code point\");\n            if ((e -= 4) < 0) break;\n            o.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128);\n          }\n        }\n\n        return o;\n      }\n\n      function z(t) {\n        for (var e = [], n = 0; n < t.length; ++n) {\n          e.push(255 & t.charCodeAt(n));\n        }\n\n        return e;\n      }\n\n      function q(t, e) {\n        for (var n, r, i, o = [], s = 0; s < t.length && !((e -= 2) < 0); ++s) {\n          n = t.charCodeAt(s), r = n >> 8, i = n % 256, o.push(i), o.push(r);\n        }\n\n        return o;\n      }\n\n      function V(t) {\n        return X.toByteArray(M(t));\n      }\n\n      function W(t, e, n, r) {\n        for (var i = 0; i < r && !(i + n >= e.length || i >= t.length); ++i) {\n          e[i + n] = t[i];\n        }\n\n        return i;\n      }\n\n      function H(t) {\n        return t instanceof ArrayBuffer || null != t && null != t.constructor && \"ArrayBuffer\" === t.constructor.name && \"number\" == typeof t.byteLength;\n      }\n\n      function Z(t) {\n        return \"function\" == typeof ArrayBuffer.isView && ArrayBuffer.isView(t);\n      }\n\n      function Y(t) {\n        return t !== t;\n      }\n\n      var X = n(18),\n          K = n(21);\n      e.Buffer = t, e.SlowBuffer = d, e.INSPECT_MAX_BYTES = 50;\n      var J = 2147483647;\n      e.kMaxLength = J, t.TYPED_ARRAY_SUPPORT = r(), t.TYPED_ARRAY_SUPPORT || \"undefined\" == typeof console || \"function\" != typeof console.error || console.error(\"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"), \"undefined\" != typeof Symbol && Symbol.species && t[Symbol.species] === t && Object.defineProperty(t, Symbol.species, {\n        value: null,\n        configurable: !0,\n        enumerable: !1,\n        writable: !1\n      }), t.poolSize = 8192, t.from = function (t, e, n) {\n        return o(t, e, n);\n      }, t.prototype.__proto__ = Uint8Array.prototype, t.__proto__ = Uint8Array, t.alloc = function (t, e, n) {\n        return a(t, e, n);\n      }, t.allocUnsafe = function (t) {\n        return c(t);\n      }, t.allocUnsafeSlow = function (t) {\n        return c(t);\n      }, t.isBuffer = function (t) {\n        return null != t && t._isBuffer === !0;\n      }, t.compare = function (e, n) {\n        if (!t.isBuffer(e) || !t.isBuffer(n)) throw new TypeError(\"Arguments must be Buffers\");\n        if (e === n) return 0;\n\n        for (var r = e.length, i = n.length, o = 0, s = Math.min(r, i); o < s; ++o) {\n          if (e[o] !== n[o]) {\n            r = e[o], i = n[o];\n            break;\n          }\n        }\n\n        return r < i ? -1 : i < r ? 1 : 0;\n      }, t.isEncoding = function (t) {\n        switch (String(t).toLowerCase()) {\n          case \"hex\":\n          case \"utf8\":\n          case \"utf-8\":\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n          case \"base64\":\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return !0;\n\n          default:\n            return !1;\n        }\n      }, t.concat = function (e, n) {\n        if (!Array.isArray(e)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n        if (0 === e.length) return t.alloc(0);\n        var r;\n        if (void 0 === n) for (n = 0, r = 0; r < e.length; ++r) {\n          n += e[r].length;\n        }\n        var i = t.allocUnsafe(n),\n            o = 0;\n\n        for (r = 0; r < e.length; ++r) {\n          var s = e[r];\n          if (!t.isBuffer(s)) throw new TypeError('\"list\" argument must be an Array of Buffers');\n          s.copy(i, o), o += s.length;\n        }\n\n        return i;\n      }, t.byteLength = y, t.prototype._isBuffer = !0, t.prototype.swap16 = function () {\n        var t = this.length;\n        if (t % 2 !== 0) throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n\n        for (var e = 0; e < t; e += 2) {\n          v(this, e, e + 1);\n        }\n\n        return this;\n      }, t.prototype.swap32 = function () {\n        var t = this.length;\n        if (t % 4 !== 0) throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n\n        for (var e = 0; e < t; e += 4) {\n          v(this, e, e + 3), v(this, e + 1, e + 2);\n        }\n\n        return this;\n      }, t.prototype.swap64 = function () {\n        var t = this.length;\n        if (t % 8 !== 0) throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n\n        for (var e = 0; e < t; e += 8) {\n          v(this, e, e + 7), v(this, e + 1, e + 6), v(this, e + 2, e + 5), v(this, e + 3, e + 4);\n        }\n\n        return this;\n      }, t.prototype.toString = function () {\n        var t = this.length;\n        return 0 === t ? \"\" : 0 === arguments.length ? F(this, 0, t) : g.apply(this, arguments);\n      }, t.prototype.equals = function (e) {\n        if (!t.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n        return this === e || 0 === t.compare(this, e);\n      }, t.prototype.inspect = function () {\n        var t = \"\",\n            n = e.INSPECT_MAX_BYTES;\n        return this.length > 0 && (t = this.toString(\"hex\", 0, n).match(/.{2}/g).join(\" \"), this.length > n && (t += \" ... \")), \"<Buffer \" + t + \">\";\n      }, t.prototype.compare = function (e, n, r, i, o) {\n        if (!t.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n        if (void 0 === n && (n = 0), void 0 === r && (r = e ? e.length : 0), void 0 === i && (i = 0), void 0 === o && (o = this.length), n < 0 || r > e.length || i < 0 || o > this.length) throw new RangeError(\"out of range index\");\n        if (i >= o && n >= r) return 0;\n        if (i >= o) return -1;\n        if (n >= r) return 1;\n        if (n >>>= 0, r >>>= 0, i >>>= 0, o >>>= 0, this === e) return 0;\n\n        for (var s = o - i, a = r - n, c = Math.min(s, a), u = this.slice(i, o), f = e.slice(n, r), h = 0; h < c; ++h) {\n          if (u[h] !== f[h]) {\n            s = u[h], a = f[h];\n            break;\n          }\n        }\n\n        return s < a ? -1 : a < s ? 1 : 0;\n      }, t.prototype.includes = function (t, e, n) {\n        return this.indexOf(t, e, n) !== -1;\n      }, t.prototype.indexOf = function (t, e, n) {\n        return m(this, t, e, n, !0);\n      }, t.prototype.lastIndexOf = function (t, e, n) {\n        return m(this, t, e, n, !1);\n      }, t.prototype.write = function (t, e, n, r) {\n        if (void 0 === e) r = \"utf8\", n = this.length, e = 0;else if (void 0 === n && \"string\" == typeof e) r = e, n = this.length, e = 0;else {\n          if (!isFinite(e)) throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n          e >>>= 0, isFinite(n) ? (n >>>= 0, void 0 === r && (r = \"utf8\")) : (r = n, n = void 0);\n        }\n        var i = this.length - e;\n        if ((void 0 === n || n > i) && (n = i), t.length > 0 && (n < 0 || e < 0) || e > this.length) throw new RangeError(\"Attempt to write outside buffer bounds\");\n        r || (r = \"utf8\");\n\n        for (var o = !1;;) {\n          switch (r) {\n            case \"hex\":\n              return w(this, t, e, n);\n\n            case \"utf8\":\n            case \"utf-8\":\n              return E(this, t, e, n);\n\n            case \"ascii\":\n              return b(this, t, e, n);\n\n            case \"latin1\":\n            case \"binary\":\n              return S(this, t, e, n);\n\n            case \"base64\":\n              return k(this, t, e, n);\n\n            case \"ucs2\":\n            case \"ucs-2\":\n            case \"utf16le\":\n            case \"utf-16le\":\n              return I(this, t, e, n);\n\n            default:\n              if (o) throw new TypeError(\"Unknown encoding: \" + r);\n              r = (\"\" + r).toLowerCase(), o = !0;\n          }\n        }\n      }, t.prototype.toJSON = function () {\n        return {\n          type: \"Buffer\",\n          data: Array.prototype.slice.call(this._arr || this, 0)\n        };\n      };\n      var G = 4096;\n      t.prototype.slice = function (e, n) {\n        var r = this.length;\n        e = ~~e, n = void 0 === n ? r : ~~n, e < 0 ? (e += r, e < 0 && (e = 0)) : e > r && (e = r), n < 0 ? (n += r, n < 0 && (n = 0)) : n > r && (n = r), n < e && (n = e);\n        var i = this.subarray(e, n);\n        return i.__proto__ = t.prototype, i;\n      }, t.prototype.readUIntLE = function (t, e, n) {\n        t >>>= 0, e >>>= 0, n || A(t, e, this.length);\n\n        for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {\n          r += this[t + o] * i;\n        }\n\n        return r;\n      }, t.prototype.readUIntBE = function (t, e, n) {\n        t >>>= 0, e >>>= 0, n || A(t, e, this.length);\n\n        for (var r = this[t + --e], i = 1; e > 0 && (i *= 256);) {\n          r += this[t + --e] * i;\n        }\n\n        return r;\n      }, t.prototype.readUInt8 = function (t, e) {\n        return t >>>= 0, e || A(t, 1, this.length), this[t];\n      }, t.prototype.readUInt16LE = function (t, e) {\n        return t >>>= 0, e || A(t, 2, this.length), this[t] | this[t + 1] << 8;\n      }, t.prototype.readUInt16BE = function (t, e) {\n        return t >>>= 0, e || A(t, 2, this.length), this[t] << 8 | this[t + 1];\n      }, t.prototype.readUInt32LE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3];\n      }, t.prototype.readUInt32BE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), 16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]);\n      }, t.prototype.readIntLE = function (t, e, n) {\n        t >>>= 0, e >>>= 0, n || A(t, e, this.length);\n\n        for (var r = this[t], i = 1, o = 0; ++o < e && (i *= 256);) {\n          r += this[t + o] * i;\n        }\n\n        return i *= 128, r >= i && (r -= Math.pow(2, 8 * e)), r;\n      }, t.prototype.readIntBE = function (t, e, n) {\n        t >>>= 0, e >>>= 0, n || A(t, e, this.length);\n\n        for (var r = e, i = 1, o = this[t + --r]; r > 0 && (i *= 256);) {\n          o += this[t + --r] * i;\n        }\n\n        return i *= 128, o >= i && (o -= Math.pow(2, 8 * e)), o;\n      }, t.prototype.readInt8 = function (t, e) {\n        return t >>>= 0, e || A(t, 1, this.length), 128 & this[t] ? (255 - this[t] + 1) * -1 : this[t];\n      }, t.prototype.readInt16LE = function (t, e) {\n        t >>>= 0, e || A(t, 2, this.length);\n        var n = this[t] | this[t + 1] << 8;\n        return 32768 & n ? 4294901760 | n : n;\n      }, t.prototype.readInt16BE = function (t, e) {\n        t >>>= 0, e || A(t, 2, this.length);\n        var n = this[t + 1] | this[t] << 8;\n        return 32768 & n ? 4294901760 | n : n;\n      }, t.prototype.readInt32LE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24;\n      }, t.prototype.readInt32BE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3];\n      }, t.prototype.readFloatLE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), K.read(this, t, !0, 23, 4);\n      }, t.prototype.readFloatBE = function (t, e) {\n        return t >>>= 0, e || A(t, 4, this.length), K.read(this, t, !1, 23, 4);\n      }, t.prototype.readDoubleLE = function (t, e) {\n        return t >>>= 0, e || A(t, 8, this.length), K.read(this, t, !0, 52, 8);\n      }, t.prototype.readDoubleBE = function (t, e) {\n        return t >>>= 0, e || A(t, 8, this.length), K.read(this, t, !1, 52, 8);\n      }, t.prototype.writeUIntLE = function (t, e, n, r) {\n        if (t = +t, e >>>= 0, n >>>= 0, !r) {\n          var i = Math.pow(2, 8 * n) - 1;\n          D(this, t, e, n, i, 0);\n        }\n\n        var o = 1,\n            s = 0;\n\n        for (this[e] = 255 & t; ++s < n && (o *= 256);) {\n          this[e + s] = t / o & 255;\n        }\n\n        return e + n;\n      }, t.prototype.writeUIntBE = function (t, e, n, r) {\n        if (t = +t, e >>>= 0, n >>>= 0, !r) {\n          var i = Math.pow(2, 8 * n) - 1;\n          D(this, t, e, n, i, 0);\n        }\n\n        var o = n - 1,\n            s = 1;\n\n        for (this[e + o] = 255 & t; --o >= 0 && (s *= 256);) {\n          this[e + o] = t / s & 255;\n        }\n\n        return e + n;\n      }, t.prototype.writeUInt8 = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 1, 255, 0), this[e] = 255 & t, e + 1;\n      }, t.prototype.writeUInt16LE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 2, 65535, 0), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;\n      }, t.prototype.writeUInt16BE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 2, 65535, 0), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;\n      }, t.prototype.writeUInt32LE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 4, 4294967295, 0), this[e + 3] = t >>> 24, this[e + 2] = t >>> 16, this[e + 1] = t >>> 8, this[e] = 255 & t, e + 4;\n      }, t.prototype.writeUInt32BE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 4, 4294967295, 0), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;\n      }, t.prototype.writeIntLE = function (t, e, n, r) {\n        if (t = +t, e >>>= 0, !r) {\n          var i = Math.pow(2, 8 * n - 1);\n          D(this, t, e, n, i - 1, -i);\n        }\n\n        var o = 0,\n            s = 1,\n            a = 0;\n\n        for (this[e] = 255 & t; ++o < n && (s *= 256);) {\n          t < 0 && 0 === a && 0 !== this[e + o - 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;\n        }\n\n        return e + n;\n      }, t.prototype.writeIntBE = function (t, e, n, r) {\n        if (t = +t, e >>>= 0, !r) {\n          var i = Math.pow(2, 8 * n - 1);\n          D(this, t, e, n, i - 1, -i);\n        }\n\n        var o = n - 1,\n            s = 1,\n            a = 0;\n\n        for (this[e + o] = 255 & t; --o >= 0 && (s *= 256);) {\n          t < 0 && 0 === a && 0 !== this[e + o + 1] && (a = 1), this[e + o] = (t / s >> 0) - a & 255;\n        }\n\n        return e + n;\n      }, t.prototype.writeInt8 = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 1, 127, -128), t < 0 && (t = 255 + t + 1), this[e] = 255 & t, e + 1;\n      }, t.prototype.writeInt16LE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 2, 32767, -32768), this[e] = 255 & t, this[e + 1] = t >>> 8, e + 2;\n      }, t.prototype.writeInt16BE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 2, 32767, -32768), this[e] = t >>> 8, this[e + 1] = 255 & t, e + 2;\n      }, t.prototype.writeInt32LE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 4, 2147483647, -2147483648), this[e] = 255 & t, this[e + 1] = t >>> 8, this[e + 2] = t >>> 16, this[e + 3] = t >>> 24, e + 4;\n      }, t.prototype.writeInt32BE = function (t, e, n) {\n        return t = +t, e >>>= 0, n || D(this, t, e, 4, 2147483647, -2147483648), t < 0 && (t = 4294967295 + t + 1), this[e] = t >>> 24, this[e + 1] = t >>> 16, this[e + 2] = t >>> 8, this[e + 3] = 255 & t, e + 4;\n      }, t.prototype.writeFloatLE = function (t, e, n) {\n        return C(this, t, e, !0, n);\n      }, t.prototype.writeFloatBE = function (t, e, n) {\n        return C(this, t, e, !1, n);\n      }, t.prototype.writeDoubleLE = function (t, e, n) {\n        return U(this, t, e, !0, n);\n      }, t.prototype.writeDoubleBE = function (t, e, n) {\n        return U(this, t, e, !1, n);\n      }, t.prototype.copy = function (t, e, n, r) {\n        if (n || (n = 0), r || 0 === r || (r = this.length), e >= t.length && (e = t.length), e || (e = 0), r > 0 && r < n && (r = n), r === n) return 0;\n        if (0 === t.length || 0 === this.length) return 0;\n        if (e < 0) throw new RangeError(\"targetStart out of bounds\");\n        if (n < 0 || n >= this.length) throw new RangeError(\"sourceStart out of bounds\");\n        if (r < 0) throw new RangeError(\"sourceEnd out of bounds\");\n        r > this.length && (r = this.length), t.length - e < r - n && (r = t.length - e + n);\n        var i,\n            o = r - n;\n        if (this === t && n < e && e < r) for (i = o - 1; i >= 0; --i) {\n          t[i + e] = this[i + n];\n        } else if (o < 1e3) for (i = 0; i < o; ++i) {\n          t[i + e] = this[i + n];\n        } else Uint8Array.prototype.set.call(t, this.subarray(n, n + o), e);\n        return o;\n      }, t.prototype.fill = function (e, n, r, i) {\n        if (\"string\" == typeof e) {\n          if (\"string\" == typeof n ? (i = n, n = 0, r = this.length) : \"string\" == typeof r && (i = r, r = this.length), 1 === e.length) {\n            var o = e.charCodeAt(0);\n            o < 256 && (e = o);\n          }\n\n          if (void 0 !== i && \"string\" != typeof i) throw new TypeError(\"encoding must be a string\");\n          if (\"string\" == typeof i && !t.isEncoding(i)) throw new TypeError(\"Unknown encoding: \" + i);\n        } else \"number\" == typeof e && (e &= 255);\n\n        if (n < 0 || this.length < n || this.length < r) throw new RangeError(\"Out of range index\");\n        if (r <= n) return this;\n        n >>>= 0, r = void 0 === r ? this.length : r >>> 0, e || (e = 0);\n        var s;\n        if (\"number\" == typeof e) for (s = n; s < r; ++s) {\n          this[s] = e;\n        } else {\n          var a = t.isBuffer(e) ? e : new t(e, i),\n              c = a.length;\n\n          for (s = 0; s < r - n; ++s) {\n            this[s + n] = a[s % c];\n          }\n        }\n        return this;\n      };\n      var Q = /[^+\\/0-9A-Za-z-_]/g;\n    }).call(e, n(7));\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return this instanceof r ? (u.call(this, t), f.call(this, t), t && t.readable === !1 && (this.readable = !1), t && t.writable === !1 && (this.writable = !1), this.allowHalfOpen = !0, t && t.allowHalfOpen === !1 && (this.allowHalfOpen = !1), void this.once(\"end\", i)) : new r(t);\n    }\n\n    function i() {\n      this.allowHalfOpen || this._writableState.ended || a(o, this);\n    }\n\n    function o(t) {\n      t.end();\n    }\n\n    var s = Object.keys || function (t) {\n      var e = [];\n\n      for (var n in t) {\n        e.push(n);\n      }\n\n      return e;\n    };\n\n    t.exports = r;\n    var a = n(11),\n        c = n(5);\n    c.inherits = n(4);\n    var u = n(16),\n        f = n(13);\n    c.inherits(r, u);\n\n    for (var h = s(f.prototype), p = 0; p < h.length; p++) {\n      var l = h[p];\n      r.prototype[l] || (r.prototype[l] = f.prototype[l]);\n    }\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      s[t] || (\"function\" == typeof o[t] ? s[t] = function () {\n        return o[t].apply(o, arguments);\n      } : s[t] = o[t]);\n    }\n\n    var i = n(19),\n        o = new i(),\n        s = {};\n\n    for (var a in o) {\n      r(a);\n    }\n\n    s.initializeTTYs = function () {\n      null === o.stdin && (o.initializeTTYs(), s.stdin = o.stdin, s.stdout = o.stdout, s.stderr = o.stderr);\n    }, o.nextTick(function () {\n      s.initializeTTYs();\n    }), t.exports = s;\n  }, function (t, e) {\n    \"function\" == typeof Object.create ? t.exports = function (t, e) {\n      t.super_ = e, t.prototype = Object.create(e.prototype, {\n        constructor: {\n          value: t,\n          enumerable: !1,\n          writable: !0,\n          configurable: !0\n        }\n      });\n    } : t.exports = function (t, e) {\n      t.super_ = e;\n\n      var n = function n() {};\n\n      n.prototype = e.prototype, t.prototype = new n(), t.prototype.constructor = t;\n    };\n  }, function (t, e, n) {\n    (function (t) {\n      function n(t) {\n        return Array.isArray ? Array.isArray(t) : \"[object Array]\" === g(t);\n      }\n\n      function r(t) {\n        return \"boolean\" == typeof t;\n      }\n\n      function i(t) {\n        return null === t;\n      }\n\n      function o(t) {\n        return null == t;\n      }\n\n      function s(t) {\n        return \"number\" == typeof t;\n      }\n\n      function a(t) {\n        return \"string\" == typeof t;\n      }\n\n      function c(t) {\n        return \"symbol\" == _typeof(t);\n      }\n\n      function u(t) {\n        return void 0 === t;\n      }\n\n      function f(t) {\n        return \"[object RegExp]\" === g(t);\n      }\n\n      function h(t) {\n        return \"object\" == _typeof(t) && null !== t;\n      }\n\n      function p(t) {\n        return \"[object Date]\" === g(t);\n      }\n\n      function l(t) {\n        return \"[object Error]\" === g(t) || t instanceof Error;\n      }\n\n      function d(t) {\n        return \"function\" == typeof t;\n      }\n\n      function y(t) {\n        return null === t || \"boolean\" == typeof t || \"number\" == typeof t || \"string\" == typeof t || \"symbol\" == _typeof(t) || \"undefined\" == typeof t;\n      }\n\n      function g(t) {\n        return Object.prototype.toString.call(t);\n      }\n\n      e.isArray = n, e.isBoolean = r, e.isNull = i, e.isNullOrUndefined = o, e.isNumber = s, e.isString = a, e.isSymbol = c, e.isUndefined = u, e.isRegExp = f, e.isObject = h, e.isDate = p, e.isError = l, e.isFunction = d, e.isPrimitive = y, e.isBuffer = t.isBuffer;\n    }).call(e, n(7));\n  }, function (t, e) {\n    function n() {\n      this._events = this._events || {}, this._maxListeners = this._maxListeners || void 0;\n    }\n\n    function r(t) {\n      return \"function\" == typeof t;\n    }\n\n    function i(t) {\n      return \"number\" == typeof t;\n    }\n\n    function o(t) {\n      return \"object\" == _typeof(t) && null !== t;\n    }\n\n    function s(t) {\n      return void 0 === t;\n    }\n\n    t.exports = n, n.EventEmitter = n, n.prototype._events = void 0, n.prototype._maxListeners = void 0, n.defaultMaxListeners = 10, n.prototype.setMaxListeners = function (t) {\n      if (!i(t) || t < 0 || isNaN(t)) throw TypeError(\"n must be a positive number\");\n      return this._maxListeners = t, this;\n    }, n.prototype.emit = function (t) {\n      var e, n, i, a, c, u;\n\n      if (this._events || (this._events = {}), \"error\" === t && (!this._events.error || o(this._events.error) && !this._events.error.length)) {\n        if (e = arguments[1], e instanceof Error) throw e;\n        var f = new Error('Uncaught, unspecified \"error\" event. (' + e + \")\");\n        throw f.context = e, f;\n      }\n\n      if (n = this._events[t], s(n)) return !1;\n      if (r(n)) switch (arguments.length) {\n        case 1:\n          n.call(this);\n          break;\n\n        case 2:\n          n.call(this, arguments[1]);\n          break;\n\n        case 3:\n          n.call(this, arguments[1], arguments[2]);\n          break;\n\n        default:\n          a = Array.prototype.slice.call(arguments, 1), n.apply(this, a);\n      } else if (o(n)) for (a = Array.prototype.slice.call(arguments, 1), u = n.slice(), i = u.length, c = 0; c < i; c++) {\n        u[c].apply(this, a);\n      }\n      return !0;\n    }, n.prototype.addListener = function (t, e) {\n      var i;\n      if (!r(e)) throw TypeError(\"listener must be a function\");\n      return this._events || (this._events = {}), this._events.newListener && this.emit(\"newListener\", t, r(e.listener) ? e.listener : e), this._events[t] ? o(this._events[t]) ? this._events[t].push(e) : this._events[t] = [this._events[t], e] : this._events[t] = e, o(this._events[t]) && !this._events[t].warned && (i = s(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners, i && i > 0 && this._events[t].length > i && (this._events[t].warned = !0, console.error(\"(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.\", this._events[t].length), \"function\" == typeof console.trace && console.trace())), this;\n    }, n.prototype.on = n.prototype.addListener, n.prototype.once = function (t, e) {\n      function n() {\n        this.removeListener(t, n), i || (i = !0, e.apply(this, arguments));\n      }\n\n      if (!r(e)) throw TypeError(\"listener must be a function\");\n      var i = !1;\n      return n.listener = e, this.on(t, n), this;\n    }, n.prototype.removeListener = function (t, e) {\n      var n, i, s, a;\n      if (!r(e)) throw TypeError(\"listener must be a function\");\n      if (!this._events || !this._events[t]) return this;\n      if (n = this._events[t], s = n.length, i = -1, n === e || r(n.listener) && n.listener === e) delete this._events[t], this._events.removeListener && this.emit(\"removeListener\", t, e);else if (o(n)) {\n        for (a = s; a-- > 0;) {\n          if (n[a] === e || n[a].listener && n[a].listener === e) {\n            i = a;\n            break;\n          }\n        }\n\n        if (i < 0) return this;\n        1 === n.length ? (n.length = 0, delete this._events[t]) : n.splice(i, 1), this._events.removeListener && this.emit(\"removeListener\", t, e);\n      }\n      return this;\n    }, n.prototype.removeAllListeners = function (t) {\n      var e, n;\n      if (!this._events) return this;\n      if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[t] && delete this._events[t], this;\n\n      if (0 === arguments.length) {\n        for (e in this._events) {\n          \"removeListener\" !== e && this.removeAllListeners(e);\n        }\n\n        return this.removeAllListeners(\"removeListener\"), this._events = {}, this;\n      }\n\n      if (n = this._events[t], r(n)) this.removeListener(t, n);else if (n) for (; n.length;) {\n        this.removeListener(t, n[n.length - 1]);\n      }\n      return delete this._events[t], this;\n    }, n.prototype.listeners = function (t) {\n      var e;\n      return e = this._events && this._events[t] ? r(this._events[t]) ? [this._events[t]] : this._events[t].slice() : [];\n    }, n.prototype.listenerCount = function (t) {\n      if (this._events) {\n        var e = this._events[t];\n        if (r(e)) return 1;\n        if (e) return e.length;\n      }\n\n      return 0;\n    }, n.listenerCount = function (t, e) {\n      return t.listenerCount(e);\n    };\n  }, function (t, e, n) {\n    t.exports = n(1).Buffer;\n  }, function (t, e) {\n    \"use strict\";\n\n    var n = \"undefined\" != typeof Uint8Array && \"undefined\" != typeof Uint16Array && \"undefined\" != typeof Int32Array;\n    e.assign = function (t) {\n      for (var e = Array.prototype.slice.call(arguments, 1); e.length;) {\n        var n = e.shift();\n\n        if (n) {\n          if (\"object\" != _typeof(n)) throw new TypeError(n + \"must be non-object\");\n\n          for (var r in n) {\n            n.hasOwnProperty(r) && (t[r] = n[r]);\n          }\n        }\n      }\n\n      return t;\n    }, e.shrinkBuf = function (t, e) {\n      return t.length === e ? t : t.subarray ? t.subarray(0, e) : (t.length = e, t);\n    };\n    var r = {\n      arraySet: function arraySet(t, e, n, r, i) {\n        if (e.subarray && t.subarray) return void t.set(e.subarray(n, n + r), i);\n\n        for (var o = 0; o < r; o++) {\n          t[i + o] = e[n + o];\n        }\n      },\n      flattenChunks: function flattenChunks(t) {\n        var e, n, r, i, o, s;\n\n        for (r = 0, e = 0, n = t.length; e < n; e++) {\n          r += t[e].length;\n        }\n\n        for (s = new Uint8Array(r), i = 0, e = 0, n = t.length; e < n; e++) {\n          o = t[e], s.set(o, i), i += o.length;\n        }\n\n        return s;\n      }\n    },\n        i = {\n      arraySet: function arraySet(t, e, n, r, i) {\n        for (var o = 0; o < r; o++) {\n          t[i + o] = e[n + o];\n        }\n      },\n      flattenChunks: function flattenChunks(t) {\n        return [].concat.apply([], t);\n      }\n    };\n    e.setTyped = function (t) {\n      t ? (e.Buf8 = Uint8Array, e.Buf16 = Uint16Array, e.Buf32 = Int32Array, e.assign(e, r)) : (e.Buf8 = Array, e.Buf16 = Array, e.Buf32 = Array, e.assign(e, i));\n    }, e.setTyped(n);\n  }, function (t, e, n) {\n    function r() {\n      i.call(this);\n    }\n\n    t.exports = r;\n    var i = n(6).EventEmitter,\n        o = n(4);\n    o(r, i), r.Readable = n(37), r.Writable = n(39), r.Duplex = n(34), r.Transform = n(38), r.PassThrough = n(36), r.Stream = r, r.prototype.pipe = function (t, e) {\n      function n(e) {\n        t.writable && !1 === t.write(e) && u.pause && u.pause();\n      }\n\n      function r() {\n        u.readable && u.resume && u.resume();\n      }\n\n      function o() {\n        f || (f = !0, t.end());\n      }\n\n      function s() {\n        f || (f = !0, \"function\" == typeof t.destroy && t.destroy());\n      }\n\n      function a(t) {\n        if (c(), 0 === i.listenerCount(this, \"error\")) throw t;\n      }\n\n      function c() {\n        u.removeListener(\"data\", n), t.removeListener(\"drain\", r), u.removeListener(\"end\", o), u.removeListener(\"close\", s), u.removeListener(\"error\", a), t.removeListener(\"error\", a), u.removeListener(\"end\", c), u.removeListener(\"close\", c), t.removeListener(\"close\", c);\n      }\n\n      var u = this;\n      u.on(\"data\", n), t.on(\"drain\", r), t._isStdio || e && e.end === !1 || (u.on(\"end\", o), u.on(\"close\", s));\n      var f = !1;\n      return u.on(\"error\", a), t.on(\"error\", a), u.on(\"end\", c), u.on(\"close\", c), t.on(\"close\", c), t.emit(\"pipe\", u), t;\n    };\n  }, function (t, e, n) {\n    (function (t) {\n      \"use strict\";\n\n      var r = n(1),\n          i = r.Buffer,\n          o = r.SlowBuffer,\n          s = r.kMaxLength || 2147483647;\n      e.alloc = function (t, e, n) {\n        if (\"function\" == typeof i.alloc) return i.alloc(t, e, n);\n        if (\"number\" == typeof n) throw new TypeError(\"encoding must not be number\");\n        if (\"number\" != typeof t) throw new TypeError(\"size must be a number\");\n        if (t > s) throw new RangeError(\"size is too large\");\n        var r = n,\n            o = e;\n        void 0 === o && (r = void 0, o = 0);\n        var a = new i(t);\n        if (\"string\" == typeof o) for (var c = new i(o, r), u = c.length, f = -1; ++f < t;) {\n          a[f] = c[f % u];\n        } else a.fill(o);\n        return a;\n      }, e.allocUnsafe = function (t) {\n        if (\"function\" == typeof i.allocUnsafe) return i.allocUnsafe(t);\n        if (\"number\" != typeof t) throw new TypeError(\"size must be a number\");\n        if (t > s) throw new RangeError(\"size is too large\");\n        return new i(t);\n      }, e.from = function (e, n, r) {\n        if (\"function\" == typeof i.from && (!t.Uint8Array || Uint8Array.from !== i.from)) return i.from(e, n, r);\n        if (\"number\" == typeof e) throw new TypeError('\"value\" argument must not be a number');\n        if (\"string\" == typeof e) return new i(e, n);\n\n        if (\"undefined\" != typeof ArrayBuffer && e instanceof ArrayBuffer) {\n          var o = n;\n          if (1 === arguments.length) return new i(e);\n          \"undefined\" == typeof o && (o = 0);\n          var s = r;\n          if (\"undefined\" == typeof s && (s = e.byteLength - o), o >= e.byteLength) throw new RangeError(\"'offset' is out of bounds\");\n          if (s > e.byteLength - o) throw new RangeError(\"'length' is out of bounds\");\n          return new i(e.slice(o, o + s));\n        }\n\n        if (i.isBuffer(e)) {\n          var a = new i(e.length);\n          return e.copy(a, 0, 0, e.length), a;\n        }\n\n        if (e) {\n          if (Array.isArray(e) || \"undefined\" != typeof ArrayBuffer && e.buffer instanceof ArrayBuffer || \"length\" in e) return new i(e);\n          if (\"Buffer\" === e.type && Array.isArray(e.data)) return new i(e.data);\n        }\n\n        throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\");\n      }, e.allocUnsafeSlow = function (t) {\n        if (\"function\" == typeof i.allocUnsafeSlow) return i.allocUnsafeSlow(t);\n        if (\"number\" != typeof t) throw new TypeError(\"size must be a number\");\n        if (t >= s) throw new RangeError(\"size is too large\");\n        return new o(t);\n      };\n    }).call(e, function () {\n      return this;\n    }());\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      function n(t, n, r, i) {\n        if (\"function\" != typeof t) throw new TypeError('\"callback\" argument must be a function');\n        var o,\n            s,\n            a = arguments.length;\n\n        switch (a) {\n          case 0:\n          case 1:\n            return e.nextTick(t);\n\n          case 2:\n            return e.nextTick(function () {\n              t.call(null, n);\n            });\n\n          case 3:\n            return e.nextTick(function () {\n              t.call(null, n, r);\n            });\n\n          case 4:\n            return e.nextTick(function () {\n              t.call(null, n, r, i);\n            });\n\n          default:\n            for (o = new Array(a - 1), s = 0; s < o.length;) {\n              o[s++] = arguments[s];\n            }\n\n            return e.nextTick(function () {\n              t.apply(null, o);\n            });\n        }\n      }\n\n      !e.version || 0 === e.version.indexOf(\"v0.\") || 0 === e.version.indexOf(\"v1.\") && 0 !== e.version.indexOf(\"v1.8.\") ? t.exports = n : t.exports = e.nextTick;\n    }).call(e, n(3));\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      this.afterTransform = function (e, n) {\n        return i(t, e, n);\n      }, this.needTransform = !1, this.transforming = !1, this.writecb = null, this.writechunk = null, this.writeencoding = null;\n    }\n\n    function i(t, e, n) {\n      var r = t._transformState;\n      r.transforming = !1;\n      var i = r.writecb;\n      if (!i) return t.emit(\"error\", new Error(\"no writecb in Transform class\"));\n      r.writechunk = null, r.writecb = null, null !== n && void 0 !== n && t.push(n), i(e);\n      var o = t._readableState;\n      o.reading = !1, (o.needReadable || o.length < o.highWaterMark) && t._read(o.highWaterMark);\n    }\n\n    function o(t) {\n      if (!(this instanceof o)) return new o(t);\n      a.call(this, t), this._transformState = new r(this);\n      var e = this;\n      this._readableState.needReadable = !0, this._readableState.sync = !1, t && (\"function\" == typeof t.transform && (this._transform = t.transform), \"function\" == typeof t.flush && (this._flush = t.flush)), this.once(\"prefinish\", function () {\n        \"function\" == typeof this._flush ? this._flush(function (t, n) {\n          s(e, t, n);\n        }) : s(e);\n      });\n    }\n\n    function s(t, e, n) {\n      if (e) return t.emit(\"error\", e);\n      null !== n && void 0 !== n && t.push(n);\n      var r = t._writableState,\n          i = t._transformState;\n      if (r.length) throw new Error(\"Calling transform done when ws.length != 0\");\n      if (i.transforming) throw new Error(\"Calling transform done when still transforming\");\n      return t.push(null);\n    }\n\n    t.exports = o;\n    var a = n(2),\n        c = n(5);\n    c.inherits = n(4), c.inherits(o, a), o.prototype.push = function (t, e) {\n      return this._transformState.needTransform = !1, a.prototype.push.call(this, t, e);\n    }, o.prototype._transform = function (t, e, n) {\n      throw new Error(\"_transform() is not implemented\");\n    }, o.prototype._write = function (t, e, n) {\n      var r = this._transformState;\n\n      if (r.writecb = n, r.writechunk = t, r.writeencoding = e, !r.transforming) {\n        var i = this._readableState;\n        (r.needTransform || i.needReadable || i.length < i.highWaterMark) && this._read(i.highWaterMark);\n      }\n    }, o.prototype._read = function (t) {\n      var e = this._transformState;\n      null !== e.writechunk && e.writecb && !e.transforming ? (e.transforming = !0, this._transform(e.writechunk, e.writeencoding, e.afterTransform)) : e.needTransform = !0;\n    };\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      function r() {}\n\n      function i(t, e, n) {\n        this.chunk = t, this.encoding = e, this.callback = n, this.next = null;\n      }\n\n      function o(t, e) {\n        S = S || n(2), t = t || {}, this.objectMode = !!t.objectMode, e instanceof S && (this.objectMode = this.objectMode || !!t.writableObjectMode);\n        var r = t.highWaterMark,\n            i = this.objectMode ? 16 : 16384;\n        this.highWaterMark = r || 0 === r ? r : i, this.highWaterMark = ~~this.highWaterMark, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1;\n        var o = t.decodeStrings === !1;\n        this.decodeStrings = !o, this.defaultEncoding = t.defaultEncoding || \"utf8\", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (t) {\n          d(e, t);\n        }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new b(this);\n      }\n\n      function s(t) {\n        return S = S || n(2), T.call(s, this) || this instanceof S ? (this._writableState = new o(t, this), this.writable = !0, t && (\"function\" == typeof t.write && (this._write = t.write), \"function\" == typeof t.writev && (this._writev = t.writev)), void F.call(this)) : new s(t);\n      }\n\n      function a(t, e) {\n        var n = new Error(\"write after end\");\n        t.emit(\"error\", n), k(e, n);\n      }\n\n      function c(t, e, n, r) {\n        var i = !0,\n            o = !1;\n        return null === n ? o = new TypeError(\"May not write null values to stream\") : \"string\" == typeof n || void 0 === n || e.objectMode || (o = new TypeError(\"Invalid non-string/buffer chunk\")), o && (t.emit(\"error\", o), k(r, o), i = !1), i;\n      }\n\n      function u(t, e, n) {\n        return t.objectMode || t.decodeStrings === !1 || \"string\" != typeof e || (e = L.from(e, n)), e;\n      }\n\n      function f(t, e, n, r, o, s) {\n        n || (r = u(e, r, o), R.isBuffer(r) && (o = \"buffer\"));\n        var a = e.objectMode ? 1 : r.length;\n        e.length += a;\n        var c = e.length < e.highWaterMark;\n\n        if (c || (e.needDrain = !0), e.writing || e.corked) {\n          var f = e.lastBufferedRequest;\n          e.lastBufferedRequest = new i(r, o, s), f ? f.next = e.lastBufferedRequest : e.bufferedRequest = e.lastBufferedRequest, e.bufferedRequestCount += 1;\n        } else h(t, e, !1, a, r, o, s);\n\n        return c;\n      }\n\n      function h(t, e, n, r, i, o, s) {\n        e.writelen = r, e.writecb = s, e.writing = !0, e.sync = !0, n ? t._writev(i, e.onwrite) : t._write(i, o, e.onwrite), e.sync = !1;\n      }\n\n      function p(t, e, n, r, i) {\n        --e.pendingcb, n ? k(i, r) : i(r), t._writableState.errorEmitted = !0, t.emit(\"error\", r);\n      }\n\n      function l(t) {\n        t.writing = !1, t.writecb = null, t.length -= t.writelen, t.writelen = 0;\n      }\n\n      function d(t, e) {\n        var n = t._writableState,\n            r = n.sync,\n            i = n.writecb;\n        if (l(n), e) p(t, n, r, e, i);else {\n          var o = m(n);\n          o || n.corked || n.bufferProcessing || !n.bufferedRequest || v(t, n), r ? I(y, t, n, o, i) : y(t, n, o, i);\n        }\n      }\n\n      function y(t, e, n, r) {\n        n || g(t, e), e.pendingcb--, r(), w(t, e);\n      }\n\n      function g(t, e) {\n        0 === e.length && e.needDrain && (e.needDrain = !1, t.emit(\"drain\"));\n      }\n\n      function v(t, e) {\n        e.bufferProcessing = !0;\n        var n = e.bufferedRequest;\n\n        if (t._writev && n && n.next) {\n          var r = e.bufferedRequestCount,\n              i = new Array(r),\n              o = e.corkedRequestsFree;\n          o.entry = n;\n\n          for (var s = 0; n;) {\n            i[s] = n, n = n.next, s += 1;\n          }\n\n          h(t, e, !0, e.length, i, \"\", o.finish), e.pendingcb++, e.lastBufferedRequest = null, o.next ? (e.corkedRequestsFree = o.next, o.next = null) : e.corkedRequestsFree = new b(e);\n        } else {\n          for (; n;) {\n            var a = n.chunk,\n                c = n.encoding,\n                u = n.callback,\n                f = e.objectMode ? 1 : a.length;\n            if (h(t, e, !1, f, a, c, u), n = n.next, e.writing) break;\n          }\n\n          null === n && (e.lastBufferedRequest = null);\n        }\n\n        e.bufferedRequestCount = 0, e.bufferedRequest = n, e.bufferProcessing = !1;\n      }\n\n      function m(t) {\n        return t.ending && 0 === t.length && null === t.bufferedRequest && !t.finished && !t.writing;\n      }\n\n      function _(t, e) {\n        e.prefinished || (e.prefinished = !0, t.emit(\"prefinish\"));\n      }\n\n      function w(t, e) {\n        var n = m(e);\n        return n && (0 === e.pendingcb ? (_(t, e), e.finished = !0, t.emit(\"finish\")) : _(t, e)), n;\n      }\n\n      function E(t, e, n) {\n        e.ending = !0, w(t, e), n && (e.finished ? k(n) : t.once(\"finish\", n)), e.ended = !0, t.writable = !1;\n      }\n\n      function b(t) {\n        var e = this;\n        this.next = null, this.entry = null, this.finish = function (n) {\n          var r = e.entry;\n\n          for (e.entry = null; r;) {\n            var i = r.callback;\n            t.pendingcb--, i(n), r = r.next;\n          }\n\n          t.corkedRequestsFree ? t.corkedRequestsFree.next = e : t.corkedRequestsFree = e;\n        };\n      }\n\n      t.exports = s;\n      var S,\n          k = n(11),\n          I = !e.browser && [\"v0.10\", \"v0.9.\"].indexOf(e.version.slice(0, 5)) > -1 ? setImmediate : k;\n      s.WritableState = o;\n      var O = n(5);\n      O.inherits = n(4);\n      var F,\n          N = {\n        deprecate: n(40)\n      };\n      !function () {\n        try {\n          F = n(9);\n        } catch (t) {} finally {\n          F || (F = n(6).EventEmitter);\n        }\n      }();\n      var R = n(1).Buffer,\n          L = n(10);\n      O.inherits(s, F), o.prototype.getBuffer = function () {\n        for (var t = this.bufferedRequest, e = []; t;) {\n          e.push(t), t = t.next;\n        }\n\n        return e;\n      }, function () {\n        try {\n          Object.defineProperty(o.prototype, \"buffer\", {\n            get: N.deprecate(function () {\n              return this.getBuffer();\n            }, \"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.\")\n          });\n        } catch (t) {}\n      }();\n      var T;\n      \"function\" == typeof Symbol && Symbol.hasInstance && \"function\" == typeof Function.prototype[Symbol.hasInstance] ? (T = Function.prototype[Symbol.hasInstance], Object.defineProperty(s, Symbol.hasInstance, {\n        value: function value(t) {\n          return !!T.call(this, t) || t && t._writableState instanceof o;\n        }\n      })) : T = function T(t) {\n        return t instanceof this;\n      }, s.prototype.pipe = function () {\n        this.emit(\"error\", new Error(\"Cannot pipe, not readable\"));\n      }, s.prototype.write = function (t, e, n) {\n        var i = this._writableState,\n            o = !1,\n            s = R.isBuffer(t);\n        return \"function\" == typeof e && (n = e, e = null), s ? e = \"buffer\" : e || (e = i.defaultEncoding), \"function\" != typeof n && (n = r), i.ended ? a(this, n) : (s || c(this, i, t, n)) && (i.pendingcb++, o = f(this, i, s, t, e, n)), o;\n      }, s.prototype.cork = function () {\n        var t = this._writableState;\n        t.corked++;\n      }, s.prototype.uncork = function () {\n        var t = this._writableState;\n        t.corked && (t.corked--, t.writing || t.corked || t.finished || t.bufferProcessing || !t.bufferedRequest || v(this, t));\n      }, s.prototype.setDefaultEncoding = function (t) {\n        if (\"string\" == typeof t && (t = t.toLowerCase()), !([\"hex\", \"utf8\", \"utf-8\", \"ascii\", \"binary\", \"base64\", \"ucs2\", \"ucs-2\", \"utf16le\", \"utf-16le\", \"raw\"].indexOf((t + \"\").toLowerCase()) > -1)) throw new TypeError(\"Unknown encoding: \" + t);\n        return this._writableState.defaultEncoding = t, this;\n      }, s.prototype._write = function (t, e, n) {\n        n(new Error(\"_write() is not implemented\"));\n      }, s.prototype._writev = null, s.prototype.end = function (t, e, n) {\n        var r = this._writableState;\n        \"function\" == typeof t ? (n = t, t = null, e = null) : \"function\" == typeof e && (n = e, e = null), null !== t && void 0 !== t && this.write(t, e), r.corked && (r.corked = 1, this.uncork()), r.ending || r.finished || E(this, r, n);\n      };\n    }).call(e, n(3));\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      function n(t) {\n        var e = r.exec(t);\n        return e.shift(), e;\n      }\n\n      var r = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/,\n          i = function () {\n        function t() {}\n\n        return t.normalize = function (e) {\n          \"\" === e && (e = \".\");\n          var n = e.charAt(0) === t.sep;\n          e = t._removeDuplicateSeps(e);\n\n          for (var r = e.split(t.sep), i = [], o = 0; o < r.length; o++) {\n            var s = r[o];\n            \".\" !== s && (\"..\" === s && (n || !n && i.length > 0 && \"..\" !== i[0]) ? i.pop() : i.push(s));\n          }\n\n          if (!n && i.length < 2) switch (i.length) {\n            case 1:\n              \"\" === i[0] && i.unshift(\".\");\n              break;\n\n            default:\n              i.push(\".\");\n          }\n          return e = i.join(t.sep), n && e.charAt(0) !== t.sep && (e = t.sep + e), e;\n        }, t.join = function () {\n          for (var e = [], n = 0; n < arguments.length; n++) {\n            e[n - 0] = arguments[n];\n          }\n\n          for (var r = [], i = 0; i < e.length; i++) {\n            var o = e[i];\n            if (\"string\" != typeof o) throw new TypeError(\"Invalid argument type to path.join: \" + _typeof(o));\n            \"\" !== o && r.push(o);\n          }\n\n          return t.normalize(r.join(t.sep));\n        }, t.resolve = function () {\n          for (var n = [], r = 0; r < arguments.length; r++) {\n            n[r - 0] = arguments[r];\n          }\n\n          for (var i = [], o = 0; o < n.length; o++) {\n            var s = n[o];\n            if (\"string\" != typeof s) throw new TypeError(\"Invalid argument type to path.join: \" + _typeof(s));\n            \"\" !== s && (s.charAt(0) === t.sep && (i = []), i.push(s));\n          }\n\n          var a = t.normalize(i.join(t.sep));\n          if (a.length > 1 && a.charAt(a.length - 1) === t.sep) return a.substr(0, a.length - 1);\n\n          if (a.charAt(0) !== t.sep) {\n            \".\" !== a.charAt(0) || 1 !== a.length && a.charAt(1) !== t.sep || (a = 1 === a.length ? \"\" : a.substr(2));\n            var c = e.cwd();\n            a = \"\" !== a ? this.normalize(c + (\"/\" !== c ? t.sep : \"\") + a) : c;\n          }\n\n          return a;\n        }, t.relative = function (e, n) {\n          var r;\n          e = t.resolve(e), n = t.resolve(n);\n          var i = e.split(t.sep),\n              o = n.split(t.sep);\n          o.shift(), i.shift();\n          var s = 0,\n              a = [];\n\n          for (r = 0; r < i.length; r++) {\n            var c = i[r];\n\n            if (c !== o[r]) {\n              s = i.length - r;\n              break;\n            }\n          }\n\n          a = o.slice(r), 1 === i.length && \"\" === i[0] && (s = 0), s > i.length && (s = i.length);\n          var u = \"\";\n\n          for (r = 0; r < s; r++) {\n            u += \"../\";\n          }\n\n          return u += a.join(t.sep), u.length > 1 && u.charAt(u.length - 1) === t.sep && (u = u.substr(0, u.length - 1)), u;\n        }, t.dirname = function (e) {\n          e = t._removeDuplicateSeps(e);\n          var n = e.charAt(0) === t.sep,\n              r = e.split(t.sep);\n          return \"\" === r.pop() && r.length > 0 && r.pop(), r.length > 1 || 1 === r.length && !n ? r.join(t.sep) : n ? t.sep : \".\";\n        }, t.basename = function (e, n) {\n          if (void 0 === n && (n = \"\"), \"\" === e) return e;\n          e = t.normalize(e);\n          var r = e.split(t.sep),\n              i = r[r.length - 1];\n          if (\"\" === i && r.length > 1) return r[r.length - 2];\n\n          if (n.length > 0) {\n            var o = i.substr(i.length - n.length);\n            if (o === n) return i.substr(0, i.length - n.length);\n          }\n\n          return i;\n        }, t.extname = function (e) {\n          e = t.normalize(e);\n          var n = e.split(t.sep);\n          if (e = n.pop(), \"\" === e && n.length > 0 && (e = n.pop()), \"..\" === e) return \"\";\n          var r = e.lastIndexOf(\".\");\n          return r === -1 || 0 === r ? \"\" : e.substr(r);\n        }, t.isAbsolute = function (e) {\n          return e.length > 0 && e.charAt(0) === t.sep;\n        }, t._makeLong = function (t) {\n          return t;\n        }, t.parse = function (t) {\n          var e = n(t);\n          return {\n            root: e[0],\n            dir: e[0] + e[1].slice(0, -1),\n            base: e[2],\n            ext: e[3],\n            name: e[2].slice(0, e[2].length - e[3].length)\n          };\n        }, t.format = function (e) {\n          if (null === e || \"object\" != _typeof(e)) throw new TypeError(\"Parameter 'pathObject' must be an object, not \" + _typeof(e));\n          var n = e.root || \"\";\n          if (\"string\" != typeof n) throw new TypeError(\"'pathObject.root' must be a string or undefined, not \" + _typeof(e.root));\n          var r = e.dir ? e.dir + t.sep : \"\",\n              i = e.base || \"\";\n          return r + i;\n        }, t._removeDuplicateSeps = function (t) {\n          return t = t.replace(this._replaceRegex, this.sep);\n        }, t.sep = \"/\", t._replaceRegex = new RegExp(\"//+\", \"g\"), t.delimiter = \":\", t.posix = t, t.win32 = t, t;\n      }();\n\n      t.exports = i;\n    }).call(e, n(3));\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return this instanceof r ? void i.call(this, t) : new r(t);\n    }\n\n    t.exports = r;\n    var i = n(12),\n        o = n(5);\n    o.inherits = n(4), o.inherits(r, i), r.prototype._transform = function (t, e, n) {\n      n(null, t);\n    };\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      function r(t, e, n) {\n        return \"function\" == typeof t.prependListener ? t.prependListener(e, n) : void (t._events && t._events[e] ? T(t._events[e]) ? t._events[e].unshift(n) : t._events[e] = [n, t._events[e]] : t.on(e, n));\n      }\n\n      function i(t, e) {\n        R = R || n(2), t = t || {}, this.objectMode = !!t.objectMode, e instanceof R && (this.objectMode = this.objectMode || !!t.readableObjectMode);\n        var r = t.highWaterMark,\n            i = this.objectMode ? 16 : 16384;\n        this.highWaterMark = r || 0 === r ? r : i, this.highWaterMark = ~~this.highWaterMark, this.buffer = new B(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.defaultEncoding = t.defaultEncoding || \"utf8\", this.ranOut = !1, this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, t.encoding && (j || (j = n(17).StringDecoder), this.decoder = new j(t.encoding), this.encoding = t.encoding);\n      }\n\n      function o(t) {\n        return R = R || n(2), this instanceof o ? (this._readableState = new i(t, this), this.readable = !0, t && \"function\" == typeof t.read && (this._read = t.read), void x.call(this)) : new o(t);\n      }\n\n      function s(t, e, n, r, i) {\n        var o = f(e, n);\n        if (o) t.emit(\"error\", o);else if (null === n) e.reading = !1, h(t, e);else if (e.objectMode || n && n.length > 0) {\n          if (e.ended && !i) {\n            var s = new Error(\"stream.push() after EOF\");\n            t.emit(\"error\", s);\n          } else if (e.endEmitted && i) {\n            var c = new Error(\"stream.unshift() after end event\");\n            t.emit(\"error\", c);\n          } else {\n            var u;\n            !e.decoder || i || r || (n = e.decoder.write(n), u = !e.objectMode && 0 === n.length), i || (e.reading = !1), u || (e.flowing && 0 === e.length && !e.sync ? (t.emit(\"data\", n), t.read(0)) : (e.length += e.objectMode ? 1 : n.length, i ? e.buffer.unshift(n) : e.buffer.push(n), e.needReadable && p(t))), d(t, e);\n          }\n        } else i || (e.reading = !1);\n        return a(e);\n      }\n\n      function a(t) {\n        return !t.ended && (t.needReadable || t.length < t.highWaterMark || 0 === t.length);\n      }\n\n      function c(t) {\n        return t >= z ? t = z : (t--, t |= t >>> 1, t |= t >>> 2, t |= t >>> 4, t |= t >>> 8, t |= t >>> 16, t++), t;\n      }\n\n      function u(t, e) {\n        return t <= 0 || 0 === e.length && e.ended ? 0 : e.objectMode ? 1 : t !== t ? e.flowing && e.length ? e.buffer.head.data.length : e.length : (t > e.highWaterMark && (e.highWaterMark = c(t)), t <= e.length ? t : e.ended ? e.length : (e.needReadable = !0, 0));\n      }\n\n      function f(t, e) {\n        var n = null;\n        return D.isBuffer(e) || \"string\" == typeof e || null === e || void 0 === e || t.objectMode || (n = new TypeError(\"Invalid non-string/buffer chunk\")), n;\n      }\n\n      function h(t, e) {\n        if (!e.ended) {\n          if (e.decoder) {\n            var n = e.decoder.end();\n            n && n.length && (e.buffer.push(n), e.length += e.objectMode ? 1 : n.length);\n          }\n\n          e.ended = !0, p(t);\n        }\n      }\n\n      function p(t) {\n        var e = t._readableState;\n        e.needReadable = !1, e.emittedReadable || (M(\"emitReadable\", e.flowing), e.emittedReadable = !0, e.sync ? L(l, t) : l(t));\n      }\n\n      function l(t) {\n        M(\"emit readable\"), t.emit(\"readable\"), w(t);\n      }\n\n      function d(t, e) {\n        e.readingMore || (e.readingMore = !0, L(y, t, e));\n      }\n\n      function y(t, e) {\n        for (var n = e.length; !e.reading && !e.flowing && !e.ended && e.length < e.highWaterMark && (M(\"maybeReadMore read 0\"), t.read(0), n !== e.length);) {\n          n = e.length;\n        }\n\n        e.readingMore = !1;\n      }\n\n      function g(t) {\n        return function () {\n          var e = t._readableState;\n          M(\"pipeOnDrain\", e.awaitDrain), e.awaitDrain && e.awaitDrain--, 0 === e.awaitDrain && A(t, \"data\") && (e.flowing = !0, w(t));\n        };\n      }\n\n      function v(t) {\n        M(\"readable nexttick read 0\"), t.read(0);\n      }\n\n      function m(t, e) {\n        e.resumeScheduled || (e.resumeScheduled = !0, L(_, t, e));\n      }\n\n      function _(t, e) {\n        e.reading || (M(\"resume read 0\"), t.read(0)), e.resumeScheduled = !1, e.awaitDrain = 0, t.emit(\"resume\"), w(t), e.flowing && !e.reading && t.read(0);\n      }\n\n      function w(t) {\n        var e = t._readableState;\n\n        for (M(\"flow\", e.flowing); e.flowing && null !== t.read();) {\n          ;\n        }\n      }\n\n      function E(t, e) {\n        if (0 === e.length) return null;\n        var n;\n        return e.objectMode ? n = e.buffer.shift() : !t || t >= e.length ? (n = e.decoder ? e.buffer.join(\"\") : 1 === e.buffer.length ? e.buffer.head.data : e.buffer.concat(e.length), e.buffer.clear()) : n = b(t, e.buffer, e.decoder), n;\n      }\n\n      function b(t, e, n) {\n        var r;\n        return t < e.head.data.length ? (r = e.head.data.slice(0, t), e.head.data = e.head.data.slice(t)) : r = t === e.head.data.length ? e.shift() : n ? S(t, e) : k(t, e), r;\n      }\n\n      function S(t, e) {\n        var n = e.head,\n            r = 1,\n            i = n.data;\n\n        for (t -= i.length; n = n.next;) {\n          var o = n.data,\n              s = t > o.length ? o.length : t;\n\n          if (i += s === o.length ? o : o.slice(0, t), t -= s, 0 === t) {\n            s === o.length ? (++r, n.next ? e.head = n.next : e.head = e.tail = null) : (e.head = n, n.data = o.slice(s));\n            break;\n          }\n\n          ++r;\n        }\n\n        return e.length -= r, i;\n      }\n\n      function k(t, e) {\n        var n = P.allocUnsafe(t),\n            r = e.head,\n            i = 1;\n\n        for (r.data.copy(n), t -= r.data.length; r = r.next;) {\n          var o = r.data,\n              s = t > o.length ? o.length : t;\n\n          if (o.copy(n, n.length - t, 0, s), t -= s, 0 === t) {\n            s === o.length ? (++i, r.next ? e.head = r.next : e.head = e.tail = null) : (e.head = r, r.data = o.slice(s));\n            break;\n          }\n\n          ++i;\n        }\n\n        return e.length -= i, n;\n      }\n\n      function I(t) {\n        var e = t._readableState;\n        if (e.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n        e.endEmitted || (e.ended = !0, L(O, e, t));\n      }\n\n      function O(t, e) {\n        t.endEmitted || 0 !== t.length || (t.endEmitted = !0, e.readable = !1, e.emit(\"end\"));\n      }\n\n      function F(t, e) {\n        for (var n = 0, r = t.length; n < r; n++) {\n          e(t[n], n);\n        }\n      }\n\n      function N(t, e) {\n        for (var n = 0, r = t.length; n < r; n++) {\n          if (t[n] === e) return n;\n        }\n\n        return -1;\n      }\n\n      t.exports = o;\n      var R,\n          L = n(11),\n          T = n(22);\n      o.ReadableState = i;\n      var x,\n          A = (n(6).EventEmitter, function (t, e) {\n        return t.listeners(e).length;\n      });\n      !function () {\n        try {\n          x = n(9);\n        } catch (t) {} finally {\n          x || (x = n(6).EventEmitter);\n        }\n      }();\n      var D = n(1).Buffer,\n          P = n(10),\n          C = n(5);\n      C.inherits = n(4);\n      var U = n(42),\n          M = void 0;\n      M = U && U.debuglog ? U.debuglog(\"stream\") : function () {};\n      var j,\n          B = n(35);\n      C.inherits(o, x), o.prototype.push = function (t, e) {\n        var n = this._readableState;\n        return n.objectMode || \"string\" != typeof t || (e = e || n.defaultEncoding, e !== n.encoding && (t = P.from(t, e), e = \"\")), s(this, n, t, e, !1);\n      }, o.prototype.unshift = function (t) {\n        var e = this._readableState;\n        return s(this, e, t, \"\", !0);\n      }, o.prototype.isPaused = function () {\n        return this._readableState.flowing === !1;\n      }, o.prototype.setEncoding = function (t) {\n        return j || (j = n(17).StringDecoder), this._readableState.decoder = new j(t), this._readableState.encoding = t, this;\n      };\n      var z = 8388608;\n      o.prototype.read = function (t) {\n        M(\"read\", t), t = parseInt(t, 10);\n        var e = this._readableState,\n            n = t;\n        if (0 !== t && (e.emittedReadable = !1), 0 === t && e.needReadable && (e.length >= e.highWaterMark || e.ended)) return M(\"read: emitReadable\", e.length, e.ended), 0 === e.length && e.ended ? I(this) : p(this), null;\n        if (t = u(t, e), 0 === t && e.ended) return 0 === e.length && I(this), null;\n        var r = e.needReadable;\n        M(\"need readable\", r), (0 === e.length || e.length - t < e.highWaterMark) && (r = !0, M(\"length less than watermark\", r)), e.ended || e.reading ? (r = !1, M(\"reading or ended\", r)) : r && (M(\"do read\"), e.reading = !0, e.sync = !0, 0 === e.length && (e.needReadable = !0), this._read(e.highWaterMark), e.sync = !1, e.reading || (t = u(n, e)));\n        var i;\n        return i = t > 0 ? E(t, e) : null, null === i ? (e.needReadable = !0, t = 0) : e.length -= t, 0 === e.length && (e.ended || (e.needReadable = !0), n !== t && e.ended && I(this)), null !== i && this.emit(\"data\", i), i;\n      }, o.prototype._read = function (t) {\n        this.emit(\"error\", new Error(\"_read() is not implemented\"));\n      }, o.prototype.pipe = function (t, n) {\n        function i(t) {\n          M(\"onunpipe\"), t === p && s();\n        }\n\n        function o() {\n          M(\"onend\"), t.end();\n        }\n\n        function s() {\n          M(\"cleanup\"), t.removeListener(\"close\", u), t.removeListener(\"finish\", f), t.removeListener(\"drain\", v), t.removeListener(\"error\", c), t.removeListener(\"unpipe\", i), p.removeListener(\"end\", o), p.removeListener(\"end\", s), p.removeListener(\"data\", a), m = !0, !l.awaitDrain || t._writableState && !t._writableState.needDrain || v();\n        }\n\n        function a(e) {\n          M(\"ondata\"), _ = !1;\n          var n = t.write(e);\n          !1 !== n || _ || ((1 === l.pipesCount && l.pipes === t || l.pipesCount > 1 && N(l.pipes, t) !== -1) && !m && (M(\"false write response, pause\", p._readableState.awaitDrain), p._readableState.awaitDrain++, _ = !0), p.pause());\n        }\n\n        function c(e) {\n          M(\"onerror\", e), h(), t.removeListener(\"error\", c), 0 === A(t, \"error\") && t.emit(\"error\", e);\n        }\n\n        function u() {\n          t.removeListener(\"finish\", f), h();\n        }\n\n        function f() {\n          M(\"onfinish\"), t.removeListener(\"close\", u), h();\n        }\n\n        function h() {\n          M(\"unpipe\"), p.unpipe(t);\n        }\n\n        var p = this,\n            l = this._readableState;\n\n        switch (l.pipesCount) {\n          case 0:\n            l.pipes = t;\n            break;\n\n          case 1:\n            l.pipes = [l.pipes, t];\n            break;\n\n          default:\n            l.pipes.push(t);\n        }\n\n        l.pipesCount += 1, M(\"pipe count=%d opts=%j\", l.pipesCount, n);\n        var d = (!n || n.end !== !1) && t !== e.stdout && t !== e.stderr,\n            y = d ? o : s;\n        l.endEmitted ? L(y) : p.once(\"end\", y), t.on(\"unpipe\", i);\n        var v = g(p);\n        t.on(\"drain\", v);\n\n        var m = !1,\n            _ = !1;\n\n        return p.on(\"data\", a), r(t, \"error\", c), t.once(\"close\", u), t.once(\"finish\", f), t.emit(\"pipe\", p), l.flowing || (M(\"pipe resume\"), p.resume()), t;\n      }, o.prototype.unpipe = function (t) {\n        var e = this._readableState;\n        if (0 === e.pipesCount) return this;\n        if (1 === e.pipesCount) return t && t !== e.pipes ? this : (t || (t = e.pipes), e.pipes = null, e.pipesCount = 0, e.flowing = !1, t && t.emit(\"unpipe\", this), this);\n\n        if (!t) {\n          var n = e.pipes,\n              r = e.pipesCount;\n          e.pipes = null, e.pipesCount = 0, e.flowing = !1;\n\n          for (var i = 0; i < r; i++) {\n            n[i].emit(\"unpipe\", this);\n          }\n\n          return this;\n        }\n\n        var o = N(e.pipes, t);\n        return o === -1 ? this : (e.pipes.splice(o, 1), e.pipesCount -= 1, 1 === e.pipesCount && (e.pipes = e.pipes[0]), t.emit(\"unpipe\", this), this);\n      }, o.prototype.on = function (t, e) {\n        var n = x.prototype.on.call(this, t, e);\n        if (\"data\" === t) this._readableState.flowing !== !1 && this.resume();else if (\"readable\" === t) {\n          var r = this._readableState;\n          r.endEmitted || r.readableListening || (r.readableListening = r.needReadable = !0, r.emittedReadable = !1, r.reading ? r.length && p(this, r) : L(v, this));\n        }\n        return n;\n      }, o.prototype.addListener = o.prototype.on, o.prototype.resume = function () {\n        var t = this._readableState;\n        return t.flowing || (M(\"resume\"), t.flowing = !0, m(this, t)), this;\n      }, o.prototype.pause = function () {\n        return M(\"call pause flowing=%j\", this._readableState.flowing), !1 !== this._readableState.flowing && (M(\"pause\"), this._readableState.flowing = !1, this.emit(\"pause\")), this;\n      }, o.prototype.wrap = function (t) {\n        var e = this._readableState,\n            n = !1,\n            r = this;\n        t.on(\"end\", function () {\n          if (M(\"wrapped end\"), e.decoder && !e.ended) {\n            var t = e.decoder.end();\n            t && t.length && r.push(t);\n          }\n\n          r.push(null);\n        }), t.on(\"data\", function (i) {\n          if (M(\"wrapped data\"), e.decoder && (i = e.decoder.write(i)), (!e.objectMode || null !== i && void 0 !== i) && (e.objectMode || i && i.length)) {\n            var o = r.push(i);\n            o || (n = !0, t.pause());\n          }\n        });\n\n        for (var i in t) {\n          void 0 === this[i] && \"function\" == typeof t[i] && (this[i] = function (e) {\n            return function () {\n              return t[e].apply(t, arguments);\n            };\n          }(i));\n        }\n\n        var o = [\"error\", \"close\", \"destroy\", \"pause\", \"resume\"];\n        return F(o, function (e) {\n          t.on(e, r.emit.bind(r, e));\n        }), r._read = function (e) {\n          M(\"wrapped _read\", e), n && (n = !1, t.resume());\n        }, r;\n      }, o._fromList = E;\n    }).call(e, n(3));\n  }, function (t, e, n) {\n    function r(t) {\n      if (t && !c(t)) throw new Error(\"Unknown encoding: \" + t);\n    }\n\n    function i(t) {\n      return t.toString(this.encoding);\n    }\n\n    function o(t) {\n      this.charReceived = t.length % 2, this.charLength = this.charReceived ? 2 : 0;\n    }\n\n    function s(t) {\n      this.charReceived = t.length % 3, this.charLength = this.charReceived ? 3 : 0;\n    }\n\n    var a = n(1).Buffer,\n        c = a.isEncoding || function (t) {\n      switch (t && t.toLowerCase()) {\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n        case \"raw\":\n          return !0;\n\n        default:\n          return !1;\n      }\n    },\n        u = e.StringDecoder = function (t) {\n      switch (this.encoding = (t || \"utf8\").toLowerCase().replace(/[-_]/, \"\"), r(t), this.encoding) {\n        case \"utf8\":\n          this.surrogateSize = 3;\n          break;\n\n        case \"ucs2\":\n        case \"utf16le\":\n          this.surrogateSize = 2, this.detectIncompleteChar = o;\n          break;\n\n        case \"base64\":\n          this.surrogateSize = 3, this.detectIncompleteChar = s;\n          break;\n\n        default:\n          return void (this.write = i);\n      }\n\n      this.charBuffer = new a(6), this.charReceived = 0, this.charLength = 0;\n    };\n\n    u.prototype.write = function (t) {\n      for (var e = \"\"; this.charLength;) {\n        var n = t.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : t.length;\n        if (t.copy(this.charBuffer, this.charReceived, 0, n), this.charReceived += n, this.charReceived < this.charLength) return \"\";\n        t = t.slice(n, t.length), e = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n        var r = e.charCodeAt(e.length - 1);\n\n        if (!(r >= 55296 && r <= 56319)) {\n          if (this.charReceived = this.charLength = 0, 0 === t.length) return e;\n          break;\n        }\n\n        this.charLength += this.surrogateSize, e = \"\";\n      }\n\n      this.detectIncompleteChar(t);\n      var i = t.length;\n      this.charLength && (t.copy(this.charBuffer, 0, t.length - this.charReceived, i), i -= this.charReceived), e += t.toString(this.encoding, 0, i);\n      var i = e.length - 1,\n          r = e.charCodeAt(i);\n\n      if (r >= 55296 && r <= 56319) {\n        var o = this.surrogateSize;\n        return this.charLength += o, this.charReceived += o, this.charBuffer.copy(this.charBuffer, o, 0, o), t.copy(this.charBuffer, 0, 0, o), e.substring(0, i);\n      }\n\n      return e;\n    }, u.prototype.detectIncompleteChar = function (t) {\n      for (var e = t.length >= 3 ? 3 : t.length; e > 0; e--) {\n        var n = t[t.length - e];\n\n        if (1 == e && n >> 5 == 6) {\n          this.charLength = 2;\n          break;\n        }\n\n        if (e <= 2 && n >> 4 == 14) {\n          this.charLength = 3;\n          break;\n        }\n\n        if (e <= 3 && n >> 3 == 30) {\n          this.charLength = 4;\n          break;\n        }\n      }\n\n      this.charReceived = e;\n    }, u.prototype.end = function (t) {\n      var e = \"\";\n\n      if (t && t.length && (e = this.write(t)), this.charReceived) {\n        var n = this.charReceived,\n            r = this.charBuffer,\n            i = this.encoding;\n        e += r.slice(0, n).toString(i);\n      }\n\n      return e;\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    function n(t) {\n      var e = t.length;\n      if (e % 4 > 0) throw new Error(\"Invalid string. Length must be a multiple of 4\");\n      return \"=\" === t[e - 2] ? 2 : \"=\" === t[e - 1] ? 1 : 0;\n    }\n\n    function r(t) {\n      return 3 * t.length / 4 - n(t);\n    }\n\n    function i(t) {\n      var e,\n          r,\n          i,\n          o,\n          s,\n          a,\n          c = t.length;\n      s = n(t), a = new f(3 * c / 4 - s), i = s > 0 ? c - 4 : c;\n      var h = 0;\n\n      for (e = 0, r = 0; e < i; e += 4, r += 3) {\n        o = u[t.charCodeAt(e)] << 18 | u[t.charCodeAt(e + 1)] << 12 | u[t.charCodeAt(e + 2)] << 6 | u[t.charCodeAt(e + 3)], a[h++] = o >> 16 & 255, a[h++] = o >> 8 & 255, a[h++] = 255 & o;\n      }\n\n      return 2 === s ? (o = u[t.charCodeAt(e)] << 2 | u[t.charCodeAt(e + 1)] >> 4, a[h++] = 255 & o) : 1 === s && (o = u[t.charCodeAt(e)] << 10 | u[t.charCodeAt(e + 1)] << 4 | u[t.charCodeAt(e + 2)] >> 2, a[h++] = o >> 8 & 255, a[h++] = 255 & o), a;\n    }\n\n    function o(t) {\n      return c[t >> 18 & 63] + c[t >> 12 & 63] + c[t >> 6 & 63] + c[63 & t];\n    }\n\n    function s(t, e, n) {\n      for (var r, i = [], s = e; s < n; s += 3) {\n        r = (t[s] << 16) + (t[s + 1] << 8) + t[s + 2], i.push(o(r));\n      }\n\n      return i.join(\"\");\n    }\n\n    function a(t) {\n      for (var e, n = t.length, r = n % 3, i = \"\", o = [], a = 16383, u = 0, f = n - r; u < f; u += a) {\n        o.push(s(t, u, u + a > f ? f : u + a));\n      }\n\n      return 1 === r ? (e = t[n - 1], i += c[e >> 2], i += c[e << 4 & 63], i += \"==\") : 2 === r && (e = (t[n - 2] << 8) + t[n - 1], i += c[e >> 10], i += c[e >> 4 & 63], i += c[e << 2 & 63], i += \"=\"), o.push(i), o.join(\"\");\n    }\n\n    e.byteLength = r, e.toByteArray = i, e.fromByteArray = a;\n\n    for (var c = [], u = [], f = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, h = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", p = 0, l = h.length; p < l; ++p) {\n      c[p] = h[p], u[h.charCodeAt(p)] = p;\n    }\n\n    u[\"-\".charCodeAt(0)] = 62, u[\"_\".charCodeAt(0)] = 63;\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      var r = this && this.__extends || function (t, e) {\n        function n() {\n          this.constructor = t;\n        }\n\n        for (var r in e) {\n          e.hasOwnProperty(r) && (t[r] = e[r]);\n        }\n\n        t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());\n      },\n          i = n(6),\n          o = null,\n          s = function () {\n        function t(t, e) {\n          this.fun = t, this.array = e;\n        }\n\n        return t.prototype.run = function () {\n          this.fun.apply(null, this.array);\n        }, t;\n      }(),\n          a = function () {\n        function t() {\n          this._queue = [], this._draining = !1, this._currentQueue = null, this._queueIndex = -1;\n        }\n\n        return t.prototype.push = function (t) {\n          var e = this;\n          1 !== this._queue.push(t) || this._draining || setTimeout(function () {\n            return e._drainQueue();\n          }, 0);\n        }, t.prototype._cleanUpNextTick = function () {\n          this._draining = !1, this._currentQueue && this._currentQueue.length ? this._queue = this._currentQueue.concat(this._queue) : this._queueIndex = -1, this._queue.length && this._drainQueue();\n        }, t.prototype._drainQueue = function () {\n          var t = this;\n\n          if (!this._draining) {\n            var e = setTimeout(function () {\n              return t._cleanUpNextTick();\n            });\n            this._draining = !0;\n\n            for (var n = this._queue.length; n;) {\n              for (this._currentQueue = this._queue, this._queue = []; ++this._queueIndex < n;) {\n                this._currentQueue && this._currentQueue[this._queueIndex].run();\n              }\n\n              this._queueIndex = -1, n = this._queue.length;\n            }\n\n            this._currentQueue = null, this._draining = !1, clearTimeout(e);\n          }\n        }, t;\n      }(),\n          c = function (t) {\n        function i() {\n          t.apply(this, arguments), this.startTime = Date.now(), this._cwd = \"/\", this.platform = \"browser\", this.argv = [], this.execArgv = [], this.stdout = null, this.stderr = null, this.stdin = null, this.domain = null, this._queue = new a(), this.execPath = e, this.env = {}, this.exitCode = 0, this._gid = 1, this._uid = 1, this.version = \"v5.0\", this.versions = {\n            http_parser: \"0.0\",\n            node: \"5.0\",\n            v8: \"0.0\",\n            uv: \"0.0\",\n            zlib: \"0.0\",\n            ares: \"0.0\",\n            icu: \"0.0\",\n            modules: \"0\",\n            openssl: \"0.0\"\n          }, this.config = {\n            target_defaults: {\n              cflags: [],\n              default_configuration: \"Release\",\n              defines: [],\n              include_dirs: [],\n              libraries: []\n            },\n            variables: {\n              clang: 0,\n              host_arch: \"x32\",\n              node_install_npm: !1,\n              node_install_waf: !1,\n              node_prefix: \"\",\n              node_shared_cares: !1,\n              node_shared_http_parser: !1,\n              node_shared_libuv: !1,\n              node_shared_zlib: !1,\n              node_shared_v8: !1,\n              node_use_dtrace: !1,\n              node_use_etw: !1,\n              node_use_openssl: !1,\n              node_shared_openssl: !1,\n              strict_aliasing: !1,\n              target_arch: \"x32\",\n              v8_use_snapshot: !1,\n              v8_no_strict_aliasing: 0,\n              visibility: \"\"\n            }\n          }, this.pid = 1e3 * Math.random() | 0, this.title = \"node\", this.arch = \"x32\", this._mask = 18, this.connected = void 0;\n        }\n\n        return r(i, t), i.prototype.chdir = function (t) {\n          null === o && (o = n(14)), this._cwd = o.resolve(t);\n        }, i.prototype.cwd = function () {\n          return this._cwd;\n        }, i.prototype.uptime = function () {\n          return (Date.now() - this.startTime) / 1e3 | 0;\n        }, i.prototype.nextTick = function (t) {\n          for (var e = [], n = 1; n < arguments.length; n++) {\n            e[n - 1] = arguments[n];\n          }\n\n          this._queue.push(new s(t, e));\n        }, i.prototype.abort = function () {\n          this.emit(\"abort\");\n        }, i.prototype.exit = function (t) {\n          this.exitCode = t, this.emit(\"exit\", [t]);\n        }, i.prototype.getgid = function () {\n          return this._gid;\n        }, i.prototype.setgid = function (t) {\n          \"number\" == typeof t ? this._gid = t : this._gid = 1;\n        }, i.prototype.getuid = function () {\n          return this._uid;\n        }, i.prototype.setuid = function (t) {\n          \"number\" == typeof t ? this._uid = t : this._uid = 1;\n        }, i.prototype.kill = function (t, e) {\n          this.emit(\"kill\", [t, e]);\n        }, i.prototype.memoryUsage = function () {\n          return {\n            rss: 0,\n            heapTotal: 0,\n            heapUsed: 0\n          };\n        }, i.prototype.umask = function (t) {\n          void 0 === t && (t = this._mask);\n          var e = this._mask;\n          return this._mask = t, this.emit(\"umask\", [t]), e;\n        }, i.prototype.hrtime = function () {\n          var t;\n          t = \"undefined\" != typeof performance ? performance.now() : Date.now ? Date.now() : new Date().getTime();\n          var e = t / 1e3 | 0;\n          return t -= 1e3 * e, t = 1e6 * t | 0, [e, t];\n        }, i.prototype.initializeTTYs = function () {\n          if (null === this.stdout) {\n            var t = n(20);\n            this.stdout = new t(), this.stderr = new t(), this.stdin = new t();\n          }\n        }, i.prototype.disconnect = function () {}, i;\n      }(i.EventEmitter);\n\n      t.exports = c;\n    }).call(e, \"/\");\n  }, function (t, e, n) {\n    (function (e) {\n      \"use strict\";\n\n      var r = this && this.__extends || function (t, e) {\n        function n() {\n          this.constructor = t;\n        }\n\n        for (var r in e) {\n          e.hasOwnProperty(r) && (t[r] = e[r]);\n        }\n\n        t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());\n      },\n          i = n(9),\n          o = function (t) {\n        function n() {\n          t.call(this), this.isRaw = !1, this.columns = 80, this.rows = 120, this.isTTY = !0, this._bufferedWrites = [], this._waitingForWrites = !1;\n        }\n\n        return r(n, t), n.prototype.setRawMode = function (t) {\n          this.isRaw !== t && (this.isRaw = t, this.emit(\"modeChange\"));\n        }, n.prototype.changeColumns = function (t) {\n          t !== this.columns && (this.columns = t, this.emit(\"resize\"));\n        }, n.prototype.changeRows = function (t) {\n          t !== this.rows && (this.rows = t, this.emit(\"resize\"));\n        }, n.isatty = function (t) {\n          return t && t instanceof n;\n        }, n.prototype._write = function (t, n, r) {\n          var i;\n\n          try {\n            var o;\n            o = \"string\" == typeof t ? new e(t, n) : t, this._bufferedWrites.push(o), this._waitingForWrites && this._read(1024);\n          } catch (t) {\n            i = t;\n          } finally {\n            r(i);\n          }\n        }, n.prototype._read = function (t) {\n          if (0 === this._bufferedWrites.length) this._waitingForWrites = !0;else for (; this._bufferedWrites.length > 0 && (this._waitingForWrites = this.push(this._bufferedWrites.shift()), this._waitingForWrites);) {\n            ;\n          }\n        }, n;\n      }(i.Duplex);\n\n      t.exports = o;\n    }).call(e, n(7));\n  }, function (t, e) {\n    e.read = function (t, e, n, r, i) {\n      var o,\n          s,\n          a = 8 * i - r - 1,\n          c = (1 << a) - 1,\n          u = c >> 1,\n          f = -7,\n          h = n ? i - 1 : 0,\n          p = n ? -1 : 1,\n          l = t[e + h];\n\n      for (h += p, o = l & (1 << -f) - 1, l >>= -f, f += a; f > 0; o = 256 * o + t[e + h], h += p, f -= 8) {\n        ;\n      }\n\n      for (s = o & (1 << -f) - 1, o >>= -f, f += r; f > 0; s = 256 * s + t[e + h], h += p, f -= 8) {\n        ;\n      }\n\n      if (0 === o) o = 1 - u;else {\n        if (o === c) return s ? NaN : (l ? -1 : 1) * (1 / 0);\n        s += Math.pow(2, r), o -= u;\n      }\n      return (l ? -1 : 1) * s * Math.pow(2, o - r);\n    }, e.write = function (t, e, n, r, i, o) {\n      var s,\n          a,\n          c,\n          u = 8 * o - i - 1,\n          f = (1 << u) - 1,\n          h = f >> 1,\n          p = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n          l = r ? 0 : o - 1,\n          d = r ? 1 : -1,\n          y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;\n\n      for (e = Math.abs(e), isNaN(e) || e === 1 / 0 ? (a = isNaN(e) ? 1 : 0, s = f) : (s = Math.floor(Math.log(e) / Math.LN2), e * (c = Math.pow(2, -s)) < 1 && (s--, c *= 2), e += s + h >= 1 ? p / c : p * Math.pow(2, 1 - h), e * c >= 2 && (s++, c /= 2), s + h >= f ? (a = 0, s = f) : s + h >= 1 ? (a = (e * c - 1) * Math.pow(2, i), s += h) : (a = e * Math.pow(2, h - 1) * Math.pow(2, i), s = 0)); i >= 8; t[n + l] = 255 & a, l += d, a /= 256, i -= 8) {\n        ;\n      }\n\n      for (s = s << i | a, u += i; u > 0; t[n + l] = 255 & s, l += d, s /= 256, u -= 8) {\n        ;\n      }\n\n      t[n + l - d] |= 128 * y;\n    };\n  }, function (t, e) {\n    var n = {}.toString;\n\n    t.exports = Array.isArray || function (t) {\n      return \"[object Array]\" == n.call(t);\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      if (!(this instanceof r)) return new r(t);\n      this.options = a.assign({\n        chunkSize: 16384,\n        windowBits: 0,\n        to: \"\"\n      }, t || {});\n      var e = this.options;\n      e.raw && e.windowBits >= 0 && e.windowBits < 16 && (e.windowBits = -e.windowBits, 0 === e.windowBits && (e.windowBits = -15)), !(e.windowBits >= 0 && e.windowBits < 16) || t && t.windowBits || (e.windowBits += 32), e.windowBits > 15 && e.windowBits < 48 && 0 === (15 & e.windowBits) && (e.windowBits |= 15), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new h(), this.strm.avail_out = 0;\n      var n = s.inflateInit2(this.strm, e.windowBits);\n      if (n !== u.Z_OK) throw new Error(f[n]);\n      this.header = new p(), s.inflateGetHeader(this.strm, this.header);\n    }\n\n    function i(t, e) {\n      var n = new r(e);\n      if (n.push(t, !0), n.err) throw n.msg || f[n.err];\n      return n.result;\n    }\n\n    function o(t, e) {\n      return e = e || {}, e.raw = !0, i(t, e);\n    }\n\n    var s = n(30),\n        a = n(8),\n        c = n(24),\n        u = n(26),\n        f = n(32),\n        h = n(33),\n        p = n(28),\n        l = Object.prototype.toString;\n    r.prototype.push = function (t, e) {\n      var n,\n          r,\n          i,\n          o,\n          f,\n          h,\n          p = this.strm,\n          d = this.options.chunkSize,\n          y = this.options.dictionary,\n          g = !1;\n      if (this.ended) return !1;\n      r = e === ~~e ? e : e === !0 ? u.Z_FINISH : u.Z_NO_FLUSH, \"string\" == typeof t ? p.input = c.binstring2buf(t) : \"[object ArrayBuffer]\" === l.call(t) ? p.input = new Uint8Array(t) : p.input = t, p.next_in = 0, p.avail_in = p.input.length;\n\n      do {\n        if (0 === p.avail_out && (p.output = new a.Buf8(d), p.next_out = 0, p.avail_out = d), n = s.inflate(p, u.Z_NO_FLUSH), n === u.Z_NEED_DICT && y && (h = \"string\" == typeof y ? c.string2buf(y) : \"[object ArrayBuffer]\" === l.call(y) ? new Uint8Array(y) : y, n = s.inflateSetDictionary(this.strm, h)), n === u.Z_BUF_ERROR && g === !0 && (n = u.Z_OK, g = !1), n !== u.Z_STREAM_END && n !== u.Z_OK) return this.onEnd(n), this.ended = !0, !1;\n        p.next_out && (0 !== p.avail_out && n !== u.Z_STREAM_END && (0 !== p.avail_in || r !== u.Z_FINISH && r !== u.Z_SYNC_FLUSH) || (\"string\" === this.options.to ? (i = c.utf8border(p.output, p.next_out), o = p.next_out - i, f = c.buf2string(p.output, i), p.next_out = o, p.avail_out = d - o, o && a.arraySet(p.output, p.output, i, o, 0), this.onData(f)) : this.onData(a.shrinkBuf(p.output, p.next_out)))), 0 === p.avail_in && 0 === p.avail_out && (g = !0);\n      } while ((p.avail_in > 0 || 0 === p.avail_out) && n !== u.Z_STREAM_END);\n\n      return n === u.Z_STREAM_END && (r = u.Z_FINISH), r === u.Z_FINISH ? (n = s.inflateEnd(this.strm), this.onEnd(n), this.ended = !0, n === u.Z_OK) : r !== u.Z_SYNC_FLUSH || (this.onEnd(u.Z_OK), p.avail_out = 0, !0);\n    }, r.prototype.onData = function (t) {\n      this.chunks.push(t);\n    }, r.prototype.onEnd = function (t) {\n      t === u.Z_OK && (\"string\" === this.options.to ? this.result = this.chunks.join(\"\") : this.result = a.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg;\n    }, e.Inflate = r, e.inflate = i, e.inflateRaw = o, e.ungzip = i;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t, e) {\n      if (e < 65537 && (t.subarray && s || !t.subarray && o)) return String.fromCharCode.apply(null, i.shrinkBuf(t, e));\n\n      for (var n = \"\", r = 0; r < e; r++) {\n        n += String.fromCharCode(t[r]);\n      }\n\n      return n;\n    }\n\n    var i = n(8),\n        o = !0,\n        s = !0;\n\n    try {\n      String.fromCharCode.apply(null, [0]);\n    } catch (t) {\n      o = !1;\n    }\n\n    try {\n      String.fromCharCode.apply(null, new Uint8Array(1));\n    } catch (t) {\n      s = !1;\n    }\n\n    for (var a = new i.Buf8(256), c = 0; c < 256; c++) {\n      a[c] = c >= 252 ? 6 : c >= 248 ? 5 : c >= 240 ? 4 : c >= 224 ? 3 : c >= 192 ? 2 : 1;\n    }\n\n    a[254] = a[254] = 1, e.string2buf = function (t) {\n      var e,\n          n,\n          r,\n          o,\n          s,\n          a = t.length,\n          c = 0;\n\n      for (o = 0; o < a; o++) {\n        n = t.charCodeAt(o), 55296 === (64512 & n) && o + 1 < a && (r = t.charCodeAt(o + 1), 56320 === (64512 & r) && (n = 65536 + (n - 55296 << 10) + (r - 56320), o++)), c += n < 128 ? 1 : n < 2048 ? 2 : n < 65536 ? 3 : 4;\n      }\n\n      for (e = new i.Buf8(c), s = 0, o = 0; s < c; o++) {\n        n = t.charCodeAt(o), 55296 === (64512 & n) && o + 1 < a && (r = t.charCodeAt(o + 1), 56320 === (64512 & r) && (n = 65536 + (n - 55296 << 10) + (r - 56320), o++)), n < 128 ? e[s++] = n : n < 2048 ? (e[s++] = 192 | n >>> 6, e[s++] = 128 | 63 & n) : n < 65536 ? (e[s++] = 224 | n >>> 12, e[s++] = 128 | n >>> 6 & 63, e[s++] = 128 | 63 & n) : (e[s++] = 240 | n >>> 18, e[s++] = 128 | n >>> 12 & 63, e[s++] = 128 | n >>> 6 & 63, e[s++] = 128 | 63 & n);\n      }\n\n      return e;\n    }, e.buf2binstring = function (t) {\n      return r(t, t.length);\n    }, e.binstring2buf = function (t) {\n      for (var e = new i.Buf8(t.length), n = 0, r = e.length; n < r; n++) {\n        e[n] = t.charCodeAt(n);\n      }\n\n      return e;\n    }, e.buf2string = function (t, e) {\n      var n,\n          i,\n          o,\n          s,\n          c = e || t.length,\n          u = new Array(2 * c);\n\n      for (i = 0, n = 0; n < c;) {\n        if (o = t[n++], o < 128) u[i++] = o;else if (s = a[o], s > 4) u[i++] = 65533, n += s - 1;else {\n          for (o &= 2 === s ? 31 : 3 === s ? 15 : 7; s > 1 && n < c;) {\n            o = o << 6 | 63 & t[n++], s--;\n          }\n\n          s > 1 ? u[i++] = 65533 : o < 65536 ? u[i++] = o : (o -= 65536, u[i++] = 55296 | o >> 10 & 1023, u[i++] = 56320 | 1023 & o);\n        }\n      }\n\n      return r(u, i);\n    }, e.utf8border = function (t, e) {\n      var n;\n\n      for (e = e || t.length, e > t.length && (e = t.length), n = e - 1; n >= 0 && 128 === (192 & t[n]);) {\n        n--;\n      }\n\n      return n < 0 ? e : 0 === n ? e : n + a[t[n]] > e ? n : e;\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    function n(t, e, n, r) {\n      for (var i = 65535 & t | 0, o = t >>> 16 & 65535 | 0, s = 0; 0 !== n;) {\n        s = n > 2e3 ? 2e3 : n, n -= s;\n\n        do {\n          i = i + e[r++] | 0, o = o + i | 0;\n        } while (--s);\n\n        i %= 65521, o %= 65521;\n      }\n\n      return i | o << 16 | 0;\n    }\n\n    t.exports = n;\n  }, function (t, e) {\n    \"use strict\";\n\n    t.exports = {\n      Z_NO_FLUSH: 0,\n      Z_PARTIAL_FLUSH: 1,\n      Z_SYNC_FLUSH: 2,\n      Z_FULL_FLUSH: 3,\n      Z_FINISH: 4,\n      Z_BLOCK: 5,\n      Z_TREES: 6,\n      Z_OK: 0,\n      Z_STREAM_END: 1,\n      Z_NEED_DICT: 2,\n      Z_ERRNO: -1,\n      Z_STREAM_ERROR: -2,\n      Z_DATA_ERROR: -3,\n      Z_BUF_ERROR: -5,\n      Z_NO_COMPRESSION: 0,\n      Z_BEST_SPEED: 1,\n      Z_BEST_COMPRESSION: 9,\n      Z_DEFAULT_COMPRESSION: -1,\n      Z_FILTERED: 1,\n      Z_HUFFMAN_ONLY: 2,\n      Z_RLE: 3,\n      Z_FIXED: 4,\n      Z_DEFAULT_STRATEGY: 0,\n      Z_BINARY: 0,\n      Z_TEXT: 1,\n      Z_UNKNOWN: 2,\n      Z_DEFLATED: 8\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    function n() {\n      for (var t, e = [], n = 0; n < 256; n++) {\n        t = n;\n\n        for (var r = 0; r < 8; r++) {\n          t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;\n        }\n\n        e[n] = t;\n      }\n\n      return e;\n    }\n\n    function r(t, e, n, r) {\n      var o = i,\n          s = r + n;\n      t ^= -1;\n\n      for (var a = r; a < s; a++) {\n        t = t >>> 8 ^ o[255 & (t ^ e[a])];\n      }\n\n      return t ^ -1;\n    }\n\n    var i = n();\n    t.exports = r;\n  }, function (t, e) {\n    \"use strict\";\n\n    function n() {\n      this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = !1;\n    }\n\n    t.exports = n;\n  }, function (t, e) {\n    \"use strict\";\n\n    var n = 30,\n        r = 12;\n\n    t.exports = function (t, e) {\n      var i, o, s, a, c, u, f, h, p, l, d, y, g, v, m, _, w, E, b, S, k, I, O, F, N;\n\n      i = t.state, o = t.next_in, F = t.input, s = o + (t.avail_in - 5), a = t.next_out, N = t.output, c = a - (e - t.avail_out), u = a + (t.avail_out - 257), f = i.dmax, h = i.wsize, p = i.whave, l = i.wnext, d = i.window, y = i.hold, g = i.bits, v = i.lencode, m = i.distcode, _ = (1 << i.lenbits) - 1, w = (1 << i.distbits) - 1;\n\n      t: do {\n        g < 15 && (y += F[o++] << g, g += 8, y += F[o++] << g, g += 8), E = v[y & _];\n\n        e: for (;;) {\n          if (b = E >>> 24, y >>>= b, g -= b, b = E >>> 16 & 255, 0 === b) N[a++] = 65535 & E;else {\n            if (!(16 & b)) {\n              if (0 === (64 & b)) {\n                E = v[(65535 & E) + (y & (1 << b) - 1)];\n                continue e;\n              }\n\n              if (32 & b) {\n                i.mode = r;\n                break t;\n              }\n\n              t.msg = \"invalid literal/length code\", i.mode = n;\n              break t;\n            }\n\n            S = 65535 & E, b &= 15, b && (g < b && (y += F[o++] << g, g += 8), S += y & (1 << b) - 1, y >>>= b, g -= b), g < 15 && (y += F[o++] << g, g += 8, y += F[o++] << g, g += 8), E = m[y & w];\n\n            n: for (;;) {\n              if (b = E >>> 24, y >>>= b, g -= b, b = E >>> 16 & 255, !(16 & b)) {\n                if (0 === (64 & b)) {\n                  E = m[(65535 & E) + (y & (1 << b) - 1)];\n                  continue n;\n                }\n\n                t.msg = \"invalid distance code\", i.mode = n;\n                break t;\n              }\n\n              if (k = 65535 & E, b &= 15, g < b && (y += F[o++] << g, g += 8, g < b && (y += F[o++] << g, g += 8)), k += y & (1 << b) - 1, k > f) {\n                t.msg = \"invalid distance too far back\", i.mode = n;\n                break t;\n              }\n\n              if (y >>>= b, g -= b, b = a - c, k > b) {\n                if (b = k - b, b > p && i.sane) {\n                  t.msg = \"invalid distance too far back\", i.mode = n;\n                  break t;\n                }\n\n                if (I = 0, O = d, 0 === l) {\n                  if (I += h - b, b < S) {\n                    S -= b;\n\n                    do {\n                      N[a++] = d[I++];\n                    } while (--b);\n\n                    I = a - k, O = N;\n                  }\n                } else if (l < b) {\n                  if (I += h + l - b, b -= l, b < S) {\n                    S -= b;\n\n                    do {\n                      N[a++] = d[I++];\n                    } while (--b);\n\n                    if (I = 0, l < S) {\n                      b = l, S -= b;\n\n                      do {\n                        N[a++] = d[I++];\n                      } while (--b);\n\n                      I = a - k, O = N;\n                    }\n                  }\n                } else if (I += l - b, b < S) {\n                  S -= b;\n\n                  do {\n                    N[a++] = d[I++];\n                  } while (--b);\n\n                  I = a - k, O = N;\n                }\n\n                for (; S > 2;) {\n                  N[a++] = O[I++], N[a++] = O[I++], N[a++] = O[I++], S -= 3;\n                }\n\n                S && (N[a++] = O[I++], S > 1 && (N[a++] = O[I++]));\n              } else {\n                I = a - k;\n\n                do {\n                  N[a++] = N[I++], N[a++] = N[I++], N[a++] = N[I++], S -= 3;\n                } while (S > 2);\n\n                S && (N[a++] = N[I++], S > 1 && (N[a++] = N[I++]));\n              }\n\n              break;\n            }\n          }\n          break;\n        }\n      } while (o < s && a < u);\n\n      S = g >> 3, o -= S, g -= S << 3, y &= (1 << g) - 1, t.next_in = o, t.next_out = a, t.avail_in = o < s ? 5 + (s - o) : 5 - (o - s), t.avail_out = a < u ? 257 + (u - a) : 257 - (a - u), i.hold = y, i.bits = g;\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r(t) {\n      return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24);\n    }\n\n    function i() {\n      this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new m.Buf16(320), this.work = new m.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n    }\n\n    function o(t) {\n      var e;\n      return t && t.state ? (e = t.state, t.total_in = t.total_out = e.total = 0, t.msg = \"\", e.wrap && (t.adler = 1 & e.wrap), e.mode = U, e.last = 0, e.havedict = 0, e.dmax = 32768, e.head = null, e.hold = 0, e.bits = 0, e.lencode = e.lendyn = new m.Buf32(yt), e.distcode = e.distdyn = new m.Buf32(gt), e.sane = 1, e.back = -1, R) : x;\n    }\n\n    function s(t) {\n      var e;\n      return t && t.state ? (e = t.state, e.wsize = 0, e.whave = 0, e.wnext = 0, o(t)) : x;\n    }\n\n    function a(t, e) {\n      var n, r;\n      return t && t.state ? (r = t.state, e < 0 ? (n = 0, e = -e) : (n = (e >> 4) + 1, e < 48 && (e &= 15)), e && (e < 8 || e > 15) ? x : (null !== r.window && r.wbits !== e && (r.window = null), r.wrap = n, r.wbits = e, s(t))) : x;\n    }\n\n    function c(t, e) {\n      var n, r;\n      return t ? (r = new i(), t.state = r, r.window = null, n = a(t, e), n !== R && (t.state = null), n) : x;\n    }\n\n    function u(t) {\n      return c(t, mt);\n    }\n\n    function f(t) {\n      if (_t) {\n        var e;\n\n        for (g = new m.Buf32(512), v = new m.Buf32(32), e = 0; e < 144;) {\n          t.lens[e++] = 8;\n        }\n\n        for (; e < 256;) {\n          t.lens[e++] = 9;\n        }\n\n        for (; e < 280;) {\n          t.lens[e++] = 7;\n        }\n\n        for (; e < 288;) {\n          t.lens[e++] = 8;\n        }\n\n        for (b(k, t.lens, 0, 288, g, 0, t.work, {\n          bits: 9\n        }), e = 0; e < 32;) {\n          t.lens[e++] = 5;\n        }\n\n        b(I, t.lens, 0, 32, v, 0, t.work, {\n          bits: 5\n        }), _t = !1;\n      }\n\n      t.lencode = g, t.lenbits = 9, t.distcode = v, t.distbits = 5;\n    }\n\n    function h(t, e, n, r) {\n      var i,\n          o = t.state;\n      return null === o.window && (o.wsize = 1 << o.wbits, o.wnext = 0, o.whave = 0, o.window = new m.Buf8(o.wsize)), r >= o.wsize ? (m.arraySet(o.window, e, n - o.wsize, o.wsize, 0), o.wnext = 0, o.whave = o.wsize) : (i = o.wsize - o.wnext, i > r && (i = r), m.arraySet(o.window, e, n - r, i, o.wnext), r -= i, r ? (m.arraySet(o.window, e, n - r, r, 0), o.wnext = r, o.whave = o.wsize) : (o.wnext += i, o.wnext === o.wsize && (o.wnext = 0), o.whave < o.wsize && (o.whave += i))), 0;\n    }\n\n    function p(t, e) {\n      var n,\n          i,\n          o,\n          s,\n          a,\n          c,\n          u,\n          p,\n          l,\n          d,\n          y,\n          g,\n          v,\n          yt,\n          gt,\n          vt,\n          mt,\n          _t,\n          wt,\n          Et,\n          bt,\n          St,\n          kt,\n          It,\n          Ot = 0,\n          Ft = new m.Buf8(4),\n          Nt = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n      if (!t || !t.state || !t.output || !t.input && 0 !== t.avail_in) return x;\n      n = t.state, n.mode === X && (n.mode = K), a = t.next_out, o = t.output, u = t.avail_out, s = t.next_in, i = t.input, c = t.avail_in, p = n.hold, l = n.bits, d = c, y = u, St = R;\n\n      t: for (;;) {\n        switch (n.mode) {\n          case U:\n            if (0 === n.wrap) {\n              n.mode = K;\n              break;\n            }\n\n            for (; l < 16;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if (2 & n.wrap && 35615 === p) {\n              n.check = 0, Ft[0] = 255 & p, Ft[1] = p >>> 8 & 255, n.check = w(n.check, Ft, 2, 0), p = 0, l = 0, n.mode = M;\n              break;\n            }\n\n            if (n.flags = 0, n.head && (n.head.done = !1), !(1 & n.wrap) || (((255 & p) << 8) + (p >> 8)) % 31) {\n              t.msg = \"incorrect header check\", n.mode = pt;\n              break;\n            }\n\n            if ((15 & p) !== C) {\n              t.msg = \"unknown compression method\", n.mode = pt;\n              break;\n            }\n\n            if (p >>>= 4, l -= 4, bt = (15 & p) + 8, 0 === n.wbits) n.wbits = bt;else if (bt > n.wbits) {\n              t.msg = \"invalid window size\", n.mode = pt;\n              break;\n            }\n            n.dmax = 1 << bt, t.adler = n.check = 1, n.mode = 512 & p ? Z : X, p = 0, l = 0;\n            break;\n\n          case M:\n            for (; l < 16;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if (n.flags = p, (255 & n.flags) !== C) {\n              t.msg = \"unknown compression method\", n.mode = pt;\n              break;\n            }\n\n            if (57344 & n.flags) {\n              t.msg = \"unknown header flags set\", n.mode = pt;\n              break;\n            }\n\n            n.head && (n.head.text = p >> 8 & 1), 512 & n.flags && (Ft[0] = 255 & p, Ft[1] = p >>> 8 & 255, n.check = w(n.check, Ft, 2, 0)), p = 0, l = 0, n.mode = j;\n\n          case j:\n            for (; l < 32;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            n.head && (n.head.time = p), 512 & n.flags && (Ft[0] = 255 & p, Ft[1] = p >>> 8 & 255, Ft[2] = p >>> 16 & 255, Ft[3] = p >>> 24 & 255, n.check = w(n.check, Ft, 4, 0)), p = 0, l = 0, n.mode = B;\n\n          case B:\n            for (; l < 16;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            n.head && (n.head.xflags = 255 & p, n.head.os = p >> 8), 512 & n.flags && (Ft[0] = 255 & p, Ft[1] = p >>> 8 & 255, n.check = w(n.check, Ft, 2, 0)), p = 0, l = 0, n.mode = z;\n\n          case z:\n            if (1024 & n.flags) {\n              for (; l < 16;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              n.length = p, n.head && (n.head.extra_len = p), 512 & n.flags && (Ft[0] = 255 & p, Ft[1] = p >>> 8 & 255, n.check = w(n.check, Ft, 2, 0)), p = 0, l = 0;\n            } else n.head && (n.head.extra = null);\n\n            n.mode = q;\n\n          case q:\n            if (1024 & n.flags && (g = n.length, g > c && (g = c), g && (n.head && (bt = n.head.extra_len - n.length, n.head.extra || (n.head.extra = new Array(n.head.extra_len)), m.arraySet(n.head.extra, i, s, g, bt)), 512 & n.flags && (n.check = w(n.check, i, g, s)), c -= g, s += g, n.length -= g), n.length)) break t;\n            n.length = 0, n.mode = V;\n\n          case V:\n            if (2048 & n.flags) {\n              if (0 === c) break t;\n              g = 0;\n\n              do {\n                bt = i[s + g++], n.head && bt && n.length < 65536 && (n.head.name += String.fromCharCode(bt));\n              } while (bt && g < c);\n\n              if (512 & n.flags && (n.check = w(n.check, i, g, s)), c -= g, s += g, bt) break t;\n            } else n.head && (n.head.name = null);\n\n            n.length = 0, n.mode = W;\n\n          case W:\n            if (4096 & n.flags) {\n              if (0 === c) break t;\n              g = 0;\n\n              do {\n                bt = i[s + g++], n.head && bt && n.length < 65536 && (n.head.comment += String.fromCharCode(bt));\n              } while (bt && g < c);\n\n              if (512 & n.flags && (n.check = w(n.check, i, g, s)), c -= g, s += g, bt) break t;\n            } else n.head && (n.head.comment = null);\n\n            n.mode = H;\n\n          case H:\n            if (512 & n.flags) {\n              for (; l < 16;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              if (p !== (65535 & n.check)) {\n                t.msg = \"header crc mismatch\", n.mode = pt;\n                break;\n              }\n\n              p = 0, l = 0;\n            }\n\n            n.head && (n.head.hcrc = n.flags >> 9 & 1, n.head.done = !0), t.adler = n.check = 0, n.mode = X;\n            break;\n\n          case Z:\n            for (; l < 32;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            t.adler = n.check = r(p), p = 0, l = 0, n.mode = Y;\n\n          case Y:\n            if (0 === n.havedict) return t.next_out = a, t.avail_out = u, t.next_in = s, t.avail_in = c, n.hold = p, n.bits = l, T;\n            t.adler = n.check = 1, n.mode = X;\n\n          case X:\n            if (e === F || e === N) break t;\n\n          case K:\n            if (n.last) {\n              p >>>= 7 & l, l -= 7 & l, n.mode = ut;\n              break;\n            }\n\n            for (; l < 3;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            switch (n.last = 1 & p, p >>>= 1, l -= 1, 3 & p) {\n              case 0:\n                n.mode = J;\n                break;\n\n              case 1:\n                if (f(n), n.mode = nt, e === N) {\n                  p >>>= 2, l -= 2;\n                  break t;\n                }\n\n                break;\n\n              case 2:\n                n.mode = $;\n                break;\n\n              case 3:\n                t.msg = \"invalid block type\", n.mode = pt;\n            }\n\n            p >>>= 2, l -= 2;\n            break;\n\n          case J:\n            for (p >>>= 7 & l, l -= 7 & l; l < 32;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if ((65535 & p) !== (p >>> 16 ^ 65535)) {\n              t.msg = \"invalid stored block lengths\", n.mode = pt;\n              break;\n            }\n\n            if (n.length = 65535 & p, p = 0, l = 0, n.mode = G, e === N) break t;\n\n          case G:\n            n.mode = Q;\n\n          case Q:\n            if (g = n.length) {\n              if (g > c && (g = c), g > u && (g = u), 0 === g) break t;\n              m.arraySet(o, i, s, g, a), c -= g, s += g, u -= g, a += g, n.length -= g;\n              break;\n            }\n\n            n.mode = X;\n            break;\n\n          case $:\n            for (; l < 14;) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if (n.nlen = (31 & p) + 257, p >>>= 5, l -= 5, n.ndist = (31 & p) + 1, p >>>= 5, l -= 5, n.ncode = (15 & p) + 4, p >>>= 4, l -= 4, n.nlen > 286 || n.ndist > 30) {\n              t.msg = \"too many length or distance symbols\", n.mode = pt;\n              break;\n            }\n\n            n.have = 0, n.mode = tt;\n\n          case tt:\n            for (; n.have < n.ncode;) {\n              for (; l < 3;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              n.lens[Nt[n.have++]] = 7 & p, p >>>= 3, l -= 3;\n            }\n\n            for (; n.have < 19;) {\n              n.lens[Nt[n.have++]] = 0;\n            }\n\n            if (n.lencode = n.lendyn, n.lenbits = 7, kt = {\n              bits: n.lenbits\n            }, St = b(S, n.lens, 0, 19, n.lencode, 0, n.work, kt), n.lenbits = kt.bits, St) {\n              t.msg = \"invalid code lengths set\", n.mode = pt;\n              break;\n            }\n\n            n.have = 0, n.mode = et;\n\n          case et:\n            for (; n.have < n.nlen + n.ndist;) {\n              for (; Ot = n.lencode[p & (1 << n.lenbits) - 1], gt = Ot >>> 24, vt = Ot >>> 16 & 255, mt = 65535 & Ot, !(gt <= l);) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              if (mt < 16) p >>>= gt, l -= gt, n.lens[n.have++] = mt;else {\n                if (16 === mt) {\n                  for (It = gt + 2; l < It;) {\n                    if (0 === c) break t;\n                    c--, p += i[s++] << l, l += 8;\n                  }\n\n                  if (p >>>= gt, l -= gt, 0 === n.have) {\n                    t.msg = \"invalid bit length repeat\", n.mode = pt;\n                    break;\n                  }\n\n                  bt = n.lens[n.have - 1], g = 3 + (3 & p), p >>>= 2, l -= 2;\n                } else if (17 === mt) {\n                  for (It = gt + 3; l < It;) {\n                    if (0 === c) break t;\n                    c--, p += i[s++] << l, l += 8;\n                  }\n\n                  p >>>= gt, l -= gt, bt = 0, g = 3 + (7 & p), p >>>= 3, l -= 3;\n                } else {\n                  for (It = gt + 7; l < It;) {\n                    if (0 === c) break t;\n                    c--, p += i[s++] << l, l += 8;\n                  }\n\n                  p >>>= gt, l -= gt, bt = 0, g = 11 + (127 & p), p >>>= 7, l -= 7;\n                }\n\n                if (n.have + g > n.nlen + n.ndist) {\n                  t.msg = \"invalid bit length repeat\", n.mode = pt;\n                  break;\n                }\n\n                for (; g--;) {\n                  n.lens[n.have++] = bt;\n                }\n              }\n            }\n\n            if (n.mode === pt) break;\n\n            if (0 === n.lens[256]) {\n              t.msg = \"invalid code -- missing end-of-block\", n.mode = pt;\n              break;\n            }\n\n            if (n.lenbits = 9, kt = {\n              bits: n.lenbits\n            }, St = b(k, n.lens, 0, n.nlen, n.lencode, 0, n.work, kt), n.lenbits = kt.bits, St) {\n              t.msg = \"invalid literal/lengths set\", n.mode = pt;\n              break;\n            }\n\n            if (n.distbits = 6, n.distcode = n.distdyn, kt = {\n              bits: n.distbits\n            }, St = b(I, n.lens, n.nlen, n.ndist, n.distcode, 0, n.work, kt), n.distbits = kt.bits, St) {\n              t.msg = \"invalid distances set\", n.mode = pt;\n              break;\n            }\n\n            if (n.mode = nt, e === N) break t;\n\n          case nt:\n            n.mode = rt;\n\n          case rt:\n            if (c >= 6 && u >= 258) {\n              t.next_out = a, t.avail_out = u, t.next_in = s, t.avail_in = c, n.hold = p, n.bits = l, E(t, y), a = t.next_out, o = t.output, u = t.avail_out, s = t.next_in, i = t.input, c = t.avail_in, p = n.hold, l = n.bits, n.mode === X && (n.back = -1);\n              break;\n            }\n\n            for (n.back = 0; Ot = n.lencode[p & (1 << n.lenbits) - 1], gt = Ot >>> 24, vt = Ot >>> 16 & 255, mt = 65535 & Ot, !(gt <= l);) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if (vt && 0 === (240 & vt)) {\n              for (_t = gt, wt = vt, Et = mt; Ot = n.lencode[Et + ((p & (1 << _t + wt) - 1) >> _t)], gt = Ot >>> 24, vt = Ot >>> 16 & 255, mt = 65535 & Ot, !(_t + gt <= l);) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              p >>>= _t, l -= _t, n.back += _t;\n            }\n\n            if (p >>>= gt, l -= gt, n.back += gt, n.length = mt, 0 === vt) {\n              n.mode = ct;\n              break;\n            }\n\n            if (32 & vt) {\n              n.back = -1, n.mode = X;\n              break;\n            }\n\n            if (64 & vt) {\n              t.msg = \"invalid literal/length code\", n.mode = pt;\n              break;\n            }\n\n            n.extra = 15 & vt, n.mode = it;\n\n          case it:\n            if (n.extra) {\n              for (It = n.extra; l < It;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              n.length += p & (1 << n.extra) - 1, p >>>= n.extra, l -= n.extra, n.back += n.extra;\n            }\n\n            n.was = n.length, n.mode = ot;\n\n          case ot:\n            for (; Ot = n.distcode[p & (1 << n.distbits) - 1], gt = Ot >>> 24, vt = Ot >>> 16 & 255, mt = 65535 & Ot, !(gt <= l);) {\n              if (0 === c) break t;\n              c--, p += i[s++] << l, l += 8;\n            }\n\n            if (0 === (240 & vt)) {\n              for (_t = gt, wt = vt, Et = mt; Ot = n.distcode[Et + ((p & (1 << _t + wt) - 1) >> _t)], gt = Ot >>> 24, vt = Ot >>> 16 & 255, mt = 65535 & Ot, !(_t + gt <= l);) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              p >>>= _t, l -= _t, n.back += _t;\n            }\n\n            if (p >>>= gt, l -= gt, n.back += gt, 64 & vt) {\n              t.msg = \"invalid distance code\", n.mode = pt;\n              break;\n            }\n\n            n.offset = mt, n.extra = 15 & vt, n.mode = st;\n\n          case st:\n            if (n.extra) {\n              for (It = n.extra; l < It;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              n.offset += p & (1 << n.extra) - 1, p >>>= n.extra, l -= n.extra, n.back += n.extra;\n            }\n\n            if (n.offset > n.dmax) {\n              t.msg = \"invalid distance too far back\", n.mode = pt;\n              break;\n            }\n\n            n.mode = at;\n\n          case at:\n            if (0 === u) break t;\n\n            if (g = y - u, n.offset > g) {\n              if (g = n.offset - g, g > n.whave && n.sane) {\n                t.msg = \"invalid distance too far back\", n.mode = pt;\n                break;\n              }\n\n              g > n.wnext ? (g -= n.wnext, v = n.wsize - g) : v = n.wnext - g, g > n.length && (g = n.length), yt = n.window;\n            } else yt = o, v = a - n.offset, g = n.length;\n\n            g > u && (g = u), u -= g, n.length -= g;\n\n            do {\n              o[a++] = yt[v++];\n            } while (--g);\n\n            0 === n.length && (n.mode = rt);\n            break;\n\n          case ct:\n            if (0 === u) break t;\n            o[a++] = n.length, u--, n.mode = rt;\n            break;\n\n          case ut:\n            if (n.wrap) {\n              for (; l < 32;) {\n                if (0 === c) break t;\n                c--, p |= i[s++] << l, l += 8;\n              }\n\n              if (y -= u, t.total_out += y, n.total += y, y && (t.adler = n.check = n.flags ? w(n.check, o, y, a - y) : _(n.check, o, y, a - y)), y = u, (n.flags ? p : r(p)) !== n.check) {\n                t.msg = \"incorrect data check\", n.mode = pt;\n                break;\n              }\n\n              p = 0, l = 0;\n            }\n\n            n.mode = ft;\n\n          case ft:\n            if (n.wrap && n.flags) {\n              for (; l < 32;) {\n                if (0 === c) break t;\n                c--, p += i[s++] << l, l += 8;\n              }\n\n              if (p !== (4294967295 & n.total)) {\n                t.msg = \"incorrect length check\", n.mode = pt;\n                break;\n              }\n\n              p = 0, l = 0;\n            }\n\n            n.mode = ht;\n\n          case ht:\n            St = L;\n            break t;\n\n          case pt:\n            St = A;\n            break t;\n\n          case lt:\n            return D;\n\n          case dt:\n          default:\n            return x;\n        }\n      }\n\n      return t.next_out = a, t.avail_out = u, t.next_in = s, t.avail_in = c, n.hold = p, n.bits = l, (n.wsize || y !== t.avail_out && n.mode < pt && (n.mode < ut || e !== O)) && h(t, t.output, t.next_out, y - t.avail_out) ? (n.mode = lt, D) : (d -= t.avail_in, y -= t.avail_out, t.total_in += d, t.total_out += y, n.total += y, n.wrap && y && (t.adler = n.check = n.flags ? w(n.check, o, y, t.next_out - y) : _(n.check, o, y, t.next_out - y)), t.data_type = n.bits + (n.last ? 64 : 0) + (n.mode === X ? 128 : 0) + (n.mode === nt || n.mode === G ? 256 : 0), (0 === d && 0 === y || e === O) && St === R && (St = P), St);\n    }\n\n    function l(t) {\n      if (!t || !t.state) return x;\n      var e = t.state;\n      return e.window && (e.window = null), t.state = null, R;\n    }\n\n    function d(t, e) {\n      var n;\n      return t && t.state ? (n = t.state, 0 === (2 & n.wrap) ? x : (n.head = e, e.done = !1, R)) : x;\n    }\n\n    function y(t, e) {\n      var n,\n          r,\n          i,\n          o = e.length;\n      return t && t.state ? (n = t.state, 0 !== n.wrap && n.mode !== Y ? x : n.mode === Y && (r = 1, r = _(r, e, o, 0), r !== n.check) ? A : (i = h(t, e, o, o)) ? (n.mode = lt, D) : (n.havedict = 1, R)) : x;\n    }\n\n    var g,\n        v,\n        m = n(8),\n        _ = n(25),\n        w = n(27),\n        E = n(29),\n        b = n(31),\n        S = 0,\n        k = 1,\n        I = 2,\n        O = 4,\n        F = 5,\n        N = 6,\n        R = 0,\n        L = 1,\n        T = 2,\n        x = -2,\n        A = -3,\n        D = -4,\n        P = -5,\n        C = 8,\n        U = 1,\n        M = 2,\n        j = 3,\n        B = 4,\n        z = 5,\n        q = 6,\n        V = 7,\n        W = 8,\n        H = 9,\n        Z = 10,\n        Y = 11,\n        X = 12,\n        K = 13,\n        J = 14,\n        G = 15,\n        Q = 16,\n        $ = 17,\n        tt = 18,\n        et = 19,\n        nt = 20,\n        rt = 21,\n        it = 22,\n        ot = 23,\n        st = 24,\n        at = 25,\n        ct = 26,\n        ut = 27,\n        ft = 28,\n        ht = 29,\n        pt = 30,\n        lt = 31,\n        dt = 32,\n        yt = 852,\n        gt = 592,\n        vt = 15,\n        mt = vt,\n        _t = !0;\n\n    e.inflateReset = s, e.inflateReset2 = a, e.inflateResetKeep = o, e.inflateInit = u, e.inflateInit2 = c, e.inflate = p, e.inflateEnd = l, e.inflateGetHeader = d, e.inflateSetDictionary = y, e.inflateInfo = \"pako inflate (from Nodeca project)\";\n  }, function (t, e, n) {\n    \"use strict\";\n\n    var r = n(8),\n        i = 15,\n        o = 852,\n        s = 592,\n        a = 0,\n        c = 1,\n        u = 2,\n        f = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],\n        h = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],\n        p = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],\n        l = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];\n\n    t.exports = function (t, e, n, d, y, g, v, m) {\n      var _,\n          w,\n          E,\n          b,\n          S,\n          k,\n          I,\n          O,\n          F,\n          N = m.bits,\n          R = 0,\n          L = 0,\n          T = 0,\n          x = 0,\n          A = 0,\n          D = 0,\n          P = 0,\n          C = 0,\n          U = 0,\n          M = 0,\n          j = null,\n          B = 0,\n          z = new r.Buf16(i + 1),\n          q = new r.Buf16(i + 1),\n          V = null,\n          W = 0;\n\n      for (R = 0; R <= i; R++) {\n        z[R] = 0;\n      }\n\n      for (L = 0; L < d; L++) {\n        z[e[n + L]]++;\n      }\n\n      for (A = N, x = i; x >= 1 && 0 === z[x]; x--) {\n        ;\n      }\n\n      if (A > x && (A = x), 0 === x) return y[g++] = 20971520, y[g++] = 20971520, m.bits = 1, 0;\n\n      for (T = 1; T < x && 0 === z[T]; T++) {\n        ;\n      }\n\n      for (A < T && (A = T), C = 1, R = 1; R <= i; R++) {\n        if (C <<= 1, C -= z[R], C < 0) return -1;\n      }\n\n      if (C > 0 && (t === a || 1 !== x)) return -1;\n\n      for (q[1] = 0, R = 1; R < i; R++) {\n        q[R + 1] = q[R] + z[R];\n      }\n\n      for (L = 0; L < d; L++) {\n        0 !== e[n + L] && (v[q[e[n + L]]++] = L);\n      }\n\n      if (t === a ? (j = V = v, k = 19) : t === c ? (j = f, B -= 257, V = h, W -= 257, k = 256) : (j = p, V = l, k = -1), M = 0, L = 0, R = T, S = g, D = A, P = 0, E = -1, U = 1 << A, b = U - 1, t === c && U > o || t === u && U > s) return 1;\n\n      for (;;) {\n        I = R - P, v[L] < k ? (O = 0, F = v[L]) : v[L] > k ? (O = V[W + v[L]], F = j[B + v[L]]) : (O = 96, F = 0), _ = 1 << R - P, w = 1 << D, T = w;\n\n        do {\n          w -= _, y[S + (M >> P) + w] = I << 24 | O << 16 | F | 0;\n        } while (0 !== w);\n\n        for (_ = 1 << R - 1; M & _;) {\n          _ >>= 1;\n        }\n\n        if (0 !== _ ? (M &= _ - 1, M += _) : M = 0, L++, 0 === --z[R]) {\n          if (R === x) break;\n          R = e[n + v[L]];\n        }\n\n        if (R > A && (M & b) !== E) {\n          for (0 === P && (P = A), S += T, D = R - P, C = 1 << D; D + P < x && (C -= z[D + P], !(C <= 0));) {\n            D++, C <<= 1;\n          }\n\n          if (U += 1 << D, t === c && U > o || t === u && U > s) return 1;\n          E = M & b, y[E] = A << 24 | D << 16 | S - g | 0;\n        }\n      }\n\n      return 0 !== M && (y[S + M] = R - P << 24 | 64 << 16 | 0), m.bits = A, 0;\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    t.exports = {\n      2: \"need dictionary\",\n      1: \"stream end\",\n      0: \"\",\n      \"-1\": \"file error\",\n      \"-2\": \"stream error\",\n      \"-3\": \"data error\",\n      \"-4\": \"insufficient memory\",\n      \"-5\": \"buffer error\",\n      \"-6\": \"incompatible version\"\n    };\n  }, function (t, e) {\n    \"use strict\";\n\n    function n() {\n      this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n    }\n\n    t.exports = n;\n  }, function (t, e, n) {\n    t.exports = n(2);\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function r() {\n      this.head = null, this.tail = null, this.length = 0;\n    }\n\n    var i = (n(1).Buffer, n(10));\n    t.exports = r, r.prototype.push = function (t) {\n      var e = {\n        data: t,\n        next: null\n      };\n      this.length > 0 ? this.tail.next = e : this.head = e, this.tail = e, ++this.length;\n    }, r.prototype.unshift = function (t) {\n      var e = {\n        data: t,\n        next: this.head\n      };\n      0 === this.length && (this.tail = e), this.head = e, ++this.length;\n    }, r.prototype.shift = function () {\n      if (0 !== this.length) {\n        var t = this.head.data;\n        return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, t;\n      }\n    }, r.prototype.clear = function () {\n      this.head = this.tail = null, this.length = 0;\n    }, r.prototype.join = function (t) {\n      if (0 === this.length) return \"\";\n\n      for (var e = this.head, n = \"\" + e.data; e = e.next;) {\n        n += t + e.data;\n      }\n\n      return n;\n    }, r.prototype.concat = function (t) {\n      if (0 === this.length) return i.alloc(0);\n      if (1 === this.length) return this.head.data;\n\n      for (var e = i.allocUnsafe(t >>> 0), n = this.head, r = 0; n;) {\n        n.data.copy(e, r), r += n.data.length, n = n.next;\n      }\n\n      return e;\n    };\n  }, function (t, e, n) {\n    t.exports = n(15);\n  }, function (t, e, n) {\n    (function (r) {\n      var i = function () {\n        try {\n          return n(9);\n        } catch (t) {}\n      }();\n\n      e = t.exports = n(16), e.Stream = i || e, e.Readable = e, e.Writable = n(13), e.Duplex = n(2), e.Transform = n(12), e.PassThrough = n(15), !r.browser && \"disable\" === r.env.READABLE_STREAM && i && (t.exports = i);\n    }).call(e, n(3));\n  }, function (t, e, n) {\n    t.exports = n(12);\n  }, function (t, e, n) {\n    t.exports = n(13);\n  }, function (t, e) {\n    (function (e) {\n      function n(t, e) {\n        function n() {\n          if (!i) {\n            if (r(\"throwDeprecation\")) throw new Error(e);\n            r(\"traceDeprecation\") ? console.trace(e) : console.warn(e), i = !0;\n          }\n\n          return t.apply(this, arguments);\n        }\n\n        if (r(\"noDeprecation\")) return t;\n        var i = !1;\n        return n;\n      }\n\n      function r(t) {\n        try {\n          if (!e.localStorage) return !1;\n        } catch (t) {\n          return !1;\n        }\n\n        var n = e.localStorage[t];\n        return null != n && \"true\" === String(n).toLowerCase();\n      }\n\n      t.exports = n;\n    }).call(e, function () {\n      return this;\n    }());\n  }, function (t, e) {\n    t.exports = function (t) {\n      return t.webpackPolyfill || (t.deprecate = function () {}, t.paths = [], t.children = [], t.webpackPolyfill = 1), t;\n    };\n  }, function (t, e) {}]);\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/browserfs.min.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/shims/buffer.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserfs/dist/shims/buffer.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {module.exports = BrowserFS.BFSRequire('buffer');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/shims/buffer.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/shims/bufferGlobal.js":
/*!***********************************************************!*\
  !*** ./node_modules/browserfs/dist/shims/bufferGlobal.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {module.exports = BrowserFS.BFSRequire('buffer').Buffer;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/shims/bufferGlobal.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/shims/fs.js":
/*!*************************************************!*\
  !*** ./node_modules/browserfs/dist/shims/fs.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {module.exports = BrowserFS.BFSRequire('fs');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/shims/fs.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/shims/path.js":
/*!***************************************************!*\
  !*** ./node_modules/browserfs/dist/shims/path.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {module.exports = BrowserFS.BFSRequire('path');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/shims/path.js?");

/***/ }),

/***/ "./node_modules/browserfs/dist/shims/process.js":
/*!******************************************************!*\
  !*** ./node_modules/browserfs/dist/shims/process.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {module.exports = BrowserFS.BFSRequire('process');\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./node_modules/browserfs/dist/shims/process.js?");

/***/ }),

/***/ "./node_modules/chai/index.js":
/*!************************************!*\
  !*** ./node_modules/chai/index.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/chai */ \"./node_modules/chai/lib/chai.js\");\n\n//# sourceURL=webpack:///./node_modules/chai/index.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai.js":
/*!***************************************!*\
  !*** ./node_modules/chai/lib/chai.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar used = [];\n/*!\n * Chai version\n */\n\nexports.version = '4.2.0';\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = __webpack_require__(/*! assertion-error */ \"./node_modules/assertion-error/index.js\");\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = __webpack_require__(/*! ./chai/utils */ \"./node_modules/chai/lib/chai/utils/index.js\");\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n/*!\n * Utility Functions\n */\n\n\nexports.util = util;\n/*!\n * Configuration\n */\n\nvar config = __webpack_require__(/*! ./chai/config */ \"./node_modules/chai/lib/chai/config.js\");\n\nexports.config = config;\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = __webpack_require__(/*! ./chai/assertion */ \"./node_modules/chai/lib/chai/assertion.js\");\n\nexports.use(assertion);\n/*!\n * Core Assertions\n */\n\nvar core = __webpack_require__(/*! ./chai/core/assertions */ \"./node_modules/chai/lib/chai/core/assertions.js\");\n\nexports.use(core);\n/*!\n * Expect interface\n */\n\nvar expect = __webpack_require__(/*! ./chai/interface/expect */ \"./node_modules/chai/lib/chai/interface/expect.js\");\n\nexports.use(expect);\n/*!\n * Should interface\n */\n\nvar should = __webpack_require__(/*! ./chai/interface/should */ \"./node_modules/chai/lib/chai/interface/should.js\");\n\nexports.use(should);\n/*!\n * Assert interface\n */\n\nvar assert = __webpack_require__(/*! ./chai/interface/assert */ \"./node_modules/chai/lib/chai/interface/assert.js\");\n\nexports.use(assert);\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/assertion.js":
/*!*************************************************!*\
  !*** ./node_modules/chai/lib/chai/assertion.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar config = __webpack_require__(/*! ./config */ \"./node_modules/chai/lib/chai/config.js\");\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n  var AssertionError = _chai.AssertionError,\n      flag = util.flag;\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion(obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function get() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function set(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function get() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function set(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n        actual: actual,\n        expected: expected,\n        showDiff: showDiff\n      }, config.includeStack ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n\n  Object.defineProperty(Assertion.prototype, '_obj', {\n    get: function get() {\n      return flag(this, 'object');\n    },\n    set: function set(val) {\n      flag(this, 'object', val);\n    }\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/assertion.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/config.js":
/*!**********************************************!*\
  !*** ./node_modules/chai/lib/chai/config.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n  proxyExcludedKeys: ['then', 'catch', 'inspect', 'toJSON']\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/config.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/core/assertions.js":
/*!*******************************************************!*\
  !*** ./node_modules/chai/lib/chai/core/assertions.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion,\n      AssertionError = chai.AssertionError,\n      flag = _.flag;\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   * - still\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  ['to', 'be', 'been', 'is', 'and', 'has', 'have', 'with', 'that', 'which', 'at', 'of', 'same', 'but', 'does', 'still'].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions.\n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an(type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object'),\n        article = ~['a', 'e', 'i', 'o', 'u'].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n    this.assert(type === _.type(obj).toLowerCase(), 'expected #{this} to be ' + article + type, 'expected #{this} not to be ' + article + type);\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   *\n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return _.isNaN(a) && _.isNaN(b) || a === b;\n  }\n\n  function includeChainingBehavior() {\n    flag(this, 'contains', true);\n  }\n\n  function include(val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        objType = _.type(obj).toLowerCase(),\n        flagMsg = flag(this, 'message'),\n        negate = flag(this, 'negate'),\n        ssfi = flag(this, 'ssfi'),\n        isDeep = flag(this, 'deep'),\n        descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(flagMsg + 'unable to use .deep.include with WeakSet', undefined, ssfi);\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          });\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(flagMsg + 'object tested must be an array, a map, an object,' + ' a set, a string, or a weakset, but ' + objType + ' given', undefined, ssfi);\n        }\n\n        var props = Object.keys(val),\n            firstErr = null,\n            numErrs = 0;\n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n\n          _.transferFlags(this, propAssertion, true);\n\n          flag(propAssertion, 'lockSsfi', true);\n\n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n\n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this); // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n\n        return;\n    } // Assert inclusion in collection or substring in a string.\n\n\n    this.assert(included, 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val), 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is a truthy value (considered `true` in boolean context).\n   * However, it's often best to assert that the target is strictly (`===`) or\n   * deeply equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(flag(this, 'object'), 'expected #{this} to be truthy', 'expected #{this} to be falsy');\n  });\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(true === flag(this, 'object'), 'expected #{this} to be true', 'expected #{this} to be false', flag(this, 'negate') ? false : true);\n  });\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(false === flag(this, 'object'), 'expected #{this} to be false', 'expected #{this} to be true', flag(this, 'negate') ? true : false);\n  });\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(null === flag(this, 'object'), 'expected #{this} to be null', 'expected #{this} not to be null');\n  });\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(undefined === flag(this, 'object'), 'expected #{this} to be undefined', 'expected #{this} not to be undefined');\n  });\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(_.isNaN(flag(this, 'object')), 'expected #{this} to be NaN', 'expected #{this} not to be NaN');\n  });\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(val !== null && val !== undefined, 'expected #{this} to exist', 'expected #{this} to not exist');\n  });\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object'),\n        ssfi = flag(this, 'ssfi'),\n        flagMsg = flag(this, 'message'),\n        itemsCount;\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(flagMsg + '.empty was passed a weak collection', undefined, ssfi);\n\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(flagMsg + '.empty was passed non-string primitive ' + _.inspect(val), undefined, ssfi);\n        }\n\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(0 === itemsCount, 'expected #{this} to be empty', 'expected #{this} not to be empty');\n  });\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments() {\n    var obj = flag(this, 'object'),\n        type = _.type(obj);\n\n    this.assert('Arguments' === type, 'expected #{this} to be arguments but got ' + type, 'expected #{this} to not be arguments');\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   *\n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual(val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    if (flag(this, 'deep')) {\n      var prevLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      this.eql(val);\n      flag(this, 'lockSsfi', prevLockSsfi);\n    } else {\n      this.assert(val === obj, 'expected #{this} to equal #{exp}', 'expected #{this} to not equal #{exp}', val, this._obj, true);\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(_.eql(obj, flag(this, 'object')), 'expected #{this} to deeply equal #{exp}', 'expected #{this} to not deeply equal #{exp}', obj, this._obj, true);\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove(n, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        doLength = flag(this, 'doLength'),\n        flagMsg = flag(this, 'message'),\n        msgPrefix = flagMsg ? flagMsg + ': ' : '',\n        ssfi = flag(this, 'ssfi'),\n        objType = _.type(obj).toLowerCase(),\n        nType = _.type(n).toLowerCase(),\n        errorMessage,\n        shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && objType === 'date' && nType !== 'date') {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && objType !== 'date' && objType !== 'number') {\n      var printObj = objType === 'string' ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length',\n          itemsCount;\n\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n\n      this.assert(itemsCount > n, 'expected #{this} to have a ' + descriptor + ' above #{exp} but got #{act}', 'expected #{this} to not have a ' + descriptor + ' above #{exp}', n, itemsCount);\n    } else {\n      this.assert(obj > n, 'expected #{this} to be above #{exp}', 'expected #{this} to be at most #{exp}', n);\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast(n, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        doLength = flag(this, 'doLength'),\n        flagMsg = flag(this, 'message'),\n        msgPrefix = flagMsg ? flagMsg + ': ' : '',\n        ssfi = flag(this, 'ssfi'),\n        objType = _.type(obj).toLowerCase(),\n        nType = _.type(n).toLowerCase(),\n        errorMessage,\n        shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && objType === 'date' && nType !== 'date') {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && objType !== 'date' && objType !== 'number') {\n      var printObj = objType === 'string' ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length',\n          itemsCount;\n\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n\n      this.assert(itemsCount >= n, 'expected #{this} to have a ' + descriptor + ' at least #{exp} but got #{act}', 'expected #{this} to have a ' + descriptor + ' below #{exp}', n, itemsCount);\n    } else {\n      this.assert(obj >= n, 'expected #{this} to be at least #{exp}', 'expected #{this} to be below #{exp}', n);\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow(n, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        doLength = flag(this, 'doLength'),\n        flagMsg = flag(this, 'message'),\n        msgPrefix = flagMsg ? flagMsg + ': ' : '',\n        ssfi = flag(this, 'ssfi'),\n        objType = _.type(obj).toLowerCase(),\n        nType = _.type(n).toLowerCase(),\n        errorMessage,\n        shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && objType === 'date' && nType !== 'date') {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && objType !== 'date' && objType !== 'number') {\n      var printObj = objType === 'string' ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length',\n          itemsCount;\n\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n\n      this.assert(itemsCount < n, 'expected #{this} to have a ' + descriptor + ' below #{exp} but got #{act}', 'expected #{this} to not have a ' + descriptor + ' below #{exp}', n, itemsCount);\n    } else {\n      this.assert(obj < n, 'expected #{this} to be below #{exp}', 'expected #{this} to be at least #{exp}', n);\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost(n, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        doLength = flag(this, 'doLength'),\n        flagMsg = flag(this, 'message'),\n        msgPrefix = flagMsg ? flagMsg + ': ' : '',\n        ssfi = flag(this, 'ssfi'),\n        objType = _.type(obj).toLowerCase(),\n        nType = _.type(n).toLowerCase(),\n        errorMessage,\n        shouldThrow = true;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && objType === 'date' && nType !== 'date') {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && objType !== 'date' && objType !== 'number') {\n      var printObj = objType === 'string' ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length',\n          itemsCount;\n\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n\n      this.assert(itemsCount <= n, 'expected #{this} to have a ' + descriptor + ' at most #{exp} but got #{act}', 'expected #{this} to have a ' + descriptor + ' above #{exp}', n, itemsCount);\n    } else {\n      this.assert(obj <= n, 'expected #{this} to be at most #{exp}', 'expected #{this} to be above #{exp}', n);\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the target's `length`\n   * or `size` is greater than or equal to the given number `start`, and less\n   * than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        doLength = flag(this, 'doLength'),\n        flagMsg = flag(this, 'message'),\n        msgPrefix = flagMsg ? flagMsg + ': ' : '',\n        ssfi = flag(this, 'ssfi'),\n        objType = _.type(obj).toLowerCase(),\n        startType = _.type(start).toLowerCase(),\n        finishType = _.type(finish).toLowerCase(),\n        errorMessage,\n        shouldThrow = true,\n        range = startType === 'date' && finishType === 'date' ? start.toUTCString() + '..' + finish.toUTCString() : start + '..' + finish;\n\n    if (doLength && objType !== 'map' && objType !== 'set') {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && objType === 'date' && (startType !== 'date' || finishType !== 'date')) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && objType !== 'date' && objType !== 'number') {\n      var printObj = objType === 'string' ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var descriptor = 'length',\n          itemsCount;\n\n      if (objType === 'map' || objType === 'set') {\n        descriptor = 'size';\n        itemsCount = obj.size;\n      } else {\n        itemsCount = obj.length;\n      }\n\n      this.assert(itemsCount >= start && itemsCount <= finish, 'expected #{this} to have a ' + descriptor + ' within ' + range, 'expected #{this} to not have a ' + descriptor + ' within ' + range);\n    } else {\n      this.assert(obj >= start && obj <= finish, 'expected #{this} to be within ' + range, 'expected #{this} to not be within ' + range);\n    }\n  });\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf(constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var target = flag(this, 'object');\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(flagMsg + 'The instanceof assertion needs a constructor but ' + _.type(constructor) + ' was given.', undefined, ssfi);\n      }\n\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(isInstanceOf, 'expected #{this} to be an instance of ' + name, 'expected #{this} to not be an instance of ' + name);\n  }\n\n  ;\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b');\n   *     expect({a: 1}).to.not.have.own.property('b');\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   *\n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty(name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested'),\n        isOwn = flag(this, 'own'),\n        flagMsg = flag(this, 'message'),\n        obj = flag(this, 'object'),\n        ssfi = flag(this, 'ssfi'),\n        nameType = _typeof(name);\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    if (isNested) {\n      if (nameType !== 'string') {\n        throw new AssertionError(flagMsg + 'the argument to property must be a string when using nested syntax', undefined, ssfi);\n      }\n    } else {\n      if (nameType !== 'string' && nameType !== 'number' && nameType !== 'symbol') {\n        throw new AssertionError(flagMsg + 'the argument to property must be a string, number, or symbol', undefined, ssfi);\n      }\n    }\n\n    if (isNested && isOwn) {\n      throw new AssertionError(flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.', undefined, ssfi);\n    }\n\n    if (obj === null || obj === undefined) {\n      throw new AssertionError(flagMsg + 'Target cannot be null or undefined.', undefined, ssfi);\n    }\n\n    var isDeep = flag(this, 'deep'),\n        negate = flag(this, 'negate'),\n        pathInfo = isNested ? _.getPathInfo(obj, name) : null,\n        value = isNested ? pathInfo.value : obj[name];\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);else if (isNested) hasProperty = pathInfo.exists;else hasProperty = _.hasProperty(obj, name); // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n\n    if (!negate || arguments.length === 1) {\n      this.assert(hasProperty, 'expected #{this} to have ' + descriptor + _.inspect(name), 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(hasProperty && (isDeep ? _.eql(val, value) : val === value), 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}', 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}', val, value);\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty(name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   *\n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor(name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n\n    if (actualDescriptor && descriptor) {\n      this.assert(_.eql(descriptor, actualDescriptor), 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor), 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor), descriptor, actualDescriptor, true);\n    } else {\n      this.assert(actualDescriptor, 'expected #{this} to have an own property descriptor for ' + _.inspect(name), 'expected #{this} to not have an own property descriptor for ' + _.inspect(name));\n    }\n\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` or `size` is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *     expect(new Set([1, 2, 3])).to.have.lengthOf(3);\n   *     expect(new Map([['a', 1], ['b', 2], ['c', 3]])).to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain() {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength(n, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var obj = flag(this, 'object'),\n        objType = _.type(obj).toLowerCase(),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi'),\n        descriptor = 'length',\n        itemsCount;\n\n    switch (objType) {\n      case 'map':\n      case 'set':\n        descriptor = 'size';\n        itemsCount = obj.size;\n        break;\n\n      default:\n        new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n        itemsCount = obj.length;\n    }\n\n    this.assert(itemsCount == n, 'expected #{this} to have a ' + descriptor + ' of #{exp} but got #{act}', 'expected #{this} to not have a ' + descriptor + ' of #{act}', n, itemsCount);\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(re.exec(obj), 'expected #{this} to match ' + re, 'expected #{this} not to match ' + re);\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string('taco', 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string('taco');\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n    this.assert(~obj.indexOf(str), 'expected #{this} to contain ' + _.inspect(str), 'expected #{this} to not contain ' + _.inspect(str));\n  });\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search.\n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys(keys) {\n    var obj = flag(this, 'object'),\n        objType = _.type(obj),\n        keysType = _.type(keys),\n        ssfi = flag(this, 'ssfi'),\n        isDeep = flag(this, 'deep'),\n        str,\n        deepStr = '',\n        actual,\n        ok = true,\n        flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = []; // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n\n      obj.forEach(function (val, key) {\n        actual.push(key);\n      });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n\n          break;\n\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n\n          keys = Object.keys(keys);\n          break;\n\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      } // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n\n\n      keys = keys.map(function (val) {\n        return _typeof(val) === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length,\n        any = flag(this, 'any'),\n        all = flag(this, 'all'),\n        expected = keys;\n\n    if (!any && !all) {\n      all = true;\n    } // Has any\n\n\n    if (any) {\n      ok = expected.some(function (expectedKey) {\n        return actual.some(function (actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    } // Has all\n\n\n    if (all) {\n      ok = expected.every(function (expectedKey) {\n        return actual.some(function (actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    } // Key string\n\n\n    if (len > 1) {\n      keys = keys.map(function (key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    } // Form\n\n\n    str = (len > 1 ? 'keys ' : 'key ') + str; // Have / include\n\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str; // Assertion\n\n    this.assert(ok, 'expected #{this} to ' + deepStr + str, 'expected #{this} to not ' + deepStr + str, expected.slice(0).sort(_.compareByInspect), actual.sort(_.compareByInspect), true);\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   *\n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows(errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object'),\n        ssfi = flag(this, 'ssfi'),\n        flagMsg = flag(this, 'message'),\n        negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    } // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n\n\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined; // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false; // Checking if error was thrown\n\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(caughtErr, 'expected #{this} to throw ' + errorLikeString, 'expected #{this} to not throw an error but #{act} was thrown', errorLike && errorLike.toString(), caughtErr instanceof Error ? caughtErr.toString() : typeof caughtErr === 'string' ? caughtErr : caughtErr && _.checkError.getConstructorName(caughtErr));\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(negate, 'expected #{this} to throw #{exp} but #{act} was thrown', 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : ''), errorLike.toString(), caughtErr.toString());\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n          errorLikeFail = true;\n        } else {\n          this.assert(negate, 'expected #{this} to throw #{exp} but #{act} was thrown', 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : ''), errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike), caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr));\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching';\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n          errMsgMatcherFail = true;\n        } else {\n          this.assert(negate, 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}', 'expected #{this} to throw error not ' + placeholder + ' #{exp}', errMsgMatcher, _.checkError.getMessage(caughtErr));\n        }\n      }\n    } // If both assertions failed and both should've matched we throw an error\n\n\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(negate, 'expected #{this} to throw #{exp} but #{act} was thrown', 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : ''), errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike), caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr));\n    }\n\n    flag(this, 'object', caughtErr);\n  }\n\n  ;\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo(method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object'),\n        itself = flag(this, 'itself'),\n        context = 'function' === typeof obj && !itself ? obj.prototype[method] : obj[method];\n    this.assert('function' === typeof context, 'expected #{this} to respond to ' + _.inspect(method), 'expected #{this} to not respond to ' + _.inspect(method));\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0;\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy(matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(result, 'expected #{this} to satisfy ' + _.objDisplay(matcher), 'expected #{this} to not satisfy' + _.objDisplay(matcher), flag(this, 'negate') ? false : true, result);\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(flagMsg + 'the arguments to closeTo or approximately must be numbers', undefined, ssfi);\n    }\n\n    this.assert(Math.abs(obj - expected) <= delta, 'expected #{this} to be close to ' + expected + ' +/- ' + delta, 'expected #{this} not to be close to ' + expected + ' +/- ' + delta);\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo); // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function (elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false; // Remove match from superset so not counted twice if duplicate in subset.\n\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function (elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false; // Remove match from superset so not counted twice if duplicate in subset.\n\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n    var subject, failMsg, failNegateMsg;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n    this.assert(isSubsetOf(subset, obj, cmp, contains, ordered), failMsg, failNegateMsg, subset, obj, true);\n  });\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf(list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n    this.assert(list.indexOf(expected) > -1, 'expected #{this} to be one of #{exp}', 'expected #{this} to not be one of #{exp}', list, expected);\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges(subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n    var initial;\n\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop; // This gets flagged because of the .by(delta) assertion\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n    this.assert(initial !== final, 'expected ' + msgObj + ' to change', 'expected ' + msgObj + ' to not change');\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases(subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n    var initial;\n\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    } // Make sure that the target is a number\n\n\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n    fn();\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n    this.assert(final - initial > 0, 'expected ' + msgObj + ' to increase', 'expected ' + msgObj + ' to not increase');\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases(subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object'),\n        flagMsg = flag(this, 'message'),\n        ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n    var initial;\n\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    } // Make sure that the target is a number\n\n\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n    fn();\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n    this.assert(final - initial < 0, 'expected ' + msgObj + ' to decrease', 'expected ' + msgObj + ' to not decrease');\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n    var expression;\n\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(expression, 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta, 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta);\n  }\n\n  Assertion.addMethod('by', assertDelta);\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function () {\n    var obj = flag(this, 'object'); // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n    this.assert(isExtensible, 'expected #{this} to be extensible', 'expected #{this} to not be extensible');\n  });\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function () {\n    var obj = flag(this, 'object'); // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n    this.assert(isSealed, 'expected #{this} to be sealed', 'expected #{this} to not be sealed');\n  });\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function () {\n    var obj = flag(this, 'object'); // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n    this.assert(isFrozen, 'expected #{this} to be frozen', 'expected #{this} to not be frozen');\n  });\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function (msg) {\n    var obj = flag(this, 'object');\n    this.assert(typeof obj === 'number' && isFinite(obj), 'expected #{this} to be a finite number', 'expected #{this} to not be a finite number');\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/core/assertions.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/interface/assert.js":
/*!********************************************************!*\
  !*** ./node_modules/chai/lib/chai/interface/assert.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nmodule.exports = function (chai, util) {\n  /*!\n   * Chai dependencies.\n   */\n  var Assertion = chai.Assertion,\n      flag = util.flag;\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(express, errmsg, '[ negation message unavailable ]');\n  };\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   *     assert.fail();\n   *     assert.fail(\"custom error message\");\n   *     assert.fail(1, 2);\n   *     assert.fail(1, 2, \"custom error message\");\n   *     assert.fail(1, 2, \"custom error message\", \">\");\n   *     assert.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n      // Comply with Node's fail([message]) interface\n      message = actual;\n      actual = undefined;\n    }\n\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n      actual: actual,\n      expected: expected,\n      operator: operator\n    }, assert.fail);\n  };\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n    test.assert(exp == flag(test, 'object'), 'expected #{this} to equal #{exp}', 'expected #{this} to not equal #{act}', exp, act, true);\n  };\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n    test.assert(exp != flag(test, 'object'), 'expected #{this} to not equal #{exp}', 'expected #{this} to equal #{act}', exp, act, true);\n  };\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n  /**\n  * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n  *\n  * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n  *\n  *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n  *\n  * @name isAbove\n  * @param {Mixed} valueToCheck\n  * @param {Mixed} valueToBeAbove\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n  /**\n  * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n  *\n  * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n  *\n  *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n  *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n  *\n  * @name isAtLeast\n  * @param {Mixed} valueToCheck\n  * @param {Mixed} valueToBeAtLeast\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n  /**\n  * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n  *\n  * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n  *\n  *     assert.isBelow(3, 6, '3 is strictly less than 6');\n  *\n  * @name isBelow\n  * @param {Mixed} valueToCheck\n  * @param {Mixed} valueToBeBelow\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n  /**\n  * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n  *\n  * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n  *\n  *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n  *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n  *\n  * @name isAtMost\n  * @param {Mixed} valueToCheck\n  * @param {Mixed} valueToBeAtMost\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n  /**\n  * ### .isFinite(value, [message])\n  *\n  * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n  *\n  *     var cups = 2;\n  *     assert.isFinite(cups, 'how many cups');\n  *\n  *     assert.isFinite(NaN); // throws\n  *\n  * @name isFinite\n  * @param {Number} value\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true).to.not.be.instanceOf(type);\n  };\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and strictly equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, \"array doesn't contain value\");\n   *     assert.notInclude('foobar', 'baz', \"string doesn't contain substring\");\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   *\n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   *\n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true).not.nested.include(inc);\n  };\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *\n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true).deep.nested.include(inc);\n  };\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested\n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   *\n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *\n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notDeepNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true).not.deep.nested.include(inc);\n  };\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   *\n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.ownInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an\n   * object while ignoring inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   *\n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notOwnInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   *\n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an\n   * object while ignoring inherited properties and checking for deep equality.\n   *\n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *\n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepOwnInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true).deep.own.include(inc);\n  };\n  /**\n  * ### .notDeepOwnInclude(haystack, needle, [message])\n  *\n  * Asserts that 'haystack' includes 'needle'.\n  * Can be used to assert the absence of a subset of properties in an\n  * object while ignoring inherited properties and checking for deep equality.\n  *\n  *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n  *\n  * @name notDeepOwnInclude\n  * @param {Object} haystack\n  * @param {Object} needle\n  * @param {String} message\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.notDeepOwnInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true).not.deep.own.include(inc);\n  };\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true).to.not.have.property(prop);\n  };\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true).to.have.property(prop, val);\n  };\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true).to.not.have.property(prop, val);\n  };\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true).to.have.deep.property(prop, val);\n  };\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true).to.not.have.deep.property(prop, val);\n  };\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true).to.have.own.property(prop);\n  };\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true).to.not.have.own.property(prop);\n  };\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true).to.have.own.property(prop, value);\n  };\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true).to.not.have.own.property(prop, value);\n  };\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true).to.have.deep.own.property(prop, value);\n  };\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true).to.not.have.deep.own.property(prop, value);\n  };\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true).to.have.nested.property(prop);\n  };\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true).to.not.have.nested.property(prop);\n  };\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true).to.have.nested.property(prop, val);\n  };\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true).to.not.have.nested.property(prop, val);\n  };\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true).to.have.deep.nested.property(prop, val);\n  };\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true).to.not.have.deep.nested.property(prop, val);\n  };\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` or `size` with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *     assert.lengthOf(new Set([1,2,3]), 3, 'set has size of 3');\n   *     assert.lengthOf(new Map([['a',1],['b',2],['c',3]]), 3, 'map has size of 3');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  };\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  };\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true).to.contain.all.keys(keys);\n  };\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true).to.not.have.any.keys(keys);\n  };\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true).to.not.have.all.keys(keys);\n  };\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true).to.have.any.deep.keys(keys);\n  };\n  /**\n    * ### .hasAllDeepKeys(object, [keys], [message])\n    *\n    * Asserts that `object` has all and only all of the `keys` provided.\n    * Since Sets and Maps can have objects as keys you can use this assertion to perform\n    * a deep comparison.\n    * You can also provide a single object instead of a `keys` array and its keys\n    * will be used as the expected set of keys.\n    *\n    *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n    *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n    *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n    *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n    *\n    * @name hasAllDeepKeys\n    * @param {Mixed} object\n    * @param {Array|Object} keys\n    * @param {String} message\n    * @namespace Assert\n    * @api public\n    */\n\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true).to.have.all.deep.keys(keys);\n  };\n  /**\n    * ### .containsAllDeepKeys(object, [keys], [message])\n    *\n    * Asserts that `object` contains all of the `keys` provided.\n    * Since Sets and Maps can have objects as keys you can use this assertion to perform\n    * a deep comparison.\n    * You can also provide a single object instead of a `keys` array and its keys\n    * will be used as the expected set of keys.\n    *\n    *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n    *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n    *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n    *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n    *\n    * @name containsAllDeepKeys\n    * @param {Mixed} object\n    * @param {Array|Object} keys\n    * @param {String} message\n    * @namespace Assert\n    * @api public\n    */\n\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true).to.contain.all.deep.keys(keys);\n  };\n  /**\n    * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n    *\n    * Asserts that `object` has none of the `keys` provided.\n    * Since Sets and Maps can have objects as keys you can use this assertion to perform\n    * a deep comparison.\n    * You can also provide a single object instead of a `keys` array and its keys\n    * will be used as the expected set of keys.\n    *\n    *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n    *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n    *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n    *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n    *\n    * @name doesNotHaveAnyDeepKeys\n    * @param {Mixed} object\n    * @param {Array|Object} keys\n    * @param {String} message\n    * @namespace Assert\n    * @api public\n    */\n\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true).to.not.have.any.deep.keys(keys);\n  };\n  /**\n    * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n    *\n    * Asserts that `object` does not have at least one of the `keys` provided.\n    * Since Sets and Maps can have objects as keys you can use this assertion to perform\n    * a deep comparison.\n    * You can also provide a single object instead of a `keys` array and its keys\n    * will be used as the expected set of keys.\n    *\n    *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n    *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n    *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n    *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n    *\n    * @name doesNotHaveAllDeepKeys\n    * @param {Mixed} object\n    * @param {Array|Object} keys\n    * @param {String} message\n    * @namespace Assert\n    * @api public\n    */\n\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true).to.not.have.all.deep.keys(keys);\n  };\n  /**\n    * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n    *\n    * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n    * instance of `errorLike`.\n    * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n    * instance as `errorLike`.\n    * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n    * message matching `errMsgMatcher`.\n    *\n    *     assert.throws(fn, 'Error thrown must have this msg');\n    *     assert.throws(fn, /Error thrown must have a msg that matches this/);\n    *     assert.throws(fn, ReferenceError);\n    *     assert.throws(fn, errorInstance);\n    *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n    *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n    *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n    *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n    *\n    * @name throws\n    * @alias throw\n    * @alias Throw\n    * @param {Function} fn\n    * @param {ErrorConstructor|Error} errorLike\n    * @param {RegExp|String} errMsgMatcher\n    * @param {String} message\n    * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n    * @namespace Assert\n    * @api public\n    */\n\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true).to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true).to.not.throw(errorLike, errMsgMatcher);\n  };\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n\n    switch (operator) {\n      case '==':\n        ok = val == val2;\n        break;\n\n      case '===':\n        ok = val === val2;\n        break;\n\n      case '>':\n        ok = val > val2;\n        break;\n\n      case '>=':\n        ok = val >= val2;\n        break;\n\n      case '<':\n        ok = val < val2;\n        break;\n\n      case '<=':\n        ok = val <= val2;\n        break;\n\n      case '!=':\n        ok = val != val2;\n        break;\n\n      case '!==':\n        ok = val !== val2;\n        break;\n\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(msg + 'Invalid operator \"' + operator + '\"', undefined, assert.operator);\n    }\n\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(true === flag(test, 'object'), 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2), 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2));\n  };\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true).to.be.approximately(exp, delta);\n  };\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true).to.have.same.members(set2);\n  };\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true).to.not.have.same.members(set2);\n  };\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true).to.have.same.deep.members(set2);\n  };\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true).to.not.have.same.deep.members(set2);\n  };\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true).to.have.same.ordered.members(set2);\n  };\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true).to.not.have.same.ordered.members(set2);\n  };\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true).to.have.same.deep.ordered.members(set2);\n  };\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true).to.not.have.same.deep.ordered.members(set2);\n  };\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true).to.include.members(subset);\n  };\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true).to.not.include.members(subset);\n  };\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true).to.include.deep.members(subset);\n  };\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true).to.not.include.deep.members(subset);\n  };\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true).to.include.ordered.members(subset);\n  };\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true).to.not.include.ordered.members(subset);\n  };\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true).to.include.deep.ordered.members(subset);\n  };\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true).to.not.include.deep.ordered.members(subset);\n  };\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  };\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  };\n  /**\n  * ### .changesBy(function, object, property, delta, [message])\n  *\n  * Asserts that a function changes the value of a property by an amount (delta).\n  *\n  *     var obj = { val: 10 };\n  *     var fn = function() { obj.val += 2 };\n  *     assert.changesBy(fn, obj, 'val', 2);\n  *\n  * @name changesBy\n  * @param {Function} modifier function\n  * @param {Object} object or getter function\n  * @param {String} property name _optional_\n  * @param {Number} change amount (delta)\n  * @param {String} message _optional_\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true).to.change(obj, prop).by(delta);\n  };\n  /**\n  * ### .doesNotChange(function, object, property, [message])\n  *\n  * Asserts that a function does not change the value of a property.\n  *\n  *     var obj = { val: 10 };\n  *     var fn = function() { console.log('foo'); };\n  *     assert.doesNotChange(fn, obj, 'val');\n  *\n  * @name doesNotChange\n  * @param {Function} modifier function\n  * @param {Object} object or getter function\n  * @param {String} property name _optional_\n  * @param {String} message _optional_\n  * @namespace Assert\n  * @api public\n  */\n\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true).to.not.change(obj, prop);\n  };\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true).to.change(obj, prop).but.not.by(delta);\n  };\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true).to.increase(obj, prop);\n  };\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true).to.increase(obj, prop).by(delta);\n  };\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true).to.not.increase(obj, prop);\n  };\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true).to.increase(obj, prop).but.not.by(delta);\n  };\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true).to.decrease(obj, prop);\n  };\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true).to.decrease(obj, prop).by(delta);\n  };\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true).to.not.decrease(obj, prop);\n  };\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true).to.not.decrease(obj, prop).by(delta);\n  };\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true).to.decrease(obj, prop).but.not.by(delta);\n  };\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw val;\n    }\n  };\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isEmpty = function (val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n\n  assert.isNotEmpty = function (val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n  /*!\n   * Aliases.\n   */\n\n\n  (function alias(name, as) {\n    assert[as] = assert[name];\n    return alias;\n  })('isOk', 'ok')('isNotOk', 'notOk')('throws', 'throw')('throws', 'Throw')('isExtensible', 'extensible')('isNotExtensible', 'notExtensible')('isSealed', 'sealed')('isNotSealed', 'notSealed')('isFrozen', 'frozen')('isNotFrozen', 'notFrozen')('isEmpty', 'empty')('isNotEmpty', 'notEmpty');\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/interface/assert.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/interface/expect.js":
/*!********************************************************!*\
  !*** ./node_modules/chai/lib/chai/interface/expect.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n  /**\n   * ### .fail([message])\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   *     expect.fail();\n   *     expect.fail(\"custom error message\");\n   *     expect.fail(1, 2);\n   *     expect.fail(1, 2, \"custom error message\");\n   *     expect.fail(1, 2, \"custom error message\", \">\");\n   *     expect.fail(1, 2, undefined, \">\");\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    if (arguments.length < 2) {\n      message = actual;\n      actual = undefined;\n    }\n\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n      actual: actual,\n      expected: expected,\n      operator: operator\n    }, chai.expect.fail);\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/interface/expect.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/interface/should.js":
/*!********************************************************!*\
  !*** ./node_modules/chai/lib/chai/interface/should.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould() {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String || this instanceof Number || this instanceof Boolean || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n\n      return new Assertion(this, null, shouldGetter);\n    }\n\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } // modify Object.prototype to have `should`\n\n\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter,\n      get: shouldGetter,\n      configurable: true\n    });\n    var should = {};\n    /**\n     * ### .fail([message])\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     *     should.fail();\n     *     should.fail(\"custom error message\");\n     *     should.fail(1, 2);\n     *     should.fail(1, 2, \"custom error message\");\n     *     should.fail(1, 2, \"custom error message\", \">\");\n     *     should.fail(1, 2, undefined, \">\");\n     *\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      if (arguments.length < 2) {\n        message = actual;\n        actual = undefined;\n      }\n\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n        actual: actual,\n        expected: expected,\n        operator: operator\n      }, should.fail);\n    };\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }; // negation\n\n\n    should.not = {};\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    };\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n    return should;\n  }\n\n  ;\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/interface/should.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/addChainableMethod.js":
/*!****************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/addChainableMethod.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar addLengthGuard = __webpack_require__(/*! ./addLengthGuard */ \"./node_modules/chai/lib/chai/utils/addLengthGuard.js\");\n\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar proxify = __webpack_require__(/*! ./proxify */ \"./node_modules/chai/lib/chai/utils/proxify.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/*!\n * Module variables\n */\n// Check whether `Object.setPrototypeOf` is supported\n\n\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function'; // Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\n\nvar testFn = function testFn() {};\n\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function (name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name); // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n\n  if (_typeof(propDesc) !== 'object') return true;\n  return !propDesc.configurable;\n}); // Cache `Function` properties\n\nvar call = Function.prototype.call,\n    apply = Function.prototype.apply;\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function chainingBehavior() {};\n  }\n\n  var chainableBehavior = {\n    method: method,\n    chainingBehavior: chainingBehavior\n  }; // save the methods so we can overwrite them later, if we need to.\n\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n\n  ctx.__methods[name] = chainableBehavior;\n  Object.defineProperty(ctx, name, {\n    get: function chainableMethodGetter() {\n      chainableBehavior.chainingBehavior.call(this);\n\n      var chainableMethodWrapper = function chainableMethodWrapper() {\n        // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n        // function to be the starting point for removing implementation\n        // frames from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set.\n        //\n        // If the `lockSsfi` flag is set, then this assertion is being\n        // invoked from inside of another assertion. In this case, the `ssfi`\n        // flag has already been set by the outer assertion.\n        //\n        // Note that overwriting a chainable method merely replaces the saved\n        // methods in `ctx.__methods` instead of completely replacing the\n        // overwritten assertion. Therefore, an overwriting assertion won't\n        // set the `ssfi` or `lockSsfi` flags.\n        if (!flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', chainableMethodWrapper);\n        }\n\n        var result = chainableBehavior.method.apply(this, arguments);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      };\n\n      addLengthGuard(chainableMethodWrapper, name, true); // Use `Object.setPrototypeOf` if available\n\n      if (canSetPrototype) {\n        // Inherit all properties from the object by replacing the `Function` prototype\n        var prototype = Object.create(this); // Restore the `call` and `apply` methods from `Function`\n\n        prototype.call = call;\n        prototype.apply = apply;\n        Object.setPrototypeOf(chainableMethodWrapper, prototype);\n      } // Otherwise, redefine all properties (slow!)\n      else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n      transferFlags(this, chainableMethodWrapper);\n      return proxify(chainableMethodWrapper);\n    },\n    configurable: true\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/addChainableMethod.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/addLengthGuard.js":
/*!************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/addLengthGuard.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard(fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n  Object.defineProperty(fn, 'length', {\n    get: function get() {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' + ' to a compatibility issue, \"length\" cannot directly follow \"' + assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' + ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n  return fn;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/addLengthGuard.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/addMethod.js":
/*!*******************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/addMethod.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar addLengthGuard = __webpack_require__(/*! ./addLengthGuard */ \"./node_modules/chai/lib/chai/utils/addLengthGuard.js\");\n\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar proxify = __webpack_require__(/*! ./proxify */ \"./node_modules/chai/lib/chai/utils/proxify.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function methodWrapper() {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined) return result;\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/addMethod.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/addProperty.js":
/*!*********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/addProperty.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar isProxyEnabled = __webpack_require__(/*! ./isProxyEnabled */ \"./node_modules/chai/lib/chai/utils/isProxyEnabled.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n  Object.defineProperty(ctx, name, {\n    get: function propertyGetter() {\n      // Setting the `ssfi` flag to `propertyGetter` causes this function to\n      // be the starting point for removing implementation frames from the\n      // stack trace of a failed assertion.\n      //\n      // However, we only want to use this function as the starting point if\n      // the `lockSsfi` flag isn't set and proxy protection is disabled.\n      //\n      // If the `lockSsfi` flag is set, then either this assertion has been\n      // overwritten by another assertion, or this assertion is being invoked\n      // from inside of another assertion. In the first case, the `ssfi` flag\n      // has already been set by the overwriting assertion. In the second\n      // case, the `ssfi` flag has already been set by the outer assertion.\n      //\n      // If proxy protection is enabled, then the `ssfi` flag has already been\n      // set by the proxy getter.\n      if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n        flag(this, 'ssfi', propertyGetter);\n      }\n\n      var result = getter.call(this);\n      if (result !== undefined) return result;\n      var newAssertion = new chai.Assertion();\n      transferFlags(this, newAssertion);\n      return newAssertion;\n    },\n    configurable: true\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/addProperty.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/compareByInspect.js":
/*!**************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/compareByInspect.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar inspect = __webpack_require__(/*! ./inspect */ \"./node_modules/chai/lib/chai/utils/inspect.js\");\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/compareByInspect.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/expectTypes.js":
/*!*********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/expectTypes.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\nvar AssertionError = __webpack_require__(/*! assertion-error */ \"./node_modules/assertion-error/index.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar type = __webpack_require__(/*! type-detect */ \"./node_modules/type-detect/type-detect.js\");\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n  obj = flag(obj, 'object');\n  types = types.map(function (t) {\n    return t.toLowerCase();\n  });\n  types.sort(); // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n\n  var str = types.map(function (t, index) {\n    var art = ~['a', 'e', 'i', 'o', 'u'].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) {\n    return objType === expected;\n  })) {\n    throw new AssertionError(flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given', undefined, ssfi);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/expectTypes.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/flag.js":
/*!**************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/flag.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/flag.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getActual.js":
/*!*******************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getActual.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getActual.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getEnumerableProperties.js":
/*!*********************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getEnumerableProperties.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n\n  for (var name in object) {\n    result.push(name);\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getEnumerableProperties.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getMessage.js":
/*!********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getMessage.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\"),\n    getActual = __webpack_require__(/*! ./getActual */ \"./node_modules/chai/lib/chai/utils/getActual.js\"),\n    objDisplay = __webpack_require__(/*! ./objDisplay */ \"./node_modules/chai/lib/chai/utils/objDisplay.js\");\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate'),\n      val = flag(obj, 'object'),\n      expected = args[3],\n      actual = getActual(obj, args),\n      msg = negate ? args[2] : args[1],\n      flagMsg = flag(obj, 'message');\n  if (typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg.replace(/#\\{this\\}/g, function () {\n    return objDisplay(val);\n  }).replace(/#\\{act\\}/g, function () {\n    return objDisplay(actual);\n  }).replace(/#\\{exp\\}/g, function () {\n    return objDisplay(expected);\n  });\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getMessage.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js":
/*!************************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar getOwnEnumerablePropertySymbols = __webpack_require__(/*! ./getOwnEnumerablePropertySymbols */ \"./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js\");\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/getProperties.js":
/*!***********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/getProperties.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/getProperties.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/index.js":
/*!***************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\nvar pathval = __webpack_require__(/*! pathval */ \"./node_modules/pathval/index.js\");\n/*!\n * test utility\n */\n\n\nexports.test = __webpack_require__(/*! ./test */ \"./node_modules/chai/lib/chai/utils/test.js\");\n/*!\n * type utility\n */\n\nexports.type = __webpack_require__(/*! type-detect */ \"./node_modules/type-detect/type-detect.js\");\n/*!\n * expectTypes utility\n */\n\nexports.expectTypes = __webpack_require__(/*! ./expectTypes */ \"./node_modules/chai/lib/chai/utils/expectTypes.js\");\n/*!\n * message utility\n */\n\nexports.getMessage = __webpack_require__(/*! ./getMessage */ \"./node_modules/chai/lib/chai/utils/getMessage.js\");\n/*!\n * actual utility\n */\n\nexports.getActual = __webpack_require__(/*! ./getActual */ \"./node_modules/chai/lib/chai/utils/getActual.js\");\n/*!\n * Inspect util\n */\n\nexports.inspect = __webpack_require__(/*! ./inspect */ \"./node_modules/chai/lib/chai/utils/inspect.js\");\n/*!\n * Object Display util\n */\n\nexports.objDisplay = __webpack_require__(/*! ./objDisplay */ \"./node_modules/chai/lib/chai/utils/objDisplay.js\");\n/*!\n * Flag utility\n */\n\nexports.flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/*!\n * Deep equal utility\n */\n\nexports.eql = __webpack_require__(/*! deep-eql */ \"./node_modules/deep-eql/index.js\");\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n/*!\n * Function name\n */\n\nexports.getName = __webpack_require__(/*! get-func-name */ \"./node_modules/get-func-name/index.js\");\n/*!\n * add Property\n */\n\nexports.addProperty = __webpack_require__(/*! ./addProperty */ \"./node_modules/chai/lib/chai/utils/addProperty.js\");\n/*!\n * add Method\n */\n\nexports.addMethod = __webpack_require__(/*! ./addMethod */ \"./node_modules/chai/lib/chai/utils/addMethod.js\");\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = __webpack_require__(/*! ./overwriteProperty */ \"./node_modules/chai/lib/chai/utils/overwriteProperty.js\");\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = __webpack_require__(/*! ./overwriteMethod */ \"./node_modules/chai/lib/chai/utils/overwriteMethod.js\");\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = __webpack_require__(/*! ./addChainableMethod */ \"./node_modules/chai/lib/chai/utils/addChainableMethod.js\");\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = __webpack_require__(/*! ./overwriteChainableMethod */ \"./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js\");\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = __webpack_require__(/*! ./compareByInspect */ \"./node_modules/chai/lib/chai/utils/compareByInspect.js\");\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = __webpack_require__(/*! ./getOwnEnumerablePropertySymbols */ \"./node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js\");\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = __webpack_require__(/*! ./getOwnEnumerableProperties */ \"./node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js\");\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = __webpack_require__(/*! check-error */ \"./node_modules/check-error/index.js\");\n/*!\n * Proxify util\n */\n\nexports.proxify = __webpack_require__(/*! ./proxify */ \"./node_modules/chai/lib/chai/utils/proxify.js\");\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = __webpack_require__(/*! ./addLengthGuard */ \"./node_modules/chai/lib/chai/utils/addLengthGuard.js\");\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = __webpack_require__(/*! ./isProxyEnabled */ \"./node_modules/chai/lib/chai/utils/isProxyEnabled.js\");\n/*!\n * isNaN method\n */\n\nexports.isNaN = __webpack_require__(/*! ./isNaN */ \"./node_modules/chai/lib/chai/utils/isNaN.js\");\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/index.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/inspect.js":
/*!*****************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/inspect.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\nvar getName = __webpack_require__(/*! get-func-name */ \"./node_modules/get-func-name/index.js\");\n\nvar getProperties = __webpack_require__(/*! ./getProperties */ \"./node_modules/chai/lib/chai/utils/getProperties.js\");\n\nvar getEnumerableProperties = __webpack_require__(/*! ./getEnumerableProperties */ \"./node_modules/chai/lib/chai/utils/getEnumerableProperties.js\");\n\nvar config = __webpack_require__(/*! ../config */ \"./node_modules/chai/lib/chai/config.js\");\n\nmodule.exports = inspect;\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\n\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function stylize(str) {\n      return str;\n    }\n  };\n  return formatValue(ctx, obj, typeof depth === 'undefined' ? 2 : depth);\n} // Returns true if object is a DOM element.\n\n\nvar isDOMElement = function isDOMElement(object) {\n  if ((typeof HTMLElement === \"undefined\" ? \"undefined\" : _typeof(HTMLElement)) === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object && _typeof(object) === 'object' && 'nodeType' in object && object.nodeType === 1 && typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // If this is a DOM element, try to get the outer HTML.\n\n\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML; // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML.replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {// This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  } // Look up the keys of the object.\n\n\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n  var name, nameSuffix; // Some type of object without properties can be shortcut.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n\n  if (keys.length === 0 || isError(value) && (keys.length === 1 && keys[0] === 'stack' || keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      typedArray = false,\n      braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  } // Make Array say that they are Array\n\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  switch (_typeof(value)) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && 1 / value === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  } // For some reason typeof null is \"object\", so special case here.\n\n\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n\n    str += value[i] + ', ';\n  }\n\n  str += ' ]'; // Removing trailing `, ` if the array was not truncated\n\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var length = output.reduce(function (prev, cur) {\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return _typeof(ar) === 'object' && /\\w+Array]$/.test(objectToString(ar));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) || _typeof(ar) === 'object' && objectToString(ar) === '[object Array]';\n}\n\nfunction isRegExp(re) {\n  return _typeof(re) === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return _typeof(d) === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return _typeof(e) === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/inspect.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/isNaN.js":
/*!***************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/isNaN.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n} // If ECMAScript 6's Number.isNaN is present, prefer that.\n\n\nmodule.exports = Number.isNaN || isNaN;\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/isNaN.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/isProxyEnabled.js":
/*!************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/isProxyEnabled.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var config = __webpack_require__(/*! ../config */ \"./node_modules/chai/lib/chai/config.js\");\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy && typeof Proxy !== 'undefined' && typeof Reflect !== 'undefined';\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/isProxyEnabled.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/objDisplay.js":
/*!********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/objDisplay.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar inspect = __webpack_require__(/*! ./inspect */ \"./node_modules/chai/lib/chai/utils/inspect.js\");\n\nvar config = __webpack_require__(/*! ../config */ \"./node_modules/chai/lib/chai/config.js\");\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj),\n      type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === '' ? '[Function]' : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj),\n          kstr = keys.length > 2 ? keys.splice(0, 2).join(', ') + ', ...' : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/objDisplay.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js":
/*!**********************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwrites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/overwriteChainableMethod.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/overwriteMethod.js":
/*!*************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/overwriteMethod.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar addLengthGuard = __webpack_require__(/*! ./addLengthGuard */ \"./node_modules/chai/lib/chai/utils/addLengthGuard.js\");\n\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar proxify = __webpack_require__(/*! ./proxify */ \"./node_modules/chai/lib/chai/utils/proxify.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwrites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name],\n      _super = function _super() {\n    throw new Error(name + ' is not a function');\n  };\n\n  if (_method && 'function' === typeof _method) _super = _method;\n\n  var overwritingMethodWrapper = function overwritingMethodWrapper() {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    } // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n\n\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/overwriteMethod.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/overwriteProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/overwriteProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar chai = __webpack_require__(/*! ../../chai */ \"./node_modules/chai/lib/chai.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar isProxyEnabled = __webpack_require__(/*! ./isProxyEnabled */ \"./node_modules/chai/lib/chai/utils/isProxyEnabled.js\");\n\nvar transferFlags = __webpack_require__(/*! ./transferFlags */ \"./node_modules/chai/lib/chai/utils/transferFlags.js\");\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwrites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name),\n      _super = function _super() {};\n\n  if (_get && 'function' === typeof _get.get) _super = _get.get;\n  Object.defineProperty(ctx, name, {\n    get: function overwritingPropertyGetter() {\n      // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n      // function to be the starting point for removing implementation frames\n      // from the stack trace of a failed assertion.\n      //\n      // However, we only want to use this function as the starting point if\n      // the `lockSsfi` flag isn't set and proxy protection is disabled.\n      //\n      // If the `lockSsfi` flag is set, then either this assertion has been\n      // overwritten by another assertion, or this assertion is being invoked\n      // from inside of another assertion. In the first case, the `ssfi` flag\n      // has already been set by the overwriting assertion. In the second\n      // case, the `ssfi` flag has already been set by the outer assertion.\n      //\n      // If proxy protection is enabled, then the `ssfi` flag has already been\n      // set by the proxy getter.\n      if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n        flag(this, 'ssfi', overwritingPropertyGetter);\n      } // Setting the `lockSsfi` flag to `true` prevents the overwritten\n      // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n      // flag is already set to the correct starting point for this assertion.\n\n\n      var origLockSsfi = flag(this, 'lockSsfi');\n      flag(this, 'lockSsfi', true);\n      var result = getter(_super).call(this);\n      flag(this, 'lockSsfi', origLockSsfi);\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      var newAssertion = new chai.Assertion();\n      transferFlags(this, newAssertion);\n      return newAssertion;\n    },\n    configurable: true\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/overwriteProperty.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/proxify.js":
/*!*****************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/proxify.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var config = __webpack_require__(/*! ../config */ \"./node_modules/chai/lib/chai/config.js\");\n\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n\nvar getProperties = __webpack_require__(/*! ./getProperties */ \"./node_modules/chai/lib/chai/utils/getProperties.js\");\n\nvar isProxyEnabled = __webpack_require__(/*! ./isProxyEnabled */ \"./node_modules/chai/lib/chai/utils/isProxyEnabled.js\");\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n *\n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' && config.proxyExcludedKeys.indexOf(property) === -1 && !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' + property + '. See docs for proper usage of \"' + nonChainableMethodName + '\".');\n        } // If the property is reasonably close to an existing Chai property,\n        // suggest that property to the user. Only suggest properties with a\n        // distance less than 4.\n\n\n        var suggestion = null;\n        var suggestionDistance = 4;\n        getProperties(target).forEach(function (prop) {\n          if (!Object.prototype.hasOwnProperty(prop) && builtins.indexOf(prop) === -1) {\n            var dist = stringDistanceCapped(property, prop, suggestionDistance);\n\n            if (dist < suggestionDistance) {\n              suggestion = prop;\n              suggestionDistance = dist;\n            }\n          }\n        });\n\n        if (suggestion !== null) {\n          throw Error('Invalid Chai property: ' + property + '. Did you mean \"' + suggestion + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      } // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n\n\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n/**\n * # stringDistanceCapped(strA, strB, cap)\n * Return the Levenshtein distance between two strings, but no more than cap.\n * @param {string} strA\n * @param {string} strB\n * @param {number} number\n * @return {number} min(string distance between strA and strB, cap)\n * @api private\n */\n\n\nfunction stringDistanceCapped(strA, strB, cap) {\n  if (Math.abs(strA.length - strB.length) >= cap) {\n    return cap;\n  }\n\n  var memo = []; // `memo` is a two-dimensional array containing distances.\n  // memo[i][j] is the distance between strA.slice(0, i) and\n  // strB.slice(0, j).\n\n  for (var i = 0; i <= strA.length; i++) {\n    memo[i] = Array(strB.length + 1).fill(0);\n    memo[i][0] = i;\n  }\n\n  for (var j = 0; j < strB.length; j++) {\n    memo[0][j] = j;\n  }\n\n  for (var i = 1; i <= strA.length; i++) {\n    var ch = strA.charCodeAt(i - 1);\n\n    for (var j = 1; j <= strB.length; j++) {\n      if (Math.abs(i - j) >= cap) {\n        memo[i][j] = cap;\n        continue;\n      }\n\n      memo[i][j] = Math.min(memo[i - 1][j] + 1, memo[i][j - 1] + 1, memo[i - 1][j - 1] + (ch === strB.charCodeAt(j - 1) ? 0 : 1));\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/proxify.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/test.js":
/*!**************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/test.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\nvar flag = __webpack_require__(/*! ./flag */ \"./node_modules/chai/lib/chai/utils/flag.js\");\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate'),\n      expr = args[0];\n  return negate ? !expr : expr;\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/test.js?");

/***/ }),

/***/ "./node_modules/chai/lib/chai/utils/transferFlags.js":
/*!***********************************************************!*\
  !*** ./node_modules/chai/lib/chai/utils/transferFlags.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAssertion = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll || flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message') {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/chai/lib/chai/utils/transferFlags.js?");

/***/ }),

/***/ "./node_modules/check-error/index.js":
/*!*******************************************!*\
  !*** ./node_modules/check-error/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\n\nfunction getFunctionName(constructorFn) {\n  var name = '';\n\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() || getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\n\nfunction getMessage(errorLike) {\n  var msg = '';\n\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName\n};\n\n//# sourceURL=webpack:///./node_modules/check-error/index.js?");

/***/ }),

/***/ "./node_modules/core-js/library/fn/json/stringify.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/json/stringify.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var core = __webpack_require__(/*! ../../modules/_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar $JSON = core.JSON || (core.JSON = {\n  stringify: JSON.stringify\n});\n\nmodule.exports = function stringify(it) {\n  // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/json/stringify.js?");

/***/ }),

/***/ "./node_modules/core-js/library/fn/object/assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../modules/es6.object.assign */ \"./node_modules/core-js/library/modules/es6.object.assign.js\");\n\nmodule.exports = __webpack_require__(/*! ../../modules/_core */ \"./node_modules/core-js/library/modules/_core.js\").Object.assign;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/assign.js?");

/***/ }),

/***/ "./node_modules/core-js/library/fn/object/keys.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/keys.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../modules/es6.object.keys */ \"./node_modules/core-js/library/modules/es6.object.keys.js\");\n\nmodule.exports = __webpack_require__(/*! ../../modules/_core */ \"./node_modules/core-js/library/modules/_core.js\").Object.keys;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/object/keys.js?");

/***/ }),

/***/ "./node_modules/core-js/library/fn/promise.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/library/fn/promise.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../modules/es6.object.to-string */ \"./node_modules/core-js/library/modules/es6.object.to-string.js\");\n\n__webpack_require__(/*! ../modules/es6.string.iterator */ \"./node_modules/core-js/library/modules/es6.string.iterator.js\");\n\n__webpack_require__(/*! ../modules/web.dom.iterable */ \"./node_modules/core-js/library/modules/web.dom.iterable.js\");\n\n__webpack_require__(/*! ../modules/es6.promise */ \"./node_modules/core-js/library/modules/es6.promise.js\");\n\n__webpack_require__(/*! ../modules/es7.promise.finally */ \"./node_modules/core-js/library/modules/es7.promise.finally.js\");\n\n__webpack_require__(/*! ../modules/es7.promise.try */ \"./node_modules/core-js/library/modules/es7.promise.try.js\");\n\nmodule.exports = __webpack_require__(/*! ../modules/_core */ \"./node_modules/core-js/library/modules/_core.js\").Promise;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/fn/promise.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_a-function.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_a-function.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function () {\n  /* empty */\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-instance.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-instance.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n\n  return it;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_an-instance.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_an-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/core-js/library/modules/_is-object.js\");\n\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_an-object.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_array-includes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(/*! ./_to-iobject */ \"./node_modules/core-js/library/modules/_to-iobject.js\");\n\nvar toLength = __webpack_require__(/*! ./_to-length */ \"./node_modules/core-js/library/modules/_to-length.js\");\n\nvar toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ \"./node_modules/core-js/library/modules/_to-absolute-index.js\");\n\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value; // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++]; // eslint-disable-next-line no-self-compare\n\n      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }\n    return !IS_INCLUDES && -1;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_array-includes.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_classof.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_classof.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(/*! ./_cof */ \"./node_modules/core-js/library/modules/_cof.js\");\n\nvar TAG = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('toStringTag'); // ES3 wrong here\n\n\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments'; // fallback for IE11 Script Access Denied error\n\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {\n    /* empty */\n  }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case\n  : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T // builtinTag case\n  : ARG ? cof(O) // ES3 arguments fallback\n  : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_classof.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_cof.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_cof.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_core.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var core = module.exports = {\n  version: '2.6.5'\n};\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_core.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_ctx.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// optional / simple context binding\nvar aFunction = __webpack_require__(/*! ./_a-function */ \"./node_modules/core-js/library/modules/_a-function.js\");\n\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n\n  return function ()\n  /* ...args */\n  {\n    return fn.apply(that, arguments);\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ctx.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_defined.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_defined.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_descriptors.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(/*! ./_fails */ \"./node_modules/core-js/library/modules/_fails.js\")(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_descriptors.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_dom-create.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/core-js/library/modules/_is-object.js\");\n\nvar document = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\").document; // typeof document.createElement is 'object' in old IE\n\n\nvar is = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_dom-create.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// IE 8- don't enum bug keys\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_export.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar core = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/core-js/library/modules/_ctx.js\");\n\nvar hide = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\");\n\nvar has = __webpack_require__(/*! ./_has */ \"./node_modules/core-js/library/modules/_has.js\");\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue; // export native or passed\n\n    out = own ? target[key] : source[key]; // prevent global pollution for namespaces\n\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global) // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? function (C) {\n      var F = function F(a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0:\n              return new C();\n\n            case 1:\n              return new C(a);\n\n            case 2:\n              return new C(a, b);\n          }\n\n          return new C(a, b, c);\n        }\n\n        return C.apply(this, arguments);\n      };\n\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F; // make static versions for prototype methods\n    }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out; // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out; // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n}; // type bitmap\n\n\n$export.F = 1; // forced\n\n$export.G = 2; // global\n\n$export.S = 4; // static\n\n$export.P = 8; // proto\n\n$export.B = 16; // bind\n\n$export.W = 32; // wrap\n\n$export.U = 64; // safe\n\n$export.R = 128; // real proto method for `library`\n\nmodule.exports = $export;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_export.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_fails.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_fails.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_for-of.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_for-of.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/core-js/library/modules/_ctx.js\");\n\nvar call = __webpack_require__(/*! ./_iter-call */ \"./node_modules/core-js/library/modules/_iter-call.js\");\n\nvar isArrayIter = __webpack_require__(/*! ./_is-array-iter */ \"./node_modules/core-js/library/modules/_is-array-iter.js\");\n\nvar anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar toLength = __webpack_require__(/*! ./_to-length */ \"./node_modules/core-js/library/modules/_to-length.js\");\n\nvar getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ \"./node_modules/core-js/library/modules/core.get-iterator-method.js\");\n\nvar BREAK = {};\nvar RETURN = {};\n\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!'); // fast case for arrays with default iterator\n\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_for-of.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_global.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self // eslint-disable-next-line no-new-func\n: Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_global.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_has.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_has.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_hide.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var dP = __webpack_require__(/*! ./_object-dp */ \"./node_modules/core-js/library/modules/_object-dp.js\");\n\nvar createDesc = __webpack_require__(/*! ./_property-desc */ \"./node_modules/core-js/library/modules/_property-desc.js\");\n\nmodule.exports = __webpack_require__(/*! ./_descriptors */ \"./node_modules/core-js/library/modules/_descriptors.js\") ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_hide.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_html.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var document = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\").document;\n\nmodule.exports = document && document.documentElement;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_html.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = !__webpack_require__(/*! ./_descriptors */ \"./node_modules/core-js/library/modules/_descriptors.js\") && !__webpack_require__(/*! ./_fails */ \"./node_modules/core-js/library/modules/_fails.js\")(function () {\n  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ \"./node_modules/core-js/library/modules/_dom-create.js\")('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_invoke.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_invoke.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n\n  return fn.apply(that, args);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_invoke.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iobject.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(/*! ./_cof */ \"./node_modules/core-js/library/modules/_cof.js\"); // eslint-disable-next-line no-prototype-builtins\n\n\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iobject.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-array-iter.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array-iter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// check on default Array iterator\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/library/modules/_iterators.js\");\n\nvar ITERATOR = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('iterator');\n\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-array-iter.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_is-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nmodule.exports = function (it) {\n  return _typeof(it) === 'object' ? it !== null : typeof it === 'function';\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_is-object.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-call.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-call.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-call.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-create.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar create = __webpack_require__(/*! ./_object-create */ \"./node_modules/core-js/library/modules/_object-create.js\");\n\nvar descriptor = __webpack_require__(/*! ./_property-desc */ \"./node_modules/core-js/library/modules/_property-desc.js\");\n\nvar setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ \"./node_modules/core-js/library/modules/_set-to-string-tag.js\");\n\nvar IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\n__webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\")(IteratorPrototype, __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('iterator'), function () {\n  return this;\n});\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, {\n    next: descriptor(1, next)\n  });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-create.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-define.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar LIBRARY = __webpack_require__(/*! ./_library */ \"./node_modules/core-js/library/modules/_library.js\");\n\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\nvar redefine = __webpack_require__(/*! ./_redefine */ \"./node_modules/core-js/library/modules/_redefine.js\");\n\nvar hide = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\");\n\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/library/modules/_iterators.js\");\n\nvar $iterCreate = __webpack_require__(/*! ./_iter-create */ \"./node_modules/core-js/library/modules/_iter-create.js\");\n\nvar setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ \"./node_modules/core-js/library/modules/_set-to-string-tag.js\");\n\nvar getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ \"./node_modules/core-js/library/modules/_object-gpo.js\");\n\nvar ITERATOR = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('iterator');\n\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\n\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function returnThis() {\n  return this;\n};\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype; // Fix native\n\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true); // fix for some old engines\n\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  } // fix Array#{values, @@iterator}.name in V8 / FF\n\n\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n\n    $default = function values() {\n      return $native.call(this);\n    };\n  } // Define iterator\n\n\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  } // Plug for library\n\n\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n\n  return methods;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-define.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-detect.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-detect.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var ITERATOR = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('iterator');\n\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  }; // eslint-disable-next-line no-throw-literal\n\n\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {\n  /* empty */\n}\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n\n    iter.next = function () {\n      return {\n        done: safe = true\n      };\n    };\n\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n\n    exec(arr);\n  } catch (e) {\n    /* empty */\n  }\n\n  return safe;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-detect.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iter-step.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iter-step.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_iterators.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_iterators.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_library.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = true;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_library.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_microtask.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_microtask.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar macrotask = __webpack_require__(/*! ./_task */ \"./node_modules/core-js/library/modules/_task.js\").set;\n\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __webpack_require__(/*! ./_cof */ \"./node_modules/core-js/library/modules/_cof.js\")(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n\n    last = undefined;\n    if (parent) parent.enter();\n  }; // Node.js\n\n\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    }; // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, {\n      characterData: true\n    }); // eslint-disable-line no-new\n\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    }; // environments with maybe non-completely correct, but existent Promise\n\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n\n    notify = function notify() {\n      promise.then(flush);\n    }; // for other environments - macrotask based on:\n    // - setImmediate\n    // - MessageChannel\n    // - window.postMessag\n    // - onreadystatechange\n    // - setTimeout\n\n  } else {\n    notify = function notify() {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n\n    if (!head) {\n      head = task;\n      notify();\n    }\n\n    last = task;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_microtask.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_new-promise-capability.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // 25.4.1.5 NewPromiseCapability(C)\n\nvar aFunction = __webpack_require__(/*! ./_a-function */ \"./node_modules/core-js/library/modules/_a-function.js\");\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_new-promise-capability.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-assign.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // 19.1.2.1 Object.assign(target, source, ...)\n\nvar getKeys = __webpack_require__(/*! ./_object-keys */ \"./node_modules/core-js/library/modules/_object-keys.js\");\n\nvar gOPS = __webpack_require__(/*! ./_object-gops */ \"./node_modules/core-js/library/modules/_object-gops.js\");\n\nvar pIE = __webpack_require__(/*! ./_object-pie */ \"./node_modules/core-js/library/modules/_object-pie.js\");\n\nvar toObject = __webpack_require__(/*! ./_to-object */ \"./node_modules/core-js/library/modules/_to-object.js\");\n\nvar IObject = __webpack_require__(/*! ./_iobject */ \"./node_modules/core-js/library/modules/_iobject.js\");\n\nvar $assign = Object.assign; // should work with symbols and should have deterministic property order (V8 bug)\n\nmodule.exports = !$assign || __webpack_require__(/*! ./_fails */ \"./node_modules/core-js/library/modules/_fails.js\")(function () {\n  var A = {};\n  var B = {}; // eslint-disable-next-line no-undef\n\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n\n  return T;\n} : $assign;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-assign.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar dPs = __webpack_require__(/*! ./_object-dps */ \"./node_modules/core-js/library/modules/_object-dps.js\");\n\nvar enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ \"./node_modules/core-js/library/modules/_enum-bug-keys.js\");\n\nvar IE_PROTO = __webpack_require__(/*! ./_shared-key */ \"./node_modules/core-js/library/modules/_shared-key.js\")('IE_PROTO');\n\nvar Empty = function Empty() {\n  /* empty */\n};\n\nvar PROTOTYPE = 'prototype'; // Create object with fake `null` prototype: use iframe Object with cleared prototype\n\nvar _createDict = function createDict() {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(/*! ./_dom-create */ \"./node_modules/core-js/library/modules/_dom-create.js\")('iframe');\n\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n\n  __webpack_require__(/*! ./_html */ \"./node_modules/core-js/library/modules/_html.js\").appendChild(iframe);\n\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }\n\n  return _createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null; // add \"__proto__\" for Object.getPrototypeOf polyfill\n\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-create.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dp.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ \"./node_modules/core-js/library/modules/_ie8-dom-define.js\");\n\nvar toPrimitive = __webpack_require__(/*! ./_to-primitive */ \"./node_modules/core-js/library/modules/_to-primitive.js\");\n\nvar dP = Object.defineProperty;\nexports.f = __webpack_require__(/*! ./_descriptors */ \"./node_modules/core-js/library/modules/_descriptors.js\") ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {\n    /* empty */\n  }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dp.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-dps.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var dP = __webpack_require__(/*! ./_object-dp */ \"./node_modules/core-js/library/modules/_object-dp.js\");\n\nvar anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar getKeys = __webpack_require__(/*! ./_object-keys */ \"./node_modules/core-js/library/modules/_object-keys.js\");\n\nmodule.exports = __webpack_require__(/*! ./_descriptors */ \"./node_modules/core-js/library/modules/_descriptors.js\") ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }\n\n  return O;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-dps.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gops.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.f = Object.getOwnPropertySymbols;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gops.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-gpo.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(/*! ./_has */ \"./node_modules/core-js/library/modules/_has.js\");\n\nvar toObject = __webpack_require__(/*! ./_to-object */ \"./node_modules/core-js/library/modules/_to-object.js\");\n\nvar IE_PROTO = __webpack_require__(/*! ./_shared-key */ \"./node_modules/core-js/library/modules/_shared-key.js\")('IE_PROTO');\n\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n\n  return O instanceof Object ? ObjectProto : null;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-gpo.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var has = __webpack_require__(/*! ./_has */ \"./node_modules/core-js/library/modules/_has.js\");\n\nvar toIObject = __webpack_require__(/*! ./_to-iobject */ \"./node_modules/core-js/library/modules/_to-iobject.js\");\n\nvar arrayIndexOf = __webpack_require__(/*! ./_array-includes */ \"./node_modules/core-js/library/modules/_array-includes.js\")(false);\n\nvar IE_PROTO = __webpack_require__(/*! ./_shared-key */ \"./node_modules/core-js/library/modules/_shared-key.js\")('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  } // Don't enum bug & hidden keys\n\n\n  while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-keys.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(/*! ./_object-keys-internal */ \"./node_modules/core-js/library/modules/_object-keys-internal.js\");\n\nvar enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ \"./node_modules/core-js/library/modules/_enum-bug-keys.js\");\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-keys.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-pie.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.f = {}.propertyIsEnumerable;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-pie.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_object-sap.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// most Object methods by ES6 should accept primitives\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\nvar core = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar fails = __webpack_require__(/*! ./_fails */ \"./node_modules/core-js/library/modules/_fails.js\");\n\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () {\n    fn(1);\n  }), 'Object', exp);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_object-sap.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_perform.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_perform.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_perform.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_promise-resolve.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_promise-resolve.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/core-js/library/modules/_is-object.js\");\n\nvar newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ \"./node_modules/core-js/library/modules/_new-promise-capability.js\");\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_promise-resolve.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_property-desc.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_property-desc.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine-all.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine-all.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var hide = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\");\n\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];else hide(target, key, src[key]);\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_redefine-all.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_redefine.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\");\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_redefine.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-species.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-species.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar core = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar dP = __webpack_require__(/*! ./_object-dp */ \"./node_modules/core-js/library/modules/_object-dp.js\");\n\nvar DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ \"./node_modules/core-js/library/modules/_descriptors.js\");\n\nvar SPECIES = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-species.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var def = __webpack_require__(/*! ./_object-dp */ \"./node_modules/core-js/library/modules/_object-dp.js\").f;\n\nvar has = __webpack_require__(/*! ./_has */ \"./node_modules/core-js/library/modules/_has.js\");\n\nvar TAG = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared-key.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var shared = __webpack_require__(/*! ./_shared */ \"./node_modules/core-js/library/modules/_shared.js\")('keys');\n\nvar uid = __webpack_require__(/*! ./_uid */ \"./node_modules/core-js/library/modules/_uid.js\");\n\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared-key.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var core = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(/*! ./_library */ \"./node_modules/core-js/library/modules/_library.js\") ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_shared.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_species-constructor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_species-constructor.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = __webpack_require__(/*! ./_an-object */ \"./node_modules/core-js/library/modules/_an-object.js\");\n\nvar aFunction = __webpack_require__(/*! ./_a-function */ \"./node_modules/core-js/library/modules/_a-function.js\");\n\nvar SPECIES = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('species');\n\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_species-constructor.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_string-at.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/core-js/library/modules/_to-integer.js\");\n\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/core-js/library/modules/_defined.js\"); // true  -> String#at\n// false -> String#codePointAt\n\n\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_string-at.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_task.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_task.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/core-js/library/modules/_ctx.js\");\n\nvar invoke = __webpack_require__(/*! ./_invoke */ \"./node_modules/core-js/library/modules/_invoke.js\");\n\nvar html = __webpack_require__(/*! ./_html */ \"./node_modules/core-js/library/modules/_html.js\");\n\nvar cel = __webpack_require__(/*! ./_dom-create */ \"./node_modules/core-js/library/modules/_dom-create.js\");\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\n\nvar run = function run() {\n  var id = +this; // eslint-disable-next-line no-prototype-builtins\n\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\n\nvar listener = function listener(event) {\n  run.call(event.data);\n}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n\n\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }\n\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n\n    defer(counter);\n    return counter;\n  };\n\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  }; // Node.js 0.8-\n\n\n  if (__webpack_require__(/*! ./_cof */ \"./node_modules/core-js/library/modules/_cof.js\")(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    }; // Sphere (JS game engine) Dispatch API\n\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    }; // Browsers with MessageChannel, includes WebWorkers\n\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers\n    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n\n    global.addEventListener('message', listener, false); // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    }; // Rest old browsers\n\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\n\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_task.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/core-js/library/modules/_to-integer.js\");\n\nvar max = Math.max;\nvar min = Math.min;\n\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-integer.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-integer.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-iobject.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(/*! ./_iobject */ \"./node_modules/core-js/library/modules/_iobject.js\");\n\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/core-js/library/modules/_defined.js\");\n\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-iobject.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-length.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(/*! ./_to-integer */ \"./node_modules/core-js/library/modules/_to-integer.js\");\n\nvar min = Math.min;\n\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-length.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-object.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(/*! ./_defined */ \"./node_modules/core-js/library/modules/_defined.js\");\n\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-object.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_to-primitive.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/core-js/library/modules/_is-object.js\"); // instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\n\n\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_to-primitive.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_uid.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var id = 0;\nvar px = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_uid.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_user-agent.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar navigator = global.navigator;\nmodule.exports = navigator && navigator.userAgent || '';\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_user-agent.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/_wks.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var store = __webpack_require__(/*! ./_shared */ \"./node_modules/core-js/library/modules/_shared.js\")('wks');\n\nvar uid = __webpack_require__(/*! ./_uid */ \"./node_modules/core-js/library/modules/_uid.js\");\n\nvar _Symbol = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\").Symbol;\n\nvar USE_SYMBOL = typeof _Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/_wks.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/core.get-iterator-method.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var classof = __webpack_require__(/*! ./_classof */ \"./node_modules/core-js/library/modules/_classof.js\");\n\nvar ITERATOR = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('iterator');\n\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/library/modules/_iterators.js\");\n\nmodule.exports = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\").getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ \"./node_modules/core-js/library/modules/_add-to-unscopables.js\");\n\nvar step = __webpack_require__(/*! ./_iter-step */ \"./node_modules/core-js/library/modules/_iter-step.js\");\n\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/library/modules/_iterators.js\");\n\nvar toIObject = __webpack_require__(/*! ./_to-iobject */ \"./node_modules/core-js/library/modules/_to-iobject.js\"); // 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\n\n\nmodule.exports = __webpack_require__(/*! ./_iter-define */ \"./node_modules/core-js/library/modules/_iter-define.js\")(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n\n  this._i = 0; // next index\n\n  this._k = kind; // kind\n  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.3.1 Object.assign(target, source)\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\n$export($export.S + $export.F, 'Object', {\n  assign: __webpack_require__(/*! ./_object-assign */ \"./node_modules/core-js/library/modules/_object-assign.js\")\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.assign.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.keys.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// 19.1.2.14 Object.keys(O)\nvar toObject = __webpack_require__(/*! ./_to-object */ \"./node_modules/core-js/library/modules/_to-object.js\");\n\nvar $keys = __webpack_require__(/*! ./_object-keys */ \"./node_modules/core-js/library/modules/_object-keys.js\");\n\n__webpack_require__(/*! ./_object-sap */ \"./node_modules/core-js/library/modules/_object-sap.js\")('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.keys.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.object.to-string.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.promise.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.promise.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar LIBRARY = __webpack_require__(/*! ./_library */ \"./node_modules/core-js/library/modules/_library.js\");\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar ctx = __webpack_require__(/*! ./_ctx */ \"./node_modules/core-js/library/modules/_ctx.js\");\n\nvar classof = __webpack_require__(/*! ./_classof */ \"./node_modules/core-js/library/modules/_classof.js\");\n\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\nvar isObject = __webpack_require__(/*! ./_is-object */ \"./node_modules/core-js/library/modules/_is-object.js\");\n\nvar aFunction = __webpack_require__(/*! ./_a-function */ \"./node_modules/core-js/library/modules/_a-function.js\");\n\nvar anInstance = __webpack_require__(/*! ./_an-instance */ \"./node_modules/core-js/library/modules/_an-instance.js\");\n\nvar forOf = __webpack_require__(/*! ./_for-of */ \"./node_modules/core-js/library/modules/_for-of.js\");\n\nvar speciesConstructor = __webpack_require__(/*! ./_species-constructor */ \"./node_modules/core-js/library/modules/_species-constructor.js\");\n\nvar task = __webpack_require__(/*! ./_task */ \"./node_modules/core-js/library/modules/_task.js\").set;\n\nvar microtask = __webpack_require__(/*! ./_microtask */ \"./node_modules/core-js/library/modules/_microtask.js\")();\n\nvar newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ \"./node_modules/core-js/library/modules/_new-promise-capability.js\");\n\nvar perform = __webpack_require__(/*! ./_perform */ \"./node_modules/core-js/library/modules/_perform.js\");\n\nvar userAgent = __webpack_require__(/*! ./_user-agent */ \"./node_modules/core-js/library/modules/_user-agent.js\");\n\nvar promiseResolve = __webpack_require__(/*! ./_promise-resolve */ \"./node_modules/core-js/library/modules/_promise-resolve.js\");\n\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\n\nvar empty = function empty() {\n  /* empty */\n};\n\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n\n    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('species')] = function (exec) {\n      exec(empty, empty);\n    }; // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n\n\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // we can't detect it synchronously, so just check versions\n    && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) {\n    /* empty */\n  }\n}(); // helpers\n\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\n\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n\n    while (chain.length > i) {\n      run(chain[i++]);\n    } // variable length - can't use forEach\n\n\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\n\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\n\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\n\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\n\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\n\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        }; // wrap\n\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e); // wrap\n  }\n}; // constructor polyfill\n\n\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  Internal = function Promise(executor) {\n    this._c = []; // <- awaiting reactions\n\n    this._a = undefined; // <- checked in isUnhandled reactions\n\n    this._s = 0; // <- state\n\n    this._d = false; // <- done\n\n    this._v = undefined; // <- value\n\n    this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n\n    this._n = false; // <- notify\n  };\n\n  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ \"./node_modules/core-js/library/modules/_redefine-all.js\")($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n\n      this._c.push(reaction);\n\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, {\n  Promise: $Promise\n});\n\n__webpack_require__(/*! ./_set-to-string-tag */ \"./node_modules/core-js/library/modules/_set-to-string-tag.js\")($Promise, PROMISE);\n\n__webpack_require__(/*! ./_set-species */ \"./node_modules/core-js/library/modules/_set-species.js\")(PROMISE);\n\nWrapper = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\")[PROMISE]; // statics\n\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ \"./node_modules/core-js/library/modules/_iter-detect.js\")(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.promise.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar $at = __webpack_require__(/*! ./_string-at */ \"./node_modules/core-js/library/modules/_string-at.js\")(true); // 21.1.3.27 String.prototype[@@iterator]()\n\n\n__webpack_require__(/*! ./_iter-define */ \"./node_modules/core-js/library/modules/_iter-define.js\")(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n\n  this._i = 0; // next index\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.finally.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// https://github.com/tc39/proposal-promise-finally\n\n\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\nvar core = __webpack_require__(/*! ./_core */ \"./node_modules/core-js/library/modules/_core.js\");\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar speciesConstructor = __webpack_require__(/*! ./_species-constructor */ \"./node_modules/core-js/library/modules/_species-constructor.js\");\n\nvar promiseResolve = __webpack_require__(/*! ./_promise-resolve */ \"./node_modules/core-js/library/modules/_promise-resolve.js\");\n\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.promise.finally.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/es7.promise.try.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.try.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // https://github.com/tc39/proposal-promise-try\n\nvar $export = __webpack_require__(/*! ./_export */ \"./node_modules/core-js/library/modules/_export.js\");\n\nvar newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ \"./node_modules/core-js/library/modules/_new-promise-capability.js\");\n\nvar perform = __webpack_require__(/*! ./_perform */ \"./node_modules/core-js/library/modules/_perform.js\");\n\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/es7.promise.try.js?");

/***/ }),

/***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./es6.array.iterator */ \"./node_modules/core-js/library/modules/es6.array.iterator.js\");\n\nvar global = __webpack_require__(/*! ./_global */ \"./node_modules/core-js/library/modules/_global.js\");\n\nvar hide = __webpack_require__(/*! ./_hide */ \"./node_modules/core-js/library/modules/_hide.js\");\n\nvar Iterators = __webpack_require__(/*! ./_iterators */ \"./node_modules/core-js/library/modules/_iterators.js\");\n\nvar TO_STRING_TAG = __webpack_require__(/*! ./_wks */ \"./node_modules/core-js/library/modules/_wks.js\")('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n//# sourceURL=webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js?");

/***/ }),

/***/ "./node_modules/deep-eql/index.js":
/*!****************************************!*\
  !*** ./node_modules/deep-eql/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar type = __webpack_require__(/*! type-detect */ \"./node_modules/type-detect/type-detect.js\");\n\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true\n      });\n    }\n  }\n};\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\n\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n\n  return null;\n}\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\n\n\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n/*!\n * Primary Export\n */\n\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\n\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n\n  if (simpleResult !== null) {\n    return simpleResult;\n  } // Deeper comparisons are pushed through to a larger function\n\n\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\n\n\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  } // handle NaN cases\n\n\n  if (leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n  rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n      return true;\n    } // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n\n\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n\n  return null;\n}\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\n\n\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator; // Check if a memoized result exists.\n\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  } // If a comparator is present, use it.\n\n\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand); // Comparators may return null, in which case we want to go back to default behavior.\n\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    } // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n\n\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  } // Temporarily set the operands in the memoize object to prevent blowing the stack\n\n\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([key, value]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([key, value]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n\n  if (length === 0) {\n    return true;\n  }\n\n  var index = -1;\n\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\n\n\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' && _typeof(target) === 'object' && typeof Symbol.iterator !== 'undefined' && typeof target[Symbol.iterator] === 'function';\n}\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\n\n\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n\n  return [];\n}\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\n\n\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [generatorResult.value];\n\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n\n  return accumulator;\n}\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\n\n\nfunction getEnumerableKeys(target) {\n  var keys = [];\n\n  for (var key in target) {\n    keys.push(key);\n  }\n\n  return keys;\n}\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\n\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n\n  if (length === 0) {\n    return true;\n  }\n\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 && leftHandEntries.length === 0 && rightHandKeys.length === 0 && rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\n\n\nfunction isPrimitive(value) {\n  return value === null || _typeof(value) !== 'object';\n}\n\n//# sourceURL=webpack:///./node_modules/deep-eql/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-abi/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ethjs-abi/lib/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n/* eslint-disable */\n\nvar utils = __webpack_require__(/*! ./utils/index.js */ \"./node_modules/ethjs-abi/lib/utils/index.js\");\n\nvar uint256Coder = utils.uint256Coder;\nvar coderBoolean = utils.coderBoolean;\nvar coderFixedBytes = utils.coderFixedBytes;\nvar coderAddress = utils.coderAddress;\nvar coderDynamicBytes = utils.coderDynamicBytes;\nvar coderString = utils.coderString;\nvar coderArray = utils.coderArray;\nvar paramTypePart = utils.paramTypePart;\nvar getParamCoder = utils.getParamCoder;\n\nfunction Result() {}\n\nfunction encodeParams(types, values) {\n  if (types.length !== values.length) {\n    throw new Error('[ethjs-abi] while encoding params, types/values mismatch, Your contract requires ' + types.length + ' types (arguments), and you passed in ' + values.length);\n  }\n\n  var parts = [];\n  types.forEach(function (type, index) {\n    var coder = getParamCoder(type);\n    parts.push({\n      dynamic: coder.dynamic,\n      value: coder.encode(values[index])\n    });\n  });\n\n  function alignSize(size) {\n    return parseInt(32 * Math.ceil(size / 32));\n  }\n\n  var staticSize = 0,\n      dynamicSize = 0;\n  parts.forEach(function (part) {\n    if (part.dynamic) {\n      staticSize += 32;\n      dynamicSize += alignSize(part.value.length);\n    } else {\n      staticSize += alignSize(part.value.length);\n    }\n  });\n  var offset = 0,\n      dynamicOffset = staticSize;\n  var data = new Buffer(staticSize + dynamicSize);\n  parts.forEach(function (part, index) {\n    if (part.dynamic) {\n      uint256Coder.encode(dynamicOffset).copy(data, offset);\n      offset += 32;\n      part.value.copy(data, dynamicOffset);\n      dynamicOffset += alignSize(part.value.length);\n    } else {\n      part.value.copy(data, offset);\n      offset += alignSize(part.value.length);\n    }\n  });\n  return '0x' + data.toString('hex');\n} // decode bytecode data from output names and types\n\n\nfunction decodeParams(names, types, data) {\n  var useNumberedParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; // Names is optional, so shift over all the parameters if not provided\n\n  if (arguments.length < 3) {\n    data = types;\n    types = names;\n    names = [];\n  }\n\n  data = utils.hexOrBuffer(data);\n  var values = new Result();\n  var offset = 0;\n  types.forEach(function (type, index) {\n    var coder = getParamCoder(type);\n\n    if (coder.dynamic) {\n      var dynamicOffset = uint256Coder.decode(data, offset);\n      var result = coder.decode(data, dynamicOffset.value.toNumber());\n      offset += dynamicOffset.consumed;\n    } else {\n      var result = coder.decode(data, offset);\n      offset += result.consumed;\n    }\n\n    if (useNumberedParams) {\n      values[index] = result.value;\n    }\n\n    if (names[index]) {\n      values[names[index]] = result.value;\n    }\n  });\n  return values;\n} // create an encoded method signature from an ABI object\n\n\nfunction encodeSignature(method) {\n  var signature = method.name + '(' + utils.getKeys(method.inputs, 'type').join(',') + ')';\n  var signatureEncoded = '0x' + new Buffer(utils.keccak256(signature), 'hex').slice(0, 4).toString('hex');\n  return signatureEncoded;\n} // encode method ABI object with values in an array, output bytecode\n\n\nfunction encodeMethod(method, values) {\n  var paramsEncoded = encodeParams(utils.getKeys(method.inputs, 'type'), values).substring(2);\n  return '' + encodeSignature(method) + paramsEncoded;\n} // decode method data bytecode, from method ABI object\n\n\nfunction decodeMethod(method, data) {\n  var outputNames = utils.getKeys(method.outputs, 'name', true);\n  var outputTypes = utils.getKeys(method.outputs, 'type');\n  return decodeParams(outputNames, outputTypes, utils.hexOrBuffer(data));\n} // decode method data bytecode, from method ABI object\n\n\nfunction encodeEvent(eventObject, values) {\n  return encodeMethod(eventObject, values);\n}\n\nfunction eventSignature(eventObject) {\n  var signature = eventObject.name + '(' + utils.getKeys(eventObject.inputs, 'type').join(',') + ')';\n  return '0x' + utils.keccak256(signature);\n} // decode method data bytecode, from method ABI object\n\n\nfunction decodeEvent(eventObject, data, topics) {\n  var useNumberedParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var nonIndexed = eventObject.inputs.filter(function (input) {\n    return !input.indexed;\n  });\n  var nonIndexedNames = utils.getKeys(nonIndexed, 'name', true);\n  var nonIndexedTypes = utils.getKeys(nonIndexed, 'type');\n  var event = decodeParams(nonIndexedNames, nonIndexedTypes, utils.hexOrBuffer(data), useNumberedParams);\n  var topicOffset = eventObject.anonymous ? 0 : 1;\n  eventObject.inputs.filter(function (input) {\n    return input.indexed;\n  }).map(function (input, i) {\n    var topic = new Buffer(topics[i + topicOffset].slice(2), 'hex');\n    var coder = getParamCoder(input.type);\n    event[input.name] = coder.decode(topic, 0).value;\n  });\n  event._eventName = eventObject.name;\n  return event;\n} // Decode a specific log item with a specific event abi\n\n\nfunction decodeLogItem(eventObject, log) {\n  var useNumberedParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (eventObject && log.topics[0] === eventSignature(eventObject)) {\n    return decodeEvent(eventObject, log.data, log.topics, useNumberedParams);\n  }\n} // Create a decoder for all events defined in an abi. It returns a function which is called\n// on an array of log entries such as received from getLogs or getTransactionReceipt and parses\n// any matching log entries\n\n\nfunction logDecoder(abi) {\n  var useNumberedParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var eventMap = {};\n  abi.filter(function (item) {\n    return item.type === 'event';\n  }).map(function (item) {\n    eventMap[eventSignature(item)] = item;\n  });\n  return function (logItems) {\n    return logItems.map(function (log) {\n      return decodeLogItem(eventMap[log.topics[0]], log, useNumberedParams);\n    }).filter(function (i) {\n      return i;\n    });\n  };\n}\n\nmodule.exports = {\n  encodeParams: encodeParams,\n  decodeParams: decodeParams,\n  encodeMethod: encodeMethod,\n  decodeMethod: decodeMethod,\n  encodeEvent: encodeEvent,\n  decodeEvent: decodeEvent,\n  decodeLogItem: decodeLogItem,\n  logDecoder: logDecoder,\n  eventSignature: eventSignature,\n  encodeSignature: encodeSignature\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs-abi/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-abi/lib/utils/index.js":
/*!***************************************************!*\
  !*** ./node_modules/ethjs-abi/lib/utils/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/ethjs-abi/node_modules/bn.js/lib/bn.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar keccak256 = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\").keccak_256; // from ethereumjs-util\n\n\nfunction stripZeros(aInput) {\n  var a = aInput; // eslint-disable-line\n\n  var first = a[0]; // eslint-disable-line\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n}\n\nfunction bnToBuffer(bnInput) {\n  var bn = bnInput; // eslint-disable-line\n\n  var hex = bn.toString(16); // eslint-disable-line\n\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n\n  return stripZeros(new Buffer(hex, 'hex'));\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction hexOrBuffer(valueInput, name) {\n  var value = valueInput; // eslint-disable-line\n\n  if (!Buffer.isBuffer(value)) {\n    if (!isHexString(value)) {\n      var error = new Error(name ? '[ethjs-abi] invalid ' + name : '[ethjs-abi] invalid hex or buffer, must be a prefixed alphanumeric even length hex string');\n      error.reason = '[ethjs-abi] invalid hex string, hex must be prefixed and alphanumeric (e.g. 0x023..)';\n      error.value = value;\n      throw error;\n    }\n\n    value = value.substring(2);\n\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    value = new Buffer(value, 'hex');\n  }\n\n  return value;\n}\n\nfunction hexlify(value) {\n  if (typeof value === 'number') {\n    return '0x' + bnToBuffer(new BN(value)).toString('hex');\n  } else if (value.mod || value.modulo) {\n    return '0x' + bnToBuffer(value).toString('hex');\n  } else {\n    // eslint-disable-line\n    return '0x' + hexOrBuffer(value).toString('hex');\n  }\n} // getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n\n\nfunction getKeys(params, key, allowEmpty) {\n  var result = []; // eslint-disable-line\n\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-abi] while getting keys, invalid params value ' + JSON.stringify(params));\n  }\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('[ethjs-abi] while getKeys found invalid ABI data structure, type value not string');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction coderNumber(size, signed) {\n  return {\n    encode: function encodeNumber(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      if (_typeof(value) === 'object' && value.toString && (value.toTwos || value.dividedToIntegerBy)) {\n        value = value.toString(10).split('.')[0];\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        value = String(value).split('.')[0];\n      }\n\n      value = numberToBN(value);\n      value = value.toTwos(size * 8).maskn(size * 8);\n\n      if (signed) {\n        value = value.fromTwos(size * 8).toTwos(256);\n      }\n\n      return value.toArrayLike(Buffer, 'be', 32);\n    },\n    decode: function decodeNumber(data, offset) {\n      var junkLength = 32 - size; // eslint-disable-line\n\n      var value = new BN(data.slice(offset + junkLength, offset + 32)); // eslint-disable-line\n\n      if (signed) {\n        value = value.fromTwos(size * 8);\n      } else {\n        value = value.maskn(size * 8);\n      }\n\n      return {\n        consumed: 32,\n        value: new BN(value.toString(10))\n      };\n    }\n  };\n}\n\nvar uint256Coder = coderNumber(32, false);\nvar coderBoolean = {\n  encode: function encodeBoolean(value) {\n    return uint256Coder.encode(value ? 1 : 0);\n  },\n  decode: function decodeBoolean(data, offset) {\n    var result = uint256Coder.decode(data, offset); // eslint-disable-line\n\n    return {\n      consumed: result.consumed,\n      value: !result.value.isZero()\n    };\n  }\n};\n\nfunction coderFixedBytes(length) {\n  return {\n    encode: function encodeFixedBytes(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      value = hexOrBuffer(value);\n\n      if (value.length === 32) {\n        return value;\n      }\n\n      var result = new Buffer(32); // eslint-disable-line\n\n      result.fill(0);\n      value.copy(result);\n      return result;\n    },\n    decode: function decodeFixedBytes(data, offset) {\n      if (data.length !== 0 && data.length < offset + 32) {\n        throw new Error('[ethjs-abi] while decoding fixed bytes, invalid bytes data length: ' + length);\n      }\n\n      return {\n        consumed: 32,\n        value: '0x' + data.slice(offset, offset + length).toString('hex')\n      };\n    }\n  };\n}\n\nvar coderAddress = {\n  encode: function encodeAddress(valueInput) {\n    var value = valueInput; // eslint-disable-line\n\n    var result = new Buffer(32); // eslint-disable-line\n\n    if (!isHexString(value, 20)) {\n      throw new Error('[ethjs-abi] while encoding address, invalid address value, not alphanumeric 20 byte hex string');\n    }\n\n    value = hexOrBuffer(value);\n    result.fill(0);\n    value.copy(result, 12);\n    return result;\n  },\n  decode: function decodeAddress(data, offset) {\n    if (data.length === 0) {\n      return {\n        consumed: 32,\n        value: '0x'\n      };\n    }\n\n    if (data.length !== 0 && data.length < offset + 32) {\n      throw new Error('[ethjs-abi] while decoding address data, invalid address data, invalid byte length ' + data.length);\n    }\n\n    return {\n      consumed: 32,\n      value: '0x' + data.slice(offset + 12, offset + 32).toString('hex')\n    };\n  }\n};\n\nfunction encodeDynamicBytesHelper(value) {\n  var dataLength = parseInt(32 * Math.ceil(value.length / 32)); // eslint-disable-line\n\n  var padding = new Buffer(dataLength - value.length); // eslint-disable-line\n\n  padding.fill(0);\n  return Buffer.concat([uint256Coder.encode(value.length), value, padding]);\n}\n\nfunction decodeDynamicBytesHelper(data, offset) {\n  if (data.length !== 0 && data.length < offset + 32) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32));\n  }\n\n  var length = uint256Coder.decode(data, offset).value; // eslint-disable-line\n\n  length = length.toNumber();\n\n  if (data.length !== 0 && data.length < offset + 32 + length) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32 + length));\n  }\n\n  return {\n    consumed: parseInt(32 + 32 * Math.ceil(length / 32), 10),\n    value: data.slice(offset + 32, offset + 32 + length)\n  };\n}\n\nvar coderDynamicBytes = {\n  encode: function encodeDynamicBytes(value) {\n    return encodeDynamicBytesHelper(hexOrBuffer(value));\n  },\n  decode: function decodeDynamicBytes(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = '0x' + result.value.toString('hex');\n    return result;\n  },\n  dynamic: true\n};\nvar coderString = {\n  encode: function encodeString(value) {\n    return encodeDynamicBytesHelper(new Buffer(value, 'utf8'));\n  },\n  decode: function decodeString(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = result.value.toString('utf8');\n    return result;\n  },\n  dynamic: true\n};\n\nfunction coderArray(coder, lengthInput) {\n  return {\n    encode: function encodeArray(value) {\n      var result = new Buffer(0); // eslint-disable-line\n\n      var length = lengthInput; // eslint-disable-line\n\n      if (!Array.isArray(value)) {\n        throw new Error('[ethjs-abi] while encoding array, invalid array data, not type Object (Array)');\n      }\n\n      if (length === -1) {\n        length = value.length;\n        result = uint256Coder.encode(length);\n      }\n\n      if (length !== value.length) {\n        throw new Error('[ethjs-abi] while encoding array, size mismatch array length ' + length + ' does not equal ' + value.length);\n      }\n\n      value.forEach(function (resultValue) {\n        result = Buffer.concat([result, coder.encode(resultValue)]);\n      });\n      return result;\n    },\n    decode: function decodeArray(data, offsetInput) {\n      var length = lengthInput; // eslint-disable-line\n\n      var offset = offsetInput; // eslint-disable-line\n      // @TODO:\n      // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n      var consumed = 0; // eslint-disable-line\n\n      var decodeResult; // eslint-disable-line\n\n      if (length === -1) {\n        decodeResult = uint256Coder.decode(data, offset);\n        length = decodeResult.value.toNumber();\n        consumed += decodeResult.consumed;\n        offset += decodeResult.consumed;\n      }\n\n      var value = []; // eslint-disable-line\n\n      for (var i = 0; i < length; i++) {\n        // eslint-disable-line\n        var loopResult = coder.decode(data, offset);\n        consumed += loopResult.consumed;\n        offset += loopResult.consumed;\n        value.push(loopResult.value);\n      }\n\n      return {\n        consumed: consumed,\n        value: value\n      };\n    },\n    dynamic: lengthInput === -1\n  };\n} // Break the type up into [staticType][staticArray]*[dynamicArray]? | [dynamicType] and\n// build the coder up from its parts\n\n\nvar paramTypePart = new RegExp(/^((u?int|bytes)([0-9]*)|(address|bool|string)|(\\[([0-9]*)\\]))/);\n\nfunction getParamCoder(typeInput) {\n  var type = typeInput; // eslint-disable-line\n\n  var coder = null; // eslint-disable-line\n\n  var invalidTypeErrorMessage = '[ethjs-abi] while getting param coder (getParamCoder) type value ' + JSON.stringify(type) + ' is either invalid or unsupported by ethjs-abi.';\n\n  while (type) {\n    var part = type.match(paramTypePart); // eslint-disable-line\n\n    if (!part) {\n      throw new Error(invalidTypeErrorMessage);\n    }\n\n    type = type.substring(part[0].length);\n    var prefix = part[2] || part[4] || part[5]; // eslint-disable-line\n\n    switch (prefix) {\n      case 'int':\n      case 'uint':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var intSize = parseInt(part[3] || 256); // eslint-disable-line\n\n        if (intSize === 0 || intSize > 256 || intSize % 8 !== 0) {\n          throw new Error('[ethjs-abi] while getting param coder for type ' + type + ', invalid ' + prefix + '<N> width: ' + type);\n        }\n\n        coder = coderNumber(intSize / 8, prefix === 'int');\n        break;\n\n      case 'bool':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderBoolean;\n        break;\n\n      case 'string':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderString;\n        break;\n\n      case 'bytes':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        if (part[3]) {\n          var size = parseInt(part[3]); // eslint-disable-line\n\n          if (size === 0 || size > 32) {\n            throw new Error('[ethjs-abi] while getting param coder for prefix bytes, invalid type ' + type + ', size ' + size + ' should be 0 or greater than 32');\n          }\n\n          coder = coderFixedBytes(size);\n        } else {\n          coder = coderDynamicBytes;\n        }\n\n        break;\n\n      case 'address':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderAddress;\n        break;\n\n      case '[]':\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderArray(coder, -1);\n        break;\n      // \"[0-9+]\"\n\n      default:\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var defaultSize = parseInt(part[6]); // eslint-disable-line\n\n        coder = coderArray(coder, defaultSize);\n    }\n  }\n\n  if (!coder) {\n    throw new Error(invalidTypeErrorMessage);\n  }\n\n  return coder;\n}\n\nmodule.exports = {\n  BN: BN,\n  bnToBuffer: bnToBuffer,\n  isHexString: isHexString,\n  hexOrBuffer: hexOrBuffer,\n  hexlify: hexlify,\n  stripZeros: stripZeros,\n  keccak256: keccak256,\n  getKeys: getKeys,\n  numberToBN: numberToBN,\n  coderNumber: coderNumber,\n  uint256Coder: uint256Coder,\n  coderBoolean: coderBoolean,\n  coderFixedBytes: coderFixedBytes,\n  coderAddress: coderAddress,\n  coderDynamicBytes: coderDynamicBytes,\n  coderString: coderString,\n  coderArray: coderArray,\n  paramTypePart: paramTypePart,\n  getParamCoder: getParamCoder\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs-abi/lib/utils/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-abi/node_modules/bn.js/lib/bn.js":
/*!*************************************************************!*\
  !*** ./node_modules/ethjs-abi/node_modules/bn.js/lib/bn.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/browserfs/dist/shims/buffer.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/ethjs-abi/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/lib/contract.js":
/*!*****************************************************!*\
  !*** ./node_modules/ethjs-contract/lib/contract.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _regenerator = __webpack_require__(/*! babel-runtime/regenerator */ \"./node_modules/babel-runtime/regenerator/index.js\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _stringify = __webpack_require__(/*! babel-runtime/core-js/json/stringify */ \"./node_modules/babel-runtime/core-js/json/stringify.js\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _asyncToGenerator2 = __webpack_require__(/*! babel-runtime/helpers/asyncToGenerator */ \"./node_modules/babel-runtime/helpers/asyncToGenerator.js\");\n\nvar _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);\n\nvar _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ \"./node_modules/babel-runtime/core-js/object/assign.js\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar abi = __webpack_require__(/*! ethjs-abi */ \"./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/index.js\"); // eslint-disable-line\n\n\nvar EthFilter = __webpack_require__(/*! ethjs-filter */ \"./node_modules/ethjs-filter/lib/index.js\"); // eslint-disable-line\n\n\nvar getKeys = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\").getKeys; // eslint-disable-line\n\n\nvar keccak256 = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\").keccak_256; // eslint-disable-line\n\n\nvar hasTransactionObject = __webpack_require__(/*! ./has-tx-object */ \"./node_modules/ethjs-contract/lib/has-tx-object.js\");\n\nvar promiseToCallback = __webpack_require__(/*! promise-to-callback */ \"./node_modules/promise-to-callback/index.js\");\n\nmodule.exports = Contract;\n\nfunction Contract() {\n  var performCall = function () {\n    var _ref2 = (0, _asyncToGenerator3['default'])(\n    /*#__PURE__*/\n    _regenerator2['default'].mark(function _callee(_ref) {\n      var methodObject = _ref.methodObject,\n          methodArgs = _ref.methodArgs;\n      var queryMethod, providedTxObject, methodTxObject, queryResult, decodedMethodResult, decodingError;\n      return _regenerator2['default'].wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              queryMethod = 'call'; // eslint-disable-line\n\n              providedTxObject = {}; // eslint-disable-line\n\n              if (hasTransactionObject(methodArgs)) providedTxObject = methodArgs.pop();\n              methodTxObject = (0, _assign2['default'])({}, self.defaultTxObject, providedTxObject, {\n                to: self.address\n              });\n              methodTxObject.data = abi.encodeMethod(methodObject, methodArgs);\n\n              if (methodObject.constant === false) {\n                queryMethod = 'sendTransaction';\n              }\n\n              _context.next = 8;\n              return self.query[queryMethod](methodTxObject);\n\n            case 8:\n              queryResult = _context.sent;\n\n              if (!(queryMethod === 'call')) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 10;\n              decodedMethodResult = abi.decodeMethod(methodObject, queryResult);\n              return _context.abrupt('return', decodedMethodResult);\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context['catch'](10);\n              decodingError = new Error('[ethjs-contract] while formatting incoming raw call data ' + (0, _stringify2['default'])(queryResult) + ' ' + _context.t0);\n              throw decodingError;\n\n            case 19:\n              return _context.abrupt('return', queryResult);\n\n            case 20:\n            case 'end':\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[10, 15]]);\n    }));\n\n    return function performCall(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var self = this;\n  self.abi = opts.contractABI || [];\n  self.query = opts.query;\n  self.address = opts.address || '0x';\n  self.bytecode = opts.contractBytecode || '0x';\n  self.defaultTxObject = opts.contractDefaultTxObject || {};\n  self.filters = new EthFilter(self.query);\n  getCallableMethodsFromABI(self.abi).forEach(function (methodObject) {\n    if (methodObject.type === 'function') {\n      self[methodObject.name] = createContractFunction(methodObject);\n    } else if (methodObject.type === 'event') {\n      self[methodObject.name] = createContractEvent(methodObject);\n    }\n  });\n\n  function createContractEvent(methodObject) {\n    return function contractEvent() {\n      var methodArgs = [].slice.call(arguments); // eslint-disable-line\n\n      var filterInputTypes = getKeys(methodObject.inputs, 'type', false);\n      var filterTopic = '0x' + keccak256(methodObject.name + '(' + filterInputTypes.join(',') + ')');\n      var filterTopcis = [filterTopic];\n      var argsObject = (0, _assign2['default'])({}, methodArgs[0]) || {};\n      var defaultFilterObject = (0, _assign2['default'])({}, methodArgs[0] || {}, {\n        to: self.address,\n        topics: filterTopcis\n      });\n      var filterOpts = (0, _assign2['default'])({}, argsObject, {\n        decoder: function decoder(logData) {\n          return abi.decodeEvent(methodObject, logData, filterTopcis);\n        },\n        defaultFilterObject: defaultFilterObject\n      });\n      return new self.filters.Filter(filterOpts);\n    };\n  }\n\n  function createContractFunction(methodObject) {\n    return function contractFunction() {\n      var methodCallback = void 0; // eslint-disable-line\n\n      var methodArgs = [].slice.call(arguments); // eslint-disable-line\n\n      if (typeof methodArgs[methodArgs.length - 1] === 'function') {\n        methodCallback = methodArgs.pop();\n      }\n\n      var promise = performCall({\n        methodObject: methodObject,\n        methodArgs: methodArgs\n      });\n\n      if (methodCallback) {\n        return promiseToCallback(promise)(methodCallback);\n      }\n\n      return promise;\n    };\n  }\n}\n\nfunction getCallableMethodsFromABI(contractABI) {\n  return contractABI.filter(function (json) {\n    return (json.type === 'function' || json.type === 'event') && json.name.length > 0;\n  });\n}\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/lib/contract.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/lib/has-tx-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/ethjs-contract/lib/has-tx-object.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _keys = __webpack_require__(/*! babel-runtime/core-js/object/keys */ \"./node_modules/babel-runtime/core-js/object/keys.js\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar txObjectProperties = ['from', 'to', 'data', 'value', 'gasPrice', 'gas'];\nmodule.exports = hasTransactionObject;\n\nfunction hasTransactionObject(args) {\n  // bad/empty args: bad\n  if (!Array.isArray(args) || args.length === 0) {\n    return false;\n  }\n\n  var lastArg = args[args.length - 1]; // missing or non-object: bad\n\n  if (!lastArg) return false;\n\n  if (_typeof(lastArg) !== 'object') {\n    return false;\n  } // empty object: good\n\n\n  if ((0, _keys2['default'])(lastArg).length === 0) {\n    return true;\n  } // txParams object: good\n\n\n  var keys = (0, _keys2['default'])(lastArg);\n  var hasMatchingKeys = txObjectProperties.some(function (value) {\n    return keys.includes(value);\n  });\n\n  if (hasMatchingKeys) {\n    return true;\n  } // no match\n\n\n  return false;\n}\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/lib/has-tx-object.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/ethjs-contract/lib/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _assign = __webpack_require__(/*! babel-runtime/core-js/object/assign */ \"./node_modules/babel-runtime/core-js/object/assign.js\");\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar abi = __webpack_require__(/*! ethjs-abi */ \"./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/index.js\"); // eslint-disable-line\n\n\nvar keccak256 = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\").keccak_256; // eslint-disable-line\n\n\nvar EthFilter = __webpack_require__(/*! ethjs-filter */ \"./node_modules/ethjs-filter/lib/index.js\"); // eslint-disable-line\n\n\nvar getKeys = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\").getKeys; // eslint-disable-line\n\n\nvar Contract = __webpack_require__(/*! ./contract */ \"./node_modules/ethjs-contract/lib/contract.js\");\n\nvar hasTransactionObject = __webpack_require__(/*! ./has-tx-object */ \"./node_modules/ethjs-contract/lib/has-tx-object.js\");\n\nmodule.exports = EthContract;\n\nfunction EthContract(query) {\n  return function contractFactory(contractABI, contractBytecode, contractDefaultTxObject) {\n    // validate params\n    if (!Array.isArray(contractABI)) {\n      throw new Error('[ethjs-contract] Contract ABI must be type Array, got type ' + _typeof(contractABI));\n    }\n\n    if (typeof contractBytecode !== 'undefined' && typeof contractBytecode !== 'string') {\n      throw new Error('[ethjs-contract] Contract bytecode must be type String, got type ' + _typeof(contractBytecode));\n    }\n\n    if (typeof contractDefaultTxObject !== 'undefined' && _typeof(contractDefaultTxObject) !== 'object') {\n      throw new Error('[ethjs-contract] Contract default tx object must be type Object, got type ' + _typeof(contractABI));\n    } // build contract object\n\n\n    var output = {};\n\n    output.at = function contractAtAddress(address) {\n      return new Contract({\n        address: address,\n        query: query,\n        contractBytecode: contractBytecode,\n        contractDefaultTxObject: contractDefaultTxObject,\n        contractABI: contractABI\n      });\n    };\n\n    output['new'] = function newContract() {\n      var providedTxObject = {}; // eslint-disable-line\n\n      var newMethodCallback = null; // eslint-disable-line\n\n      var newMethodArgs = [].slice.call(arguments); // eslint-disable-line\n\n      if (typeof newMethodArgs[newMethodArgs.length - 1] === 'function') newMethodCallback = newMethodArgs.pop();\n      if (hasTransactionObject(newMethodArgs)) providedTxObject = newMethodArgs.pop();\n      var constructorMethod = getConstructorFromABI(contractABI);\n      var assembleTxObject = (0, _assign2['default'])({}, contractDefaultTxObject, providedTxObject); // set contract deploy bytecode\n\n      if (contractBytecode) {\n        assembleTxObject.data = contractBytecode;\n      } // append encoded constructor arguments\n\n\n      if (constructorMethod) {\n        var constructorBytecode = abi.encodeParams(getKeys(constructorMethod.inputs, 'type'), newMethodArgs).substring(2); // eslint-disable-line\n\n        assembleTxObject.data = '' + assembleTxObject.data + constructorBytecode;\n      }\n\n      return newMethodCallback ? query.sendTransaction(assembleTxObject, newMethodCallback) : query.sendTransaction(assembleTxObject);\n    };\n\n    return output;\n  };\n}\n\nfunction getConstructorFromABI(contractABI) {\n  return contractABI.filter(function (json) {\n    return json.type === 'constructor';\n  })[0];\n}\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/node_modules/bn.js/lib/bn.js":
/*!******************************************************************!*\
  !*** ./node_modules/ethjs-contract/node_modules/bn.js/lib/bn.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/browserfs/dist/shims/buffer.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n/* eslint-disable */\n\nvar utils = __webpack_require__(/*! ./utils/index.js */ \"./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/utils/index.js\");\n\nvar uint256Coder = utils.uint256Coder;\nvar coderBoolean = utils.coderBoolean;\nvar coderFixedBytes = utils.coderFixedBytes;\nvar coderAddress = utils.coderAddress;\nvar coderDynamicBytes = utils.coderDynamicBytes;\nvar coderString = utils.coderString;\nvar coderArray = utils.coderArray;\nvar paramTypePart = utils.paramTypePart;\nvar getParamCoder = utils.getParamCoder;\n\nfunction Result() {}\n\nfunction encodeParams(types, values) {\n  if (types.length !== values.length) {\n    throw new Error('[ethjs-abi] while encoding params, types/values mismatch, Your contract requires ' + types.length + ' types (arguments), and you passed in ' + values.length);\n  }\n\n  var parts = [];\n  types.forEach(function (type, index) {\n    var coder = getParamCoder(type);\n    parts.push({\n      dynamic: coder.dynamic,\n      value: coder.encode(values[index])\n    });\n  });\n\n  function alignSize(size) {\n    return parseInt(32 * Math.ceil(size / 32));\n  }\n\n  var staticSize = 0,\n      dynamicSize = 0;\n  parts.forEach(function (part) {\n    if (part.dynamic) {\n      staticSize += 32;\n      dynamicSize += alignSize(part.value.length);\n    } else {\n      staticSize += alignSize(part.value.length);\n    }\n  });\n  var offset = 0,\n      dynamicOffset = staticSize;\n  var data = new Buffer(staticSize + dynamicSize);\n  parts.forEach(function (part, index) {\n    if (part.dynamic) {\n      uint256Coder.encode(dynamicOffset).copy(data, offset);\n      offset += 32;\n      part.value.copy(data, dynamicOffset);\n      dynamicOffset += alignSize(part.value.length);\n    } else {\n      part.value.copy(data, offset);\n      offset += alignSize(part.value.length);\n    }\n  });\n  return '0x' + data.toString('hex');\n} // decode bytecode data from output names and types\n\n\nfunction decodeParams(names, types, data) {\n  var useNumberedParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true; // Names is optional, so shift over all the parameters if not provided\n\n  if (arguments.length < 3) {\n    data = types;\n    types = names;\n    names = [];\n  }\n\n  data = utils.hexOrBuffer(data);\n  var values = new Result();\n  var offset = 0;\n  types.forEach(function (type, index) {\n    var coder = getParamCoder(type);\n\n    if (coder.dynamic) {\n      var dynamicOffset = uint256Coder.decode(data, offset);\n      var result = coder.decode(data, dynamicOffset.value.toNumber());\n      offset += dynamicOffset.consumed;\n    } else {\n      var result = coder.decode(data, offset);\n      offset += result.consumed;\n    }\n\n    if (useNumberedParams) values[index] = result.value;\n\n    if (names[index]) {\n      values[names[index]] = result.value;\n    }\n  });\n  return values;\n} // encode method ABI object with values in an array, output bytecode\n\n\nfunction encodeMethod(method, values) {\n  var signature = method.name + '(' + utils.getKeys(method.inputs, 'type').join(',') + ')';\n  var signatureEncoded = '0x' + new Buffer(utils.keccak256(signature), 'hex').slice(0, 4).toString('hex');\n  var paramsEncoded = encodeParams(utils.getKeys(method.inputs, 'type'), values).substring(2);\n  return '' + signatureEncoded + paramsEncoded;\n} // decode method data bytecode, from method ABI object\n\n\nfunction decodeMethod(method, data) {\n  var outputNames = utils.getKeys(method.outputs, 'name', true);\n  var outputTypes = utils.getKeys(method.outputs, 'type');\n  return decodeParams(outputNames, outputTypes, utils.hexOrBuffer(data));\n} // decode method data bytecode, from method ABI object\n\n\nfunction encodeEvent(eventObject, values) {\n  return encodeMethod(eventObject, values);\n}\n\nfunction eventSignature(eventObject) {\n  var signature = eventObject.name + '(' + utils.getKeys(eventObject.inputs, 'type').join(',') + ')';\n  return '0x' + utils.keccak256(signature);\n} // decode method data bytecode, from method ABI object\n\n\nfunction decodeEvent(eventObject, data, topics) {\n  var useNumberedParams = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var nonIndexed = eventObject.inputs.filter(function (input) {\n    return !input.indexed;\n  });\n  var nonIndexedNames = utils.getKeys(nonIndexed, 'name', true);\n  var nonIndexedTypes = utils.getKeys(nonIndexed, 'type');\n  var event = decodeParams(nonIndexedNames, nonIndexedTypes, utils.hexOrBuffer(data), useNumberedParams);\n  var topicOffset = eventObject.anonymous ? 0 : 1;\n  eventObject.inputs.filter(function (input) {\n    return input.indexed;\n  }).map(function (input, i) {\n    var topic = new Buffer(topics[i + topicOffset].slice(2), 'hex');\n    var coder = getParamCoder(input.type);\n    event[input.name] = coder.decode(topic, 0).value;\n  });\n  event._eventName = eventObject.name;\n  return event;\n} // Decode a specific log item with a specific event abi\n\n\nfunction decodeLogItem(eventObject, log) {\n  var useNumberedParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (eventObject && log.topics[0] === eventSignature(eventObject)) {\n    return decodeEvent(eventObject, log.data, log.topics, useNumberedParams);\n  }\n} // Create a decoder for all events defined in an abi. It returns a function which is called\n// on an array of log entries such as received from getLogs or getTransactionReceipt and parses\n// any matching log entries\n\n\nfunction logDecoder(abi) {\n  var useNumberedParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var eventMap = {};\n  abi.filter(function (item) {\n    return item.type === 'event';\n  }).map(function (item) {\n    eventMap[eventSignature(item)] = item;\n  });\n  return function (logItems) {\n    return logItems.map(function (log) {\n      return decodeLogItem(eventMap[log.topics[0]], log, useNumberedParams);\n    }).filter(function (i) {\n      return i;\n    });\n  };\n}\n\nmodule.exports = {\n  encodeParams: encodeParams,\n  decodeParams: decodeParams,\n  encodeMethod: encodeMethod,\n  decodeMethod: decodeMethod,\n  encodeEvent: encodeEvent,\n  decodeEvent: decodeEvent,\n  decodeLogItem: decodeLogItem,\n  logDecoder: logDecoder,\n  eventSignature: eventSignature\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/utils/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/utils/index.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/ethjs-contract/node_modules/bn.js/lib/bn.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar keccak256 = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\").keccak_256; // from ethereumjs-util\n\n\nfunction stripZeros(aInput) {\n  var a = aInput; // eslint-disable-line\n\n  var first = a[0]; // eslint-disable-line\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n}\n\nfunction bnToBuffer(bnInput) {\n  var bn = bnInput; // eslint-disable-line\n\n  var hex = bn.toString(16); // eslint-disable-line\n\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n\n  return stripZeros(new Buffer(hex, 'hex'));\n}\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction hexOrBuffer(valueInput, name) {\n  var value = valueInput; // eslint-disable-line\n\n  if (!Buffer.isBuffer(value)) {\n    if (!isHexString(value)) {\n      var error = new Error(name ? '[ethjs-abi] invalid ' + name : '[ethjs-abi] invalid hex or buffer, must be a prefixed alphanumeric even length hex string');\n      error.reason = '[ethjs-abi] invalid hex string, hex must be prefixed and alphanumeric (e.g. 0x023..)';\n      error.value = value;\n      throw error;\n    }\n\n    value = value.substring(2);\n\n    if (value.length % 2) {\n      value = '0' + value;\n    }\n\n    value = new Buffer(value, 'hex');\n  }\n\n  return value;\n}\n\nfunction hexlify(value) {\n  if (typeof value === 'number') {\n    return '0x' + bnToBuffer(new BN(value)).toString('hex');\n  } else if (value.mod || value.modulo) {\n    return '0x' + bnToBuffer(value).toString('hex');\n  } else {\n    // eslint-disable-line\n    return '0x' + hexOrBuffer(value).toString('hex');\n  }\n} // getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n\n\nfunction getKeys(params, key, allowEmpty) {\n  var result = []; // eslint-disable-line\n\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-abi] while getting keys, invalid params value ' + JSON.stringify(params));\n  }\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('[ethjs-abi] while getKeys found invalid ABI data structure, type value not string');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction coderNumber(size, signed) {\n  return {\n    encode: function encodeNumber(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      if (_typeof(value) === 'object' && value.toString && (value.toTwos || value.dividedToIntegerBy)) {\n        value = value.toString(10).split('.')[0];\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        value = String(value).split('.')[0];\n      }\n\n      value = numberToBN(value);\n      value = value.toTwos(size * 8).maskn(size * 8);\n\n      if (signed) {\n        value = value.fromTwos(size * 8).toTwos(256);\n      }\n\n      return value.toArrayLike(Buffer, 'be', 32);\n    },\n    decode: function decodeNumber(data, offset) {\n      var junkLength = 32 - size; // eslint-disable-line\n\n      var value = new BN(data.slice(offset + junkLength, offset + 32)); // eslint-disable-line\n\n      if (signed) {\n        value = value.fromTwos(size * 8);\n      } else {\n        value = value.maskn(size * 8);\n      }\n\n      return {\n        consumed: 32,\n        value: new BN(value.toString(10))\n      };\n    }\n  };\n}\n\nvar uint256Coder = coderNumber(32, false);\nvar coderBoolean = {\n  encode: function encodeBoolean(value) {\n    return uint256Coder.encode(value ? 1 : 0);\n  },\n  decode: function decodeBoolean(data, offset) {\n    var result = uint256Coder.decode(data, offset); // eslint-disable-line\n\n    return {\n      consumed: result.consumed,\n      value: !result.value.isZero()\n    };\n  }\n};\n\nfunction coderFixedBytes(length) {\n  return {\n    encode: function encodeFixedBytes(valueInput) {\n      var value = valueInput; // eslint-disable-line\n\n      value = hexOrBuffer(value);\n\n      if (value.length === 32) {\n        return value;\n      }\n\n      var result = new Buffer(32); // eslint-disable-line\n\n      result.fill(0);\n      value.copy(result);\n      return result;\n    },\n    decode: function decodeFixedBytes(data, offset) {\n      if (data.length !== 0 && data.length < offset + 32) {\n        throw new Error('[ethjs-abi] while decoding fixed bytes, invalid bytes data length: ' + length);\n      }\n\n      return {\n        consumed: 32,\n        value: '0x' + data.slice(offset, offset + length).toString('hex')\n      };\n    }\n  };\n}\n\nvar coderAddress = {\n  encode: function encodeAddress(valueInput) {\n    var value = valueInput; // eslint-disable-line\n\n    var result = new Buffer(32); // eslint-disable-line\n\n    if (!isHexString(value, 20)) {\n      throw new Error('[ethjs-abi] while encoding address, invalid address value, not alphanumeric 20 byte hex string');\n    }\n\n    value = hexOrBuffer(value);\n    result.fill(0);\n    value.copy(result, 12);\n    return result;\n  },\n  decode: function decodeAddress(data, offset) {\n    if (data.length === 0) {\n      return {\n        consumed: 32,\n        value: '0x'\n      };\n    }\n\n    if (data.length !== 0 && data.length < offset + 32) {\n      throw new Error('[ethjs-abi] while decoding address data, invalid address data, invalid byte length ' + data.length);\n    }\n\n    return {\n      consumed: 32,\n      value: '0x' + data.slice(offset + 12, offset + 32).toString('hex')\n    };\n  }\n};\n\nfunction encodeDynamicBytesHelper(value) {\n  var dataLength = parseInt(32 * Math.ceil(value.length / 32)); // eslint-disable-line\n\n  var padding = new Buffer(dataLength - value.length); // eslint-disable-line\n\n  padding.fill(0);\n  return Buffer.concat([uint256Coder.encode(value.length), value, padding]);\n}\n\nfunction decodeDynamicBytesHelper(data, offset) {\n  if (data.length !== 0 && data.length < offset + 32) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32));\n  }\n\n  var length = uint256Coder.decode(data, offset).value; // eslint-disable-line\n\n  length = length.toNumber();\n\n  if (data.length !== 0 && data.length < offset + 32 + length) {\n    throw new Error('[ethjs-abi] while decoding dynamic bytes data, invalid bytes length: ' + data.length + ' should be less than ' + (offset + 32 + length));\n  }\n\n  return {\n    consumed: parseInt(32 + 32 * Math.ceil(length / 32), 10),\n    value: data.slice(offset + 32, offset + 32 + length)\n  };\n}\n\nvar coderDynamicBytes = {\n  encode: function encodeDynamicBytes(value) {\n    return encodeDynamicBytesHelper(hexOrBuffer(value));\n  },\n  decode: function decodeDynamicBytes(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = '0x' + result.value.toString('hex');\n    return result;\n  },\n  dynamic: true\n};\nvar coderString = {\n  encode: function encodeString(value) {\n    return encodeDynamicBytesHelper(new Buffer(value, 'utf8'));\n  },\n  decode: function decodeString(data, offset) {\n    var result = decodeDynamicBytesHelper(data, offset); // eslint-disable-line\n\n    result.value = result.value.toString('utf8');\n    return result;\n  },\n  dynamic: true\n};\n\nfunction coderArray(coder, lengthInput) {\n  return {\n    encode: function encodeArray(value) {\n      var result = new Buffer(0); // eslint-disable-line\n\n      var length = lengthInput; // eslint-disable-line\n\n      if (!Array.isArray(value)) {\n        throw new Error('[ethjs-abi] while encoding array, invalid array data, not type Object (Array)');\n      }\n\n      if (length === -1) {\n        length = value.length;\n        result = uint256Coder.encode(length);\n      }\n\n      if (length !== value.length) {\n        throw new Error('[ethjs-abi] while encoding array, size mismatch array length ' + length + ' does not equal ' + value.length);\n      }\n\n      value.forEach(function (resultValue) {\n        result = Buffer.concat([result, coder.encode(resultValue)]);\n      });\n      return result;\n    },\n    decode: function decodeArray(data, offsetInput) {\n      var length = lengthInput; // eslint-disable-line\n\n      var offset = offsetInput; // eslint-disable-line\n      // @TODO:\n      // if (data.length < offset + length * 32) { throw new Error('invalid array'); }\n\n      var consumed = 0; // eslint-disable-line\n\n      var decodeResult; // eslint-disable-line\n\n      if (length === -1) {\n        decodeResult = uint256Coder.decode(data, offset);\n        length = decodeResult.value.toNumber();\n        consumed += decodeResult.consumed;\n        offset += decodeResult.consumed;\n      }\n\n      var value = []; // eslint-disable-line\n\n      for (var i = 0; i < length; i++) {\n        // eslint-disable-line\n        var loopResult = coder.decode(data, offset);\n        consumed += loopResult.consumed;\n        offset += loopResult.consumed;\n        value.push(loopResult.value);\n      }\n\n      return {\n        consumed: consumed,\n        value: value\n      };\n    },\n    dynamic: lengthInput === -1\n  };\n} // Break the type up into [staticType][staticArray]*[dynamicArray]? | [dynamicType] and\n// build the coder up from its parts\n\n\nvar paramTypePart = new RegExp(/^((u?int|bytes)([0-9]*)|(address|bool|string)|(\\[([0-9]*)\\]))/);\n\nfunction getParamCoder(typeInput) {\n  var type = typeInput; // eslint-disable-line\n\n  var coder = null; // eslint-disable-line\n\n  var invalidTypeErrorMessage = '[ethjs-abi] while getting param coder (getParamCoder) type value ' + JSON.stringify(type) + ' is either invalid or unsupported by ethjs-abi.';\n\n  while (type) {\n    var part = type.match(paramTypePart); // eslint-disable-line\n\n    if (!part) {\n      throw new Error(invalidTypeErrorMessage);\n    }\n\n    type = type.substring(part[0].length);\n    var prefix = part[2] || part[4] || part[5]; // eslint-disable-line\n\n    switch (prefix) {\n      case 'int':\n      case 'uint':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var intSize = parseInt(part[3] || 256); // eslint-disable-line\n\n        if (intSize === 0 || intSize > 256 || intSize % 8 !== 0) {\n          throw new Error('[ethjs-abi] while getting param coder for type ' + type + ', invalid ' + prefix + '<N> width: ' + type);\n        }\n\n        coder = coderNumber(intSize / 8, prefix === 'int');\n        break;\n\n      case 'bool':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderBoolean;\n        break;\n\n      case 'string':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderString;\n        break;\n\n      case 'bytes':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        if (part[3]) {\n          var size = parseInt(part[3]); // eslint-disable-line\n\n          if (size === 0 || size > 32) {\n            throw new Error('[ethjs-abi] while getting param coder for prefix bytes, invalid type ' + type + ', size ' + size + ' should be 0 or greater than 32');\n          }\n\n          coder = coderFixedBytes(size);\n        } else {\n          coder = coderDynamicBytes;\n        }\n\n        break;\n\n      case 'address':\n        if (coder) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderAddress;\n        break;\n\n      case '[]':\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        coder = coderArray(coder, -1);\n        break;\n      // \"[0-9+]\"\n\n      default:\n        if (!coder || coder.dynamic) {\n          throw new Error(invalidTypeErrorMessage);\n        }\n\n        var defaultSize = parseInt(part[6]); // eslint-disable-line\n\n        coder = coderArray(coder, defaultSize);\n    }\n  }\n\n  if (!coder) {\n    throw new Error(invalidTypeErrorMessage);\n  }\n\n  return coder;\n}\n\nmodule.exports = {\n  BN: BN,\n  bnToBuffer: bnToBuffer,\n  isHexString: isHexString,\n  hexOrBuffer: hexOrBuffer,\n  hexlify: hexlify,\n  stripZeros: stripZeros,\n  keccak256: keccak256,\n  getKeys: getKeys,\n  numberToBN: numberToBN,\n  coderNumber: coderNumber,\n  uint256Coder: uint256Coder,\n  coderBoolean: coderBoolean,\n  coderFixedBytes: coderFixedBytes,\n  coderAddress: coderAddress,\n  coderDynamicBytes: coderDynamicBytes,\n  coderString: coderString,\n  coderArray: coderArray,\n  paramTypePart: paramTypePart,\n  getParamCoder: getParamCoder\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs-contract/node_modules/ethjs-abi/lib/utils/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-filter/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/ethjs-filter/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction constructFilter(filterName, query) {\n  function Filter(options) {\n    var self = this;\n    self.filterId = null;\n    self.options = Object.assign({\n      delay: 300,\n      decoder: function decodeData(data) {\n        return data;\n      },\n      defaultFilterObject: {}\n    }, options || {});\n    self.watchers = {};\n    self.interval = setInterval(function () {\n      if (self.filterId !== null && Object.keys(self.watchers).length > 0) {\n        query.getFilterChanges(self.filterId, function (changeError, changeResult) {\n          var decodedChangeResults = [];\n          var decodingError = null; // eslint-disable-line\n\n          if (!changeError) {\n            try {\n              changeResult.forEach(function (log, logIndex) {\n                decodedChangeResults[logIndex] = changeResult[logIndex];\n\n                if (_typeof(changeResult[logIndex]) === 'object') {\n                  decodedChangeResults[logIndex].data = self.options.decoder(decodedChangeResults[logIndex].data);\n                }\n              });\n            } catch (decodingErrorMesage) {\n              decodingError = new Error('[ethjs-filter] while decoding filter change event data from RPC \\'' + JSON.stringify(decodedChangeResults) + '\\': ' + decodingErrorMesage);\n            }\n          }\n\n          Object.keys(self.watchers).forEach(function (id) {\n            var watcher = self.watchers[id];\n\n            if (watcher.stop === true) {\n              delete self.watchers[id];\n              return;\n            }\n\n            if (decodingError) {\n              watcher.callback(decodingError, null);\n            } else {\n              if (changeError) {\n                watcher.callback(changeError, null);\n              } else if (Array.isArray(decodedChangeResults) && changeResult.length > 0) {\n                watcher.callback(changeError, decodedChangeResults);\n              }\n            }\n          });\n        });\n      }\n    }, self.options.delay);\n  }\n\n  Filter.prototype.at = function atFilter(filterId) {\n    var self = this;\n    self.filterId = filterId;\n  };\n\n  Filter.prototype.watch = function watchFilter(watchCallbackInput) {\n    var callback = watchCallbackInput || function () {}; // eslint-disable-line\n\n\n    var self = this;\n    var id = Math.random().toString(36).substring(7);\n    self.watchers[id] = {\n      callback: callback,\n      stop: false,\n      stopWatching: function stopWatching() {\n        self.watchers[id].stop = true;\n      }\n    };\n    return self.watchers[id];\n  };\n\n  Filter.prototype.uninstall = function uninstallFilter(cb) {\n    var self = this;\n    var callback = cb || null;\n    self.watchers = Object.assign({});\n    clearInterval(self.interval);\n    var prom = new Promise(function (resolve, reject) {\n      query.uninstallFilter(self.filterId, function (uninstallError, uninstallResilt) {\n        if (uninstallError) {\n          reject(uninstallError);\n        } else {\n          resolve(uninstallResilt);\n        }\n      });\n    });\n\n    if (callback) {\n      prom.then(function (res) {\n        return callback(null, res);\n      })['catch'](function (err) {\n        return callback(err, null);\n      });\n    }\n\n    return callback ? null : prom;\n  };\n\n  Filter.prototype['new'] = function newFilter() {\n    var callback = null; // eslint-disable-line\n\n    var self = this;\n    var filterInputs = [];\n    var args = [].slice.call(arguments); // eslint-disable-line\n    // pop callback if provided\n\n    if (typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    } // if a param object was presented, push that into the inputs\n\n\n    if (filterName === 'Filter') {\n      filterInputs.push(Object.assign(self.options.defaultFilterObject, args[args.length - 1] || {}));\n    }\n\n    var prom = new Promise(function (resolve, reject) {\n      // add complex callback\n      filterInputs.push(function (setupError, filterId) {\n        if (!setupError) {\n          self.filterId = filterId;\n          resolve(filterId);\n        } else {\n          reject(setupError);\n        }\n      }); // apply filter, call new.. filter method\n\n      query['new' + filterName].apply(query, filterInputs);\n    });\n\n    if (callback) {\n      prom.then(function (res) {\n        return callback(null, res);\n      })['catch'](function (err) {\n        return callback(err, null);\n      });\n    }\n\n    return callback ? null : prom;\n  };\n\n  return Filter;\n}\n/**\n * EthFilter constructor, intakes a query, helps manage filter event polling\n *\n * @method EthFilter\n * @param {Object} query the `ethjs-query` or `eth-query` object\n * @returns {Object} output an EthFilter instance\n * @throws error if new is not used\n */\n\n\nfunction EthFilter(query) {\n  var self = this;\n\n  if (!(self instanceof EthFilter)) {\n    throw new Error('the EthFilter object must be instantiated with `new` flag.. (e.g. `const filters = new EthFilter(query);`)');\n  }\n\n  if (_typeof(query) !== 'object') {\n    throw new Error('the EthFilter object must be instantiated with an EthQuery instance (e.g. `const filters = new EthFilter(new EthQuery(provider));`). See github.com/ethjs/ethjs-query for more details..');\n  }\n\n  self.Filter = constructFilter('Filter', query);\n  self.BlockFilter = constructFilter('BlockFilter', query);\n  self.PendingTransactionFilter = constructFilter('PendingTransactionFilter', query);\n} // export EthFilter\n\n\nmodule.exports = EthFilter;\n\n//# sourceURL=webpack:///./node_modules/ethjs-filter/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-format/lib/index.js":
/*!************************************************!*\
  !*** ./node_modules/ethjs-format/lib/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar schema = __webpack_require__(/*! ethjs-schema */ \"./node_modules/ethjs-schema/src/schema.json\");\n\nvar util = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n\nvar padToEven = util.padToEven;\nvar arrayContainsArray = util.arrayContainsArray;\nvar getBinarySize = util.getBinarySize;\n/**\n * Format quantity values, either encode to hex or decode to BigNumber\n * should intake null, stringNumber, number, BN\n *\n * @method formatQuantity\n * @param {String|BigNumber|Number} value quantity or tag to convert\n * @param {Boolean} encode to hex or decode to BigNumber\n * @returns {Optional} output to BigNumber or string\n * @throws error if value is a float\n */\n\nfunction formatQuantity(value, encode, pad) {\n  if (['string', 'number', 'object'].indexOf(_typeof(value)) === -1 || value === null) {\n    return value;\n  }\n\n  var numberValue = numberToBN(value);\n  var numPadding = pad && numberValue.toString(16).length % 2 ? '0' : '';\n\n  if (numberToBN(value).isNeg()) {\n    throw new Error('[ethjs-format] while formatting quantity \\'' + numberValue.toString(10) + '\\', invalid negative number. Number must be positive or zero.');\n  }\n\n  return encode ? '0x' + numPadding + numberValue.toString(16) : numberValue;\n}\n/**\n * Format quantity or tag, if tag bypass return, else format quantity\n * should intake null, stringNumber, number, BN, string tag\n *\n * @method formatQuantityOrTag\n * @param {String|BigNumber|Number} value quantity or tag to convert\n * @param {Boolean} encode encode the number to hex or decode to BigNumber\n * @returns {Object|String} output to BigNumber or string\n * @throws error if value is a float\n */\n\n\nfunction formatQuantityOrTag(value, encode) {\n  var output = value; // eslint-disable-line\n  // if the value is a tag, bypass\n\n  if (schema.tags.indexOf(value) === -1) {\n    output = formatQuantity(value, encode);\n  }\n\n  return output;\n}\n/**\n * FormatData under strict conditions hex prefix\n *\n * @method formatData\n * @param {String} value the bytes data to be formatted\n * @param {Number} byteLength the required byte length (usually 20 or 32)\n * @returns {String} output output formatted data\n * @throws error if minimum length isnt met\n */\n\n\nfunction formatData(value, byteLength) {\n  var output = value; // eslint-disable-line\n\n  var outputByteLength = 0; // eslint-disable-line\n  // prefix only under strict conditions, else bypass\n\n  if (typeof value === 'string') {\n    output = '0x' + padToEven(stripHexPrefix(value));\n    outputByteLength = getBinarySize(output);\n  } // format double padded zeros.\n\n\n  if (output === '0x00') {\n    output = '0x0';\n  } // throw if bytelength is not correct\n\n\n  if (typeof byteLength === 'number' && value !== null && output !== '0x' && output !== '0x0' // support empty values\n  && (!/^[0-9A-Fa-f]+$/.test(stripHexPrefix(output)) || outputByteLength !== 2 + byteLength * 2)) {\n    throw new Error('[ethjs-format] hex string \\'' + output + '\\' must be an alphanumeric ' + (2 + byteLength * 2) + ' utf8 byte hex (chars: a-fA-F) string, is ' + outputByteLength + ' bytes');\n  }\n\n  return output;\n}\n/**\n * Format object, even with random RPC caviets\n *\n * @method formatObject\n * @param {String|Array} formatter the unit to convert to, default ether\n * @param {Object} value the object value\n * @param {Boolean} encode encode to hex or decode to BigNumber\n * @returns {Object} output object\n * @throws error if value is a float\n */\n\n\nfunction formatObject(formatter, value, encode) {\n  var output = Object.assign({}, value); // eslint-disable-line\n\n  var formatObject = null; // eslint-disable-line\n  // if the object is a string flag, then retreive the object\n\n  if (typeof formatter === 'string') {\n    if (formatter === 'Boolean|EthSyncing') {\n      formatObject = Object.assign({}, schema.objects.EthSyncing);\n    } else if (formatter === 'DATA|Transaction') {\n      formatObject = Object.assign({}, schema.objects.Transaction);\n    } else {\n      formatObject = Object.assign({}, schema.objects[formatter]);\n    }\n  } // check if all required data keys are fulfilled\n\n\n  if (!arrayContainsArray(Object.keys(value), formatObject.__required)) {\n    // eslint-disable-line\n    throw new Error('[ethjs-format] object ' + JSON.stringify(value) + ' must contain properties: ' + formatObject.__required.join(', ')); // eslint-disable-line\n  } // assume formatObject is an object, go through keys and format each\n\n\n  Object.keys(formatObject).forEach(function (valueKey) {\n    if (valueKey !== '__required' && typeof value[valueKey] !== 'undefined') {\n      output[valueKey] = format(formatObject[valueKey], value[valueKey], encode);\n    }\n  });\n  return output;\n}\n/**\n * Format array\n *\n * @method formatArray\n * @param {String|Array} formatter the unit to convert to, default ether\n * @param {Object} value the value in question\n * @param {Boolean} encode encode to hex or decode to BigNumber\n * @param {Number} lengthRequirement the required minimum array length\n * @returns {Object} output object\n * @throws error if minimum length isnt met\n */\n\n\nfunction formatArray(formatter, value, encode, lengthRequirement) {\n  var output = value.slice(); // eslint-disable-line\n\n  var formatObject = formatter; // eslint-disable-line\n  // if the formatter is an array or data, then make format object an array data\n\n  if (formatter === 'Array|DATA') {\n    formatObject = ['D'];\n  } // if formatter is a FilterChange and acts like a BlockFilter\n  // or PendingTx change format object to tx hash array\n\n\n  if (formatter === 'FilterChange' && typeof value[0] === 'string') {\n    formatObject = ['D32'];\n  } // enforce minimum value length requirements\n\n\n  if (encode === true && typeof lengthRequirement === 'number' && value.length < lengthRequirement) {\n    throw new Error('array ' + JSON.stringify(value) + ' must contain at least ' + lengthRequirement + ' params, but only contains ' + value.length + '.'); // eslint-disable-line\n  } // make new array, avoid mutation\n\n\n  formatObject = formatObject.slice(); // assume formatObject is an object, go through keys and format each\n\n  value.forEach(function (valueKey, valueIndex) {\n    // use key zero as formatter for all values, unless otherwise specified\n    var formatObjectKey = 0; // eslint-disable-line\n    // if format array is exact, check each argument against formatter argument\n\n    if (formatObject.length > 1) {\n      formatObjectKey = valueIndex;\n    }\n\n    output[valueIndex] = format(formatObject[formatObjectKey], valueKey, encode);\n  });\n  return output;\n}\n/**\n * Format various kinds of data to RPC spec or into digestable JS objects\n *\n * @method format\n * @param {String|Array} formatter the data formatter\n * @param {String|Array|Object|Null|Number} value the data value input\n * @param {Boolean} encode encode to hex or decode to BigNumbers, Strings, Booleans, Null\n * @param {Number} lengthRequirement the minimum data length requirement\n * @throws error if minimum length isnt met\n */\n\n\nfunction format(formatter, value, encode, lengthRequirement) {\n  var output = value; // eslint-disable-line\n  // if formatter is quantity or quantity or tag\n\n  if (formatter === 'Q') {\n    output = formatQuantity(value, encode);\n  } else if (formatter === 'QP') {\n    output = formatQuantity(value, encode, true);\n  } else if (formatter === 'Q|T') {\n    output = formatQuantityOrTag(value, encode);\n  } else if (formatter === 'D') {\n    output = formatData(value); // dont format data flagged objects like compiler output\n  } else if (formatter === 'D20') {\n    output = formatData(value, 20); // dont format data flagged objects like compiler output\n  } else if (formatter === 'D32') {\n    output = formatData(value, 32); // dont format data flagged objects like compiler output\n  } else {\n    // if value is an object or array\n    if (_typeof(value) === 'object' && value !== null && Array.isArray(value) === false) {\n      output = formatObject(formatter, value, encode);\n    } else if (Array.isArray(value)) {\n      output = formatArray(formatter, value, encode, lengthRequirement);\n    }\n  }\n\n  return output;\n}\n/**\n * Format RPC inputs generally to the node or TestRPC\n *\n * @method formatInputs\n * @param {Object} method the data formatter\n * @param {Array} inputs the data inputs\n * @returns {Array} output the formatted inputs array\n * @throws error if minimum length isnt met\n */\n\n\nfunction formatInputs(method, inputs) {\n  return format(schema.methods[method][0], inputs, true, schema.methods[method][2]);\n}\n/**\n * Format RPC outputs generally from the node or TestRPC\n *\n * @method formatOutputs\n * @param {Object} method the data formatter\n * @param {Array|String|Null|Boolean|Object} outputs the data inputs\n * @returns {Array|String|Null|Boolean|Object} output the formatted data\n */\n\n\nfunction formatOutputs(method, outputs) {\n  return format(schema.methods[method][1], outputs, false);\n} // export formatters\n\n\nmodule.exports = {\n  schema: schema,\n  formatQuantity: formatQuantity,\n  formatQuantityOrTag: formatQuantityOrTag,\n  formatObject: formatObject,\n  formatArray: formatArray,\n  format: format,\n  formatInputs: formatInputs,\n  formatOutputs: formatOutputs\n};\n\n//# sourceURL=webpack:///./node_modules/ethjs-format/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-provider-http/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/ethjs-provider-http/lib/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @original-authors:\n *   Marek Kotewicz <marek@ethdev.com>\n *   Marian Oancea <marian@ethdev.com>\n *   Fabian Vogelsteller <fabian@ethdev.com>\n * @date 2015\n */\n// workaround to use httpprovider in different envs\n\nvar XHR2 = __webpack_require__(/*! xhr2 */ \"./node_modules/xhr2/lib/browser.js\");\n/*\n\"\"\nresponseText\n:\n\"\"\nresponseType\n:\n\"\"\nresponseURL\n:\n\"https://ropsten.infura.io/\"\nresponseXML\n:\nnull\nstatus\n:\n405\nstatusText\n:\n\"Method Not Allowed\"\ntimeout\n:\n0\n*/\n\n/**\n * InvalidResponseError helper for invalid errors.\n */\n\n\nfunction invalidResponseError(request, host) {\n  var responseError = new Error('[ethjs-provider-http] Invalid JSON RPC response from provider\\n    host: ' + host + '\\n    response: ' + String(request.responseText) + ' ' + JSON.stringify(request.responseText, null, 2) + '\\n    responseURL: ' + request.responseURL + '\\n    status: ' + request.status + '\\n    statusText: ' + request.statusText + '\\n  ');\n  responseError.value = request;\n  return responseError;\n}\n/**\n * HttpProvider should be used to send rpc calls over http\n */\n\n\nfunction HttpProvider(host, timeout) {\n  if (!(this instanceof HttpProvider)) {\n    throw new Error('[ethjs-provider-http] the HttpProvider instance requires the \"new\" flag in order to function normally (e.g. `const eth = new Eth(new HttpProvider());`).');\n  }\n\n  if (typeof host !== 'string') {\n    throw new Error('[ethjs-provider-http] the HttpProvider instance requires that the host be specified (e.g. `new HttpProvider(\"http://localhost:8545\")` or via service like infura `new HttpProvider(\"http://ropsten.infura.io\")`)');\n  }\n\n  var self = this;\n  self.host = host;\n  self.timeout = timeout || 0;\n}\n/**\n * Should be used to make async request\n *\n * @method sendAsync\n * @param {Object} payload\n * @param {Function} callback triggered on end with (err, result)\n */\n\n\nHttpProvider.prototype.sendAsync = function (payload, callback) {\n  // eslint-disable-line\n  var self = this;\n  var request = new XHR2(); // eslint-disable-line\n\n  request.timeout = self.timeout;\n  request.open('POST', self.host, true);\n  request.setRequestHeader('Content-Type', 'application/json');\n\n  request.onreadystatechange = function () {\n    if (request.readyState === 4 && request.timeout !== 1) {\n      var result = request.responseText; // eslint-disable-line\n\n      var error = null; // eslint-disable-line\n\n      try {\n        result = JSON.parse(result);\n      } catch (jsonError) {\n        error = invalidResponseError(request, self.host);\n      }\n\n      callback(error, result);\n    }\n  };\n\n  request.ontimeout = function () {\n    callback('[ethjs-provider-http] CONNECTION TIMEOUT: http request timeout after ' + self.timeout + ' ms. (i.e. your connect has timed out for whatever reason, check your provider).', null);\n  };\n\n  try {\n    request.send(JSON.stringify(payload));\n  } catch (error) {\n    callback('[ethjs-provider-http] CONNECTION ERROR: Couldn\\'t connect to node \\'' + self.host + '\\': ' + JSON.stringify(error, null, 2), null);\n  }\n};\n\nmodule.exports = HttpProvider;\n\n//# sourceURL=webpack:///./node_modules/ethjs-provider-http/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-query/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/ethjs-query/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar format = __webpack_require__(/*! ethjs-format */ \"./node_modules/ethjs-format/lib/index.js\");\n\nvar EthRPC = __webpack_require__(/*! ethjs-rpc */ \"./node_modules/ethjs-rpc/lib/index.js\");\n\nvar promiseToCallback = __webpack_require__(/*! promise-to-callback */ \"./node_modules/promise-to-callback/index.js\");\n\nmodule.exports = Eth;\n\nfunction Eth(provider, options) {\n  var self = this;\n  var optionsObject = options || {};\n\n  if (!(this instanceof Eth)) {\n    throw new Error('[ethjs-query] the Eth object requires the \"new\" flag in order to function normally (i.e. `const eth = new Eth(provider);`).');\n  }\n\n  if (_typeof(provider) !== 'object') {\n    throw new Error('[ethjs-query] the Eth object requires that the first input \\'provider\\' must be an object, got \\'' + _typeof(provider) + '\\' (i.e. \\'const eth = new Eth(provider);\\')');\n  }\n\n  self.options = Object.assign({\n    debug: optionsObject.debug || false,\n    logger: optionsObject.logger || console,\n    jsonSpace: optionsObject.jsonSpace || 0\n  });\n  self.rpc = new EthRPC(provider);\n  self.setProvider = self.rpc.setProvider;\n}\n\nEth.prototype.log = function log(message) {\n  var self = this;\n  if (self.options.debug) self.options.logger.log('[ethjs-query log] ' + message);\n};\n\nObject.keys(format.schema.methods).forEach(function (rpcMethodName) {\n  Object.defineProperty(Eth.prototype, rpcMethodName.replace('eth_', ''), {\n    enumerable: true,\n    value: generateFnFor(rpcMethodName, format.schema.methods[rpcMethodName])\n  });\n});\n\nfunction generateFnFor(rpcMethodName, methodObject) {\n  return function outputMethod() {\n    var callback = null; // eslint-disable-line\n\n    var inputs = null; // eslint-disable-line\n\n    var inputError = null; // eslint-disable-line\n\n    var self = this;\n    var args = [].slice.call(arguments); // eslint-disable-line\n\n    var protoMethodName = rpcMethodName.replace('eth_', ''); // eslint-disable-line\n\n    if (args.length > 0 && typeof args[args.length - 1] === 'function') {\n      callback = args.pop();\n    }\n\n    var promise = performCall.call(this); // if callback provided, convert promise to callback\n\n    if (callback) {\n      return promiseToCallback(promise)(callback);\n    } // only return promise if no callback provided\n\n\n    return promise;\n\n    function performCall() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        // validate arg length\n        if (args.length < methodObject[2]) {\n          reject(new Error('[ethjs-query] method \\'' + protoMethodName + '\\' requires at least ' + methodObject[2] + ' input (format type ' + methodObject[0][0] + '), ' + args.length + ' provided. For more information visit: https://github.com/ethereum/wiki/wiki/JSON-RPC#' + rpcMethodName.toLowerCase()));\n          return;\n        }\n\n        if (args.length > methodObject[0].length) {\n          reject(new Error('[ethjs-query] method \\'' + protoMethodName + '\\' requires at most ' + methodObject[0].length + ' params, ' + args.length + ' provided \\'' + JSON.stringify(args, null, self.options.jsonSpace) + '\\'. For more information visit: https://github.com/ethereum/wiki/wiki/JSON-RPC#' + rpcMethodName.toLowerCase()));\n          return;\n        } // set default block\n\n\n        if (methodObject[3] && args.length < methodObject[3]) {\n          args.push('latest');\n        } // format inputs\n\n\n        _this.log('attempting method formatting for \\'' + protoMethodName + '\\' with inputs ' + JSON.stringify(args, null, _this.options.jsonSpace));\n\n        try {\n          inputs = format.formatInputs(rpcMethodName, args);\n\n          _this.log('method formatting success for \\'' + protoMethodName + '\\' with formatted result: ' + JSON.stringify(inputs, null, _this.options.jsonSpace));\n        } catch (formattingError) {\n          reject(new Error('[ethjs-query] while formatting inputs \\'' + JSON.stringify(args, null, _this.options.jsonSpace) + '\\' for method \\'' + protoMethodName + '\\' error: ' + formattingError));\n          return;\n        } // perform rpc call\n\n\n        _this.rpc.sendAsync({\n          method: rpcMethodName,\n          params: inputs\n        }).then(function (result) {\n          // format result\n          try {\n            _this.log('attempting method formatting for \\'' + protoMethodName + '\\' with raw outputs: ' + JSON.stringify(result, null, _this.options.jsonSpace));\n\n            var methodOutputs = format.formatOutputs(rpcMethodName, result);\n\n            _this.log('method formatting success for \\'' + protoMethodName + '\\' formatted result: ' + JSON.stringify(methodOutputs, null, _this.options.jsonSpace));\n\n            resolve(methodOutputs);\n            return;\n          } catch (outputFormattingError) {\n            var outputError = new Error('[ethjs-query] while formatting outputs from RPC \\'' + JSON.stringify(result, null, _this.options.jsonSpace) + '\\' for method \\'' + protoMethodName + '\\' ' + outputFormattingError);\n            reject(outputError);\n            return;\n          }\n        })['catch'](function (error) {\n          var outputError = new Error('[ethjs-query] while formatting outputs from RPC \\'' + JSON.stringify(error, null, _this.options.jsonSpace) + '\\'');\n          reject(outputError);\n          return;\n        });\n      });\n    }\n  };\n}\n\n//# sourceURL=webpack:///./node_modules/ethjs-query/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-rpc/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/ethjs-rpc/lib/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar promiseToCallback = __webpack_require__(/*! promise-to-callback */ \"./node_modules/promise-to-callback/index.js\");\n\nmodule.exports = EthRPC;\n/**\n * Constructs the EthRPC instance\n *\n * @method EthRPC\n * @param {Object} cprovider the eth rpc provider web3 standard..\n * @param {Object} options the options, if any\n * @returns {Object} ethrpc instance\n */\n\nfunction EthRPC(cprovider, options) {\n  var self = this;\n  var optionsObject = options || {};\n\n  if (!(this instanceof EthRPC)) {\n    throw new Error('[ethjs-rpc] the EthRPC object requires the \"new\" flag in order to function normally (i.e. `const eth = new EthRPC(provider);`).');\n  }\n\n  self.options = Object.assign({\n    jsonSpace: optionsObject.jsonSpace || 0,\n    max: optionsObject.max || 9999999999999\n  });\n  self.idCounter = Math.floor(Math.random() * self.options.max);\n\n  self.setProvider = function (provider) {\n    if (_typeof(provider) !== 'object') {\n      throw new Error('[ethjs-rpc] the EthRPC object requires that the first input \\'provider\\' must be an object, got \\'' + _typeof(provider) + '\\' (i.e. \\'const eth = new EthRPC(provider);\\')');\n    }\n\n    self.currentProvider = provider;\n  };\n\n  self.setProvider(cprovider);\n}\n/**\n * The main send async method\n *\n * @method sendAsync\n * @param {Object} payload the rpc payload object\n * @param {Function} cb the async standard callback\n * @callback {Object|Array|Boolean|String} vary result instance output\n */\n\n\nEthRPC.prototype.sendAsync = function sendAsync(payload, callback) {\n  var self = this;\n  self.idCounter = self.idCounter % self.options.max;\n  var parsedPayload = createPayload(payload, self.idCounter++);\n  var promise = new Promise(function (resolve, reject) {\n    self.currentProvider.sendAsync(parsedPayload, function (err, response) {\n      var responseObject = response || {};\n\n      if (err || responseObject.error) {\n        var payloadErrorMessage = '[ethjs-rpc] ' + (responseObject.error && 'rpc' || '') + ' error with payload ' + JSON.stringify(parsedPayload, null, self.options.jsonSpace) + ' ' + (err ? String(err) : JSON.stringify(responseObject.error, null, self.options.jsonSpace));\n        var payloadError = new Error(payloadErrorMessage);\n        payloadError.value = err || responseObject.error;\n        reject(payloadError);\n        return;\n      }\n\n      resolve(responseObject.result);\n      return;\n    });\n  });\n\n  if (callback) {\n    // connect promise resolve handlers to callback\n    return promiseToCallback(promise)(callback);\n  } // only return promise if no callback specified\n\n\n  return promise;\n};\n/**\n * A simple create payload method\n *\n * @method createPayload\n * @param {Object} data the rpc payload data\n * @param {String} id the rpc data payload ID\n * @returns {Object} payload the completed payload object\n */\n\n\nfunction createPayload(data, id) {\n  return Object.assign({}, {\n    id: id,\n    jsonrpc: '2.0',\n    params: []\n  }, data);\n}\n\n//# sourceURL=webpack:///./node_modules/ethjs-rpc/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-schema/src/schema.json":
/*!***************************************************!*\
  !*** ./node_modules/ethjs-schema/src/schema.json ***!
  \***************************************************/
/*! exports provided: methods, tags, objects, default */
/***/ (function(module) {

eval("module.exports = {\"methods\":{\"web3_clientVersion\":[[],\"S\"],\"web3_sha3\":[[\"S\"],\"D\",1],\"net_version\":[[],\"S\"],\"net_peerCount\":[[],\"Q\"],\"net_listening\":[[],\"B\"],\"personal_sign\":[[\"D\",\"D20\",\"S\"],\"D\",2],\"personal_ecRecover\":[[\"D\",\"D\"],\"D20\",2],\"eth_protocolVersion\":[[],\"S\"],\"eth_syncing\":[[],\"B|EthSyncing\"],\"eth_coinbase\":[[],\"D20\"],\"eth_mining\":[[],\"B\"],\"eth_hashrate\":[[],\"Q\"],\"eth_gasPrice\":[[],\"Q\"],\"eth_accounts\":[[],[\"D20\"]],\"eth_blockNumber\":[[],\"Q\"],\"eth_getBalance\":[[\"D20\",\"Q|T\"],\"Q\",1,2],\"eth_getStorageAt\":[[\"D20\",\"Q\",\"Q|T\"],\"D\",2,2],\"eth_getTransactionCount\":[[\"D20\",\"Q|T\"],\"Q\",1,2],\"eth_getBlockTransactionCountByHash\":[[\"D32\"],\"Q\",1],\"eth_getBlockTransactionCountByNumber\":[[\"Q|T\"],\"Q\",1],\"eth_getUncleCountByBlockHash\":[[\"D32\"],\"Q\",1],\"eth_getUncleCountByBlockNumber\":[[\"Q\"],\"Q\",1],\"eth_getCode\":[[\"D20\",\"Q|T\"],\"D\",1,2],\"eth_sign\":[[\"D20\",\"D\"],\"D\",2],\"eth_signTypedData\":[[\"Array|DATA\",\"D20\"],\"D\",1],\"eth_sendTransaction\":[[\"SendTransaction\"],\"D\",1],\"eth_sendRawTransaction\":[[\"D\"],\"D32\",1],\"eth_call\":[[\"CallTransaction\",\"Q|T\"],\"D\",1,2],\"eth_estimateGas\":[[\"EstimateTransaction\",\"Q|T\"],\"Q\",1],\"eth_getBlockByHash\":[[\"D32\",\"B\"],\"Block\",2],\"eth_getBlockByNumber\":[[\"Q|T\",\"B\"],\"Block\",2],\"eth_getTransactionByHash\":[[\"D32\"],\"Transaction\",1],\"eth_getTransactionByBlockHashAndIndex\":[[\"D32\",\"Q\"],\"Transaction\",2],\"eth_getTransactionByBlockNumberAndIndex\":[[\"Q|T\",\"Q\"],\"Transaction\",2],\"eth_getTransactionReceipt\":[[\"D32\"],\"Receipt\",1],\"eth_getUncleByBlockHashAndIndex\":[[\"D32\",\"Q\"],\"Block\",1],\"eth_getUncleByBlockNumberAndIndex\":[[\"Q|T\",\"Q\"],\"Block\",2],\"eth_getCompilers\":[[],[\"S\"]],\"eth_compileLLL\":[[\"S\"],\"D\",1],\"eth_compileSolidity\":[[\"S\"],\"D\",1],\"eth_compileSerpent\":[[\"S\"],\"D\",1],\"eth_newFilter\":[[\"Filter\"],\"Q\",1],\"eth_newBlockFilter\":[[],\"Q\"],\"eth_newPendingTransactionFilter\":[[],\"Q\"],\"eth_uninstallFilter\":[[\"QP\"],\"B\",1],\"eth_getFilterChanges\":[[\"QP\"],[\"FilterChange\"],1],\"eth_getFilterLogs\":[[\"QP\"],[\"FilterChange\"],1],\"eth_getLogs\":[[\"Filter\"],[\"FilterChange\"],1],\"eth_getWork\":[[],[\"D\"]],\"eth_submitWork\":[[\"D\",\"D32\",\"D32\"],\"B\",3],\"eth_submitHashrate\":[[\"D\",\"D\"],\"B\",2],\"db_putString\":[[\"S\",\"S\",\"S\"],\"B\",2],\"db_getString\":[[\"S\",\"S\"],\"S\",2],\"db_putHex\":[[\"S\",\"S\",\"D\"],\"B\",2],\"db_getHex\":[[\"S\",\"S\"],\"D\",2],\"shh_post\":[[\"SHHPost\"],\"B\",1],\"shh_version\":[[],\"S\"],\"shh_newIdentity\":[[],\"D\"],\"shh_hasIdentity\":[[\"D\"],\"B\"],\"shh_newGroup\":[[],\"D\"],\"shh_addToGroup\":[[\"D\"],\"B\",1],\"shh_newFilter\":[[\"SHHFilter\"],\"Q\",1],\"shh_uninstallFilter\":[[\"Q\"],\"B\",1],\"shh_getFilterChanges\":[[\"Q\"],[\"SHHFilterChange\"],1],\"shh_getMessages\":[[\"Q\"],[\"SHHFilterChange\"],1]},\"tags\":[\"latest\",\"earliest\",\"pending\"],\"objects\":{\"EthSyncing\":{\"__required\":[],\"startingBlock\":\"Q\",\"currentBlock\":\"Q\",\"highestBlock\":\"Q\"},\"SendTransaction\":{\"__required\":[\"from\",\"data\"],\"from\":\"D20\",\"to\":\"D20\",\"gas\":\"Q\",\"gasPrice\":\"Q\",\"value\":\"Q\",\"data\":\"D\",\"nonce\":\"Q\"},\"EstimateTransaction\":{\"__required\":[],\"from\":\"D20\",\"to\":\"D20\",\"gas\":\"Q\",\"gasPrice\":\"Q\",\"value\":\"Q\",\"data\":\"D\",\"nonce\":\"Q\"},\"CallTransaction\":{\"__required\":[\"to\"],\"from\":\"D20\",\"to\":\"D20\",\"gas\":\"Q\",\"gasPrice\":\"Q\",\"value\":\"Q\",\"data\":\"D\",\"nonce\":\"Q\"},\"Block\":{\"__required\":[],\"number\":\"Q\",\"hash\":\"D32\",\"parentHash\":\"D32\",\"nonce\":\"D\",\"sha3Uncles\":\"D\",\"logsBloom\":\"D\",\"transactionsRoot\":\"D\",\"stateRoot\":\"D\",\"receiptsRoot\":\"D\",\"miner\":\"D\",\"difficulty\":\"Q\",\"totalDifficulty\":\"Q\",\"extraData\":\"D\",\"size\":\"Q\",\"gasLimit\":\"Q\",\"gasUsed\":\"Q\",\"timestamp\":\"Q\",\"transactions\":[\"DATA|Transaction\"],\"uncles\":[\"D\"]},\"Transaction\":{\"__required\":[],\"hash\":\"D32\",\"nonce\":\"Q\",\"blockHash\":\"D32\",\"blockNumber\":\"Q\",\"transactionIndex\":\"Q\",\"from\":\"D20\",\"to\":\"D20\",\"value\":\"Q\",\"gasPrice\":\"Q\",\"gas\":\"Q\",\"input\":\"D\"},\"Receipt\":{\"__required\":[],\"transactionHash\":\"D32\",\"transactionIndex\":\"Q\",\"blockHash\":\"D32\",\"blockNumber\":\"Q\",\"cumulativeGasUsed\":\"Q\",\"gasUsed\":\"Q\",\"contractAddress\":\"D20\",\"logs\":[\"FilterChange\"]},\"Filter\":{\"__required\":[],\"fromBlock\":\"Q|T\",\"toBlock\":\"Q|T\",\"address\":\"D20\",\"topics\":[\"D\"]},\"FilterChange\":{\"__required\":[],\"removed\":\"B\",\"logIndex\":\"Q\",\"transactionIndex\":\"Q\",\"transactionHash\":\"D32\",\"blockHash\":\"D32\",\"blockNumber\":\"Q\",\"address\":\"D20\",\"data\":\"Array|DATA\",\"topics\":[\"D\"]},\"SHHPost\":{\"__required\":[\"topics\",\"payload\",\"priority\",\"ttl\"],\"from\":\"D\",\"to\":\"D\",\"topics\":[\"D\"],\"payload\":\"D\",\"priority\":\"Q\",\"ttl\":\"Q\"},\"SHHFilter\":{\"__required\":[\"topics\"],\"to\":\"D\",\"topics\":[\"D\"]},\"SHHFilterChange\":{\"__required\":[],\"hash\":\"D\",\"from\":\"D\",\"to\":\"D\",\"expiry\":\"Q\",\"ttl\":\"Q\",\"sent\":\"Q\",\"topics\":[\"D\"],\"payload\":\"D\",\"workProved\":\"Q\"},\"SHHMessage\":{\"__required\":[],\"hash\":\"D\",\"from\":\"D\",\"to\":\"D\",\"expiry\":\"Q\",\"ttl\":\"Q\",\"sent\":\"Q\",\"topics\":[\"D\"],\"payload\":\"D\",\"workProved\":\"Q\"}}};\n\n//# sourceURL=webpack:///./node_modules/ethjs-schema/src/schema.json?");

/***/ }),

/***/ "./node_modules/ethjs-unit/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethjs-unit/lib/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js\");\n\nvar numberToBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1); // complete ethereum unit map\n\nvar unitMap = {\n  'noether': '0',\n  // eslint-disable-line\n  'wei': '1',\n  // eslint-disable-line\n  'kwei': '1000',\n  // eslint-disable-line\n  'Kwei': '1000',\n  // eslint-disable-line\n  'babbage': '1000',\n  // eslint-disable-line\n  'femtoether': '1000',\n  // eslint-disable-line\n  'mwei': '1000000',\n  // eslint-disable-line\n  'Mwei': '1000000',\n  // eslint-disable-line\n  'lovelace': '1000000',\n  // eslint-disable-line\n  'picoether': '1000000',\n  // eslint-disable-line\n  'gwei': '1000000000',\n  // eslint-disable-line\n  'Gwei': '1000000000',\n  // eslint-disable-line\n  'shannon': '1000000000',\n  // eslint-disable-line\n  'nanoether': '1000000000',\n  // eslint-disable-line\n  'nano': '1000000000',\n  // eslint-disable-line\n  'szabo': '1000000000000',\n  // eslint-disable-line\n  'microether': '1000000000000',\n  // eslint-disable-line\n  'micro': '1000000000000',\n  // eslint-disable-line\n  'finney': '1000000000000000',\n  // eslint-disable-line\n  'milliether': '1000000000000000',\n  // eslint-disable-line\n  'milli': '1000000000000000',\n  // eslint-disable-line\n  'ether': '1000000000000000000',\n  // eslint-disable-line\n  'kether': '1000000000000000000000',\n  // eslint-disable-line\n  'grand': '1000000000000000000000',\n  // eslint-disable-line\n  'mether': '1000000000000000000000000',\n  // eslint-disable-line\n  'gether': '1000000000000000000000000000',\n  // eslint-disable-line\n  'tether': '1000000000000000000000000000000'\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\n\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (_typeof(arg) === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + _typeof(arg) + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n\n  var negative = wei.lt(zero); // eslint-disable-line\n\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1; // Is it negative?\n\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  } // Split it into a whole and fractional part\n\n\n  var comps = ether.split('.'); // eslint-disable-line\n\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n\n  if (!fraction) {\n    fraction = '0';\n  }\n\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};\n\n//# sourceURL=webpack:///./node_modules/ethjs-unit/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js":
/*!**************************************************************!*\
  !*** ./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/browserfs/dist/shims/buffer.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/ethjs-util/lib/index.js":
/*!**********************************************!*\
  !*** ./node_modules/ethjs-util/lib/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\n\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\n\n\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + _typeof(a) + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\n\n\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + padToEven(hex);\n}\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\n\n\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n  return Buffer.from(hex.slice(2), 'hex');\n}\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\n\n\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + _typeof(str) + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\n\n\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + _typeof(superset) + '\\'');\n  }\n\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + _typeof(subset) + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n  return bufferValue.toString('utf8');\n}\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\n\n\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + _typeof(params) + '\\'');\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + _typeof(key) + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\n\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs-util/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ethjs/lib/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nvar EthQuery = __webpack_require__(/*! ethjs-query */ \"./node_modules/ethjs-query/lib/index.js\");\n\nvar EthFilter = __webpack_require__(/*! ethjs-filter */ \"./node_modules/ethjs-filter/lib/index.js\");\n\nvar EthContract = __webpack_require__(/*! ethjs-contract */ \"./node_modules/ethjs-contract/lib/index.js\");\n\nvar HttpProvider = __webpack_require__(/*! ethjs-provider-http */ \"./node_modules/ethjs-provider-http/lib/index.js\");\n\nvar abi = __webpack_require__(/*! ethjs-abi */ \"./node_modules/ethjs-abi/lib/index.js\"); // const getTxSuccess = require('ethjs-transaction-success'); // eslint-disable-line\n\n\nvar unit = __webpack_require__(/*! ethjs-unit */ \"./node_modules/ethjs-unit/lib/index.js\");\n\nvar keccak256 = __webpack_require__(/*! js-sha3 */ \"./node_modules/js-sha3/src/sha3.js\").keccak_256;\n\nvar toBN = __webpack_require__(/*! number-to-bn */ \"./node_modules/number-to-bn/src/index.js\");\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/ethjs/node_modules/bn.js/lib/bn.js\");\n\nvar utils = __webpack_require__(/*! ethjs-util */ \"./node_modules/ethjs-util/lib/index.js\");\n\nvar getTransactionSuccess = __webpack_require__(/*! ./lib/getTransactionSuccess.js */ \"./node_modules/ethjs/lib/lib/getTransactionSuccess.js\");\n\nmodule.exports = Eth;\n/**\n * Returns the ethjs Eth instance.\n *\n * @method Eth\n * @param {Object} cprovider the web3 standard provider object\n * @param {Object} options the Eth options object\n * @returns {Object} eth Eth object instance\n * @throws if the new flag is not used in construction\n */\n\nfunction Eth(cprovider, options) {\n  if (!(this instanceof Eth)) {\n    throw new Error('[ethjs] the Eth object requires you construct it with the \"new\" flag (i.e. `const eth = new Eth(...);`).');\n  }\n\n  var self = this;\n  self.options = options || {};\n  var query = new EthQuery(cprovider, self.options.query);\n  Object.keys(Object.getPrototypeOf(query)).forEach(function (methodName) {\n    self[methodName] = function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return query[methodName].apply(query, args);\n    };\n  });\n  self.filter = new EthFilter(query, self.options.query);\n  self.contract = new EthContract(query, self.options.query);\n  self.currentProvider = query.rpc.currentProvider;\n  self.setProvider = query.setProvider;\n  self.getTransactionSuccess = getTransactionSuccess(self);\n}\n\nEth.BN = BN;\n\nEth.isAddress = function (val) {\n  return utils.isHexString(val, 20);\n};\n\nEth.keccak256 = function (val) {\n  return '0x' + keccak256(val);\n};\n\nEth.Buffer = Buffer;\nEth.isHexString = utils.isHexString;\nEth.fromWei = unit.fromWei;\nEth.toWei = unit.toWei;\nEth.toBN = toBN;\nEth.abi = abi;\nEth.fromAscii = utils.fromAscii;\nEth.toAscii = utils.toAscii;\nEth.fromUtf8 = utils.fromUtf8;\nEth.toUtf8 = utils.toUtf8;\nEth.HttpProvider = HttpProvider;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bufferGlobal */ \"./node_modules/browserfs/dist/shims/bufferGlobal.js\")))\n\n//# sourceURL=webpack:///./node_modules/ethjs/lib/index.js?");

/***/ }),

/***/ "./node_modules/ethjs/lib/lib/getTransactionSuccess.js":
/*!*************************************************************!*\
  !*** ./node_modules/ethjs/lib/lib/getTransactionSuccess.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function (eth) {\n  return function (txHash, callback) {\n    var count = 0;\n    var timeout = eth.options.timeout || 800000;\n    var interval = eth.options.interval || 7000;\n    var prom = new Promise(function (resolve, reject) {\n      var txInterval = setInterval(function () {\n        eth.getTransactionReceipt(txHash, function (err, result) {\n          if (err) {\n            clearInterval(txInterval);\n            reject(err);\n          }\n\n          if (!err && result) {\n            clearInterval(txInterval);\n            resolve(result);\n          }\n        });\n\n        if (count >= timeout) {\n          clearInterval(txInterval);\n          var errMessage = \"Receipt timeout waiting for tx hash: \" + txHash;\n          reject(errMessage);\n        }\n\n        count += interval;\n      }, interval);\n    });\n\n    if (callback) {\n      prom.then(function (res) {\n        return callback(null, res);\n      })[\"catch\"](function (err) {\n        return callback(err, null);\n      });\n    }\n\n    return callback ? null : prom;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/ethjs/lib/lib/getTransactionSuccess.js?");

/***/ }),

/***/ "./node_modules/ethjs/node_modules/bn.js/lib/bn.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethjs/node_modules/bn.js/lib/bn.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/browserfs/dist/shims/buffer.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/ethjs/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/get-func-name/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-func-name/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\n\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n\n//# sourceURL=webpack:///./node_modules/get-func-name/index.js?");

/***/ }),

/***/ "./node_modules/immutable/dist/immutable.es.js":
/*!*****************************************************!*\
  !*** ./node_modules/immutable/dist/immutable.es.js ***!
  \*****************************************************/
/*! exports provided: default, version, Collection, Iterable, Seq, Map, OrderedMap, List, Stack, Set, OrderedSet, Record, Range, Repeat, is, fromJS, hash, isImmutable, isCollection, isKeyed, isIndexed, isAssociative, isOrdered, isValueObject, get, getIn, has, hasIn, merge, mergeDeep, mergeWith, mergeDeepWith, remove, removeIn, set, setIn, update, updateIn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Collection\", function() { return Collection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Iterable\", function() { return Iterable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Seq\", function() { return Seq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Map\", function() { return Map; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrderedMap\", function() { return OrderedMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"List\", function() { return List; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Stack\", function() { return Stack; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Set\", function() { return Set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OrderedSet\", function() { return OrderedSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Record\", function() { return Record; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Range\", function() { return Range; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Repeat\", function() { return Repeat; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"is\", function() { return is; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fromJS\", function() { return fromJS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hash\", function() { return hash; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isImmutable\", function() { return isImmutable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCollection\", function() { return isCollection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isKeyed\", function() { return isKeyed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isIndexed\", function() { return isIndexed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isAssociative\", function() { return isAssociative; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isOrdered\", function() { return isOrdered; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValueObject\", function() { return isValueObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIn\", function() { return getIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"has\", function() { return has; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasIn\", function() { return hasIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeDeep\", function() { return mergeDeep; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeWith\", function() { return mergeWith$1; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mergeDeepWith\", function() { return mergeDeepWith; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"remove\", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"removeIn\", function() { return removeIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"set\", function() { return set; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setIn\", function() { return setIn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"update\", function() { return update; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"updateIn\", function() { return updateIn; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Used for setting prototype methods that IE8 chokes on.\nvar DELETE = 'delete'; // Constants describing the size of trie nodes.\n\nvar SHIFT = 5; // Resulted in best performance after ______?\n\nvar SIZE = 1 << SHIFT;\nvar MASK = SIZE - 1; // A consistent shared value representing \"not set\" which equals nothing other\n// than itself, and nothing that could be provided externally.\n\nvar NOT_SET = {}; // Boolean references, Rough equivalent of `bool &`.\n\nfunction MakeRef() {\n  return {\n    value: false\n  };\n}\n\nfunction SetRef(ref) {\n  if (ref) {\n    ref.value = true;\n  }\n} // A function which returns a value representing an \"owner\" for transient writes\n// to tries. The return value will only ever equal itself, and will not equal\n// the return of any subsequent call of this function.\n\n\nfunction OwnerID() {}\n\nfunction ensureSize(iter) {\n  if (iter.size === undefined) {\n    iter.size = iter.__iterate(returnTrue);\n  }\n\n  return iter.size;\n}\n\nfunction wrapIndex(iter, index) {\n  // This implements \"is array index\" which the ECMAString spec defines as:\n  //\n  //     A String property name P is an array index if and only if\n  //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n  //     to 2^32−1.\n  //\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n  if (typeof index !== 'number') {\n    var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\n    if ('' + uint32Index !== index || uint32Index === 4294967295) {\n      return NaN;\n    }\n\n    index = uint32Index;\n  }\n\n  return index < 0 ? ensureSize(iter) + index : index;\n}\n\nfunction returnTrue() {\n  return true;\n}\n\nfunction wholeSlice(begin, end, size) {\n  return (begin === 0 && !isNeg(begin) || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n}\n\nfunction resolveBegin(begin, size) {\n  return resolveIndex(begin, size, 0);\n}\n\nfunction resolveEnd(end, size) {\n  return resolveIndex(end, size, size);\n}\n\nfunction resolveIndex(index, size, defaultIndex) {\n  // Sanitize indices using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  return index === undefined ? defaultIndex : isNeg(index) ? size === Infinity ? size : Math.max(0, size + index) | 0 : size === undefined || size === index ? index : Math.min(size, index) | 0;\n}\n\nfunction isNeg(value) {\n  // Account for -0 which is negative, but not less than 0.\n  return value < 0 || value === 0 && 1 / value === -Infinity;\n} // Note: value is unchanged to not break immutable-devtools.\n\n\nvar IS_COLLECTION_SYMBOL = '@@__IMMUTABLE_ITERABLE__@@';\n\nfunction isCollection(maybeCollection) {\n  return Boolean(maybeCollection && maybeCollection[IS_COLLECTION_SYMBOL]);\n}\n\nvar IS_KEYED_SYMBOL = '@@__IMMUTABLE_KEYED__@@';\n\nfunction isKeyed(maybeKeyed) {\n  return Boolean(maybeKeyed && maybeKeyed[IS_KEYED_SYMBOL]);\n}\n\nvar IS_INDEXED_SYMBOL = '@@__IMMUTABLE_INDEXED__@@';\n\nfunction isIndexed(maybeIndexed) {\n  return Boolean(maybeIndexed && maybeIndexed[IS_INDEXED_SYMBOL]);\n}\n\nfunction isAssociative(maybeAssociative) {\n  return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n}\n\nvar Collection = function Collection(value) {\n  return isCollection(value) ? value : Seq(value);\n};\n\nvar KeyedCollection =\n/*@__PURE__*/\nfunction (Collection) {\n  function KeyedCollection(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  if (Collection) KeyedCollection.__proto__ = Collection;\n  KeyedCollection.prototype = Object.create(Collection && Collection.prototype);\n  KeyedCollection.prototype.constructor = KeyedCollection;\n  return KeyedCollection;\n}(Collection);\n\nvar IndexedCollection =\n/*@__PURE__*/\nfunction (Collection) {\n  function IndexedCollection(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  if (Collection) IndexedCollection.__proto__ = Collection;\n  IndexedCollection.prototype = Object.create(Collection && Collection.prototype);\n  IndexedCollection.prototype.constructor = IndexedCollection;\n  return IndexedCollection;\n}(Collection);\n\nvar SetCollection =\n/*@__PURE__*/\nfunction (Collection) {\n  function SetCollection(value) {\n    return isCollection(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  if (Collection) SetCollection.__proto__ = Collection;\n  SetCollection.prototype = Object.create(Collection && Collection.prototype);\n  SetCollection.prototype.constructor = SetCollection;\n  return SetCollection;\n}(Collection);\n\nCollection.Keyed = KeyedCollection;\nCollection.Indexed = IndexedCollection;\nCollection.Set = SetCollection;\nvar IS_SEQ_SYMBOL = '@@__IMMUTABLE_SEQ__@@';\n\nfunction isSeq(maybeSeq) {\n  return Boolean(maybeSeq && maybeSeq[IS_SEQ_SYMBOL]);\n}\n\nvar IS_RECORD_SYMBOL = '@@__IMMUTABLE_RECORD__@@';\n\nfunction isRecord(maybeRecord) {\n  return Boolean(maybeRecord && maybeRecord[IS_RECORD_SYMBOL]);\n}\n\nfunction isImmutable(maybeImmutable) {\n  return isCollection(maybeImmutable) || isRecord(maybeImmutable);\n}\n\nvar IS_ORDERED_SYMBOL = '@@__IMMUTABLE_ORDERED__@@';\n\nfunction isOrdered(maybeOrdered) {\n  return Boolean(maybeOrdered && maybeOrdered[IS_ORDERED_SYMBOL]);\n}\n\nvar ITERATE_KEYS = 0;\nvar ITERATE_VALUES = 1;\nvar ITERATE_ENTRIES = 2;\nvar REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nvar ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\nvar Iterator = function Iterator(next) {\n  this.next = next;\n};\n\nIterator.prototype.toString = function toString() {\n  return '[Iterator]';\n};\n\nIterator.KEYS = ITERATE_KEYS;\nIterator.VALUES = ITERATE_VALUES;\nIterator.ENTRIES = ITERATE_ENTRIES;\n\nIterator.prototype.inspect = Iterator.prototype.toSource = function () {\n  return this.toString();\n};\n\nIterator.prototype[ITERATOR_SYMBOL] = function () {\n  return this;\n};\n\nfunction iteratorValue(type, k, v, iteratorResult) {\n  var value = type === 0 ? k : type === 1 ? v : [k, v];\n  iteratorResult ? iteratorResult.value = value : iteratorResult = {\n    value: value,\n    done: false\n  };\n  return iteratorResult;\n}\n\nfunction iteratorDone() {\n  return {\n    value: undefined,\n    done: true\n  };\n}\n\nfunction hasIterator(maybeIterable) {\n  return !!getIteratorFn(maybeIterable);\n}\n\nfunction isIterator(maybeIterator) {\n  return maybeIterator && typeof maybeIterator.next === 'function';\n}\n\nfunction getIterator(iterable) {\n  var iteratorFn = getIteratorFn(iterable);\n  return iteratorFn && iteratorFn.call(iterable);\n}\n\nfunction getIteratorFn(iterable) {\n  var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isArrayLike(value) {\n  if (Array.isArray(value) || typeof value === 'string') {\n    return true;\n  }\n\n  return value && _typeof(value) === 'object' && Number.isInteger(value.length) && value.length >= 0 && (value.length === 0 ? // Only {length: 0} is considered Array-like.\n  Object.keys(value).length === 1 : // An object is only Array-like if it has a property where the last value\n  // in the array-like may be found (which could be undefined).\n  value.hasOwnProperty(value.length - 1));\n}\n\nvar Seq =\n/*@__PURE__*/\nfunction (Collection$$1) {\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isImmutable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  if (Collection$$1) Seq.__proto__ = Collection$$1;\n  Seq.prototype = Object.create(Collection$$1 && Collection$$1.prototype);\n  Seq.prototype.constructor = Seq;\n\n  Seq.prototype.toSeq = function toSeq() {\n    return this;\n  };\n\n  Seq.prototype.toString = function toString() {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function cacheResult() {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n\n    return this;\n  }; // abstract __iterateUncached(fn, reverse)\n\n\n  Seq.prototype.__iterate = function __iterate(fn, reverse) {\n    var cache = this._cache;\n\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n\n      while (i !== size) {\n        var entry = cache[reverse ? size - ++i : i++];\n\n        if (fn(entry[1], entry[0], this) === false) {\n          break;\n        }\n      }\n\n      return i;\n    }\n\n    return this.__iterateUncached(fn, reverse);\n  }; // abstract __iteratorUncached(type, reverse)\n\n\n  Seq.prototype.__iterator = function __iterator(type, reverse) {\n    var cache = this._cache;\n\n    if (cache) {\n      var size = cache.length;\n      var i = 0;\n      return new Iterator(function () {\n        if (i === size) {\n          return iteratorDone();\n        }\n\n        var entry = cache[reverse ? size - ++i : i++];\n        return iteratorValue(type, entry[0], entry[1]);\n      });\n    }\n\n    return this.__iteratorUncached(type, reverse);\n  };\n\n  return Seq;\n}(Collection);\n\nvar KeyedSeq =\n/*@__PURE__*/\nfunction (Seq) {\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isCollection(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : isRecord(value) ? value.toSeq() : keyedSeqFromValue(value);\n  }\n\n  if (Seq) KeyedSeq.__proto__ = Seq;\n  KeyedSeq.prototype = Object.create(Seq && Seq.prototype);\n  KeyedSeq.prototype.constructor = KeyedSeq;\n\n  KeyedSeq.prototype.toKeyedSeq = function toKeyedSeq() {\n    return this;\n  };\n\n  return KeyedSeq;\n}(Seq);\n\nvar IndexedSeq =\n/*@__PURE__*/\nfunction (Seq) {\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : isCollection(value) ? isKeyed(value) ? value.entrySeq() : value.toIndexedSeq() : isRecord(value) ? value.toSeq().entrySeq() : indexedSeqFromValue(value);\n  }\n\n  if (Seq) IndexedSeq.__proto__ = Seq;\n  IndexedSeq.prototype = Object.create(Seq && Seq.prototype);\n  IndexedSeq.prototype.constructor = IndexedSeq;\n\n  IndexedSeq.of = function of()\n  /*...values*/\n  {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function toIndexedSeq() {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function toString() {\n    return this.__toString('Seq [', ']');\n  };\n\n  return IndexedSeq;\n}(Seq);\n\nvar SetSeq =\n/*@__PURE__*/\nfunction (Seq) {\n  function SetSeq(value) {\n    return (isCollection(value) && !isAssociative(value) ? value : IndexedSeq(value)).toSetSeq();\n  }\n\n  if (Seq) SetSeq.__proto__ = Seq;\n  SetSeq.prototype = Object.create(Seq && Seq.prototype);\n  SetSeq.prototype.constructor = SetSeq;\n\n  SetSeq.of = function of()\n  /*...values*/\n  {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function toSetSeq() {\n    return this;\n  };\n\n  return SetSeq;\n}(Seq);\n\nSeq.isSeq = isSeq;\nSeq.Keyed = KeyedSeq;\nSeq.Set = SetSeq;\nSeq.Indexed = IndexedSeq;\nSeq.prototype[IS_SEQ_SYMBOL] = true; // #pragma Root Sequences\n\nvar ArraySeq =\n/*@__PURE__*/\nfunction (IndexedSeq) {\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  if (IndexedSeq) ArraySeq.__proto__ = IndexedSeq;\n  ArraySeq.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  ArraySeq.prototype.constructor = ArraySeq;\n\n  ArraySeq.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function __iterate(fn, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n\n    while (i !== size) {\n      var ii = reverse ? size - ++i : i++;\n\n      if (fn(array[ii], ii, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  ArraySeq.prototype.__iterator = function __iterator(type, reverse) {\n    var array = this._array;\n    var size = array.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var ii = reverse ? size - ++i : i++;\n      return iteratorValue(type, ii, array[ii]);\n    });\n  };\n\n  return ArraySeq;\n}(IndexedSeq);\n\nvar ObjectSeq =\n/*@__PURE__*/\nfunction (KeyedSeq) {\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  if (KeyedSeq) ObjectSeq.__proto__ = KeyedSeq;\n  ObjectSeq.prototype = Object.create(KeyedSeq && KeyedSeq.prototype);\n  ObjectSeq.prototype.constructor = ObjectSeq;\n\n  ObjectSeq.prototype.get = function get(key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function has(key) {\n    return hasOwnProperty.call(this._object, key);\n  };\n\n  ObjectSeq.prototype.__iterate = function __iterate(fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n\n    while (i !== size) {\n      var key = keys[reverse ? size - ++i : i++];\n\n      if (fn(object[key], key, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  ObjectSeq.prototype.__iterator = function __iterator(type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var size = keys.length;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var key = keys[reverse ? size - ++i : i++];\n      return iteratorValue(type, key, object[key]);\n    });\n  };\n\n  return ObjectSeq;\n}(KeyedSeq);\n\nObjectSeq.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar CollectionSeq =\n/*@__PURE__*/\nfunction (IndexedSeq) {\n  function CollectionSeq(collection) {\n    this._collection = collection;\n    this.size = collection.length || collection.size;\n  }\n\n  if (IndexedSeq) CollectionSeq.__proto__ = IndexedSeq;\n  CollectionSeq.prototype = Object.create(IndexedSeq && IndexedSeq.prototype);\n  CollectionSeq.prototype.constructor = CollectionSeq;\n\n  CollectionSeq.prototype.__iterateUncached = function __iterateUncached(fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n    var iterations = 0;\n\n    if (isIterator(iterator)) {\n      var step;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n\n    return iterations;\n  };\n\n  CollectionSeq.prototype.__iteratorUncached = function __iteratorUncached(type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var collection = this._collection;\n    var iterator = getIterator(collection);\n\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  return CollectionSeq;\n}(IndexedSeq); // # pragma Helper functions\n\n\nvar EMPTY_SEQ;\n\nfunction emptySequence() {\n  return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n}\n\nfunction keyedSeqFromValue(value) {\n  var seq = Array.isArray(value) ? new ArraySeq(value) : hasIterator(value) ? new CollectionSeq(value) : undefined;\n\n  if (seq) {\n    return seq.fromEntrySeq();\n  }\n\n  if (_typeof(value) === 'object') {\n    return new ObjectSeq(value);\n  }\n\n  throw new TypeError('Expected Array or collection object of [k, v] entries, or keyed object: ' + value);\n}\n\nfunction indexedSeqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n\n  if (seq) {\n    return seq;\n  }\n\n  throw new TypeError('Expected Array or collection object of values: ' + value);\n}\n\nfunction seqFromValue(value) {\n  var seq = maybeIndexedSeqFromValue(value);\n\n  if (seq) {\n    return seq;\n  }\n\n  if (_typeof(value) === 'object') {\n    return new ObjectSeq(value);\n  }\n\n  throw new TypeError('Expected Array or collection object of values, or keyed object: ' + value);\n}\n\nfunction maybeIndexedSeqFromValue(value) {\n  return isArrayLike(value) ? new ArraySeq(value) : hasIterator(value) ? new CollectionSeq(value) : undefined;\n}\n\nvar IS_MAP_SYMBOL = '@@__IMMUTABLE_MAP__@@';\n\nfunction isMap(maybeMap) {\n  return Boolean(maybeMap && maybeMap[IS_MAP_SYMBOL]);\n}\n\nfunction isOrderedMap(maybeOrderedMap) {\n  return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n}\n\nfunction isValueObject(maybeValue) {\n  return Boolean(maybeValue && typeof maybeValue.equals === 'function' && typeof maybeValue.hashCode === 'function');\n}\n/**\n * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n *\n * NaN is considered the same as NaN, however -0 and 0 are considered the same\n * value, which is different from the algorithm described by\n * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n *\n * This is extended further to allow Objects to describe the values they\n * represent, by way of `valueOf` or `equals` (and `hashCode`).\n *\n * Note: because of this extension, the key equality of Immutable.Map and the\n * value equality of Immutable.Set will differ from ES6 Map and Set.\n *\n * ### Defining custom values\n *\n * The easiest way to describe the value an object represents is by implementing\n * `valueOf`. For example, `Date` represents a value by returning a unix\n * timestamp for `valueOf`:\n *\n *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n *     var date2 = new Date(1234567890000);\n *     date1.valueOf(); // 1234567890000\n *     assert( date1 !== date2 );\n *     assert( Immutable.is( date1, date2 ) );\n *\n * Note: overriding `valueOf` may have other implications if you use this object\n * where JavaScript expects a primitive, such as implicit string coercion.\n *\n * For more complex types, especially collections, implementing `valueOf` may\n * not be performant. An alternative is to implement `equals` and `hashCode`.\n *\n * `equals` takes another object, presumably of similar type, and returns true\n * if it is equal. Equality is symmetrical, so the same result should be\n * returned if this and the argument are flipped.\n *\n *     assert( a.equals(b) === b.equals(a) );\n *\n * `hashCode` returns a 32bit integer number representing the object which will\n * be used to determine how to store the value object in a Map or Set. You must\n * provide both or neither methods, one must not exist without the other.\n *\n * Also, an important relationship between these methods must be upheld: if two\n * values are equal, they *must* return the same hashCode. If the values are not\n * equal, they might have the same hashCode; this is called a hash collision,\n * and while undesirable for performance reasons, it is acceptable.\n *\n *     if (a.equals(b)) {\n *       assert( a.hashCode() === b.hashCode() );\n *     }\n *\n * All Immutable collections are Value Objects: they implement `equals()`\n * and `hashCode()`.\n */\n\n\nfunction is(valueA, valueB) {\n  if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n    return true;\n  }\n\n  if (!valueA || !valueB) {\n    return false;\n  }\n\n  if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n    valueA = valueA.valueOf();\n    valueB = valueB.valueOf();\n\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n\n    if (!valueA || !valueB) {\n      return false;\n    }\n  }\n\n  return !!(isValueObject(valueA) && isValueObject(valueB) && valueA.equals(valueB));\n}\n\nvar imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n  a |= 0; // int\n\n  b |= 0; // int\n\n  var c = a & 0xffff;\n  var d = b & 0xffff; // Shift by 0 fixes the sign on the high part.\n\n  return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n}; // v8 has an optimization for storing 31-bit signed numbers.\n// Values which have either 00 or 11 as the high order bits qualify.\n// This function drops the highest order bit in a signed number, maintaining\n// the sign bit.\n\nfunction smi(i32) {\n  return i32 >>> 1 & 0x40000000 | i32 & 0xbfffffff;\n}\n\nvar defaultValueOf = Object.prototype.valueOf;\n\nfunction hash(o) {\n  switch (_typeof(o)) {\n    case 'boolean':\n      // The hash values for built-in constants are a 1 value for each 5-byte\n      // shift region expect for the first, which encodes the value. This\n      // reduces the odds of a hash collision for these common values.\n      return o ? 0x42108421 : 0x42108420;\n\n    case 'number':\n      return hashNumber(o);\n\n    case 'string':\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n\n    case 'object':\n    case 'function':\n      if (o === null) {\n        return 0x42108422;\n      }\n\n      if (typeof o.hashCode === 'function') {\n        // Drop any high bits from accidentally long hash codes.\n        return smi(o.hashCode(o));\n      }\n\n      if (o.valueOf !== defaultValueOf && typeof o.valueOf === 'function') {\n        o = o.valueOf(o);\n      }\n\n      return hashJSObj(o);\n\n    case 'undefined':\n      return 0x42108423;\n\n    default:\n      if (typeof o.toString === 'function') {\n        return hashString(o.toString());\n      }\n\n      throw new Error('Value type ' + _typeof(o) + ' cannot be hashed.');\n  }\n} // Compress arbitrarily large numbers into smi hashes.\n\n\nfunction hashNumber(n) {\n  if (n !== n || n === Infinity) {\n    return 0;\n  }\n\n  var hash = n | 0;\n\n  if (hash !== n) {\n    hash ^= n * 0xffffffff;\n  }\n\n  while (n > 0xffffffff) {\n    n /= 0xffffffff;\n    hash ^= n;\n  }\n\n  return smi(hash);\n}\n\nfunction cachedHashString(string) {\n  var hashed = stringHashCache[string];\n\n  if (hashed === undefined) {\n    hashed = hashString(string);\n\n    if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n      STRING_HASH_CACHE_SIZE = 0;\n      stringHashCache = {};\n    }\n\n    STRING_HASH_CACHE_SIZE++;\n    stringHashCache[string] = hashed;\n  }\n\n  return hashed;\n} // http://jsperf.com/hashing-strings\n\n\nfunction hashString(string) {\n  // This is the hash from JVM\n  // The hash code for a string is computed as\n  // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n  // where s[i] is the ith character of the string and n is the length of\n  // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n  // (exclusive) by dropping high bits.\n  var hashed = 0;\n\n  for (var ii = 0; ii < string.length; ii++) {\n    hashed = 31 * hashed + string.charCodeAt(ii) | 0;\n  }\n\n  return smi(hashed);\n}\n\nfunction hashJSObj(obj) {\n  var hashed;\n\n  if (usingWeakMap) {\n    hashed = weakMap.get(obj);\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = obj[UID_HASH_KEY];\n\n  if (hashed !== undefined) {\n    return hashed;\n  }\n\n  if (!canDefineProperty) {\n    hashed = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n\n    hashed = getIENodeHash(obj);\n\n    if (hashed !== undefined) {\n      return hashed;\n    }\n  }\n\n  hashed = ++objHashUID;\n\n  if (objHashUID & 0x40000000) {\n    objHashUID = 0;\n  }\n\n  if (usingWeakMap) {\n    weakMap.set(obj, hashed);\n  } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n    throw new Error('Non-extensible objects are not allowed as keys.');\n  } else if (canDefineProperty) {\n    Object.defineProperty(obj, UID_HASH_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: hashed\n    });\n  } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n    // Since we can't define a non-enumerable property on the object\n    // we'll hijack one of the less-used non-enumerable properties to\n    // save our hash on it. Since this is a function it will not show up in\n    // `JSON.stringify` which is what we want.\n    obj.propertyIsEnumerable = function () {\n      return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n    };\n\n    obj.propertyIsEnumerable[UID_HASH_KEY] = hashed;\n  } else if (obj.nodeType !== undefined) {\n    // At this point we couldn't get the IE `uniqueID` to use as a hash\n    // and we couldn't use a non-enumerable property to exploit the\n    // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n    // itself.\n    obj[UID_HASH_KEY] = hashed;\n  } else {\n    throw new Error('Unable to set a non-enumerable property on object.');\n  }\n\n  return hashed;\n} // Get references to ES5 object methods.\n\n\nvar isExtensible = Object.isExtensible; // True if Object.defineProperty works as expected. IE8 fails this test.\n\nvar canDefineProperty = function () {\n  try {\n    Object.defineProperty({}, '@', {});\n    return true;\n  } catch (e) {\n    return false;\n  }\n}(); // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n// and avoid memory leaks from the IE cloneNode bug.\n\n\nfunction getIENodeHash(node) {\n  if (node && node.nodeType > 0) {\n    switch (node.nodeType) {\n      case 1:\n        // Element\n        return node.uniqueID;\n\n      case 9:\n        // Document\n        return node.documentElement && node.documentElement.uniqueID;\n    }\n  }\n} // If possible, use a WeakMap.\n\n\nvar usingWeakMap = typeof WeakMap === 'function';\nvar weakMap;\n\nif (usingWeakMap) {\n  weakMap = new WeakMap();\n}\n\nvar objHashUID = 0;\nvar UID_HASH_KEY = '__immutablehash__';\n\nif (typeof Symbol === 'function') {\n  UID_HASH_KEY = Symbol(UID_HASH_KEY);\n}\n\nvar STRING_HASH_CACHE_MIN_STRLEN = 16;\nvar STRING_HASH_CACHE_MAX_SIZE = 255;\nvar STRING_HASH_CACHE_SIZE = 0;\nvar stringHashCache = {};\n\nvar ToKeyedSequence =\n/*@__PURE__*/\nfunction (KeyedSeq$$1) {\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  if (KeyedSeq$$1) ToKeyedSequence.__proto__ = KeyedSeq$$1;\n  ToKeyedSequence.prototype = Object.create(KeyedSeq$$1 && KeyedSeq$$1.prototype);\n  ToKeyedSequence.prototype.constructor = ToKeyedSequence;\n\n  ToKeyedSequence.prototype.get = function get(key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function has(key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function valueSeq() {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function reverse() {\n    var this$1 = this;\n    var reversedSequence = reverseFactory(this, true);\n\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$1._iter.toSeq().reverse();\n      };\n    }\n\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$1._iter.toSeq().map(mapper, context);\n      };\n    }\n\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (v, k) {\n      return fn(v, k, this$1);\n    }, reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    return this._iter.__iterator(type, reverse);\n  };\n\n  return ToKeyedSequence;\n}(KeyedSeq);\n\nToKeyedSequence.prototype[IS_ORDERED_SYMBOL] = true;\n\nvar ToIndexedSequence =\n/*@__PURE__*/\nfunction (IndexedSeq$$1) {\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if (IndexedSeq$$1) ToIndexedSequence.__proto__ = IndexedSeq$$1;\n  ToIndexedSequence.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  ToIndexedSequence.prototype.constructor = ToIndexedSequence;\n\n  ToIndexedSequence.prototype.includes = function includes(value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    var i = 0;\n    reverse && ensureSize(this);\n    return this._iter.__iterate(function (v) {\n      return fn(v, reverse ? this$1.size - ++i : i++, this$1);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1 = this;\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var i = 0;\n    reverse && ensureSize(this);\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? this$1.size - ++i : i++, step.value, step);\n    });\n  };\n\n  return ToIndexedSequence;\n}(IndexedSeq);\n\nvar ToSetSequence =\n/*@__PURE__*/\nfunction (SetSeq$$1) {\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  if (SetSeq$$1) ToSetSequence.__proto__ = SetSeq$$1;\n  ToSetSequence.prototype = Object.create(SetSeq$$1 && SetSeq$$1.prototype);\n  ToSetSequence.prototype.constructor = ToSetSequence;\n\n  ToSetSequence.prototype.has = function has(key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$1);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  return ToSetSequence;\n}(SetSeq);\n\nvar FromEntriesSequence =\n/*@__PURE__*/\nfunction (KeyedSeq$$1) {\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  if (KeyedSeq$$1) FromEntriesSequence.__proto__ = KeyedSeq$$1;\n  FromEntriesSequence.prototype = Object.create(KeyedSeq$$1 && KeyedSeq$$1.prototype);\n  FromEntriesSequence.prototype.constructor = FromEntriesSequence;\n\n  FromEntriesSequence.prototype.entrySeq = function entrySeq() {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedCollection = isCollection(entry);\n        return fn(indexedCollection ? entry.get(1) : entry[1], indexedCollection ? entry.get(0) : entry[0], this$1);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function __iterator(type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value; // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n\n        if (entry) {\n          validateEntry(entry);\n          var indexedCollection = isCollection(entry);\n          return iteratorValue(type, indexedCollection ? entry.get(0) : entry[0], indexedCollection ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  return FromEntriesSequence;\n}(KeyedSeq);\n\nToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\nfunction flipFactory(collection) {\n  var flipSequence = makeSequence(collection);\n  flipSequence._iter = collection;\n  flipSequence.size = collection.size;\n\n  flipSequence.flip = function () {\n    return collection;\n  };\n\n  flipSequence.reverse = function () {\n    var reversedSequence = collection.reverse.apply(this); // super.reverse()\n\n    reversedSequence.flip = function () {\n      return collection.reverse();\n    };\n\n    return reversedSequence;\n  };\n\n  flipSequence.has = function (key) {\n    return collection.includes(key);\n  };\n\n  flipSequence.includes = function (key) {\n    return collection.has(key);\n  };\n\n  flipSequence.cacheResult = cacheResultThrough;\n\n  flipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    return collection.__iterate(function (v, k) {\n      return fn(k, v, this$1) !== false;\n    }, reverse);\n  };\n\n  flipSequence.__iteratorUncached = function (type, reverse) {\n    if (type === ITERATE_ENTRIES) {\n      var iterator = collection.__iterator(type, reverse);\n\n      return new Iterator(function () {\n        var step = iterator.next();\n\n        if (!step.done) {\n          var k = step.value[0];\n          step.value[0] = step.value[1];\n          step.value[1] = k;\n        }\n\n        return step;\n      });\n    }\n\n    return collection.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n  };\n\n  return flipSequence;\n}\n\nfunction mapFactory(collection, mapper, context) {\n  var mappedSequence = makeSequence(collection);\n  mappedSequence.size = collection.size;\n\n  mappedSequence.has = function (key) {\n    return collection.has(key);\n  };\n\n  mappedSequence.get = function (key, notSetValue) {\n    var v = collection.get(key, NOT_SET);\n    return v === NOT_SET ? notSetValue : mapper.call(context, v, key, collection);\n  };\n\n  mappedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    return collection.__iterate(function (v, k, c) {\n      return fn(mapper.call(context, v, k, c), k, this$1) !== false;\n    }, reverse);\n  };\n\n  mappedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      var key = entry[0];\n      return iteratorValue(type, key, mapper.call(context, entry[1], key, collection), step);\n    });\n  };\n\n  return mappedSequence;\n}\n\nfunction reverseFactory(collection, useKeys) {\n  var this$1 = this;\n  var reversedSequence = makeSequence(collection);\n  reversedSequence._iter = collection;\n  reversedSequence.size = collection.size;\n\n  reversedSequence.reverse = function () {\n    return collection;\n  };\n\n  if (collection.flip) {\n    reversedSequence.flip = function () {\n      var flipSequence = flipFactory(collection);\n\n      flipSequence.reverse = function () {\n        return collection.flip();\n      };\n\n      return flipSequence;\n    };\n  }\n\n  reversedSequence.get = function (key, notSetValue) {\n    return collection.get(useKeys ? key : -1 - key, notSetValue);\n  };\n\n  reversedSequence.has = function (key) {\n    return collection.has(useKeys ? key : -1 - key);\n  };\n\n  reversedSequence.includes = function (value) {\n    return collection.includes(value);\n  };\n\n  reversedSequence.cacheResult = cacheResultThrough;\n\n  reversedSequence.__iterate = function (fn, reverse) {\n    var this$1 = this;\n    var i = 0;\n    reverse && ensureSize(collection);\n    return collection.__iterate(function (v, k) {\n      return fn(v, useKeys ? k : reverse ? this$1.size - ++i : i++, this$1);\n    }, !reverse);\n  };\n\n  reversedSequence.__iterator = function (type, reverse) {\n    var i = 0;\n    reverse && ensureSize(collection);\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, !reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      return iteratorValue(type, useKeys ? entry[0] : reverse ? this$1.size - ++i : i++, entry[1], step);\n    });\n  };\n\n  return reversedSequence;\n}\n\nfunction filterFactory(collection, predicate, context, useKeys) {\n  var filterSequence = makeSequence(collection);\n\n  if (useKeys) {\n    filterSequence.has = function (key) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && !!predicate.call(context, v, key, collection);\n    };\n\n    filterSequence.get = function (key, notSetValue) {\n      var v = collection.get(key, NOT_SET);\n      return v !== NOT_SET && predicate.call(context, v, key, collection) ? v : notSetValue;\n    };\n  }\n\n  filterSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    }, reverse);\n\n    return iterations;\n  };\n\n  filterSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var iterations = 0;\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var key = entry[0];\n        var value = entry[1];\n\n        if (predicate.call(context, value, key, collection)) {\n          return iteratorValue(type, useKeys ? key : iterations++, value, step);\n        }\n      }\n    });\n  };\n\n  return filterSequence;\n}\n\nfunction countByFactory(collection, grouper, context) {\n  var groups = Map().asMutable();\n\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), 0, function (a) {\n      return a + 1;\n    });\n  });\n\n  return groups.asImmutable();\n}\n\nfunction groupByFactory(collection, grouper, context) {\n  var isKeyedIter = isKeyed(collection);\n  var groups = (isOrdered(collection) ? OrderedMap() : Map()).asMutable();\n\n  collection.__iterate(function (v, k) {\n    groups.update(grouper.call(context, v, k, collection), function (a) {\n      return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n    });\n  });\n\n  var coerce = collectionClass(collection);\n  return groups.map(function (arr) {\n    return reify(collection, coerce(arr));\n  }).asImmutable();\n}\n\nfunction sliceFactory(collection, begin, end, useKeys) {\n  var originalSize = collection.size;\n\n  if (wholeSlice(begin, end, originalSize)) {\n    return collection;\n  }\n\n  var resolvedBegin = resolveBegin(begin, originalSize);\n  var resolvedEnd = resolveEnd(end, originalSize); // begin or end will be NaN if they were provided as negative numbers and\n  // this collection's size is unknown. In that case, cache first so there is\n  // a known size and these do not resolve to NaN.\n\n  if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n    return sliceFactory(collection.toSeq().cacheResult(), begin, end, useKeys);\n  } // Note: resolvedEnd is undefined when the original sequence's length is\n  // unknown and this slice did not supply an end and should contain all\n  // elements after resolvedBegin.\n  // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\n\n  var resolvedSize = resolvedEnd - resolvedBegin;\n  var sliceSize;\n\n  if (resolvedSize === resolvedSize) {\n    sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n  }\n\n  var sliceSeq = makeSequence(collection); // If collection.size is undefined, the size of the realized sliceSeq is\n  // unknown at this point unless the number of items to slice is 0\n\n  sliceSeq.size = sliceSize === 0 ? sliceSize : collection.size && sliceSize || undefined;\n\n  if (!useKeys && isSeq(collection) && sliceSize >= 0) {\n    sliceSeq.get = function (index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index >= 0 && index < sliceSize ? collection.get(index + resolvedBegin, notSetValue) : notSetValue;\n    };\n  }\n\n  sliceSeq.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (sliceSize === 0) {\n      return 0;\n    }\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var skipped = 0;\n    var isSkipping = true;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k) {\n      if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1) !== false && iterations !== sliceSize;\n      }\n    });\n\n    return iterations;\n  };\n\n  sliceSeq.__iteratorUncached = function (type, reverse) {\n    if (sliceSize !== 0 && reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    } // Don't bother instantiating parent iterator if taking 0.\n\n\n    if (sliceSize === 0) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterator = collection.__iterator(type, reverse);\n\n    var skipped = 0;\n    var iterations = 0;\n    return new Iterator(function () {\n      while (skipped++ < resolvedBegin) {\n        iterator.next();\n      }\n\n      if (++iterations > sliceSize) {\n        return iteratorDone();\n      }\n\n      var step = iterator.next();\n\n      if (useKeys || type === ITERATE_VALUES || step.done) {\n        return step;\n      }\n\n      if (type === ITERATE_KEYS) {\n        return iteratorValue(type, iterations - 1, undefined, step);\n      }\n\n      return iteratorValue(type, iterations - 1, step.value[1], step);\n    });\n  };\n\n  return sliceSeq;\n}\n\nfunction takeWhileFactory(collection, predicate, context) {\n  var takeSequence = makeSequence(collection);\n\n  takeSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$1);\n    });\n\n    return iterations;\n  };\n\n  takeSequence.__iteratorUncached = function (type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var iterating = true;\n    return new Iterator(function () {\n      if (!iterating) {\n        return iteratorDone();\n      }\n\n      var step = iterator.next();\n\n      if (step.done) {\n        return step;\n      }\n\n      var entry = step.value;\n      var k = entry[0];\n      var v = entry[1];\n\n      if (!predicate.call(context, v, k, this$1)) {\n        iterating = false;\n        return iteratorDone();\n      }\n\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n\n  return takeSequence;\n}\n\nfunction skipWhileFactory(collection, predicate, context, useKeys) {\n  var skipSequence = makeSequence(collection);\n\n  skipSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var isSkipping = true;\n    var iterations = 0;\n\n    collection.__iterate(function (v, k, c) {\n      if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n        iterations++;\n        return fn(v, useKeys ? k : iterations - 1, this$1);\n      }\n    });\n\n    return iterations;\n  };\n\n  skipSequence.__iteratorUncached = function (type, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(ITERATE_ENTRIES, reverse);\n\n    var skipping = true;\n    var iterations = 0;\n    return new Iterator(function () {\n      var step;\n      var k;\n      var v;\n\n      do {\n        step = iterator.next();\n\n        if (step.done) {\n          if (useKeys || type === ITERATE_VALUES) {\n            return step;\n          }\n\n          if (type === ITERATE_KEYS) {\n            return iteratorValue(type, iterations++, undefined, step);\n          }\n\n          return iteratorValue(type, iterations++, step.value[1], step);\n        }\n\n        var entry = step.value;\n        k = entry[0];\n        v = entry[1];\n        skipping && (skipping = predicate.call(context, v, k, this$1));\n      } while (skipping);\n\n      return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n    });\n  };\n\n  return skipSequence;\n}\n\nfunction concatFactory(collection, values) {\n  var isKeyedCollection = isKeyed(collection);\n  var iters = [collection].concat(values).map(function (v) {\n    if (!isCollection(v)) {\n      v = isKeyedCollection ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n    } else if (isKeyedCollection) {\n      v = KeyedCollection(v);\n    }\n\n    return v;\n  }).filter(function (v) {\n    return v.size !== 0;\n  });\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (iters.length === 1) {\n    var singleton = iters[0];\n\n    if (singleton === collection || isKeyedCollection && isKeyed(singleton) || isIndexed(collection) && isIndexed(singleton)) {\n      return singleton;\n    }\n  }\n\n  var concatSeq = new ArraySeq(iters);\n\n  if (isKeyedCollection) {\n    concatSeq = concatSeq.toKeyedSeq();\n  } else if (!isIndexed(collection)) {\n    concatSeq = concatSeq.toSetSeq();\n  }\n\n  concatSeq = concatSeq.flatten(true);\n  concatSeq.size = iters.reduce(function (sum, seq) {\n    if (sum !== undefined) {\n      var size = seq.size;\n\n      if (size !== undefined) {\n        return sum + size;\n      }\n    }\n  }, 0);\n  return concatSeq;\n}\n\nfunction flattenFactory(collection, depth, useKeys) {\n  var flatSequence = makeSequence(collection);\n\n  flatSequence.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterations = 0;\n    var stopped = false;\n\n    function flatDeep(iter, currentDepth) {\n      iter.__iterate(function (v, k) {\n        if ((!depth || currentDepth < depth) && isCollection(v)) {\n          flatDeep(v, currentDepth + 1);\n        } else {\n          iterations++;\n\n          if (fn(v, useKeys ? k : iterations - 1, flatSequence) === false) {\n            stopped = true;\n          }\n        }\n\n        return !stopped;\n      }, reverse);\n    }\n\n    flatDeep(collection, 0);\n    return iterations;\n  };\n\n  flatSequence.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = collection.__iterator(type, reverse);\n\n    var stack = [];\n    var iterations = 0;\n    return new Iterator(function () {\n      while (iterator) {\n        var step = iterator.next();\n\n        if (step.done !== false) {\n          iterator = stack.pop();\n          continue;\n        }\n\n        var v = step.value;\n\n        if (type === ITERATE_ENTRIES) {\n          v = v[1];\n        }\n\n        if ((!depth || stack.length < depth) && isCollection(v)) {\n          stack.push(iterator);\n          iterator = v.__iterator(type, reverse);\n        } else {\n          return useKeys ? step : iteratorValue(type, iterations++, v, step);\n        }\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  return flatSequence;\n}\n\nfunction flatMapFactory(collection, mapper, context) {\n  var coerce = collectionClass(collection);\n  return collection.toSeq().map(function (v, k) {\n    return coerce(mapper.call(context, v, k, collection));\n  }).flatten(true);\n}\n\nfunction interposeFactory(collection, separator) {\n  var interposedSequence = makeSequence(collection);\n  interposedSequence.size = collection.size && collection.size * 2 - 1;\n\n  interposedSequence.__iterateUncached = function (fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n\n    collection.__iterate(function (v) {\n      return (!iterations || fn(separator, iterations++, this$1) !== false) && fn(v, iterations++, this$1) !== false;\n    }, reverse);\n\n    return iterations;\n  };\n\n  interposedSequence.__iteratorUncached = function (type, reverse) {\n    var iterator = collection.__iterator(ITERATE_VALUES, reverse);\n\n    var iterations = 0;\n    var step;\n    return new Iterator(function () {\n      if (!step || iterations % 2) {\n        step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n      }\n\n      return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  return interposedSequence;\n}\n\nfunction sortFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n\n  var isKeyedCollection = isKeyed(collection);\n  var index = 0;\n  var entries = collection.toSeq().map(function (v, k) {\n    return [k, v, index++, mapper ? mapper(v, k, collection) : v];\n  }).valueSeq().toArray();\n  entries.sort(function (a, b) {\n    return comparator(a[3], b[3]) || a[2] - b[2];\n  }).forEach(isKeyedCollection ? function (v, i) {\n    entries[i].length = 2;\n  } : function (v, i) {\n    entries[i] = v[1];\n  });\n  return isKeyedCollection ? KeyedSeq(entries) : isIndexed(collection) ? IndexedSeq(entries) : SetSeq(entries);\n}\n\nfunction maxFactory(collection, comparator, mapper) {\n  if (!comparator) {\n    comparator = defaultComparator;\n  }\n\n  if (mapper) {\n    var entry = collection.toSeq().map(function (v, k) {\n      return [v, mapper(v, k, collection)];\n    }).reduce(function (a, b) {\n      return maxCompare(comparator, a[1], b[1]) ? b : a;\n    });\n    return entry && entry[0];\n  }\n\n  return collection.reduce(function (a, b) {\n    return maxCompare(comparator, a, b) ? b : a;\n  });\n}\n\nfunction maxCompare(comparator, a, b) {\n  var comp = comparator(b, a); // b is considered the new max if the comparator declares them equal, but\n  // they are not equal and b is in fact a nullish value.\n\n  return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n}\n\nfunction zipWithFactory(keyIter, zipper, iters, zipAll) {\n  var zipSequence = makeSequence(keyIter);\n  var sizes = new ArraySeq(iters).map(function (i) {\n    return i.size;\n  });\n  zipSequence.size = zipAll ? sizes.max() : sizes.min(); // Note: this a generic base implementation of __iterate in terms of\n  // __iterator which may be more generically useful in the future.\n\n  zipSequence.__iterate = function (fn, reverse) {\n    /* generic:\n    var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n    var step;\n    var iterations = 0;\n    while (!(step = iterator.next()).done) {\n      iterations++;\n      if (fn(step.value[1], step.value[0], this) === false) {\n        break;\n      }\n    }\n    return iterations;\n    */\n    // indexed:\n    var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\n    var step;\n    var iterations = 0;\n\n    while (!(step = iterator.next()).done) {\n      if (fn(step.value, iterations++, this) === false) {\n        break;\n      }\n    }\n\n    return iterations;\n  };\n\n  zipSequence.__iteratorUncached = function (type, reverse) {\n    var iterators = iters.map(function (i) {\n      return i = Collection(i), getIterator(reverse ? i.reverse() : i);\n    });\n    var iterations = 0;\n    var isDone = false;\n    return new Iterator(function () {\n      var steps;\n\n      if (!isDone) {\n        steps = iterators.map(function (i) {\n          return i.next();\n        });\n        isDone = zipAll ? steps.every(function (s) {\n          return s.done;\n        }) : steps.some(function (s) {\n          return s.done;\n        });\n      }\n\n      if (isDone) {\n        return iteratorDone();\n      }\n\n      return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n        return s.value;\n      })));\n    });\n  };\n\n  return zipSequence;\n} // #pragma Helper Functions\n\n\nfunction reify(iter, seq) {\n  return iter === seq ? iter : isSeq(iter) ? seq : iter.constructor(seq);\n}\n\nfunction validateEntry(entry) {\n  if (entry !== Object(entry)) {\n    throw new TypeError('Expected [K, V] tuple: ' + entry);\n  }\n}\n\nfunction collectionClass(collection) {\n  return isKeyed(collection) ? KeyedCollection : isIndexed(collection) ? IndexedCollection : SetCollection;\n}\n\nfunction makeSequence(collection) {\n  return Object.create((isKeyed(collection) ? KeyedSeq : isIndexed(collection) ? IndexedSeq : SetSeq).prototype);\n}\n\nfunction cacheResultThrough() {\n  if (this._iter.cacheResult) {\n    this._iter.cacheResult();\n\n    this.size = this._iter.size;\n    return this;\n  }\n\n  return Seq.prototype.cacheResult.call(this);\n}\n\nfunction defaultComparator(a, b) {\n  if (a === undefined && b === undefined) {\n    return 0;\n  }\n\n  if (a === undefined) {\n    return 1;\n  }\n\n  if (b === undefined) {\n    return -1;\n  }\n\n  return a > b ? 1 : a < b ? -1 : 0;\n} // http://jsperf.com/copy-array-inline\n\n\nfunction arrCopy(arr, offset) {\n  offset = offset || 0;\n  var len = Math.max(0, arr.length - offset);\n  var newArr = new Array(len);\n\n  for (var ii = 0; ii < len; ii++) {\n    newArr[ii] = arr[ii + offset];\n  }\n\n  return newArr;\n}\n\nfunction invariant(condition, error) {\n  if (!condition) {\n    throw new Error(error);\n  }\n}\n\nfunction assertNotInfinite(size) {\n  invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n}\n\nfunction coerceKeyPath(keyPath) {\n  if (isArrayLike(keyPath) && typeof keyPath !== 'string') {\n    return keyPath;\n  }\n\n  if (isOrdered(keyPath)) {\n    return keyPath.toArray();\n  }\n\n  throw new TypeError('Invalid keyPath: expected Ordered Collection or Array: ' + keyPath);\n}\n\nfunction isPlainObj(value) {\n  return value && (typeof value.constructor !== 'function' || value.constructor.name === 'Object');\n}\n/**\n * Returns true if the value is a potentially-persistent data structure, either\n * provided by Immutable.js or a plain Array or Object.\n */\n\n\nfunction isDataStructure(value) {\n  return _typeof(value) === 'object' && (isImmutable(value) || Array.isArray(value) || isPlainObj(value));\n}\n/**\n * Converts a value to a string, adding quotes if a string was provided.\n */\n\n\nfunction quoteString(value) {\n  try {\n    return typeof value === 'string' ? JSON.stringify(value) : String(value);\n  } catch (_ignoreError) {\n    return JSON.stringify(value);\n  }\n}\n\nfunction has(collection, key) {\n  return isImmutable(collection) ? collection.has(key) : isDataStructure(collection) && hasOwnProperty.call(collection, key);\n}\n\nfunction get(collection, key, notSetValue) {\n  return isImmutable(collection) ? collection.get(key, notSetValue) : !has(collection, key) ? notSetValue : typeof collection.get === 'function' ? collection.get(key) : collection[key];\n}\n\nfunction shallowCopy(from) {\n  if (Array.isArray(from)) {\n    return arrCopy(from);\n  }\n\n  var to = {};\n\n  for (var key in from) {\n    if (hasOwnProperty.call(from, key)) {\n      to[key] = from[key];\n    }\n  }\n\n  return to;\n}\n\nfunction remove(collection, key) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot update non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    if (!collection.remove) {\n      throw new TypeError('Cannot update immutable value without .remove() method: ' + collection);\n    }\n\n    return collection.remove(key);\n  }\n\n  if (!hasOwnProperty.call(collection, key)) {\n    return collection;\n  }\n\n  var collectionCopy = shallowCopy(collection);\n\n  if (Array.isArray(collectionCopy)) {\n    collectionCopy.splice(key, 1);\n  } else {\n    delete collectionCopy[key];\n  }\n\n  return collectionCopy;\n}\n\nfunction set(collection, key, value) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot update non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    if (!collection.set) {\n      throw new TypeError('Cannot update immutable value without .set() method: ' + collection);\n    }\n\n    return collection.set(key, value);\n  }\n\n  if (hasOwnProperty.call(collection, key) && value === collection[key]) {\n    return collection;\n  }\n\n  var collectionCopy = shallowCopy(collection);\n  collectionCopy[key] = value;\n  return collectionCopy;\n}\n\nfunction updateIn(collection, keyPath, notSetValue, updater) {\n  if (!updater) {\n    updater = notSetValue;\n    notSetValue = undefined;\n  }\n\n  var updatedValue = updateInDeeply(isImmutable(collection), collection, coerceKeyPath(keyPath), 0, notSetValue, updater);\n  return updatedValue === NOT_SET ? notSetValue : updatedValue;\n}\n\nfunction updateInDeeply(inImmutable, existing, keyPath, i, notSetValue, updater) {\n  var wasNotSet = existing === NOT_SET;\n\n  if (i === keyPath.length) {\n    var existingValue = wasNotSet ? notSetValue : existing;\n    var newValue = updater(existingValue);\n    return newValue === existingValue ? existing : newValue;\n  }\n\n  if (!wasNotSet && !isDataStructure(existing)) {\n    throw new TypeError('Cannot update within non-data-structure value in path [' + keyPath.slice(0, i).map(quoteString) + ']: ' + existing);\n  }\n\n  var key = keyPath[i];\n  var nextExisting = wasNotSet ? NOT_SET : get(existing, key, NOT_SET);\n  var nextUpdated = updateInDeeply(nextExisting === NOT_SET ? inImmutable : isImmutable(nextExisting), nextExisting, keyPath, i + 1, notSetValue, updater);\n  return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? remove(existing, key) : set(wasNotSet ? inImmutable ? emptyMap() : {} : existing, key, nextUpdated);\n}\n\nfunction setIn(collection, keyPath, value) {\n  return updateIn(collection, keyPath, NOT_SET, function () {\n    return value;\n  });\n}\n\nfunction setIn$1(keyPath, v) {\n  return setIn(this, keyPath, v);\n}\n\nfunction removeIn(collection, keyPath) {\n  return updateIn(collection, keyPath, function () {\n    return NOT_SET;\n  });\n}\n\nfunction deleteIn(keyPath) {\n  return removeIn(this, keyPath);\n}\n\nfunction update(collection, key, notSetValue, updater) {\n  return updateIn(collection, [key], notSetValue, updater);\n}\n\nfunction update$1(key, notSetValue, updater) {\n  return arguments.length === 1 ? key(this) : update(this, key, notSetValue, updater);\n}\n\nfunction updateIn$1(keyPath, notSetValue, updater) {\n  return updateIn(this, keyPath, notSetValue, updater);\n}\n\nfunction merge() {\n  var iters = [],\n      len = arguments.length;\n\n  while (len--) {\n    iters[len] = arguments[len];\n  }\n\n  return mergeIntoKeyedWith(this, iters);\n}\n\nfunction mergeWith(merger) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    iters[len] = arguments[len + 1];\n  }\n\n  if (typeof merger !== 'function') {\n    throw new TypeError('Invalid merger function: ' + merger);\n  }\n\n  return mergeIntoKeyedWith(this, iters, merger);\n}\n\nfunction mergeIntoKeyedWith(collection, collections, merger) {\n  var iters = [];\n\n  for (var ii = 0; ii < collections.length; ii++) {\n    var collection$1 = KeyedCollection(collections[ii]);\n\n    if (collection$1.size !== 0) {\n      iters.push(collection$1);\n    }\n  }\n\n  if (iters.length === 0) {\n    return collection;\n  }\n\n  if (collection.toSeq().size === 0 && !collection.__ownerID && iters.length === 1) {\n    return collection.constructor(iters[0]);\n  }\n\n  return collection.withMutations(function (collection) {\n    var mergeIntoCollection = merger ? function (value, key) {\n      update(collection, key, NOT_SET, function (oldVal) {\n        return oldVal === NOT_SET ? value : merger(oldVal, value, key);\n      });\n    } : function (value, key) {\n      collection.set(key, value);\n    };\n\n    for (var ii = 0; ii < iters.length; ii++) {\n      iters[ii].forEach(mergeIntoCollection);\n    }\n  });\n}\n\nfunction merge$1(collection) {\n  var sources = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    sources[len] = arguments[len + 1];\n  }\n\n  return mergeWithSources(collection, sources);\n}\n\nfunction mergeWith$1(merger, collection) {\n  var sources = [],\n      len = arguments.length - 2;\n\n  while (len-- > 0) {\n    sources[len] = arguments[len + 2];\n  }\n\n  return mergeWithSources(collection, sources, merger);\n}\n\nfunction mergeDeep(collection) {\n  var sources = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    sources[len] = arguments[len + 1];\n  }\n\n  return mergeDeepWithSources(collection, sources);\n}\n\nfunction mergeDeepWith(merger, collection) {\n  var sources = [],\n      len = arguments.length - 2;\n\n  while (len-- > 0) {\n    sources[len] = arguments[len + 2];\n  }\n\n  return mergeDeepWithSources(collection, sources, merger);\n}\n\nfunction mergeDeepWithSources(collection, sources, merger) {\n  return mergeWithSources(collection, sources, deepMergerWith(merger));\n}\n\nfunction mergeWithSources(collection, sources, merger) {\n  if (!isDataStructure(collection)) {\n    throw new TypeError('Cannot merge into non-data-structure value: ' + collection);\n  }\n\n  if (isImmutable(collection)) {\n    return typeof merger === 'function' && collection.mergeWith ? collection.mergeWith.apply(collection, [merger].concat(sources)) : collection.merge ? collection.merge.apply(collection, sources) : collection.concat.apply(collection, sources);\n  }\n\n  var isArray = Array.isArray(collection);\n  var merged = collection;\n  var Collection$$1 = isArray ? IndexedCollection : KeyedCollection;\n  var mergeItem = isArray ? function (value) {\n    // Copy on write\n    if (merged === collection) {\n      merged = shallowCopy(merged);\n    }\n\n    merged.push(value);\n  } : function (value, key) {\n    var hasVal = hasOwnProperty.call(merged, key);\n    var nextVal = hasVal && merger ? merger(merged[key], value, key) : value;\n\n    if (!hasVal || nextVal !== merged[key]) {\n      // Copy on write\n      if (merged === collection) {\n        merged = shallowCopy(merged);\n      }\n\n      merged[key] = nextVal;\n    }\n  };\n\n  for (var i = 0; i < sources.length; i++) {\n    Collection$$1(sources[i]).forEach(mergeItem);\n  }\n\n  return merged;\n}\n\nfunction deepMergerWith(merger) {\n  function deepMerger(oldValue, newValue, key) {\n    return isDataStructure(oldValue) && isDataStructure(newValue) ? mergeWithSources(oldValue, [newValue], deepMerger) : merger ? merger(oldValue, newValue, key) : newValue;\n  }\n\n  return deepMerger;\n}\n\nfunction mergeDeep$1() {\n  var iters = [],\n      len = arguments.length;\n\n  while (len--) {\n    iters[len] = arguments[len];\n  }\n\n  return mergeDeepWithSources(this, iters);\n}\n\nfunction mergeDeepWith$1(merger) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    iters[len] = arguments[len + 1];\n  }\n\n  return mergeDeepWithSources(this, iters, merger);\n}\n\nfunction mergeIn(keyPath) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    iters[len] = arguments[len + 1];\n  }\n\n  return updateIn(this, keyPath, emptyMap(), function (m) {\n    return mergeWithSources(m, iters);\n  });\n}\n\nfunction mergeDeepIn(keyPath) {\n  var iters = [],\n      len = arguments.length - 1;\n\n  while (len-- > 0) {\n    iters[len] = arguments[len + 1];\n  }\n\n  return updateIn(this, keyPath, emptyMap(), function (m) {\n    return mergeDeepWithSources(m, iters);\n  });\n}\n\nfunction withMutations(fn) {\n  var mutable = this.asMutable();\n  fn(mutable);\n  return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n}\n\nfunction asMutable() {\n  return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n}\n\nfunction asImmutable() {\n  return this.__ensureOwner();\n}\n\nfunction wasAltered() {\n  return this.__altered;\n}\n\nvar Map =\n/*@__PURE__*/\nfunction (KeyedCollection$$1) {\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedCollection$$1(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  if (KeyedCollection$$1) Map.__proto__ = KeyedCollection$$1;\n  Map.prototype = Object.create(KeyedCollection$$1 && KeyedCollection$$1.prototype);\n  Map.prototype.constructor = Map;\n\n  Map.of = function of() {\n    var keyValues = [],\n        len = arguments.length;\n\n    while (len--) {\n      keyValues[len] = arguments[len];\n    }\n\n    return emptyMap().withMutations(function (map) {\n      for (var i = 0; i < keyValues.length; i += 2) {\n        if (i + 1 >= keyValues.length) {\n          throw new Error('Missing value for key: ' + keyValues[i]);\n        }\n\n        map.set(keyValues[i], keyValues[i + 1]);\n      }\n    });\n  };\n\n  Map.prototype.toString = function toString() {\n    return this.__toString('Map {', '}');\n  }; // @pragma Access\n\n\n  Map.prototype.get = function get(k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  }; // @pragma Modification\n\n\n  Map.prototype.set = function set(k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.remove = function remove(k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteAll = function deleteAll(keys) {\n    var collection = Collection(keys);\n\n    if (collection.size === 0) {\n      return this;\n    }\n\n    return this.withMutations(function (map) {\n      collection.forEach(function (key) {\n        return map.remove(key);\n      });\n    });\n  };\n\n  Map.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyMap();\n  }; // @pragma Composition\n\n\n  Map.prototype.sort = function sort(comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function sortBy(mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  };\n\n  Map.prototype.map = function map(mapper, context) {\n    return this.withMutations(function (map) {\n      map.forEach(function (value, key) {\n        map.set(key, mapper.call(context, value, key, map));\n      });\n    });\n  }; // @pragma Mutability\n\n\n  Map.prototype.__iterator = function __iterator(type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$1);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyMap();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  return Map;\n}(KeyedCollection);\n\nMap.isMap = isMap;\nvar MapPrototype = Map.prototype;\nMapPrototype[IS_MAP_SYMBOL] = true;\nMapPrototype[DELETE] = MapPrototype.remove;\nMapPrototype.removeAll = MapPrototype.deleteAll;\nMapPrototype.setIn = setIn$1;\nMapPrototype.removeIn = MapPrototype.deleteIn = deleteIn;\nMapPrototype.update = update$1;\nMapPrototype.updateIn = updateIn$1;\nMapPrototype.merge = MapPrototype.concat = merge;\nMapPrototype.mergeWith = mergeWith;\nMapPrototype.mergeDeep = mergeDeep$1;\nMapPrototype.mergeDeepWith = mergeDeepWith$1;\nMapPrototype.mergeIn = mergeIn;\nMapPrototype.mergeDeepIn = mergeDeepIn;\nMapPrototype.withMutations = withMutations;\nMapPrototype.wasAltered = wasAltered;\nMapPrototype.asImmutable = asImmutable;\nMapPrototype['@@transducer/init'] = MapPrototype.asMutable = asMutable;\n\nMapPrototype['@@transducer/step'] = function (result, arr) {\n  return result.set(arr[0], arr[1]);\n};\n\nMapPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n}; // #pragma Trie Nodes\n\n\nvar ArrayMapNode = function ArrayMapNode(ownerID, entries) {\n  this.ownerID = ownerID;\n  this.entries = entries;\n};\n\nArrayMapNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n\n  return notSetValue;\n};\n\nArrayMapNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && entries.length === 1) {\n    return; // undefined\n  }\n\n  if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n    return createNodes(ownerID, entries, key, value);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new ArrayMapNode(ownerID, newEntries);\n};\n\nvar BitmapIndexedNode = function BitmapIndexedNode(ownerID, bitmap, nodes) {\n  this.ownerID = ownerID;\n  this.bitmap = bitmap;\n  this.nodes = nodes;\n};\n\nBitmapIndexedNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n  var bitmap = this.bitmap;\n  return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n};\n\nBitmapIndexedNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var bit = 1 << keyHashFrag;\n  var bitmap = this.bitmap;\n  var exists = (bitmap & bit) !== 0;\n\n  if (!exists && value === NOT_SET) {\n    return this;\n  }\n\n  var idx = popCount(bitmap & bit - 1);\n  var nodes = this.nodes;\n  var node = exists ? nodes[idx] : undefined;\n  var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n  if (newNode === node) {\n    return this;\n  }\n\n  if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n    return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n  }\n\n  if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n    return nodes[idx ^ 1];\n  }\n\n  if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n    return newNode;\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n  var newNodes = exists ? newNode ? setAt(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.bitmap = newBitmap;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n};\n\nvar HashArrayMapNode = function HashArrayMapNode(ownerID, count, nodes) {\n  this.ownerID = ownerID;\n  this.count = count;\n  this.nodes = nodes;\n};\n\nHashArrayMapNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var node = this.nodes[idx];\n  return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n};\n\nHashArrayMapNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var removed = value === NOT_SET;\n  var nodes = this.nodes;\n  var node = nodes[idx];\n\n  if (removed && !node) {\n    return this;\n  }\n\n  var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n  if (newNode === node) {\n    return this;\n  }\n\n  var newCount = this.count;\n\n  if (!node) {\n    newCount++;\n  } else if (!newNode) {\n    newCount--;\n\n    if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n      return packNodes(ownerID, nodes, newCount, idx);\n    }\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newNodes = setAt(nodes, idx, newNode, isEditable);\n\n  if (isEditable) {\n    this.count = newCount;\n    this.nodes = newNodes;\n    return this;\n  }\n\n  return new HashArrayMapNode(ownerID, newCount, newNodes);\n};\n\nvar HashCollisionNode = function HashCollisionNode(ownerID, keyHash, entries) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entries = entries;\n};\n\nHashCollisionNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  var entries = this.entries;\n\n  for (var ii = 0, len = entries.length; ii < len; ii++) {\n    if (is(key, entries[ii][0])) {\n      return entries[ii][1];\n    }\n  }\n\n  return notSetValue;\n};\n\nHashCollisionNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (keyHash === undefined) {\n    keyHash = hash(key);\n  }\n\n  var removed = value === NOT_SET;\n\n  if (keyHash !== this.keyHash) {\n    if (removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n  }\n\n  var entries = this.entries;\n  var idx = 0;\n  var len = entries.length;\n\n  for (; idx < len; idx++) {\n    if (is(key, entries[idx][0])) {\n      break;\n    }\n  }\n\n  var exists = idx < len;\n\n  if (exists ? entries[idx][1] === value : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n  (removed || !exists) && SetRef(didChangeSize);\n\n  if (removed && len === 2) {\n    return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n  }\n\n  var isEditable = ownerID && ownerID === this.ownerID;\n  var newEntries = isEditable ? entries : arrCopy(entries);\n\n  if (exists) {\n    if (removed) {\n      idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n    } else {\n      newEntries[idx] = [key, value];\n    }\n  } else {\n    newEntries.push([key, value]);\n  }\n\n  if (isEditable) {\n    this.entries = newEntries;\n    return this;\n  }\n\n  return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n};\n\nvar ValueNode = function ValueNode(ownerID, keyHash, entry) {\n  this.ownerID = ownerID;\n  this.keyHash = keyHash;\n  this.entry = entry;\n};\n\nValueNode.prototype.get = function get(shift, keyHash, key, notSetValue) {\n  return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n};\n\nValueNode.prototype.update = function update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  var removed = value === NOT_SET;\n  var keyMatch = is(key, this.entry[0]);\n\n  if (keyMatch ? value === this.entry[1] : removed) {\n    return this;\n  }\n\n  SetRef(didAlter);\n\n  if (removed) {\n    SetRef(didChangeSize);\n    return; // undefined\n  }\n\n  if (keyMatch) {\n    if (ownerID && ownerID === this.ownerID) {\n      this.entry[1] = value;\n      return this;\n    }\n\n    return new ValueNode(ownerID, this.keyHash, [key, value]);\n  }\n\n  SetRef(didChangeSize);\n  return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n}; // #pragma Iterators\n\n\nArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n  var entries = this.entries;\n\n  for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n    if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n      return false;\n    }\n  }\n};\n\nBitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n  var nodes = this.nodes;\n\n  for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n    var node = nodes[reverse ? maxIndex - ii : ii];\n\n    if (node && node.iterate(fn, reverse) === false) {\n      return false;\n    }\n  }\n}; // eslint-disable-next-line no-unused-vars\n\n\nValueNode.prototype.iterate = function (fn, reverse) {\n  return fn(this.entry);\n};\n\nvar MapIterator =\n/*@__PURE__*/\nfunction (Iterator$$1) {\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  if (Iterator$$1) MapIterator.__proto__ = Iterator$$1;\n  MapIterator.prototype = Object.create(Iterator$$1 && Iterator$$1.prototype);\n  MapIterator.prototype.constructor = MapIterator;\n\n  MapIterator.prototype.next = function next() {\n    var type = this._type;\n    var stack = this._stack;\n\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex = void 0;\n\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n\n          continue;\n        }\n      }\n\n      stack = this._stack = this._stack.__prev;\n    }\n\n    return iteratorDone();\n  };\n\n  return MapIterator;\n}(Iterator);\n\nfunction mapIteratorValue(type, entry) {\n  return iteratorValue(type, entry[0], entry[1]);\n}\n\nfunction mapIteratorFrame(node, prev) {\n  return {\n    node: node,\n    index: 0,\n    __prev: prev\n  };\n}\n\nfunction makeMap(size, root, ownerID, hash$$1) {\n  var map = Object.create(MapPrototype);\n  map.size = size;\n  map._root = root;\n  map.__ownerID = ownerID;\n  map.__hash = hash$$1;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_MAP;\n\nfunction emptyMap() {\n  return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n}\n\nfunction updateMap(map, k, v) {\n  var newRoot;\n  var newSize;\n\n  if (!map._root) {\n    if (v === NOT_SET) {\n      return map;\n    }\n\n    newSize = 1;\n    newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n  } else {\n    var didChangeSize = MakeRef();\n    var didAlter = MakeRef();\n    newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\n    if (!didAlter.value) {\n      return map;\n    }\n\n    newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n  }\n\n  if (map.__ownerID) {\n    map.size = newSize;\n    map._root = newRoot;\n    map.__hash = undefined;\n    map.__altered = true;\n    return map;\n  }\n\n  return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n}\n\nfunction updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n  if (!node) {\n    if (value === NOT_SET) {\n      return node;\n    }\n\n    SetRef(didAlter);\n    SetRef(didChangeSize);\n    return new ValueNode(ownerID, keyHash, [key, value]);\n  }\n\n  return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n}\n\nfunction isLeafNode(node) {\n  return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n}\n\nfunction mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n  if (node.keyHash === keyHash) {\n    return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n  }\n\n  var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n  var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n  var newNode;\n  var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n  return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n}\n\nfunction createNodes(ownerID, entries, key, value) {\n  if (!ownerID) {\n    ownerID = new OwnerID();\n  }\n\n  var node = new ValueNode(ownerID, hash(key), [key, value]);\n\n  for (var ii = 0; ii < entries.length; ii++) {\n    var entry = entries[ii];\n    node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n  }\n\n  return node;\n}\n\nfunction packNodes(ownerID, nodes, count, excluding) {\n  var bitmap = 0;\n  var packedII = 0;\n  var packedNodes = new Array(count);\n\n  for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n    var node = nodes[ii];\n\n    if (node !== undefined && ii !== excluding) {\n      bitmap |= bit;\n      packedNodes[packedII++] = node;\n    }\n  }\n\n  return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n}\n\nfunction expandNodes(ownerID, nodes, bitmap, including, node) {\n  var count = 0;\n  var expandedNodes = new Array(SIZE);\n\n  for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n    expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n  }\n\n  expandedNodes[including] = node;\n  return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n}\n\nfunction popCount(x) {\n  x -= x >> 1 & 0x55555555;\n  x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n  x = x + (x >> 4) & 0x0f0f0f0f;\n  x += x >> 8;\n  x += x >> 16;\n  return x & 0x7f;\n}\n\nfunction setAt(array, idx, val, canEdit) {\n  var newArray = canEdit ? array : arrCopy(array);\n  newArray[idx] = val;\n  return newArray;\n}\n\nfunction spliceIn(array, idx, val, canEdit) {\n  var newLen = array.length + 1;\n\n  if (canEdit && idx + 1 === newLen) {\n    array[idx] = val;\n    return array;\n  }\n\n  var newArray = new Array(newLen);\n  var after = 0;\n\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      newArray[ii] = val;\n      after = -1;\n    } else {\n      newArray[ii] = array[ii + after];\n    }\n  }\n\n  return newArray;\n}\n\nfunction spliceOut(array, idx, canEdit) {\n  var newLen = array.length - 1;\n\n  if (canEdit && idx === newLen) {\n    array.pop();\n    return array;\n  }\n\n  var newArray = new Array(newLen);\n  var after = 0;\n\n  for (var ii = 0; ii < newLen; ii++) {\n    if (ii === idx) {\n      after = 1;\n    }\n\n    newArray[ii] = array[ii + after];\n  }\n\n  return newArray;\n}\n\nvar MAX_ARRAY_MAP_SIZE = SIZE / 4;\nvar MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\nvar MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\nvar IS_LIST_SYMBOL = '@@__IMMUTABLE_LIST__@@';\n\nfunction isList(maybeList) {\n  return Boolean(maybeList && maybeList[IS_LIST_SYMBOL]);\n}\n\nvar List =\n/*@__PURE__*/\nfunction (IndexedCollection$$1) {\n  function List(value) {\n    var empty = emptyList();\n\n    if (value === null || value === undefined) {\n      return empty;\n    }\n\n    if (isList(value)) {\n      return value;\n    }\n\n    var iter = IndexedCollection$$1(value);\n    var size = iter.size;\n\n    if (size === 0) {\n      return empty;\n    }\n\n    assertNotInfinite(size);\n\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  if (IndexedCollection$$1) List.__proto__ = IndexedCollection$$1;\n  List.prototype = Object.create(IndexedCollection$$1 && IndexedCollection$$1.prototype);\n  List.prototype.constructor = List;\n\n  List.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function toString() {\n    return this.__toString('List [', ']');\n  }; // @pragma Access\n\n\n  List.prototype.get = function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n\n    return notSetValue;\n  }; // @pragma Modification\n\n\n  List.prototype.set = function set(index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function remove(index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function insert(index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyList();\n  };\n\n  List.prototype.push = function push()\n  /*...values*/\n  {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function pop() {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function unshift()\n  /*...values*/\n  {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function shift() {\n    return setListBounds(this, 1);\n  }; // @pragma Composition\n\n\n  List.prototype.concat = function concat()\n  /*...collections*/\n  {\n    var arguments$1 = arguments;\n    var seqs = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var argument = arguments$1[i];\n      var seq = IndexedCollection$$1(typeof argument !== 'string' && hasIterator(argument) ? argument : [argument]);\n\n      if (seq.size !== 0) {\n        seqs.push(seq);\n      }\n    }\n\n    if (seqs.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && seqs.length === 1) {\n      return this.constructor(seqs[0]);\n    }\n\n    return this.withMutations(function (list) {\n      seqs.forEach(function (seq) {\n        return seq.forEach(function (value) {\n          return list.push(value);\n        });\n      });\n    });\n  };\n\n  List.prototype.setSize = function setSize(size) {\n    return setListBounds(this, 0, size);\n  };\n\n  List.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    return this.withMutations(function (list) {\n      for (var i = 0; i < this$1.size; i++) {\n        list.set(i, mapper.call(context, list.get(i), i, list));\n      }\n    });\n  }; // @pragma Iteration\n\n\n  List.prototype.slice = function slice(begin, end) {\n    var size = this.size;\n\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function __iterator(type, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, reverse ? --index : index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function __iterate(fn, reverse) {\n    var index = reverse ? this.size : 0;\n    var values = iterateList(this, reverse);\n    var value;\n\n    while ((value = values()) !== DONE) {\n      if (fn(value, reverse ? --index : index++, this) === false) {\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyList();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  return List;\n}(IndexedCollection);\n\nList.isList = isList;\nvar ListPrototype = List.prototype;\nListPrototype[IS_LIST_SYMBOL] = true;\nListPrototype[DELETE] = ListPrototype.remove;\nListPrototype.merge = ListPrototype.concat;\nListPrototype.setIn = setIn$1;\nListPrototype.deleteIn = ListPrototype.removeIn = deleteIn;\nListPrototype.update = update$1;\nListPrototype.updateIn = updateIn$1;\nListPrototype.mergeIn = mergeIn;\nListPrototype.mergeDeepIn = mergeDeepIn;\nListPrototype.withMutations = withMutations;\nListPrototype.wasAltered = wasAltered;\nListPrototype.asImmutable = asImmutable;\nListPrototype['@@transducer/init'] = ListPrototype.asMutable = asMutable;\n\nListPrototype['@@transducer/step'] = function (result, arr) {\n  return result.push(arr);\n};\n\nListPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nvar VNode = function VNode(array, ownerID) {\n  this.array = array;\n  this.ownerID = ownerID;\n}; // TODO: seems like these methods are very similar\n\n\nVNode.prototype.removeBefore = function removeBefore(ownerID, level, index) {\n  if (index === level ? 1 << level : this.array.length === 0) {\n    return this;\n  }\n\n  var originIndex = index >>> level & MASK;\n\n  if (originIndex >= this.array.length) {\n    return new VNode([], ownerID);\n  }\n\n  var removingFirst = originIndex === 0;\n  var newChild;\n\n  if (level > 0) {\n    var oldChild = this.array[originIndex];\n    newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\n    if (newChild === oldChild && removingFirst) {\n      return this;\n    }\n  }\n\n  if (removingFirst && !newChild) {\n    return this;\n  }\n\n  var editable = editableVNode(this, ownerID);\n\n  if (!removingFirst) {\n    for (var ii = 0; ii < originIndex; ii++) {\n      editable.array[ii] = undefined;\n    }\n  }\n\n  if (newChild) {\n    editable.array[originIndex] = newChild;\n  }\n\n  return editable;\n};\n\nVNode.prototype.removeAfter = function removeAfter(ownerID, level, index) {\n  if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n    return this;\n  }\n\n  var sizeIndex = index - 1 >>> level & MASK;\n\n  if (sizeIndex >= this.array.length) {\n    return this;\n  }\n\n  var newChild;\n\n  if (level > 0) {\n    var oldChild = this.array[sizeIndex];\n    newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\n    if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n      return this;\n    }\n  }\n\n  var editable = editableVNode(this, ownerID);\n  editable.array.splice(sizeIndex + 1);\n\n  if (newChild) {\n    editable.array[sizeIndex] = newChild;\n  }\n\n  return editable;\n};\n\nvar DONE = {};\n\nfunction iterateList(list, reverse) {\n  var left = list._origin;\n  var right = list._capacity;\n  var tailPos = getTailOffset(right);\n  var tail = list._tail;\n  return iterateNodeOrLeaf(list._root, list._level, 0);\n\n  function iterateNodeOrLeaf(node, level, offset) {\n    return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n  }\n\n  function iterateLeaf(node, offset) {\n    var array = offset === tailPos ? tail && tail.array : node && node.array;\n    var from = offset > left ? 0 : left - offset;\n    var to = right - offset;\n\n    if (to > SIZE) {\n      to = SIZE;\n    }\n\n    return function () {\n      if (from === to) {\n        return DONE;\n      }\n\n      var idx = reverse ? --to : from++;\n      return array && array[idx];\n    };\n  }\n\n  function iterateNode(node, level, offset) {\n    var values;\n    var array = node && node.array;\n    var from = offset > left ? 0 : left - offset >> level;\n    var to = (right - offset >> level) + 1;\n\n    if (to > SIZE) {\n      to = SIZE;\n    }\n\n    return function () {\n      while (true) {\n        if (values) {\n          var value = values();\n\n          if (value !== DONE) {\n            return value;\n          }\n\n          values = null;\n        }\n\n        if (from === to) {\n          return DONE;\n        }\n\n        var idx = reverse ? --to : from++;\n        values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n      }\n    };\n  }\n}\n\nfunction makeList(origin, capacity, level, root, tail, ownerID, hash) {\n  var list = Object.create(ListPrototype);\n  list.size = capacity - origin;\n  list._origin = origin;\n  list._capacity = capacity;\n  list._level = level;\n  list._root = root;\n  list._tail = tail;\n  list.__ownerID = ownerID;\n  list.__hash = hash;\n  list.__altered = false;\n  return list;\n}\n\nvar EMPTY_LIST;\n\nfunction emptyList() {\n  return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n}\n\nfunction updateList(list, index, value) {\n  index = wrapIndex(list, index);\n\n  if (index !== index) {\n    return list;\n  }\n\n  if (index >= list.size || index < 0) {\n    return list.withMutations(function (list) {\n      index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n    });\n  }\n\n  index += list._origin;\n  var newTail = list._tail;\n  var newRoot = list._root;\n  var didAlter = MakeRef();\n\n  if (index >= getTailOffset(list._capacity)) {\n    newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n  } else {\n    newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n  }\n\n  if (!didAlter.value) {\n    return list;\n  }\n\n  if (list.__ownerID) {\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n\n  return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n}\n\nfunction updateVNode(node, ownerID, level, index, value, didAlter) {\n  var idx = index >>> level & MASK;\n  var nodeHas = node && idx < node.array.length;\n\n  if (!nodeHas && value === undefined) {\n    return node;\n  }\n\n  var newNode;\n\n  if (level > 0) {\n    var lowerNode = node && node.array[idx];\n    var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\n    if (newLowerNode === lowerNode) {\n      return node;\n    }\n\n    newNode = editableVNode(node, ownerID);\n    newNode.array[idx] = newLowerNode;\n    return newNode;\n  }\n\n  if (nodeHas && node.array[idx] === value) {\n    return node;\n  }\n\n  if (didAlter) {\n    SetRef(didAlter);\n  }\n\n  newNode = editableVNode(node, ownerID);\n\n  if (value === undefined && idx === newNode.array.length - 1) {\n    newNode.array.pop();\n  } else {\n    newNode.array[idx] = value;\n  }\n\n  return newNode;\n}\n\nfunction editableVNode(node, ownerID) {\n  if (ownerID && node && ownerID === node.ownerID) {\n    return node;\n  }\n\n  return new VNode(node ? node.array.slice() : [], ownerID);\n}\n\nfunction listNodeFor(list, rawIndex) {\n  if (rawIndex >= getTailOffset(list._capacity)) {\n    return list._tail;\n  }\n\n  if (rawIndex < 1 << list._level + SHIFT) {\n    var node = list._root;\n    var level = list._level;\n\n    while (node && level > 0) {\n      node = node.array[rawIndex >>> level & MASK];\n      level -= SHIFT;\n    }\n\n    return node;\n  }\n}\n\nfunction setListBounds(list, begin, end) {\n  // Sanitize begin & end using this shorthand for ToInt32(argument)\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n  if (begin !== undefined) {\n    begin |= 0;\n  }\n\n  if (end !== undefined) {\n    end |= 0;\n  }\n\n  var owner = list.__ownerID || new OwnerID();\n  var oldOrigin = list._origin;\n  var oldCapacity = list._capacity;\n  var newOrigin = oldOrigin + begin;\n  var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\n  if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n    return list;\n  } // If it's going to end after it starts, it's empty.\n\n\n  if (newOrigin >= newCapacity) {\n    return list.clear();\n  }\n\n  var newLevel = list._level;\n  var newRoot = list._root; // New origin might need creating a higher root.\n\n  var offsetShift = 0;\n\n  while (newOrigin + offsetShift < 0) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n    newLevel += SHIFT;\n    offsetShift += 1 << newLevel;\n  }\n\n  if (offsetShift) {\n    newOrigin += offsetShift;\n    oldOrigin += offsetShift;\n    newCapacity += offsetShift;\n    oldCapacity += offsetShift;\n  }\n\n  var oldTailOffset = getTailOffset(oldCapacity);\n  var newTailOffset = getTailOffset(newCapacity); // New size might need creating a higher root.\n\n  while (newTailOffset >= 1 << newLevel + SHIFT) {\n    newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n    newLevel += SHIFT;\n  } // Locate or create the new tail.\n\n\n  var oldTail = list._tail;\n  var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail; // Merge Tail into tree.\n\n  if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n    newRoot = editableVNode(newRoot, owner);\n    var node = newRoot;\n\n    for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n      var idx = oldTailOffset >>> level & MASK;\n      node = node.array[idx] = editableVNode(node.array[idx], owner);\n    }\n\n    node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n  } // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\n\n  if (newCapacity < oldCapacity) {\n    newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n  } // If the new origin is within the tail, then we do not need a root.\n\n\n  if (newOrigin >= newTailOffset) {\n    newOrigin -= newTailOffset;\n    newCapacity -= newTailOffset;\n    newLevel = SHIFT;\n    newRoot = null;\n    newTail = newTail && newTail.removeBefore(owner, 0, newOrigin); // Otherwise, if the root has been trimmed, garbage collect.\n  } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n    offsetShift = 0; // Identify the new top root node of the subtree of the old root.\n\n    while (newRoot) {\n      var beginIndex = newOrigin >>> newLevel & MASK;\n\n      if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n        break;\n      }\n\n      if (beginIndex) {\n        offsetShift += (1 << newLevel) * beginIndex;\n      }\n\n      newLevel -= SHIFT;\n      newRoot = newRoot.array[beginIndex];\n    } // Trim the new sides of the new root.\n\n\n    if (newRoot && newOrigin > oldOrigin) {\n      newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n    }\n\n    if (newRoot && newTailOffset < oldTailOffset) {\n      newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n    }\n\n    if (offsetShift) {\n      newOrigin -= offsetShift;\n      newCapacity -= offsetShift;\n    }\n  }\n\n  if (list.__ownerID) {\n    list.size = newCapacity - newOrigin;\n    list._origin = newOrigin;\n    list._capacity = newCapacity;\n    list._level = newLevel;\n    list._root = newRoot;\n    list._tail = newTail;\n    list.__hash = undefined;\n    list.__altered = true;\n    return list;\n  }\n\n  return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n}\n\nfunction getTailOffset(size) {\n  return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n}\n\nvar OrderedMap =\n/*@__PURE__*/\nfunction (Map$$1) {\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedCollection(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  if (Map$$1) OrderedMap.__proto__ = Map$$1;\n  OrderedMap.prototype = Object.create(Map$$1 && Map$$1.prototype);\n  OrderedMap.prototype.constructor = OrderedMap;\n\n  OrderedMap.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function toString() {\n    return this.__toString('OrderedMap {', '}');\n  }; // @pragma Access\n\n\n  OrderedMap.prototype.get = function get(k, notSetValue) {\n    var index = this._map.get(k);\n\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  }; // @pragma Modification\n\n\n  OrderedMap.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n\n      this._map.clear();\n\n      this._list.clear();\n\n      return this;\n    }\n\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function set(k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function remove(k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function wasAltered() {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$1);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function __iterator(type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    var newList = this._list.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyOrderedMap();\n      }\n\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  return OrderedMap;\n}(Map);\n\nOrderedMap.isOrderedMap = isOrderedMap;\nOrderedMap.prototype[IS_ORDERED_SYMBOL] = true;\nOrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\nfunction makeOrderedMap(map, list, ownerID, hash) {\n  var omap = Object.create(OrderedMap.prototype);\n  omap.size = map ? map.size : 0;\n  omap._map = map;\n  omap._list = list;\n  omap.__ownerID = ownerID;\n  omap.__hash = hash;\n  return omap;\n}\n\nvar EMPTY_ORDERED_MAP;\n\nfunction emptyOrderedMap() {\n  return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n}\n\nfunction updateOrderedMap(omap, k, v) {\n  var map = omap._map;\n  var list = omap._list;\n  var i = map.get(k);\n  var has = i !== undefined;\n  var newMap;\n  var newList;\n\n  if (v === NOT_SET) {\n    // removed\n    if (!has) {\n      return omap;\n    }\n\n    if (list.size >= SIZE && list.size >= map.size * 2) {\n      newList = list.filter(function (entry, idx) {\n        return entry !== undefined && i !== idx;\n      });\n      newMap = newList.toKeyedSeq().map(function (entry) {\n        return entry[0];\n      }).flip().toMap();\n\n      if (omap.__ownerID) {\n        newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n      }\n    } else {\n      newMap = map.remove(k);\n      newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n    }\n  } else if (has) {\n    if (v === list.get(i)[1]) {\n      return omap;\n    }\n\n    newMap = map;\n    newList = list.set(i, [k, v]);\n  } else {\n    newMap = map.set(k, list.size);\n    newList = list.set(list.size, [k, v]);\n  }\n\n  if (omap.__ownerID) {\n    omap.size = newMap.size;\n    omap._map = newMap;\n    omap._list = newList;\n    omap.__hash = undefined;\n    return omap;\n  }\n\n  return makeOrderedMap(newMap, newList);\n}\n\nvar IS_STACK_SYMBOL = '@@__IMMUTABLE_STACK__@@';\n\nfunction isStack(maybeStack) {\n  return Boolean(maybeStack && maybeStack[IS_STACK_SYMBOL]);\n}\n\nvar Stack =\n/*@__PURE__*/\nfunction (IndexedCollection$$1) {\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().pushAll(value);\n  }\n\n  if (IndexedCollection$$1) Stack.__proto__ = IndexedCollection$$1;\n  Stack.prototype = Object.create(IndexedCollection$$1 && IndexedCollection$$1.prototype);\n  Stack.prototype.constructor = Stack;\n\n  Stack.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function toString() {\n    return this.__toString('Stack [', ']');\n  }; // @pragma Access\n\n\n  Stack.prototype.get = function get(index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n\n    while (head && index--) {\n      head = head.next;\n    }\n\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function peek() {\n    return this._head && this._head.value;\n  }; // @pragma Modification\n\n\n  Stack.prototype.push = function push()\n  /*...values*/\n  {\n    var arguments$1 = arguments;\n\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments$1[ii],\n        next: head\n      };\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function pushAll(iter) {\n    iter = IndexedCollection$$1(iter);\n\n    if (iter.size === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && isStack(iter)) {\n      return iter;\n    }\n\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n\n    iter.__iterate(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    },\n    /* reverse */\n    true);\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function pop() {\n    return this.slice(1);\n  };\n\n  Stack.prototype.clear = function clear() {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection$$1.prototype.slice.call(this, begin, end);\n    }\n\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  }; // @pragma Mutability\n\n\n  Stack.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return emptyStack();\n      }\n\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  }; // @pragma Iteration\n\n\n  Stack.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterate(function (v, k) {\n        return fn(v, k, this$1);\n      }, reverse);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n\n      node = node.next;\n    }\n\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function __iterator(type, reverse) {\n    if (reverse) {\n      return new ArraySeq(this.toArray()).__iterator(type, reverse);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  return Stack;\n}(IndexedCollection);\n\nStack.isStack = isStack;\nvar StackPrototype = Stack.prototype;\nStackPrototype[IS_STACK_SYMBOL] = true;\nStackPrototype.shift = StackPrototype.pop;\nStackPrototype.unshift = StackPrototype.push;\nStackPrototype.unshiftAll = StackPrototype.pushAll;\nStackPrototype.withMutations = withMutations;\nStackPrototype.wasAltered = wasAltered;\nStackPrototype.asImmutable = asImmutable;\nStackPrototype['@@transducer/init'] = StackPrototype.asMutable = asMutable;\n\nStackPrototype['@@transducer/step'] = function (result, arr) {\n  return result.unshift(arr);\n};\n\nStackPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nfunction makeStack(size, head, ownerID, hash) {\n  var map = Object.create(StackPrototype);\n  map.size = size;\n  map._head = head;\n  map.__ownerID = ownerID;\n  map.__hash = hash;\n  map.__altered = false;\n  return map;\n}\n\nvar EMPTY_STACK;\n\nfunction emptyStack() {\n  return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n}\n\nvar IS_SET_SYMBOL = '@@__IMMUTABLE_SET__@@';\n\nfunction isSet(maybeSet) {\n  return Boolean(maybeSet && maybeSet[IS_SET_SYMBOL]);\n}\n\nfunction isOrderedSet(maybeOrderedSet) {\n  return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n}\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (!isCollection(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n    return false;\n  }\n\n  if (a.size === 0 && b.size === 0) {\n    return true;\n  }\n\n  var notAssociative = !isAssociative(a);\n\n  if (isOrdered(a)) {\n    var entries = a.entries();\n    return b.every(function (v, k) {\n      var entry = entries.next().value;\n      return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n    }) && entries.next().done;\n  }\n\n  var flipped = false;\n\n  if (a.size === undefined) {\n    if (b.size === undefined) {\n      if (typeof a.cacheResult === 'function') {\n        a.cacheResult();\n      }\n    } else {\n      flipped = true;\n      var _ = a;\n      a = b;\n      b = _;\n    }\n  }\n\n  var allEqual = true;\n\n  var bSize = b.__iterate(function (v, k) {\n    if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n      allEqual = false;\n      return false;\n    }\n  });\n\n  return allEqual && a.size === bSize;\n}\n/**\n * Contributes additional methods to a constructor\n */\n\n\nfunction mixin(ctor, methods) {\n  var keyCopier = function keyCopier(key) {\n    ctor.prototype[key] = methods[key];\n  };\n\n  Object.keys(methods).forEach(keyCopier);\n  Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n  return ctor;\n}\n\nfunction toJS(value) {\n  if (!value || _typeof(value) !== 'object') {\n    return value;\n  }\n\n  if (!isCollection(value)) {\n    if (!isDataStructure(value)) {\n      return value;\n    }\n\n    value = Seq(value);\n  }\n\n  if (isKeyed(value)) {\n    var result$1 = {};\n\n    value.__iterate(function (v, k) {\n      result$1[k] = toJS(v);\n    });\n\n    return result$1;\n  }\n\n  var result = [];\n\n  value.__iterate(function (v) {\n    result.push(toJS(v));\n  });\n\n  return result;\n}\n\nvar Set =\n/*@__PURE__*/\nfunction (SetCollection$$1) {\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetCollection$$1(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  if (SetCollection$$1) Set.__proto__ = SetCollection$$1;\n  Set.prototype = Object.create(SetCollection$$1 && SetCollection$$1.prototype);\n  Set.prototype.constructor = Set;\n\n  Set.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function fromKeys(value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  Set.intersect = function intersect(sets) {\n    sets = Collection(sets).toArray();\n    return sets.length ? SetPrototype.intersect.apply(Set(sets.pop()), sets) : emptySet();\n  };\n\n  Set.union = function union(sets) {\n    sets = Collection(sets).toArray();\n    return sets.length ? SetPrototype.union.apply(Set(sets.pop()), sets) : emptySet();\n  };\n\n  Set.prototype.toString = function toString() {\n    return this.__toString('Set {', '}');\n  }; // @pragma Access\n\n\n  Set.prototype.has = function has(value) {\n    return this._map.has(value);\n  }; // @pragma Modification\n\n\n  Set.prototype.add = function add(value) {\n    return updateSet(this, this._map.set(value, value));\n  };\n\n  Set.prototype.remove = function remove(value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function clear() {\n    return updateSet(this, this._map.clear());\n  }; // @pragma Composition\n\n\n  Set.prototype.map = function map(mapper, context) {\n    var this$1 = this;\n    var removes = [];\n    var adds = [];\n    this.forEach(function (value) {\n      var mapped = mapper.call(context, value, value, this$1);\n\n      if (mapped !== value) {\n        removes.push(value);\n        adds.push(mapped);\n      }\n    });\n    return this.withMutations(function (set) {\n      removes.forEach(function (value) {\n        return set.remove(value);\n      });\n      adds.forEach(function (value) {\n        return set.add(value);\n      });\n    });\n  };\n\n  Set.prototype.union = function union() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) {\n      iters[len] = arguments[len];\n    }\n\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetCollection$$1(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function intersect() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) {\n      iters[len] = arguments[len];\n    }\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetCollection$$1(iter);\n    });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (!iters.every(function (iter) {\n        return iter.includes(value);\n      })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.subtract = function subtract() {\n    var iters = [],\n        len = arguments.length;\n\n    while (len--) {\n      iters[len] = arguments[len];\n    }\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetCollection$$1(iter);\n    });\n    var toRemove = [];\n    this.forEach(function (value) {\n      if (iters.some(function (iter) {\n        return iter.includes(value);\n      })) {\n        toRemove.push(value);\n      }\n    });\n    return this.withMutations(function (set) {\n      toRemove.forEach(function (value) {\n        set.remove(value);\n      });\n    });\n  };\n\n  Set.prototype.sort = function sort(comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function sortBy(mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function wasAltered() {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function __iterate(fn, reverse) {\n    var this$1 = this;\n    return this._map.__iterate(function (k) {\n      return fn(k, k, this$1);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function __iterator(type, reverse) {\n    return this._map.__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      if (this.size === 0) {\n        return this.__empty();\n      }\n\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return this.__make(newMap, ownerID);\n  };\n\n  return Set;\n}(SetCollection);\n\nSet.isSet = isSet;\nvar SetPrototype = Set.prototype;\nSetPrototype[IS_SET_SYMBOL] = true;\nSetPrototype[DELETE] = SetPrototype.remove;\nSetPrototype.merge = SetPrototype.concat = SetPrototype.union;\nSetPrototype.withMutations = withMutations;\nSetPrototype.asImmutable = asImmutable;\nSetPrototype['@@transducer/init'] = SetPrototype.asMutable = asMutable;\n\nSetPrototype['@@transducer/step'] = function (result, arr) {\n  return result.add(arr);\n};\n\nSetPrototype['@@transducer/result'] = function (obj) {\n  return obj.asImmutable();\n};\n\nSetPrototype.__empty = emptySet;\nSetPrototype.__make = makeSet;\n\nfunction updateSet(set, newMap) {\n  if (set.__ownerID) {\n    set.size = newMap.size;\n    set._map = newMap;\n    return set;\n  }\n\n  return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n}\n\nfunction makeSet(map, ownerID) {\n  var set = Object.create(SetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_SET;\n\nfunction emptySet() {\n  return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n}\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1, and end to\n * infinity. When start is equal to end, returns empty list.\n */\n\n\nvar Range =\n/*@__PURE__*/\nfunction (IndexedSeq$$1) {\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n\n    if (end === undefined) {\n      end = Infinity;\n    }\n\n    step = step === undefined ? 1 : Math.abs(step);\n\n    if (end < start) {\n      step = -step;\n    }\n\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n\n      EMPTY_RANGE = this;\n    }\n  }\n\n  if (IndexedSeq$$1) Range.__proto__ = IndexedSeq$$1;\n  Range.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  Range.prototype.constructor = Range;\n\n  Range.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n\n    return 'Range [ ' + this._start + '...' + this._end + (this._step !== 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function includes(searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function slice(begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function indexOf(searchValue) {\n    var offsetValue = searchValue - this._start;\n\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n\n    while (i !== size) {\n      if (fn(value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n\n      value += reverse ? -step : step;\n    }\n\n    return i;\n  };\n\n  Range.prototype.__iterator = function __iterator(type, reverse) {\n    var size = this.size;\n    var step = this._step;\n    var value = reverse ? this._start + (size - 1) * step : this._start;\n    var i = 0;\n    return new Iterator(function () {\n      if (i === size) {\n        return iteratorDone();\n      }\n\n      var v = value;\n      value += reverse ? -step : step;\n      return iteratorValue(type, reverse ? size - ++i : i++, v);\n    });\n  };\n\n  Range.prototype.equals = function equals(other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  return Range;\n}(IndexedSeq);\n\nvar EMPTY_RANGE;\n\nfunction getIn(collection, searchKeyPath, notSetValue) {\n  var keyPath = coerceKeyPath(searchKeyPath);\n  var i = 0;\n\n  while (i !== keyPath.length) {\n    collection = get(collection, keyPath[i++], NOT_SET);\n\n    if (collection === NOT_SET) {\n      return notSetValue;\n    }\n  }\n\n  return collection;\n}\n\nfunction getIn$1(searchKeyPath, notSetValue) {\n  return getIn(this, searchKeyPath, notSetValue);\n}\n\nfunction hasIn(collection, keyPath) {\n  return getIn(collection, keyPath, NOT_SET) !== NOT_SET;\n}\n\nfunction hasIn$1(searchKeyPath) {\n  return hasIn(this, searchKeyPath);\n}\n\nfunction toObject() {\n  assertNotInfinite(this.size);\n  var object = {};\n\n  this.__iterate(function (v, k) {\n    object[k] = v;\n  });\n\n  return object;\n} // Note: all of these methods are deprecated.\n\n\nCollection.isIterable = isCollection;\nCollection.isKeyed = isKeyed;\nCollection.isIndexed = isIndexed;\nCollection.isAssociative = isAssociative;\nCollection.isOrdered = isOrdered;\nCollection.Iterator = Iterator;\nmixin(Collection, {\n  // ### Conversion to other types\n  toArray: function toArray() {\n    assertNotInfinite(this.size);\n    var array = new Array(this.size || 0);\n    var useTuples = isKeyed(this);\n    var i = 0;\n\n    this.__iterate(function (v, k) {\n      // Keyed collections produce an array of tuples.\n      array[i++] = useTuples ? [k, v] : v;\n    });\n\n    return array;\n  },\n  toIndexedSeq: function toIndexedSeq() {\n    return new ToIndexedSequence(this);\n  },\n  toJS: function toJS$1() {\n    return toJS(this);\n  },\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, true);\n  },\n  toMap: function toMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return Map(this.toKeyedSeq());\n  },\n  toObject: toObject,\n  toOrderedMap: function toOrderedMap() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedMap(this.toKeyedSeq());\n  },\n  toOrderedSet: function toOrderedSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSet: function toSet() {\n    // Use Late Binding here to solve the circular dependency.\n    return Set(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toSetSeq: function toSetSeq() {\n    return new ToSetSequence(this);\n  },\n  toSeq: function toSeq() {\n    return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n  },\n  toStack: function toStack() {\n    // Use Late Binding here to solve the circular dependency.\n    return Stack(isKeyed(this) ? this.valueSeq() : this);\n  },\n  toList: function toList() {\n    // Use Late Binding here to solve the circular dependency.\n    return List(isKeyed(this) ? this.valueSeq() : this);\n  },\n  // ### Common JavaScript methods and properties\n  toString: function toString() {\n    return '[Collection]';\n  },\n  __toString: function __toString(head, tail) {\n    if (this.size === 0) {\n      return head + tail;\n    }\n\n    return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n  },\n  // ### ES6 Collection methods (ES6 Array and Map)\n  concat: function concat() {\n    var values = [],\n        len = arguments.length;\n\n    while (len--) {\n      values[len] = arguments[len];\n    }\n\n    return reify(this, concatFactory(this, values));\n  },\n  includes: function includes(searchValue) {\n    return this.some(function (value) {\n      return is(value, searchValue);\n    });\n  },\n  entries: function entries() {\n    return this.__iterator(ITERATE_ENTRIES);\n  },\n  every: function every(predicate, context) {\n    assertNotInfinite(this.size);\n    var returnValue = true;\n\n    this.__iterate(function (v, k, c) {\n      if (!predicate.call(context, v, k, c)) {\n        returnValue = false;\n        return false;\n      }\n    });\n\n    return returnValue;\n  },\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, true));\n  },\n  find: function find(predicate, context, notSetValue) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[1] : notSetValue;\n  },\n  forEach: function forEach(sideEffect, context) {\n    assertNotInfinite(this.size);\n    return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n  },\n  join: function join(separator) {\n    assertNotInfinite(this.size);\n    separator = separator !== undefined ? '' + separator : ',';\n    var joined = '';\n    var isFirst = true;\n\n    this.__iterate(function (v) {\n      isFirst ? isFirst = false : joined += separator;\n      joined += v !== null && v !== undefined ? v.toString() : '';\n    });\n\n    return joined;\n  },\n  keys: function keys() {\n    return this.__iterator(ITERATE_KEYS);\n  },\n  map: function map(mapper, context) {\n    return reify(this, mapFactory(this, mapper, context));\n  },\n  reduce: function reduce$1(reducer, initialReduction, context) {\n    return reduce(this, reducer, initialReduction, context, arguments.length < 2, false);\n  },\n  reduceRight: function reduceRight(reducer, initialReduction, context) {\n    return reduce(this, reducer, initialReduction, context, arguments.length < 2, true);\n  },\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, true));\n  },\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, true));\n  },\n  some: function some(predicate, context) {\n    return !this.every(not(predicate), context);\n  },\n  sort: function sort(comparator) {\n    return reify(this, sortFactory(this, comparator));\n  },\n  values: function values() {\n    return this.__iterator(ITERATE_VALUES);\n  },\n  // ### More sequential methods\n  butLast: function butLast() {\n    return this.slice(0, -1);\n  },\n  isEmpty: function isEmpty() {\n    return this.size !== undefined ? this.size === 0 : !this.some(function () {\n      return true;\n    });\n  },\n  count: function count(predicate, context) {\n    return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n  },\n  countBy: function countBy(grouper, context) {\n    return countByFactory(this, grouper, context);\n  },\n  equals: function equals(other) {\n    return deepEqual(this, other);\n  },\n  entrySeq: function entrySeq() {\n    var collection = this;\n\n    if (collection._cache) {\n      // We cache as an entries array, so we can just return the cache!\n      return new ArraySeq(collection._cache);\n    }\n\n    var entriesSequence = collection.toSeq().map(entryMapper).toIndexedSeq();\n\n    entriesSequence.fromEntrySeq = function () {\n      return collection.toSeq();\n    };\n\n    return entriesSequence;\n  },\n  filterNot: function filterNot(predicate, context) {\n    return this.filter(not(predicate), context);\n  },\n  findEntry: function findEntry(predicate, context, notSetValue) {\n    var found = notSetValue;\n\n    this.__iterate(function (v, k, c) {\n      if (predicate.call(context, v, k, c)) {\n        found = [k, v];\n        return false;\n      }\n    });\n\n    return found;\n  },\n  findKey: function findKey(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry && entry[0];\n  },\n  findLast: function findLast(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n  },\n  findLastEntry: function findLastEntry(predicate, context, notSetValue) {\n    return this.toKeyedSeq().reverse().findEntry(predicate, context, notSetValue);\n  },\n  findLastKey: function findLastKey(predicate, context) {\n    return this.toKeyedSeq().reverse().findKey(predicate, context);\n  },\n  first: function first(notSetValue) {\n    return this.find(returnTrue, null, notSetValue);\n  },\n  flatMap: function flatMap(mapper, context) {\n    return reify(this, flatMapFactory(this, mapper, context));\n  },\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, true));\n  },\n  fromEntrySeq: function fromEntrySeq() {\n    return new FromEntriesSequence(this);\n  },\n  get: function get(searchKey, notSetValue) {\n    return this.find(function (_, key) {\n      return is(key, searchKey);\n    }, undefined, notSetValue);\n  },\n  getIn: getIn$1,\n  groupBy: function groupBy(grouper, context) {\n    return groupByFactory(this, grouper, context);\n  },\n  has: function has(searchKey) {\n    return this.get(searchKey, NOT_SET) !== NOT_SET;\n  },\n  hasIn: hasIn$1,\n  isSubset: function isSubset(iter) {\n    iter = typeof iter.includes === 'function' ? iter : Collection(iter);\n    return this.every(function (value) {\n      return iter.includes(value);\n    });\n  },\n  isSuperset: function isSuperset(iter) {\n    iter = typeof iter.isSubset === 'function' ? iter : Collection(iter);\n    return iter.isSubset(this);\n  },\n  keyOf: function keyOf(searchValue) {\n    return this.findKey(function (value) {\n      return is(value, searchValue);\n    });\n  },\n  keySeq: function keySeq() {\n    return this.toSeq().map(keyMapper).toIndexedSeq();\n  },\n  last: function last(notSetValue) {\n    return this.toSeq().reverse().first(notSetValue);\n  },\n  lastKeyOf: function lastKeyOf(searchValue) {\n    return this.toKeyedSeq().reverse().keyOf(searchValue);\n  },\n  max: function max(comparator) {\n    return maxFactory(this, comparator);\n  },\n  maxBy: function maxBy(mapper, comparator) {\n    return maxFactory(this, comparator, mapper);\n  },\n  min: function min(comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n  },\n  minBy: function minBy(mapper, comparator) {\n    return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n  },\n  rest: function rest() {\n    return this.slice(1);\n  },\n  skip: function skip(amount) {\n    return amount === 0 ? this : this.slice(Math.max(0, amount));\n  },\n  skipLast: function skipLast(amount) {\n    return amount === 0 ? this : this.slice(0, -Math.max(0, amount));\n  },\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, true));\n  },\n  skipUntil: function skipUntil(predicate, context) {\n    return this.skipWhile(not(predicate), context);\n  },\n  sortBy: function sortBy(mapper, comparator) {\n    return reify(this, sortFactory(this, comparator, mapper));\n  },\n  take: function take(amount) {\n    return this.slice(0, Math.max(0, amount));\n  },\n  takeLast: function takeLast(amount) {\n    return this.slice(-Math.max(0, amount));\n  },\n  takeWhile: function takeWhile(predicate, context) {\n    return reify(this, takeWhileFactory(this, predicate, context));\n  },\n  takeUntil: function takeUntil(predicate, context) {\n    return this.takeWhile(not(predicate), context);\n  },\n  update: function update(fn) {\n    return fn(this);\n  },\n  valueSeq: function valueSeq() {\n    return this.toIndexedSeq();\n  },\n  // ### Hashable Object\n  hashCode: function hashCode() {\n    return this.__hash || (this.__hash = hashCollection(this));\n  } // ### Internal\n  // abstract __iterate(fn, reverse)\n  // abstract __iterator(type, reverse)\n\n});\nvar CollectionPrototype = Collection.prototype;\nCollectionPrototype[IS_COLLECTION_SYMBOL] = true;\nCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.values;\nCollectionPrototype.toJSON = CollectionPrototype.toArray;\nCollectionPrototype.__toStringMapper = quoteString;\n\nCollectionPrototype.inspect = CollectionPrototype.toSource = function () {\n  return this.toString();\n};\n\nCollectionPrototype.chain = CollectionPrototype.flatMap;\nCollectionPrototype.contains = CollectionPrototype.includes;\nmixin(KeyedCollection, {\n  // ### More sequential methods\n  flip: function flip() {\n    return reify(this, flipFactory(this));\n  },\n  mapEntries: function mapEntries(mapper, context) {\n    var this$1 = this;\n    var iterations = 0;\n    return reify(this, this.toSeq().map(function (v, k) {\n      return mapper.call(context, [k, v], iterations++, this$1);\n    }).fromEntrySeq());\n  },\n  mapKeys: function mapKeys(mapper, context) {\n    var this$1 = this;\n    return reify(this, this.toSeq().flip().map(function (k, v) {\n      return mapper.call(context, k, v, this$1);\n    }).flip());\n  }\n});\nvar KeyedCollectionPrototype = KeyedCollection.prototype;\nKeyedCollectionPrototype[IS_KEYED_SYMBOL] = true;\nKeyedCollectionPrototype[ITERATOR_SYMBOL] = CollectionPrototype.entries;\nKeyedCollectionPrototype.toJSON = toObject;\n\nKeyedCollectionPrototype.__toStringMapper = function (v, k) {\n  return quoteString(k) + ': ' + quoteString(v);\n};\n\nmixin(IndexedCollection, {\n  // ### Conversion to other types\n  toKeyedSeq: function toKeyedSeq() {\n    return new ToKeyedSequence(this, false);\n  },\n  // ### ES6 Collection methods (ES6 Array and Map)\n  filter: function filter(predicate, context) {\n    return reify(this, filterFactory(this, predicate, context, false));\n  },\n  findIndex: function findIndex(predicate, context) {\n    var entry = this.findEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n  indexOf: function indexOf(searchValue) {\n    var key = this.keyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  lastIndexOf: function lastIndexOf(searchValue) {\n    var key = this.lastKeyOf(searchValue);\n    return key === undefined ? -1 : key;\n  },\n  reverse: function reverse() {\n    return reify(this, reverseFactory(this, false));\n  },\n  slice: function slice(begin, end) {\n    return reify(this, sliceFactory(this, begin, end, false));\n  },\n  splice: function splice(index, removeNum\n  /*, ...values*/\n  ) {\n    var numArgs = arguments.length;\n    removeNum = Math.max(removeNum || 0, 0);\n\n    if (numArgs === 0 || numArgs === 2 && !removeNum) {\n      return this;\n    } // If index is negative, it should resolve relative to the size of the\n    // collection. However size may be expensive to compute if not cached, so\n    // only call count() if the number is in fact negative.\n\n\n    index = resolveBegin(index, index < 0 ? this.count() : this.size);\n    var spliced = this.slice(0, index);\n    return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n  },\n  // ### More collection methods\n  findLastIndex: function findLastIndex(predicate, context) {\n    var entry = this.findLastEntry(predicate, context);\n    return entry ? entry[0] : -1;\n  },\n  first: function first(notSetValue) {\n    return this.get(0, notSetValue);\n  },\n  flatten: function flatten(depth) {\n    return reify(this, flattenFactory(this, depth, false));\n  },\n  get: function get(index, notSetValue) {\n    index = wrapIndex(this, index);\n    return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n      return key === index;\n    }, undefined, notSetValue);\n  },\n  has: function has(index) {\n    index = wrapIndex(this, index);\n    return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n  },\n  interpose: function interpose(separator) {\n    return reify(this, interposeFactory(this, separator));\n  },\n  interleave: function interleave()\n  /*...collections*/\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, collections);\n    var interleaved = zipped.flatten(true);\n\n    if (zipped.size) {\n      interleaved.size = zipped.size * collections.length;\n    }\n\n    return reify(this, interleaved);\n  },\n  keySeq: function keySeq() {\n    return Range(0, this.size);\n  },\n  last: function last(notSetValue) {\n    return this.get(-1, notSetValue);\n  },\n  skipWhile: function skipWhile(predicate, context) {\n    return reify(this, skipWhileFactory(this, predicate, context, false));\n  },\n  zip: function zip()\n  /*, ...collections */\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections));\n  },\n  zipAll: function zipAll()\n  /*, ...collections */\n  {\n    var collections = [this].concat(arrCopy(arguments));\n    return reify(this, zipWithFactory(this, defaultZipper, collections, true));\n  },\n  zipWith: function zipWith(zipper\n  /*, ...collections */\n  ) {\n    var collections = arrCopy(arguments);\n    collections[0] = this;\n    return reify(this, zipWithFactory(this, zipper, collections));\n  }\n});\nvar IndexedCollectionPrototype = IndexedCollection.prototype;\nIndexedCollectionPrototype[IS_INDEXED_SYMBOL] = true;\nIndexedCollectionPrototype[IS_ORDERED_SYMBOL] = true;\nmixin(SetCollection, {\n  // ### ES6 Collection methods (ES6 Array and Map)\n  get: function get(value, notSetValue) {\n    return this.has(value) ? value : notSetValue;\n  },\n  includes: function includes(value) {\n    return this.has(value);\n  },\n  // ### More sequential methods\n  keySeq: function keySeq() {\n    return this.valueSeq();\n  }\n});\nSetCollection.prototype.has = CollectionPrototype.includes;\nSetCollection.prototype.contains = SetCollection.prototype.includes; // Mixin subclasses\n\nmixin(KeyedSeq, KeyedCollection.prototype);\nmixin(IndexedSeq, IndexedCollection.prototype);\nmixin(SetSeq, SetCollection.prototype); // #pragma Helper functions\n\nfunction reduce(collection, reducer, reduction, context, useFirst, reverse) {\n  assertNotInfinite(collection.size);\n\n  collection.__iterate(function (v, k, c) {\n    if (useFirst) {\n      useFirst = false;\n      reduction = v;\n    } else {\n      reduction = reducer.call(context, reduction, v, k, c);\n    }\n  }, reverse);\n\n  return reduction;\n}\n\nfunction keyMapper(v, k) {\n  return k;\n}\n\nfunction entryMapper(v, k) {\n  return [k, v];\n}\n\nfunction not(predicate) {\n  return function () {\n    return !predicate.apply(this, arguments);\n  };\n}\n\nfunction neg(predicate) {\n  return function () {\n    return -predicate.apply(this, arguments);\n  };\n}\n\nfunction defaultZipper() {\n  return arrCopy(arguments);\n}\n\nfunction defaultNegComparator(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\nfunction hashCollection(collection) {\n  if (collection.size === Infinity) {\n    return 0;\n  }\n\n  var ordered = isOrdered(collection);\n  var keyed = isKeyed(collection);\n  var h = ordered ? 1 : 0;\n\n  var size = collection.__iterate(keyed ? ordered ? function (v, k) {\n    h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n  } : function (v, k) {\n    h = h + hashMerge(hash(v), hash(k)) | 0;\n  } : ordered ? function (v) {\n    h = 31 * h + hash(v) | 0;\n  } : function (v) {\n    h = h + hash(v) | 0;\n  });\n\n  return murmurHashOfSize(size, h);\n}\n\nfunction murmurHashOfSize(size, h) {\n  h = imul(h, 0xcc9e2d51);\n  h = imul(h << 15 | h >>> -15, 0x1b873593);\n  h = imul(h << 13 | h >>> -13, 5);\n  h = (h + 0xe6546b64 | 0) ^ size;\n  h = imul(h ^ h >>> 16, 0x85ebca6b);\n  h = imul(h ^ h >>> 13, 0xc2b2ae35);\n  h = smi(h ^ h >>> 16);\n  return h;\n}\n\nfunction hashMerge(a, b) {\n  return a ^ b + 0x9e3779b9 + (a << 6) + (a >> 2) | 0; // int\n}\n\nvar OrderedSet =\n/*@__PURE__*/\nfunction (Set$$1) {\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetCollection(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  if (Set$$1) OrderedSet.__proto__ = Set$$1;\n  OrderedSet.prototype = Object.create(Set$$1 && Set$$1.prototype);\n  OrderedSet.prototype.constructor = OrderedSet;\n\n  OrderedSet.of = function of()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function fromKeys(value) {\n    return this(KeyedCollection(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function toString() {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  return OrderedSet;\n}(Set);\n\nOrderedSet.isOrderedSet = isOrderedSet;\nvar OrderedSetPrototype = OrderedSet.prototype;\nOrderedSetPrototype[IS_ORDERED_SYMBOL] = true;\nOrderedSetPrototype.zip = IndexedCollectionPrototype.zip;\nOrderedSetPrototype.zipWith = IndexedCollectionPrototype.zipWith;\nOrderedSetPrototype.__empty = emptyOrderedSet;\nOrderedSetPrototype.__make = makeOrderedSet;\n\nfunction makeOrderedSet(map, ownerID) {\n  var set = Object.create(OrderedSetPrototype);\n  set.size = map ? map.size : 0;\n  set._map = map;\n  set.__ownerID = ownerID;\n  return set;\n}\n\nvar EMPTY_ORDERED_SET;\n\nfunction emptyOrderedSet() {\n  return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n}\n\nvar Record = function Record(defaultValues, name) {\n  var hasInitialized;\n\n  var RecordType = function Record(values) {\n    var this$1 = this;\n\n    if (values instanceof RecordType) {\n      return values;\n    }\n\n    if (!(this instanceof RecordType)) {\n      return new RecordType(values);\n    }\n\n    if (!hasInitialized) {\n      hasInitialized = true;\n      var keys = Object.keys(defaultValues);\n      var indices = RecordTypePrototype._indices = {}; // Deprecated: left to attempt not to break any external code which\n      // relies on a ._name property existing on record instances.\n      // Use Record.getDescriptiveName() instead\n\n      RecordTypePrototype._name = name;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype._defaultValues = defaultValues;\n\n      for (var i = 0; i < keys.length; i++) {\n        var propName = keys[i];\n        indices[propName] = i;\n\n        if (RecordTypePrototype[propName]) {\n          /* eslint-disable no-console */\n          (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.warn && console.warn('Cannot define ' + recordName(this) + ' with property \"' + propName + '\" since that property name is part of the Record API.');\n          /* eslint-enable no-console */\n        } else {\n          setProp(RecordTypePrototype, propName);\n        }\n      }\n    }\n\n    this.__ownerID = undefined;\n    this._values = List().withMutations(function (l) {\n      l.setSize(this$1._keys.length);\n      KeyedCollection(values).forEach(function (v, k) {\n        l.set(this$1._indices[k], v === this$1._defaultValues[k] ? undefined : v);\n      });\n    });\n  };\n\n  var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n  RecordTypePrototype.constructor = RecordType;\n\n  if (name) {\n    RecordType.displayName = name;\n  }\n\n  return RecordType;\n};\n\nRecord.prototype.toString = function toString() {\n  var str = recordName(this) + ' { ';\n  var keys = this._keys;\n  var k;\n\n  for (var i = 0, l = keys.length; i !== l; i++) {\n    k = keys[i];\n    str += (i ? ', ' : '') + k + ': ' + quoteString(this.get(k));\n  }\n\n  return str + ' }';\n};\n\nRecord.prototype.equals = function equals(other) {\n  return this === other || other && this._keys === other._keys && recordSeq(this).equals(recordSeq(other));\n};\n\nRecord.prototype.hashCode = function hashCode() {\n  return recordSeq(this).hashCode();\n}; // @pragma Access\n\n\nRecord.prototype.has = function has(k) {\n  return this._indices.hasOwnProperty(k);\n};\n\nRecord.prototype.get = function get(k, notSetValue) {\n  if (!this.has(k)) {\n    return notSetValue;\n  }\n\n  var index = this._indices[k];\n\n  var value = this._values.get(index);\n\n  return value === undefined ? this._defaultValues[k] : value;\n}; // @pragma Modification\n\n\nRecord.prototype.set = function set(k, v) {\n  if (this.has(k)) {\n    var newValues = this._values.set(this._indices[k], v === this._defaultValues[k] ? undefined : v);\n\n    if (newValues !== this._values && !this.__ownerID) {\n      return makeRecord(this, newValues);\n    }\n  }\n\n  return this;\n};\n\nRecord.prototype.remove = function remove(k) {\n  return this.set(k);\n};\n\nRecord.prototype.clear = function clear() {\n  var newValues = this._values.clear().setSize(this._keys.length);\n\n  return this.__ownerID ? this : makeRecord(this, newValues);\n};\n\nRecord.prototype.wasAltered = function wasAltered() {\n  return this._values.wasAltered();\n};\n\nRecord.prototype.toSeq = function toSeq() {\n  return recordSeq(this);\n};\n\nRecord.prototype.toJS = function toJS$1() {\n  return toJS(this);\n};\n\nRecord.prototype.entries = function entries() {\n  return this.__iterator(ITERATE_ENTRIES);\n};\n\nRecord.prototype.__iterator = function __iterator(type, reverse) {\n  return recordSeq(this).__iterator(type, reverse);\n};\n\nRecord.prototype.__iterate = function __iterate(fn, reverse) {\n  return recordSeq(this).__iterate(fn, reverse);\n};\n\nRecord.prototype.__ensureOwner = function __ensureOwner(ownerID) {\n  if (ownerID === this.__ownerID) {\n    return this;\n  }\n\n  var newValues = this._values.__ensureOwner(ownerID);\n\n  if (!ownerID) {\n    this.__ownerID = ownerID;\n    this._values = newValues;\n    return this;\n  }\n\n  return makeRecord(this, newValues, ownerID);\n};\n\nRecord.isRecord = isRecord;\nRecord.getDescriptiveName = recordName;\nvar RecordPrototype = Record.prototype;\nRecordPrototype[IS_RECORD_SYMBOL] = true;\nRecordPrototype[DELETE] = RecordPrototype.remove;\nRecordPrototype.deleteIn = RecordPrototype.removeIn = deleteIn;\nRecordPrototype.getIn = getIn$1;\nRecordPrototype.hasIn = CollectionPrototype.hasIn;\nRecordPrototype.merge = merge;\nRecordPrototype.mergeWith = mergeWith;\nRecordPrototype.mergeIn = mergeIn;\nRecordPrototype.mergeDeep = mergeDeep$1;\nRecordPrototype.mergeDeepWith = mergeDeepWith$1;\nRecordPrototype.mergeDeepIn = mergeDeepIn;\nRecordPrototype.setIn = setIn$1;\nRecordPrototype.update = update$1;\nRecordPrototype.updateIn = updateIn$1;\nRecordPrototype.withMutations = withMutations;\nRecordPrototype.asMutable = asMutable;\nRecordPrototype.asImmutable = asImmutable;\nRecordPrototype[ITERATOR_SYMBOL] = RecordPrototype.entries;\nRecordPrototype.toJSON = RecordPrototype.toObject = CollectionPrototype.toObject;\n\nRecordPrototype.inspect = RecordPrototype.toSource = function () {\n  return this.toString();\n};\n\nfunction makeRecord(likeRecord, values, ownerID) {\n  var record = Object.create(Object.getPrototypeOf(likeRecord));\n  record._values = values;\n  record.__ownerID = ownerID;\n  return record;\n}\n\nfunction recordName(record) {\n  return record.constructor.displayName || record.constructor.name || 'Record';\n}\n\nfunction recordSeq(record) {\n  return keyedSeqFromValue(record._keys.map(function (k) {\n    return [k, record.get(k)];\n  }));\n}\n\nfunction setProp(prototype, name) {\n  try {\n    Object.defineProperty(prototype, name, {\n      get: function get() {\n        return this.get(name);\n      },\n      set: function set(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  } catch (error) {// Object.defineProperty failed. Probably IE8.\n  }\n}\n/**\n * Returns a lazy Seq of `value` repeated `times` times. When `times` is\n * undefined, returns an infinite sequence of `value`.\n */\n\n\nvar Repeat =\n/*@__PURE__*/\nfunction (IndexedSeq$$1) {\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  if (IndexedSeq$$1) Repeat.__proto__ = IndexedSeq$$1;\n  Repeat.prototype = Object.create(IndexedSeq$$1 && IndexedSeq$$1.prototype);\n  Repeat.prototype.constructor = Repeat;\n\n  Repeat.prototype.toString = function toString() {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function get(index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function includes(searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function slice(begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function reverse() {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function indexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function lastIndexOf(searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function __iterate(fn, reverse) {\n    var size = this.size;\n    var i = 0;\n\n    while (i !== size) {\n      if (fn(this._value, reverse ? size - ++i : i++, this) === false) {\n        break;\n      }\n    }\n\n    return i;\n  };\n\n  Repeat.prototype.__iterator = function __iterator(type, reverse) {\n    var this$1 = this;\n    var size = this.size;\n    var i = 0;\n    return new Iterator(function () {\n      return i === size ? iteratorDone() : iteratorValue(type, reverse ? size - ++i : i++, this$1._value);\n    });\n  };\n\n  Repeat.prototype.equals = function equals(other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  return Repeat;\n}(IndexedSeq);\n\nvar EMPTY_REPEAT;\n\nfunction fromJS(value, converter) {\n  return fromJSWith([], converter || defaultConverter, value, '', converter && converter.length > 2 ? [] : undefined, {\n    '': value\n  });\n}\n\nfunction fromJSWith(stack, converter, value, key, keyPath, parentValue) {\n  var toSeq = Array.isArray(value) ? IndexedSeq : isPlainObj(value) ? KeyedSeq : null;\n\n  if (toSeq) {\n    if (~stack.indexOf(value)) {\n      throw new TypeError('Cannot convert circular structure to Immutable');\n    }\n\n    stack.push(value);\n    keyPath && key !== '' && keyPath.push(key);\n    var converted = converter.call(parentValue, key, toSeq(value).map(function (v, k) {\n      return fromJSWith(stack, converter, v, k, keyPath, value);\n    }), keyPath && keyPath.slice());\n    stack.pop();\n    keyPath && keyPath.pop();\n    return converted;\n  }\n\n  return value;\n}\n\nfunction defaultConverter(k, v) {\n  return isKeyed(v) ? v.toMap() : v.toList();\n}\n\nvar version = \"4.0.0-rc.11\";\nvar Immutable = {\n  version: version,\n  Collection: Collection,\n  // Note: Iterable is deprecated\n  Iterable: Collection,\n  Seq: Seq,\n  Map: Map,\n  OrderedMap: OrderedMap,\n  List: List,\n  Stack: Stack,\n  Set: Set,\n  OrderedSet: OrderedSet,\n  Record: Record,\n  Range: Range,\n  Repeat: Repeat,\n  is: is,\n  fromJS: fromJS,\n  hash: hash,\n  isImmutable: isImmutable,\n  isCollection: isCollection,\n  isKeyed: isKeyed,\n  isIndexed: isIndexed,\n  isAssociative: isAssociative,\n  isOrdered: isOrdered,\n  isValueObject: isValueObject,\n  isSeq: isSeq,\n  isList: isList,\n  isMap: isMap,\n  isOrderedMap: isOrderedMap,\n  isStack: isStack,\n  isSet: isSet,\n  isOrderedSet: isOrderedSet,\n  isRecord: isRecord,\n  get: get,\n  getIn: getIn,\n  has: has,\n  hasIn: hasIn,\n  merge: merge$1,\n  mergeDeep: mergeDeep,\n  mergeWith: mergeWith$1,\n  mergeDeepWith: mergeDeepWith,\n  remove: remove,\n  removeIn: removeIn,\n  set: set,\n  setIn: setIn,\n  update: update,\n  updateIn: updateIn\n}; // Note: Iterable is deprecated\n\nvar Iterable = Collection;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Immutable);\n\n\n//# sourceURL=webpack:///./node_modules/immutable/dist/immutable.es.js?");

/***/ }),

/***/ "./node_modules/is-fn/index.js":
/*!*************************************!*\
  !*** ./node_modules/is-fn/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n  return toString.call(x) === '[object Function]';\n};\n\n//# sourceURL=webpack:///./node_modules/is-fn/index.js?");

/***/ }),

/***/ "./node_modules/is-hex-prefixed/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/is-hex-prefixed/src/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + _typeof(str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};\n\n//# sourceURL=webpack:///./node_modules/is-hex-prefixed/src/index.js?");

/***/ }),

/***/ "./node_modules/js-sha3/src/sha3.js":
/*!******************************************!*\
  !*** ./node_modules/js-sha3/src/sha3.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(process, global, module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.5\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\n(function (root) {\n  'use strict';\n\n  var NODE_JS = (typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) == 'object' && process.versions && process.versions.node;\n\n  if (NODE_JS) {\n    root = global;\n  }\n\n  var COMMON_JS = !root.JS_SHA3_TEST && ( false ? undefined : _typeof(module)) == 'object' && module.exports;\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\n\n  var createOutputMethod = function createOutputMethod(bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function createShakeOutputMethod(bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function createMethod(bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var createShakeMethod = function createShakeMethod(bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createShakeOutputMethod(bits, padding, type);\n    }\n\n    return method;\n  };\n\n  var algorithms = [{\n    name: 'keccak',\n    padding: KECCAK_PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'sha3',\n    padding: PADDING,\n    bits: BITS,\n    createMethod: createMethod\n  }, {\n    name: 'shake',\n    padding: SHAKE_PADDING,\n    bits: SHAKE_BITS,\n    createMethod: createShakeMethod\n  }];\n  var methods = {};\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n\n    for (var j = 0; j < bits.length; ++j) {\n      methods[algorithm.name + '_' + bits[j]] = algorithm.createMethod(bits[j], algorithm.padding);\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = 1600 - (bits << 1) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  ;\n\n  Keccak.prototype.update = function (message) {\n    var notString = typeof message != 'string';\n\n    if (notString && message.constructor == root.ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n\n    var length = message.length,\n        blocks = this.blocks,\n        byteCount = this.byteCount,\n        blockCount = this.blockCount,\n        index = 0,\n        s = this.s,\n        i,\n        code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | code >> 6) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | code >> 12) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + ((code & 0x3ff) << 10 | message.charCodeAt(++index) & 0x3ff);\n            blocks[i >> 2] |= (0xf0 | code >> 18) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 12 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code >> 6 & 0x3f) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | code & 0x3f) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    var blocks = this.blocks,\n        i = this.lastByteIndex,\n        blockCount = this.blockCount,\n        s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n\n    if (this.lastByteIndex == this.byteCount) {\n      blocks[0] = blocks[blockCount];\n\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n\n    blocks[blockCount - 1] |= 0x80000000;\n\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var hex = '',\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F] + HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F] + HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F] + HEX_CHARS[block >> 28 & 0x0F] + HEX_CHARS[block >> 24 & 0x0F];\n      }\n\n      if (j % blockCount == 0) {\n        f(s);\n        i = 0;\n      }\n    }\n\n    if (extraBytes) {\n      block = s[i];\n\n      if (extraBytes > 0) {\n        hex += HEX_CHARS[block >> 4 & 0x0F] + HEX_CHARS[block & 0x0F];\n      }\n\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[block >> 12 & 0x0F] + HEX_CHARS[block >> 8 & 0x0F];\n      }\n\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[block >> 20 & 0x0F] + HEX_CHARS[block >> 16 & 0x0F];\n      }\n    }\n\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n\n    if (extraBytes) {\n      buffer = new ArrayBuffer(outputBlocks + 1 << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n\n    var array = new Uint32Array(buffer);\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n\n      if (j % blockCount == 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n    var blockCount = this.blockCount,\n        s = this.s,\n        outputBlocks = this.outputBlocks,\n        extraBytes = this.extraBytes,\n        i = 0,\n        j = 0;\n    var array = [],\n        offset,\n        block;\n\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = block >> 8 & 0xFF;\n        array[offset + 2] = block >> 16 & 0xFF;\n        array[offset + 3] = block >> 24 & 0xFF;\n      }\n\n      if (j % blockCount == 0) {\n        f(s);\n      }\n    }\n\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n\n      if (extraBytes > 0) {\n        array[offset] = block & 0xFF;\n      }\n\n      if (extraBytes > 1) {\n        array[offset + 1] = block >> 8 & 0xFF;\n      }\n\n      if (extraBytes > 2) {\n        array[offset + 2] = block >> 16 & 0xFF;\n      }\n    }\n\n    return array;\n  };\n\n  var f = function f(s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n      h = c8 ^ (c2 << 1 | c3 >>> 31);\n      l = c9 ^ (c3 << 1 | c2 >>> 31);\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ (c4 << 1 | c5 >>> 31);\n      l = c1 ^ (c5 << 1 | c4 >>> 31);\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ (c6 << 1 | c7 >>> 31);\n      l = c3 ^ (c7 << 1 | c6 >>> 31);\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ (c8 << 1 | c9 >>> 31);\n      l = c5 ^ (c9 << 1 | c8 >>> 31);\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ (c0 << 1 | c1 >>> 31);\n      l = c7 ^ (c1 << 1 | c0 >>> 31);\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n      b0 = s[0];\n      b1 = s[1];\n      b32 = s[11] << 4 | s[10] >>> 28;\n      b33 = s[10] << 4 | s[11] >>> 28;\n      b14 = s[20] << 3 | s[21] >>> 29;\n      b15 = s[21] << 3 | s[20] >>> 29;\n      b46 = s[31] << 9 | s[30] >>> 23;\n      b47 = s[30] << 9 | s[31] >>> 23;\n      b28 = s[40] << 18 | s[41] >>> 14;\n      b29 = s[41] << 18 | s[40] >>> 14;\n      b20 = s[2] << 1 | s[3] >>> 31;\n      b21 = s[3] << 1 | s[2] >>> 31;\n      b2 = s[13] << 12 | s[12] >>> 20;\n      b3 = s[12] << 12 | s[13] >>> 20;\n      b34 = s[22] << 10 | s[23] >>> 22;\n      b35 = s[23] << 10 | s[22] >>> 22;\n      b16 = s[33] << 13 | s[32] >>> 19;\n      b17 = s[32] << 13 | s[33] >>> 19;\n      b48 = s[42] << 2 | s[43] >>> 30;\n      b49 = s[43] << 2 | s[42] >>> 30;\n      b40 = s[5] << 30 | s[4] >>> 2;\n      b41 = s[4] << 30 | s[5] >>> 2;\n      b22 = s[14] << 6 | s[15] >>> 26;\n      b23 = s[15] << 6 | s[14] >>> 26;\n      b4 = s[25] << 11 | s[24] >>> 21;\n      b5 = s[24] << 11 | s[25] >>> 21;\n      b36 = s[34] << 15 | s[35] >>> 17;\n      b37 = s[35] << 15 | s[34] >>> 17;\n      b18 = s[45] << 29 | s[44] >>> 3;\n      b19 = s[44] << 29 | s[45] >>> 3;\n      b10 = s[6] << 28 | s[7] >>> 4;\n      b11 = s[7] << 28 | s[6] >>> 4;\n      b42 = s[17] << 23 | s[16] >>> 9;\n      b43 = s[16] << 23 | s[17] >>> 9;\n      b24 = s[26] << 25 | s[27] >>> 7;\n      b25 = s[27] << 25 | s[26] >>> 7;\n      b6 = s[36] << 21 | s[37] >>> 11;\n      b7 = s[37] << 21 | s[36] >>> 11;\n      b38 = s[47] << 24 | s[46] >>> 8;\n      b39 = s[46] << 24 | s[47] >>> 8;\n      b30 = s[8] << 27 | s[9] >>> 5;\n      b31 = s[9] << 27 | s[8] >>> 5;\n      b12 = s[18] << 20 | s[19] >>> 12;\n      b13 = s[19] << 20 | s[18] >>> 12;\n      b44 = s[29] << 7 | s[28] >>> 25;\n      b45 = s[28] << 7 | s[29] >>> 25;\n      b26 = s[38] << 8 | s[39] >>> 24;\n      b27 = s[39] << 8 | s[38] >>> 24;\n      b8 = s[48] << 14 | s[49] >>> 18;\n      b9 = s[49] << 14 | s[48] >>> 18;\n      s[0] = b0 ^ ~b2 & b4;\n      s[1] = b1 ^ ~b3 & b5;\n      s[10] = b10 ^ ~b12 & b14;\n      s[11] = b11 ^ ~b13 & b15;\n      s[20] = b20 ^ ~b22 & b24;\n      s[21] = b21 ^ ~b23 & b25;\n      s[30] = b30 ^ ~b32 & b34;\n      s[31] = b31 ^ ~b33 & b35;\n      s[40] = b40 ^ ~b42 & b44;\n      s[41] = b41 ^ ~b43 & b45;\n      s[2] = b2 ^ ~b4 & b6;\n      s[3] = b3 ^ ~b5 & b7;\n      s[12] = b12 ^ ~b14 & b16;\n      s[13] = b13 ^ ~b15 & b17;\n      s[22] = b22 ^ ~b24 & b26;\n      s[23] = b23 ^ ~b25 & b27;\n      s[32] = b32 ^ ~b34 & b36;\n      s[33] = b33 ^ ~b35 & b37;\n      s[42] = b42 ^ ~b44 & b46;\n      s[43] = b43 ^ ~b45 & b47;\n      s[4] = b4 ^ ~b6 & b8;\n      s[5] = b5 ^ ~b7 & b9;\n      s[14] = b14 ^ ~b16 & b18;\n      s[15] = b15 ^ ~b17 & b19;\n      s[24] = b24 ^ ~b26 & b28;\n      s[25] = b25 ^ ~b27 & b29;\n      s[34] = b34 ^ ~b36 & b38;\n      s[35] = b35 ^ ~b37 & b39;\n      s[44] = b44 ^ ~b46 & b48;\n      s[45] = b45 ^ ~b47 & b49;\n      s[6] = b6 ^ ~b8 & b0;\n      s[7] = b7 ^ ~b9 & b1;\n      s[16] = b16 ^ ~b18 & b10;\n      s[17] = b17 ^ ~b19 & b11;\n      s[26] = b26 ^ ~b28 & b20;\n      s[27] = b27 ^ ~b29 & b21;\n      s[36] = b36 ^ ~b38 & b30;\n      s[37] = b37 ^ ~b39 & b31;\n      s[46] = b46 ^ ~b48 & b40;\n      s[47] = b47 ^ ~b49 & b41;\n      s[8] = b8 ^ ~b0 & b2;\n      s[9] = b9 ^ ~b1 & b3;\n      s[18] = b18 ^ ~b10 & b12;\n      s[19] = b19 ^ ~b11 & b13;\n      s[28] = b28 ^ ~b20 & b22;\n      s[29] = b29 ^ ~b21 & b23;\n      s[38] = b38 ^ ~b30 & b32;\n      s[39] = b39 ^ ~b31 & b33;\n      s[48] = b48 ^ ~b40 & b42;\n      s[49] = b49 ^ ~b41 & b43;\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else if (root) {\n    for (var key in methods) {\n      root[key] = methods[key];\n    }\n  }\n})(this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! processGlobal */ \"./node_modules/browserfs/dist/shims/process.js\"), __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/js-sha3/src/sha3.js?");

/***/ }),

/***/ "./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js":
/*!****************************************************************!*\
  !*** ./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (_typeof(module) === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    Buffer = __webpack_require__(/*! buffer */ \"./node_modules/browserfs/dist/shims/buffer.js\").Buffer;\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && _typeof(num) === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (_typeof(number) === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex(str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r <<= 4; // 'a' - 'f'\n\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa; // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa; // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w; // Scan 24-bit chunks and add them to the number\n\n    var off = 0;\n\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= w << off & 0x3ffffff; // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n      off += 24;\n\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= w << off & 0x3ffffff;\n      this.words[j + 1] |= w >>> 26 - off & 0x3fffff;\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})( false || module, this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js?");

/***/ }),

/***/ "./node_modules/number-to-bn/src/index.js":
/*!************************************************!*\
  !*** ./node_modules/number-to-bn/src/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar BN = __webpack_require__(/*! bn.js */ \"./node_modules/number-to-bn/node_modules/bn.js/lib/bn.js\");\n\nvar stripHexPrefix = __webpack_require__(/*! strip-hex-prefix */ \"./node_modules/strip-hex-prefix/src/index.js\");\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\n\n\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if (!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/) || stringArg.match(/^[a-fA-F]+$/) || isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/)) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (_typeof(arg) === 'object' && arg.toString && !arg.pop && !arg.push) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n};\n\n//# sourceURL=webpack:///./node_modules/number-to-bn/src/index.js?");

/***/ }),

/***/ "./node_modules/pathval/index.js":
/*!***************************************!*\
  !*** ./node_modules/pathval/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  } // The `in` operator does not work with primitives.\n\n\n  return name in Object(obj);\n}\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n\n    if (mArr) {\n      parsed = {\n        i: parseFloat(mArr[1])\n      };\n    } else {\n      parsed = {\n        p: value.replace(/\\\\([.\\[\\]])/g, '$1')\n      };\n    }\n\n    return parsed;\n  });\n}\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = typeof pathDepth === 'undefined' ? parsed.length : pathDepth;\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === pathDepth - 1) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null; // Here we iterate through every part of the path\n\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i]; // If it's the last part of the path, we set the 'propName' value with the property name\n\n    if (i === pathDepth - 1) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p; // Now we set the property with the name held by 'propName' on object with the desired val\n\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1]; // Here we set the name of the property which will be defined\n\n      propName = typeof part.p === 'undefined' ? part.i : part.p; // Here we decide if this property will be an array or a new object\n\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed)\n  };\n  info.exists = hasProperty(info.parent, info.name);\n  return info;\n}\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue\n};\n\n//# sourceURL=webpack:///./node_modules/pathval/index.js?");

/***/ }),

/***/ "./node_modules/promise-to-callback/index.js":
/*!***************************************************!*\
  !*** ./node_modules/promise-to-callback/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isFn = __webpack_require__(/*! is-fn */ \"./node_modules/is-fn/index.js\");\n\nvar setImmediate = __webpack_require__(/*! set-immediate-shim */ \"./node_modules/set-immediate-shim/index.js\");\n\nmodule.exports = function (promise) {\n  if (!isFn(promise.then)) {\n    throw new TypeError('Expected a promise');\n  }\n\n  return function (cb) {\n    promise.then(function (data) {\n      setImmediate(cb, null, data);\n    }, function (err) {\n      setImmediate(cb, err);\n    });\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/promise-to-callback/index.js?");

/***/ }),

/***/ "./node_modules/set-immediate-shim/index.js":
/*!**************************************************!*\
  !*** ./node_modules/set-immediate-shim/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {\n\nmodule.exports = typeof setImmediate === 'function' ? setImmediate : function setImmediate() {\n  var args = [].slice.apply(arguments);\n  args.splice(1, 0, 0);\n  setTimeout.apply(null, args);\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/set-immediate-shim/index.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function onGlobalMessage(event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function registerImmediate(handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function registerImmediate(handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function registerImmediate(handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function registerImmediate(handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! processGlobal */ \"./node_modules/browserfs/dist/shims/process.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/strip-hex-prefix/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/strip-hex-prefix/src/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isHexPrefixed = __webpack_require__(/*! is-hex-prefixed */ \"./node_modules/is-hex-prefixed/src/index.js\");\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\n\n\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n};\n\n//# sourceURL=webpack:///./node_modules/strip-hex-prefix/src/index.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/type-detect/type-detect.js":
/*!*************************************************!*\
  !*** ./node_modules/type-detect/type-detect.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})(this, function () {\n  'use strict';\n  /* !\n   * type-detect\n   * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n   * MIT Licensed\n   */\n\n  var promiseExists = typeof Promise === 'function';\n  /* eslint-disable no-undef */\n\n  var globalObject = (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === 'object' ? self : global; // eslint-disable-line id-blacklist\n\n  var symbolExists = typeof Symbol !== 'undefined';\n  var mapExists = typeof Map !== 'undefined';\n  var setExists = typeof Set !== 'undefined';\n  var weakMapExists = typeof WeakMap !== 'undefined';\n  var weakSetExists = typeof WeakSet !== 'undefined';\n  var dataViewExists = typeof DataView !== 'undefined';\n  var symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\n  var symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\n  var setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\n  var mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\n  var setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\n  var mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\n  var arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\n  var arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\n  var stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\n  var stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\n  var toStringLeftSliceLength = 8;\n  var toStringRightSliceLength = -1;\n  /**\n   * ### typeOf (obj)\n   *\n   * Uses `Object.prototype.toString` to determine the type of an object,\n   * normalising behaviour across engine versions & well optimised.\n   *\n   * @param {Mixed} object\n   * @return {String} object type\n   * @api public\n   */\n\n  function typeDetect(obj) {\n    /* ! Speed optimisation\n     * Pre:\n     *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n     *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n     *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n     *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n     *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n     * Post:\n     *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n     *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n     *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n     *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n     *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n     */\n    var typeofObj = _typeof(obj);\n\n    if (typeofObj !== 'object') {\n      return typeofObj;\n    }\n    /* ! Speed optimisation\n     * Pre:\n     *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n     * Post:\n     *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n     */\n\n\n    if (obj === null) {\n      return 'null';\n    }\n    /* ! Spec Conformance\n     * Test: `Object.prototype.toString.call(window)``\n     *  - Node === \"[object global]\"\n     *  - Chrome === \"[object global]\"\n     *  - Firefox === \"[object Window]\"\n     *  - PhantomJS === \"[object Window]\"\n     *  - Safari === \"[object Window]\"\n     *  - IE 11 === \"[object Window]\"\n     *  - IE Edge === \"[object Window]\"\n     * Test: `Object.prototype.toString.call(this)``\n     *  - Chrome Worker === \"[object global]\"\n     *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n     *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n     *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n     *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n     */\n\n\n    if (obj === globalObject) {\n      return 'global';\n    }\n    /* ! Speed optimisation\n     * Pre:\n     *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n     * Post:\n     *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n     */\n\n\n    if (Array.isArray(obj) && (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))) {\n      return 'Array';\n    } // Not caching existence of `window` and related properties due to potential\n    // for `window` to be unset before tests in quasi-browser environments.\n\n\n    if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window !== null) {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n       * WhatWG HTML$7.7.3 - The `Location` interface\n       * Test: `Object.prototype.toString.call(window.location)``\n       *  - IE <=11 === \"[object Object]\"\n       *  - IE Edge <=13 === \"[object Object]\"\n       */\n      if (_typeof(window.location) === 'object' && obj === window.location) {\n        return 'Location';\n      }\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#document)\n       * WhatWG HTML$3.1.1 - The `Document` object\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       *       WhatWG HTML states:\n       *         > For historical reasons, Window objects must also have a\n       *         > writable, configurable, non-enumerable property named\n       *         > HTMLDocument whose value is the Document interface object.\n       * Test: `Object.prototype.toString.call(document)``\n       *  - Chrome === \"[object HTMLDocument]\"\n       *  - Firefox === \"[object HTMLDocument]\"\n       *  - Safari === \"[object HTMLDocument]\"\n       *  - IE <=10 === \"[object Document]\"\n       *  - IE 11 === \"[object HTMLDocument]\"\n       *  - IE Edge <=13 === \"[object HTMLDocument]\"\n       */\n\n\n      if (_typeof(window.document) === 'object' && obj === window.document) {\n        return 'Document';\n      }\n\n      if (_typeof(window.navigator) === 'object') {\n        /* ! Spec Conformance\n         * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n         * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n         * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n         *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n         */\n        if (_typeof(window.navigator.mimeTypes) === 'object' && obj === window.navigator.mimeTypes) {\n          return 'MimeTypeArray';\n        }\n        /* ! Spec Conformance\n         * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n         * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n         * Test: `Object.prototype.toString.call(navigator.plugins)``\n         *  - IE <=10 === \"[object MSPluginsCollection]\"\n         */\n\n\n        if (_typeof(window.navigator.plugins) === 'object' && obj === window.navigator.plugins) {\n          return 'PluginArray';\n        }\n      }\n\n      if ((typeof window.HTMLElement === 'function' || _typeof(window.HTMLElement) === 'object') && obj instanceof window.HTMLElement) {\n        /* ! Spec Conformance\n        * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n        * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n        * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n        *  - IE <=10 === \"[object HTMLBlockElement]\"\n        */\n        if (obj.tagName === 'BLOCKQUOTE') {\n          return 'HTMLQuoteElement';\n        }\n        /* ! Spec Conformance\n         * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n         * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n         * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n         *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n         *       which suggests that browsers should use HTMLTableCellElement for\n         *       both TD and TH elements. WhatWG separates these.\n         * Test: Object.prototype.toString.call(document.createElement('td'))\n         *  - Chrome === \"[object HTMLTableCellElement]\"\n         *  - Firefox === \"[object HTMLTableCellElement]\"\n         *  - Safari === \"[object HTMLTableCellElement]\"\n         */\n\n\n        if (obj.tagName === 'TD') {\n          return 'HTMLTableDataCellElement';\n        }\n        /* ! Spec Conformance\n         * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n         * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n         * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n         *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n         *       which suggests that browsers should use HTMLTableCellElement for\n         *       both TD and TH elements. WhatWG separates these.\n         * Test: Object.prototype.toString.call(document.createElement('th'))\n         *  - Chrome === \"[object HTMLTableCellElement]\"\n         *  - Firefox === \"[object HTMLTableCellElement]\"\n         *  - Safari === \"[object HTMLTableCellElement]\"\n         */\n\n\n        if (obj.tagName === 'TH') {\n          return 'HTMLTableHeaderCellElement';\n        }\n      }\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n    *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n    *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n    *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n    *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n    *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n    *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n    *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n    *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n    * Post:\n    *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n    *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n    *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n    *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n    *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n    *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n    *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n    *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n    *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n    */\n\n\n    var stringTag = symbolToStringTagExists && obj[Symbol.toStringTag];\n\n    if (typeof stringTag === 'string') {\n      return stringTag;\n    }\n\n    var objPrototype = Object.getPrototypeOf(obj);\n    /* ! Speed optimisation\n    * Pre:\n    *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n    *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n    * Post:\n    *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n    *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n    */\n\n    if (objPrototype === RegExp.prototype) {\n      return 'RegExp';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n    * Post:\n    *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n    */\n\n\n    if (objPrototype === Date.prototype) {\n      return 'Date';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n     * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n     * Test: `Object.prototype.toString.call(Promise.resolve())``\n     *  - Chrome <=47 === \"[object Object]\"\n     *  - Edge <=20 === \"[object Object]\"\n     *  - Firefox 29-Latest === \"[object Promise]\"\n     *  - Safari 7.1-Latest === \"[object Promise]\"\n     */\n\n\n    if (promiseExists && objPrototype === Promise.prototype) {\n      return 'Promise';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n    * Post:\n    *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n    */\n\n\n    if (setExists && objPrototype === Set.prototype) {\n      return 'Set';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n    * Post:\n    *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n    */\n\n\n    if (mapExists && objPrototype === Map.prototype) {\n      return 'Map';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n    * Post:\n    *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n    */\n\n\n    if (weakSetExists && objPrototype === WeakSet.prototype) {\n      return 'WeakSet';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n    * Post:\n    *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n    */\n\n\n    if (weakMapExists && objPrototype === WeakMap.prototype) {\n      return 'WeakMap';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n     * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n     * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n     *  - Edge <=13 === \"[object Object]\"\n     */\n\n\n    if (dataViewExists && objPrototype === DataView.prototype) {\n      return 'DataView';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n     * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n     * Test: `Object.prototype.toString.call(new Map().entries())``\n     *  - Edge <=13 === \"[object Object]\"\n     */\n\n\n    if (mapExists && objPrototype === mapIteratorPrototype) {\n      return 'Map Iterator';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n     * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n     * Test: `Object.prototype.toString.call(new Set().entries())``\n     *  - Edge <=13 === \"[object Object]\"\n     */\n\n\n    if (setExists && objPrototype === setIteratorPrototype) {\n      return 'Set Iterator';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n     * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n     * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n     *  - Edge <=13 === \"[object Object]\"\n     */\n\n\n    if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n      return 'Array Iterator';\n    }\n    /* ! Spec Conformance\n     * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n     * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n     * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n     *  - Edge <=13 === \"[object Object]\"\n     */\n\n\n    if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n      return 'String Iterator';\n    }\n    /* ! Speed optimisation\n    * Pre:\n    *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n    * Post:\n    *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n    */\n\n\n    if (objPrototype === null) {\n      return 'Object';\n    }\n\n    return Object.prototype.toString.call(obj).slice(toStringLeftSliceLength, toStringRightSliceLength);\n  }\n\n  return typeDetect;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/type-detect/type-detect.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "./node_modules/xhr2/lib/browser.js":
/*!******************************************!*\
  !*** ./node_modules/xhr2/lib/browser.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = XMLHttpRequest;\n\n//# sourceURL=webpack:///./node_modules/xhr2/lib/browser.js?");

/***/ }),

/***/ "./src/config.json":
/*!*************************!*\
  !*** ./src/config.json ***!
  \*************************/
/*! exports provided: testKey, default */
/***/ (function(module) {

eval("module.exports = {\"testKey\":\"testValue\"};\n\n//# sourceURL=webpack:///./src/config.json?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(BrowserFS) {// TODO: This could stand some cleanup so we don't see the relative interim path\nvar config = __webpack_require__(/*! ./config.json */ \"./src/config.json\"); //const BrowserFS = require('browserfs')\n\n\nvar assert = __webpack_require__(/*! chai */ \"./node_modules/chai/index.js\").assert;\n\nsubmodule = __webpack_require__(/*! ./submodule */ \"./src/submodule/index.js\");\nconsole.log(\"Submodule from Import  \".concat(JSON.stringify(submodule))); //console.log(`Submodule ${JSON.stringify(submodule)}`)\n//console.log(`Config ${JSON.stringify(config)}`)\n\nconsole.log(\"Hello Config \".concat(JSON.stringify(config)));\nBrowserFS.FileSystem.LocalStorage.Create(function (e, lsfs) {\n  BrowserFS.FileSystem.InMemory.Create(function (e, inMemory) {\n    BrowserFS.FileSystem.MountableFileSystem.Create({\n      '/tmp': inMemory,\n      '/': lsfs\n    }, function (e, mfs) {\n      BrowserFS.initialize(mfs); // BFS is now ready to use!\n    });\n  });\n});\n\nvar fs = __webpack_require__(/*! fs */ \"./node_modules/browserfs/dist/shims/fs.js\");\n\nvar path = __webpack_require__(/*! path */ \"./node_modules/browserfs/dist/shims/path.js\");\n\nvar _require = __webpack_require__(/*! immutable */ \"./node_modules/immutable/dist/immutable.es.js\"),\n    List = _require.List;\n\nif (!fs.existsSync('a')) {\n  fs.mkdirSync('a');\n}\n\nfs.writeFileSync(path.join('a', 'b.json'), \"catcow\");\nvar buffer = fs.readFileSync(\"a/b.json\");\nconsole.log(buffer.toString());\nassert(buffer.toString() === 'catcow'); //const demo = require('democracy.js')\n\nvar _require2 = __webpack_require__(/*! @democracy.js/utils */ \"./node_modules/@democracy.js/utils/index.js\"),\n    getImmutableKey = _require2.getImmutableKey,\n    setImmutableKey = _require2.setImmutableKey; //setImmutableKey(\"a/d\", new List([1,2,3]))\n//console.log(getImmutableKey(\"a/d\").toString())\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! bfsGlobal */ \"./node_modules/browserfs/dist/browserfs.js\")))\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/submodule/index.js":
/*!********************************!*\
  !*** ./src/submodule/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  'subKey': 'subHello'\n};\n\n//# sourceURL=webpack:///./src/submodule/index.js?");

/***/ }),

/***/ 0:
/*!***************************************************************************!*\
  !*** multi ./src/index.js ./node_modules/browserfs/dist/browserfs.min.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/index.js */\"./src/index.js\");\nmodule.exports = __webpack_require__(/*! /Users/ppham/src/blockchain/democracy/packages/webify/node_modules/browserfs/dist/browserfs.min.js */\"./node_modules/browserfs/dist/browserfs.min.js\");\n\n\n//# sourceURL=webpack:///multi_./src/index.js_./node_modules/browserfs/dist/browserfs.min.js?");

/***/ })

/******/ });